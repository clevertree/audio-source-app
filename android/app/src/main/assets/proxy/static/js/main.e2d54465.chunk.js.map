{"version":3,"sources":["audio-source/components/div/ASUIDiv.js","audio-source/components/icon/ASUIIcon.js","audio-source/components/button/ASUIButton.js","audio-source/components/menu/dropdown/ASUIDropDownContainer.native.js","audio-source/components/button/ASUIButtonDropDown.js","audio-source/components/form/ASUIForm.js","audio-source/components/form/ASUIPanel.js","audio-source/components/input-range/ASUIInputRange.js","audio-source/components/index.js","audio-source/components/menu/dropdown/ASUIMenuDropDown.js","audio-source/components/menu/index.js","audio-source/common/keyboard/Keyboard.js","audio-source/song/index.js","audio-source/common/values/Values.js","audio-source/common/prompt/PromptManager.js","audio-source/common/program/ProgramLoader.js","audio-source/song/instruction/InstructionIterator.js","audio-source/song/instruction/QuantizedInstructionIterator.js","audio-source/song/instruction/index.js","audio-source/song/instruction/Instruction.js","audio-source/components/menu/ASUIMenuContext.js","audio-source/common/storage/LocalStorage.js","audio-source/common/storage/Storage.js","audio-source/song/instruction/TrackInstruction.js","audio-source/3rdparty/chip-player-js-lib/src/players/Player.js","audio-source/3rdparty/chip-player-js-lib/src/effects/SubBass.js","audio-source/3rdparty/chip-player-js-lib/src/players/GMEPlayer.js","audio-source/3rdparty/chip-player-js-lib/src/chip-core.js","audio-source/3rdparty/chip-player-js-lib/src/players/XMPPlayer.js","audio-source/song/file/GMESongFile.js","audio-source/song/file/JSONSongFile.js","audio-source/song/file/FileService.js","audio-source/song/config/ConfigListener.js","audio-source/programs/instrument/voice/AudioBufferInstrument.js","audio-source/programs/instrument/voice/render/AudioBufferInstrumentRenderer.js","audio-source/programs/instrument/voice/render/AudioBufferInstrumentRendererStyle.js","audio-source/programs/instrument/loader/PeriodicWaveLoader.js","audio-source/programs/instrument/voice/OscillatorInstrument.js","audio-source/programs/instrument/voice/render/OscillatorInstrumentRenderer.js","audio-source/programs/instrument/voice/render/OscillatorInstrumentRendererBase.js","audio-source/programs/instrument/poly/PolyphonyInstrument.js","audio-source/programs/instrument/poly/render/PolyphonyInstrumentRendererBase.js","audio-source/programs/instrument/poly/render/PolyphonyInstrumentRenderer.js","audio-source/programs/player/gme/GMEPlayerSynthesizer.js","audio-source/programs/player/gme/GMEPlayerSynthesizerRenderer.js","audio-source/programs/instrument/test/TestInstrument.js","audio-source/programs/index.js","audio-source/song/Song.js","audio-source/components/menu/dropdown/ASUIDropDownContainer.js","audio-source/song/library/Library.js","audio-source/song/track/TrackIterator.js","audio-source/components/button/ASUIClickableBase.native.js","audio-source/song/track/TrackPlayback.js","audio-source/song/values/SongValues.js","audio-source/components/menu/ASUIMenuAction.js","audio-source/components/menu/ASUIMenuBreak.js","audio-source/common/program/index.js","audio-source/components/menu/overlay/ASUIMenuOverlayContainerBase.js","audio-source/components/menu/overlay/ASUIMenuOverlayContainer.js","audio-source/song/instruction/NoteInstruction.js","audio-source/song/instruction/CommandInstruction.js","audio-source/song/instruction/MIDIInstruction.js","audio-source/player/playlist/ASPPlaylistEntry.js","audio-source/player/playlist/ASPPlaylist.js","audio-source/player/ASPlayerStyle.js","audio-source/player/header/ASPlayerHeader.js","audio-source/player/ASPlayerActions.js","audio-source/player/ASPlayerMenu.js","audio-source/player/ASPlayerRenderer.js","audio-source/player/ASPlayer.js","audio-source/composer/track/state/ActiveTrackState.js","audio-source/composer/track/instruction/param/ASCTrackInstructionParameter.js","audio-source/composer/track/instruction/ASCTrackInstructionBase.js","audio-source/composer/track/instruction/ASCTrackInstruction.js","audio-source/composer/track/position/ASCTrackPosition.js","audio-source/composer/track/instruction/ASCTrackInstructionAdd.js","audio-source/composer/track/delta/ASCTrackDelta.js","audio-source/composer/track/row/ASCTrackRow.js","audio-source/composer/track/ASCTrackBase.js","audio-source/composer/track/ASCTrack.js","audio-source/composer/program/ASCProgramRenderer.js","audio-source/composer/program/ASCProgramRendererBase.js","audio-source/composer/container/ASComposerContainer.js","audio-source/composer/ASComposer.js","audio-source/composer/ASComposerInput.native.js","audio-source/composer/ASComposerPlayback.js","audio-source/composer/ASComposerActions.js","audio-source/composer/ASComposerMenu.js","audio-source/composer/ASComposerRenderer.js","audio-source/song/proxy/SongProxyWebViewClient.js","App.js","serviceWorker.js","index.js","audio-source/samples/wave/mohayonao.library.js","audio-source/samples/wave.library.js","audio-source/samples/gm/fws/fws.library.js","audio-source/samples/sample.library.js","audio-source/default.library.js"],"names":["ASUIDiv","children","this","props","React","Component","ASUIIcon","className","source","ASUIButton","cb","onMouseInput","e","onKeyDown","context","overlay","disabled","selected","title","onClick","tabIndex","console","warn","constructor","name","onAction","Error","closeAllDropDownMenus","ASUIClickableBase","contextType","ASUIMenuContext","defaultProps","propTypes","PropTypes","func","isRequired","bool","ASUIDropDownContainer","state","open","stick","divRef","createRef","prevProps","prevState","snapshot","getOverlay","addCloseMenuCallback","closeMenu","bind","removeCloseMenuCallback","updateScreenPosition","vertical","options","Provider","value","parentDropDown","ref","isHoverEnabled","openMenu","stickMenu","error","Promise","setState","setTimeout","closeMenus","getAncestorMenus","forEach","menu","stayOpenOnStick","menus","parent","push","closeAllMenus","current","div","rect","getBoundingClientRect","right","window","innerWidth","classList","add","bottom","innerHeight","ASUIButtonDropDown","dropdown","arrow","toggleMenu","hoverMenu","any","ASUIForm","header","ASUIPanel","ASUIInputRange","onChange","preventDefault","newValue","parseFloat","target","type","min","max","step","ASUIMenuDropDown","getClassName","onMouseEnter","defaultPrevented","isDefaultPrevented","key","info","Keyboard","layoutName","octave","Number","isInteger","keyboardLayout","getKeyboardLayout","command","i","replace","Values","onSelectValue","keyboardOctave","renderMenuSelectCommandByFrequency","renderMenuSelectCommandByOctave","renderMenuSelectCommandByNamed","renderMenuSelectCommandByTrack","a","PromptManager","openPromptDialog","values","getAllNamedFrequencies","noteName","frequency","programID","onTrackAdd","getAllSongGroups","trackName","selectedTrack","hasBreak","getNoteFrequencies","renderMenuSelectCommandByFrequencyOctave","getNoteOctaves","renderMenuSelectCommandByOctaveFrequency","currentDuration","timeDivision","renderMenuSelect","results","currentVelocity","customAction","velocity","mixerValue","getNoteVelocities","menuTitle","ProgramLoader","getRegisteredPrograms","map","config","d","Date","getTime","performance","now","c","r","Math","random","floor","toString","callback","freq","noteList","j","length","noteFrequency","result","addResult","noteFrequencies","vi","beatsPerMeasure","beatsPerMeasureString","beatPerMeasure","beatsPerMinute","beatsPerMinuteString","beatPerMinute","lengthInTicks","lengthString","commandString","seconds","m","ms","round","padStart","formattedSeconds","parts","split","parseInt","note","noteQuarterToneList","noteScale","slice","isNaN","keyNumber","pow","durationString","units","substr","fraction","indexOf","fractionSplit","input","stringValue","getNoteDurations","duration","beatDivisor","toFixed","message","defaultValue","prompt","confirm","song","destination","loadInstanceFromID","data","programs","getData","getProgramClassInfo","classProgram","loadInstance","Renderer","classRenderer","registeredProgramClasses","stopPlayback","classes","stopProgramPlayback","unloadAll","classInfo","InstructionIterator","instructionList","instructions","currentIndex","positionTicks","endPositionTicks","positionSeconds","endPositionSeconds","lastInstructionPositionInTicks","lastInstructionPositionInSeconds","rowCount","cursorPosition","instruction","deltaDurationTicks","elapsedTime","durationTicks","trackEndPositionInTicks","trackPlaybackEndTime","index","instructionData","Instruction","getInstruction","hasReachedEnd","currentInstruction","incrementPositionByInstruction","rowCallback","instructionCallback","nextInstruction","QuantizedInstructionIterator","quantizationTicks","nextQuantizationBreakInTicks","nextPositionTicks","getNextInstructionPositionInTicks","doRow","row","updateNextQuantizationBreakInTicks","nextInstructionRow","nextQuantizedInstructionRow","formatDuration","newCommand","newDeltaDuration","newDuration","trackList","Object","keys","processInstructionTrack","Array","isArray","parseInstruction","unshift","require","unimplemented","createContext","removeDropDownMenu","openMenuItem","addDropDownMenu","LocalStorage","localStorage","setItem","getItem","Storage","decodeForStorage","json","replacer","space","encodedString","JSON","stringify","LZString","compress","decompress","parse","songData","songHistory","uuid","generateUUID","songRecentUUIDs","filter","entry","encodeForStorage","instructionsKey","jsonStringInstructions","tracks","jsonString","assign","dataStr","encodeURIComponent","downloadAnchorNode","document","createElement","setAttribute","fileName","body","appendChild","click","remove","songUUID","songDataString","songHistoryString","batchRecentCommands","batchCommand","getBatchRecentCommands","batchRecentSearches","getBatchRecentSearches","TrackInstruction","undefined","newTrackName","Player","audioCtx","destNode","chipCore","onPlayerStateUpdate","_outerAudioProcess","paused","fileExtensions","metadata","destinationNode","bufferSize","_innerAudioProcess","audioNode","createScriptProcessor","onaudioprocess","debug","location","search","timeCount","renderTime","perfLoggingInterval","fileExtension","toLowerCase","filename","startMs","author","connect","stopped","fn","event","start","end","cost","budget","sampleRate","log","audioprocess","outputBuffer","numberOfChannels","getChannelData","fill","filepath","meta","pop","system","shift","game","artist","SubBass","iirCalculator","CalcCascades","lowpass1Coeffs","lowpass","order","characteristic","Fs","Fc","gain","lowpass2Coeffs","highpassCoeffs","highpass","lowpass1","IirFilter","lowpass2","sCurr","sPrev","cycleCounter","dcAvg","dcWeight","exp","envAvg","envWeight","envelopeStep","sample","removeDcStep","abs","process","sBass","singleStep","env","sOctaves","emu","libgme","GMEPlayer","setParameter","getParameter","getParamDefs","subtune","tempo","params","subbass","buffer","allocate","ALLOC_NORMAL","emuPtr","subBass","setAudioProcess","gmeAudioProcess","channel","channels","getPositionMs","getDurationMs","fadingOut","setFadeout","_gme_track_ended","_gme_play","getValue","sub","_gme_track_count","playSubtune","suspend","_parseMetadata","_gme_start_track","filepathMeta","metadataFromFilepath","formatNeedsBass","match","ccall","stop","resume","metadataPtr","_gme_track_info","offset","readInt32","readString","raw","ptr","char","encoding","convert","to","intro_length","loop_length","play_length","copyright","comment","UTF8ToString","_gme_voice_name","_gme_voice_count","_gme_tell_scaled","id","label","isPaused","val","_gme_set_tempo","_gme_set_fade","voices","mask","isEnabled","_gme_mute_voices","positionMs","muteAudioDuringCall","_gme_seek_scaled","_gme_delete","CHIP_CORE","Module","moduleOverrides","hasOwnProperty","read_","readBinary","arguments_","thisProgram","scriptDirectory","currentScript","src","lastIndexOf","url","xhr","XMLHttpRequest","send","responseText","wasmBinary","wasmMemory","out","err","dynamicAlloc","size","ret","HEAP32","DYNAMICTOP_PTR","_emscripten_get_heap_size","abort","getNativeTypeSize","bits","assert","setValue","noSafe","charAt","HEAP8","HEAP16","tempI64","tempDouble","Math_abs","Math_min","Math_floor","Math_ceil","HEAPF32","HEAPF64","WebAssembly","wasmTable","Table","ABORT","condition","text","HEAPU8","UTF8Decoder","TextDecoder","UTF8ArrayToString","u8Array","idx","maxBytesToRead","endIdx","endPtr","subarray","decode","str","u0","u1","u2","String","fromCharCode","ch","stringToUTF8Array","outU8Array","outIdx","maxBytesToWrite","startIdx","u","charCodeAt","stringToUTF8","outPtr","lengthBytesUTF8","len","writeArrayToMemory","array","set","updateGlobalBufferAndViews","buf","Int8Array","Int16Array","Int32Array","Uint8Array","Uint16Array","Uint32Array","Float32Array","Float64Array","INITIAL_INITIAL_MEMORY","callRuntimeCallbacks","callbacks","arg","Memory","byteLength","__ATPRERUN__","__ATINIT__","__ATMAIN__","__ATPOSTRUN__","ceil","runDependencies","runDependencyWatcher","dependenciesFulfilled","addRunDependency","removeRunDependency","clearInterval","what","RuntimeError","isDataURI","prototype","startsWith","path","wasmBinaryFile","getBinary","ASM_CONSTS","161276","$0","161441","161499","stackTrace","js","stack","jsStackTrace","x","___wasm_call_ctors","___exception_infos","__ZSt18uncaught_exceptionv","uncaught_exceptions","___setErrNo","PATH","splitPath","exec","normalizeArray","allowAboveRoot","up","last","splice","normalize","isAbsolute","trailingSlash","p","join","dirname","root","dir","basename","lastSlash","extname","paths","call","arguments","join2","l","PATH_FS","resolve","resolvedPath","resolvedAbsolute","FS","cwd","TypeError","relative","from","trim","arr","fromParts","toParts","samePartsLength","outputParts","concat","TTY","ttys","init","shutdown","register","dev","ops","output","registerDevice","stream_ops","stream","tty","node","rdev","ErrnoError","seekable","close","flush","read","pos","get_char","bytesRead","timestamp","write","put_char","default_tty_ops","readline","intArrayFromString","default_tty1_ops","MEMFS","ops_table","mount","createNode","mode","isBlkdev","isFIFO","getattr","node_ops","setattr","lookup","mknod","rename","unlink","rmdir","readdir","symlink","llseek","file","mmap","msync","link","readlink","chrdev","chrdev_stream_ops","isDir","contents","isFile","usedBytes","isLink","isChrdev","getFileDataAsRegularArray","getFileDataAsTypedArray","expandFileStorage","newCapacity","prevCapacity","oldContents","resizeFileStorage","newSize","attr","ino","nlink","uid","gid","atime","mtime","ctime","blksize","blocks","genericErrors","old_node","new_dir","new_name","new_node","lookupNode","entries","newname","oldpath","position","canOwn","whence","prot","flags","allocated","fromHeap","_malloc","byteOffset","mmapFlags","mounts","devices","streams","nextInode","nameTable","currentPath","initialized","ignorePermissions","trackingDelegate","tracking","openFlags","READ","WRITE","filesystems","syncFSRequests","handleFSError","errno","lookupPath","opts","defaults","follow_mount","recurse_count","current_path","islast","isMountpoint","mounted","follow","count","getPath","isRoot","mountpoint","hashName","parentid","hash","hashAddNode","name_next","hashRemoveNode","errCode","mayLookup","nodeName","FSNode","destroyNode","isSocket","flagModes","modeStringToFlags","flagsToPermissionString","flag","perms","nodePermissions","mayCreate","mayDelete","isdir","mayOpen","MAX_OPEN_FDS","nextfd","fd_start","fd_end","fd","getStream","createStream","FSStream","object","get","isRead","isWrite","isAppend","newStream","closeStream","device","getDevice","major","minor","makedev","ma","mi","getMounts","check","apply","syncfs","populate","completed","doCallback","done","errored","pseudo","mountRoot","unmount","next","create","mkdir","mkdirTree","dirs","mkdev","newpath","old_path","new_path","old_dir","old_dirname","new_dirname","old_name","stat","dontFollow","lstat","chmod","lchmod","fchmod","chown","lchown","fchown","truncate","ftruncate","utime","created","ungotten","readFiles","trackingFlags","isClosed","getdents","seeking","bytesWritten","munmap","ioctl","cmd","readFile","writeFile","actualNumBytes","ArrayBuffer","isView","chdir","createDefaultDirectories","createDefaultDevices","random_device","crypto","randomBuffer","getRandomValues","createDevice","createSpecialDirectories","createStandardStreams","ensureErrnoError","setErrno","code","staticInit","quit","fflush","getMode","canRead","canWrite","joinPath","forceRelative","absolutePath","base","standardizePath","findObject","dontResolveLastLink","analyzePath","exists","parentExists","parentPath","parentObject","createFolder","createPath","reverse","part","createFile","properties","createDataFile","createLink","forceLoadFile","obj","isDevice","isFolder","success","createLazyFile","LazyUint8Array","lengthKnown","chunks","chunkOffset","chunkSize","chunkNum","getter","setDataGetter","cacheLength","status","datalength","getResponseHeader","hasByteServing","usesGzip","lazyArray","setRequestHeader","responseType","overrideMimeType","response","doXHR","_length","_chunkSize","defineProperties","createPreloadedFile","onload","onerror","dontCreateFile","preFinish","Browser","fullname","processData","byteArray","finish","handled","plugin","asyncLoad","indexedDB","mozIndexedDB","webkitIndexedDB","msIndexedDB","DB_NAME","pathname","DB_VERSION","DB_STORE_NAME","saveFilesToDB","openRequest","onupgradeneeded","createObjectStore","onsuccess","transaction","files","objectStore","ok","fail","total","putRequest","put","loadFilesFromDB","db","getRequest","SYSCALLS","mappings","DEFAULT_POLLMASK","umask","calculateAt","dirfd","dirstream","doStat","doMsync","addr","doMkdir","doMknod","doReadlink","bufsize","endChar","doAccess","amode","doDup","suggestFD","suggest","doReadv","iov","iovcnt","curr","doWritev","varargs","getStr","getStreamFromFD","get64","low","high","_abs","emscripten_realloc_buffer","grow","ENV","_emscripten_get_environ","strings","navigator","languages","__isLeapYear","year","__arraySum","sum","__MONTH_DAYS_LEAP","__MONTH_DAYS_REGULAR","__addDays","date","days","newDate","leap","getFullYear","currentMonth","getMonth","daysInCurrentMonth","getDate","setDate","setMonth","setFullYear","readAsmConstArgs","sigPtr","args","stringy","dontAddNull","u8array","numBytesWritten","asmLibraryArg","line","destructor","adjusted","refcount","caught","rethrown","op","argp","_free","malloc","syscallMunmap","argbuf","dest","num","copyWithin","requestedSize","oldSize","multiple","cutDown","overGrownHeapSize","__environ","environ_buf","bufSize","string","writeAsciiToMemory","penviron_count","penviron_buf_size","pnum","offset_low","offset_high","newOffset","s","maxsize","format","tm","tm_zone","tm_sec","tm_min","tm_hour","tm_mday","tm_mon","tm_year","tm_wday","tm_yday","tm_isdst","tm_gmtoff","pattern","EXPANSION_RULES_1","rule","RegExp","WEEKDAYS","MONTHS","leadingSomething","digits","character","leadingNulls","compareByDay","date1","date2","sgn","compare","getFirstWeekStartDate","janFourth","getDay","getWeekBasedYear","thisDate","janFourthThisYear","janFourthNextYear","firstWeekStartThisYear","firstWeekStartNextYear","EXPANSION_RULES_2","substring","twelveHour","janFirst","firstSunday","endDate","februaryFirstUntilEndMonth","daysDifference","firstMonday","off","ahead","bytes","_strftime","asm","receiveInstance","instance","module","exports","receiveInstantiatedSource","instantiateArrayBuffer","receiver","fetch","reject","credentials","then","catch","binary","instantiate","reason","instantiateStreaming","instantiateAsync","createWasm","calledRun","stackSave","stackAlloc","stackRestore","run","doRun","postRun","preRun","ident","returnType","argTypes","toC","getCFunc","cArgs","converter","Boolean","convertReturnValue","slab","types","allocator","zeroinit","singleType","typeSize","previousType","old","runCaller","GMESongFile","ChipCore","locateFile","prefix","endsWith","onRuntimeInitialized","audioContext","uint8Array","player","loadData","numVoices","getNumVoices","setTempo","setVoices","AudioContext","loadPlayerFromBuffer","loadSongDataFromPlayer","version","rootGroup","fileURL","arrayBuffer","JSONSongFile","reader","FileReader","readAsText","fileResult","archiveBuffers","torrentCache","trackerURLS","requireWebTorrent","AudioSourceLoader","customElements","relativeScriptPath","scriptElm","findScript","promises","head","FileService","time","getFileBufferFromTorrent","timeEnd","torrentID","t","torrentURL","getBuffer","parsedURL","hostname","filePath","getTorrent","torrent","archiveFilePath","archiveBuffer","getFileBufferFromArchive","decompress7ZipArchive","WebTorrent","magnetURL","getMagnetURL","client","infoHash","DataStorage","INTERRUPT","fda","filedata","rootdata","worker7z","Worker","onmessage","terminate","fda0","postMessage","action","totalMemory","FilesDataArray","TARGET","Symbol","LISTENER","ConfigListener","updateTimeout","changeListeners","listener","prop","v","b","number","deleteCount","newValues","Proxy","queueChange","queueHistoryAction","proxyObject","addChangeListener","AudioBufferInstrument","audioBuffer","loadAudioBuffer","decodeAudioData","frequencyValue","startTime","onended","velocityGain","createGain","createBufferSource","loop","playbackRate","getCommandFrequency","detune","AudioBufferInstrumentRenderer","sampleID","instrumentID","sampleData","getSampleData","sampleName","toggleOpen","mixer","openMenuChangeMixer","openOnHover","openMenuChangeDetune","openMenuChangeKeyRoot","alias","openMenuChangeKeyAlias","range","openMenuChangeKeyRange","changeLoop","openMenuRoot","openMenuChangeLoop","openMenuChangeSample","renderMenu","changeMixer","detuneValue","changeDetune","getSong","changeRoot","changeAlias","menuKey","changeRange","newMixerValue","samples","getSampleID","newDetuneValue","newRootValue","newAliasValue","newLoopValue","PeriodicWaveLoader","waveURLCache","waveData","real","imag","createPeriodicWave","OscillatorInstrument","oldDestination","waveLoader","osc","createOscillator","isPeriodicWaveAvailable","setPeriodicWave","getCachedPeriodicWaveFromURL","loadPeriodicWaveFromURL","periodicWave","playingOSCs","OscillatorInstrumentRenderer","getTitle","renderParameters","renderMenuRoot","library","Library","loadDefault","renderMenuChangeMixer","renderMenuChangeDetune","renderMenuChangeKeyRoot","renderMenuChangeKeyAlias","renderMenuChangeKeyRange","newType","preset","renderMenuChangeOscillator","renderMenuChangeLoop","onRemove","renderMenuChangeOscillatorStandard","renderMenuProgramAllPresets","presetConfig","loadPreset","changeOscillator","renderMenuSelectCommand","noteNameOctave","PolyphonyInstrument","voiceID","voiceClassName","voiceConfig","voiceClass","voice","loadVoice","playFrequency","PolyphonyInstrumentRendererBase","removeVoice","addVoice","instrumentClassName","promptUser","instrumentConfig","openConfirmDialog","newVoiceID","setStatus","setError","newTitle","songLengthAllPresets","PolyphonyInstrumentRenderer","voiceData","renderMenuAddVoice","libGMESupport","GMEPlayerSynthesizer","fileBuffer","service","loadBufferFromURL","spcBuffer","loadBuffer","namedFrequency","loadGMEPlayer","spcPlayer","spcPlayers","currentTime","waitTime","seekPos","seekPlaybackPosition","play","pause","aliasName","getCommandKeyNumber","noteCommands","GMEPlayerSynthesizerRenderer","TestInstrument","addProgramClass","ProgramList","Song","eventListeners","programLoader","volume","lastVolumeGain","playback","generateTitle","startTrack","track0","track1","getProxiedData","history","SongValues","loadSongData","programLoadAll","dispatchEventCallback","dispatchEvent","eventName","listenerCallback","eventName2","listenerCallback2","unloadAllPrograms","playbackPosition","processInstructionTracks","currentTrackName","program","noteStartTime","noteDuration","noteVelocity","onstart","parseFrequencyString","getClass","getConfig","programList","programLoadInstanceFromID","programLoadRenderer","programClassName","programConfig","oldConfig","programGetConfig","isLastProgram","resolveProxiedObject","instructionGetList","insertPositionInTicks","insertInstructionData","parseDurationAsTicks","insertInstruction","iterator","instructionGetIterator","currentPositionInTicks","splitDuration","modifyIndex","instructionReplaceDeltaDuration","instructionInsertAtIndex","lastInsertIndex","lastPauseIndex","insertIndex","deleteIndex","deleteInstruction","instructionGetByIndex","replaceIndex","newDelta","newVelocity","removeTrackName","oldTrackName","removedGroupData","TrackIterator","getStartTrackName","seekToEnd","getEndPositionInSeconds","songPositionInTicks","getGroupPositionFromTicks","groupPositionInTicks","currentPosition","elapsedTicks","ticksToSeconds","positionInSeconds","getSongPlaybackPosition","getGroupPositionInTicks","secondsToTicks","newVolume","getSongPositionFromTicks","setPlaybackPosition","songPosition","startPosition","TrackPlayback","awaitPlaybackReachedEnd","getPositionInSeconds","stopAllPlayback","selectedIndices","addInstructionFilter","trackStats","playAtStartingTrackIndex","noteDurationTicks","playProgram","pathList","oldData","historyAction","storage","loadSongFromMemory","loadSongHistoryFromMemory","loadSongHistory","getFileSupportModule","loadSongDataFromFileInput","loadBufferFromFileInput","loadSongDataFromBuffer","fileService","readAsArrayBuffer","fileExt","toJSON","DEFAULT_VOLUME","presets","getPresets","onSelectPreset","programClass","renderMenuProgramNew","includeRecent","lastSelectedLibrary","renderMenuProgramPresets","getLibraries","renderMenuLibraryOptions","onSelectLibraryOptions","cache","cacheURL","libraryConfig","defaultLibrary","default","libraryData","URL","startingTrackName","startingBeatsPerMinute","startingTimeDivision","onEvent","activeTracks","startingStats","startTrackIteration","totalPositionSeconds","totalEndPositionSeconds","subTrackStats","getTrackName","CommandInstruction","processCommandInstruction","processTrackInstruction","seekLength","seekPosition","finished","seekToPosition","processInstruction","seekToIndex","onPress","onLongPress","renderChildren","textProps","doAction","active","endPromise","endResolve","playInstructionCallback","playInstruction","playingIndices","filterCallback","oldCallback","seekInterval","setInterval","renderPlayback","currentPositionSeconds","getPlaybackPosition","timeTillFinished","NoteInstruction","noteIndex","programInfo","ASUIMenuAction","ASUIMenuBreak","ASUIMenuOverlayContainerBase","openOverlay","openMenus","updateOverlayTimeout","renderContent","isActive","menuItem","closeMenuCallback","findIndex","updateOverlay","butThese","ASUIMenuOverlayContainer","newCommandName","getCommandName","oldProgram","programInstance","loadProgramFromParams","useDestination","useProgram","getParams","MIDIInstruction","ASPPlaylistEntry","playlist","fade","formattedLength","toISOString","onInput","ASPPlaylist","selectedPositions","eachEntry","entryData","depth","toggleEntryAtPosition","entryElm","closest","isPlaylist","togglePlaylist","playlistMoveToEntry","playlistPlay","ASPlayerStyle","ASPlayerHeader","portrait","menuContent","ASPlayerActions","onSongEventCallback","onSongEvent","isPlaying","removeEventListener","addEventListener","songLength","getSongLengthInSeconds","playlistPosition","getCurrentEntryPosition","currentEntry","getCurrentEntry","forceUpdate","getAudioContext","newStatus","versionString","saveSongToFile","webkitAudioContext","volumeGain","setVolume","maxSongLength","fieldSongPosition","playbackPositionInSeconds","roundedSeconds","fieldSongTiming","formatPlaybackPosition","throwException","getEntry","foundEntry","each","entryPosition","togglePlaylistEntry","loading","loadPlaylistDataFromURL","playlistURL","addEntryToPlaylist","loadSongFromFileInput","loadSongFromURL","playlistData","urlPrefix","parseEntryData","insertAtPosition","accept","openFileDialog","addInputFileToPlaylist","setCurrentSong","playing","playlistMoveToNextSongEntry","scrollToEntry","loadSongFromPlaylistEntry","currentSong","isPlaylistActive","setPlaybackPositionInTicks","playlistStop","setPlaylistPosition","nextEntry","getEntryPosition","playlistMovePosition","getPlaylistCount","totalCount","findEntryPosition","entryUrl","playbackPercentage","setSongPosition","scrollIntoViewIfNeeded","scrollIntoView","toggle","setFullScreen","contains","renderFileMenu","renderPlaylistMenu","renderViewMenu","renderFileMemoryMenu","openSongFromFileDialog","getRecentSongList","playlistNext","clearPlaylist","toggleFullscreen","fullscreen","togglePanelSong","showPanelSong","togglePanelPlaylist","showPanelPlaylist","footerVersionText","renderRootMenu","playlistPause","fieldSongFileLoad","fieldSongVolume","setSongPositionPrompt","setSongNamePrompt","setSongVersionPrompt","fieldSongVersion","newSongVersion","openSongSource","styleContainer","ASPlayer","playlistActive","onResizeCallback","onResize","loadURLAsPlaylist","loadState","saveState","aspectRatio","containerElm","detail","updateSongPositionValue","waitForPlaybackToEnd","updateSongPositionMaxLength","updateSongPositionInterval","stopPropagation","dataTransfer","dropEffect","ActiveTrackState","composer","newState","updateState","DEFAULT_BEATS_PER_MEASURE","cursorOffset","currentCommand","destinationList","rowLength","DEFAULT_ROW_LENGTH","rowOffset","trackLengthTicks","segmentLengthTicks","DEFAULT_BEATS_PER_SEGMENT","segmentPositions","ASCTrackInstructionParameter","onContextMenu","shiftKey","trackerInstruction","selectInstruction","ASCTrackInstructionBase","tracker","getTracker","getComposer","cursor","parameters","commandParam","formatSongDuration","renderMenuSelectVelocity","renderMenuSelectDuration","getTrackInfo","updateCurrentInstruction","playInstructions","getInstructionIndex","clearSelection","toggleValue","getTrackState","setCursorOffset","trackerToggleTrack","button","selectInstructionWithAction","ctrlKey","instructionReplaceCommand","instructionReplaceVelocity","instructionReplaceDuration","instructionReplaceCommandSelected","ASCTrackInstruction","focus","onMouseDown","ASCTrackPosition","ASCTrackInstructionAdd","ASCTrackDelta","ASCTrackRow","highlight","rowDeltaDuration","deltaDuration","selectRow","ASCTrackBase","onWheel","trackerGetCursorInfo","trackState","instructionGetQuantizedIterator","cursorIndex","selectIndices","trackerSelectIndices","trackSongPosition","trackSongPositionFound","beatsPerMeasureTicks","rowContent","rowInstructionElms","getNextRowPositionTicks","newRowElm","buttons","selectedSegmentID","segmentID","DEFAULT_MAX_SEGMENTS","segmentPosition","trackerSetRowOffset","renderMenuTrackerSetQuantization","renderMenuTrackerSetSegmentLength","trackerPlay","newRowOffset","deltaY","instructionDeleteSelected","instructionInsert","songPlay","nextOffset","previousOffset","previousRowOffset","nextRowOffset","cursorInstruction","keyboardCommand","keyboard","getKeyboardCommand","DEFAULT_MIN_SEGMENTS","ASCTrack","container","passive","renderRowSegments","renderRowContent","renderRowOptions","ASCProgramRenderer","programGetData","programIDHTML","titleHTML","hasProgram","toggleContainer","renderProgramContent","presetClassName","programReplace","renderMenuChangePreset","renderMenuChangeProgram","programRename","programRemove","renderMenuProgramAll","programGetClassName","ASComposerContainer","renderHeader","renderFooter","ASComposer","timeouts","saveSongToMemory","renderPrograms","autoSaveTimeout","update","panelPrograms","clearTimeout","updateForms","onUnloadCallback","requestMIDIAccess","MIDI","inputDevices","inputs","inputDevice","loadDefaultSong","updateCurrentSong","newSongTitle","setSongName","setSongVersion","newSongBeatsPerMinute","recentSongUUID","loadNewSongData","parsePlaybackPosition","newInstruction","songPositionTicks","cursorPositionTicks","instructionInsertAtPosition","instructionReplaceVelocitySelected","instructionDeleteAtIndex","getVolumeGain","getDestination","playSelectedInstructions","generateInstructionTrackName","trackAdd","trackRename","trackRemove","trackData","trackerUpdateSegmentInfo","trackerQuantizationTicks","track","trackerChangeQuantization","trackerSegmentLengthInRows","trackerChangeSegmentLength","trackerGetIterator","qIterator","trackerGetQuantizedIterator","lastSegmentPositionTicks","currentRowStartPosition","lastRowStartPosition","column","cursorRow","currentRowOffset","adjustedCursorRow","maxLength","instructionFindGroupLength","querySelectorAll","elm","sort","cursorInfo","firstSelectedInstruction","getDurationString","newCursorOffset","newScrollPositionTicks","scrollPositionTicks","trackerGetTrackInfo","calculateRowOffset","findCursorRow","programAdd","newProgramTitle","oldProgramTitle","programRemoveID","searchCallbackString","addBatchRecentSearches","commandCallbackString","addBatchRecentCommands","renderMenuFile","renderMenuEdit","renderMenuTrack","renderMenuProgram","renderMenuView","renderMenuFileOpen","renderMenuFileSave","renderMenuFileImport","renderMenuFileExport","renderMenuFileOpenMemory","getSongPrograms","renderMenuSelectAvailableProgram","trackGetState","renderMenuEditInsert","renderMenuEditSetCommand","renderMenuEditSetDuration","renderMenuEditSetVelocity","renderMenuEditSelect","renderMenuEditBatch","instructionInsertPrompt","instructionReplaceCommandSelectedPrompt","renderMenuEditSelectBatch","recentBatchSearch","batchSelect","recentBatchCommand","renderMenuEditBatchRecent","batchRunCommand","renderMenuEditBatchRecentExecuteSearch","getTrackerSegmentLengthInRows","keyboardChangeOctave","hidePanelSongs","togglePanelTracker","hidePanelTracker","togglePanelPrograms","hidePanelProgram","renderMenuProgramAdd","renderMenuProgramEdit","renderMenuProgramEditReplace","renderMenuTrackEdit","selectedTrackName","songPause","songStop","setSongPositionPercentage","timingString","programEach","trackerSelectIndicesPrompt","renderMenuKeyboardSetOctave","renderWebViewProxy","SongProxyWebViewClient","webView","onMessage","nextProps","nextState","ReactNativeWebView","_SONG","View","handleCommand","songMethod","App","menuOpen","playerElm","switchToMenu","updateMenu","renderPlayer","renderComposer","render","onToggleMenu","onUpdateMenu","onRenderMenu","ReactDOM","getElementById","serviceWorker","ready","registration","unregister","baseURL","MohayonaoWaveLibrary","FWSLibrary","SampleLibrary","WaveLibrary"],"mappings":"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","file":"static/js/main.e2d54465.chunk.js","sourcesContent":["import React from 'react';\n\n/** Div **/\nexport default class ASUIDiv extends React.Component {\n\n    render() {\n        let children = this.props.children;\n        if(typeof children === \"function\")\n            children = children(this);\n        return <div {...this.props}>{children}</div>;\n    }\n}\n\n","import React from 'react';\nimport PropTypes from \"prop-types\";\n\nimport \"./assets/ASUIIcon.css\";\n\n/** Icon **/\nclass ASUIIcon extends React.Component {\n\n    /** Property validation **/\n    static propTypes = {\n        source: PropTypes.any.isRequired,\n    };\n\n    constructor(props = {}) {\n        super(props, {});\n    }\n\n    render() {\n        let className = \"asui-icon\";\n        if(this.props.source) {\n            className += ' ' + this.props.source;\n        }\n        return <div className={className}/>;\n    }\n\n}\n\nexport default ASUIIcon;\n","import React from \"react\";\nimport PropTypes from 'prop-types';\n\nimport ASUIMenuContext from \"../menu/ASUIMenuContext\";\nimport ASUIClickableBase from \"./ASUIClickableBase.native\";\n\nexport default class ASUIButton extends ASUIClickableBase {\n    /** Context **/\n    static contextType = ASUIMenuContext;\n\n    /** Default Properties **/\n    static defaultProps = {\n    };\n\n    /** Property validation **/\n    static propTypes = {\n        onAction: PropTypes.func.isRequired,\n        disabled: PropTypes.bool,\n    };\n\n\n    constructor(props) {\n        super(props);\n        this.cb = {\n            onMouseInput: e => this.onMouseInput(e),\n            onKeyDown: e => this.onKeyDown(e),\n        };\n    }\n\n    getOverlay() { return this.context.overlay; }\n\n\n    render() {\n        let className = 'asui-menu-item';\n        if(this.props.className)\n            className += ' ' + this.props.className;\n        if(this.props.disabled)\n            className += ' disabled';\n        if(this.props.selected)\n            className += ' selected';\n\n        return (\n            <div\n                title={this.props.title}\n                className={className}\n                onClick={this.cb.onMouseInput}\n                onKeyDown={this.cb.onKeyDown}\n                tabIndex={0}\n            >\n                {this.props.children}\n            </div>\n        );\n    }\n\n\n    /** Actions **/\n\n    doAction(e) {\n        if(this.props.disabled) {\n            console.warn(this.constructor.name + \" is disabled.\", this);\n            return;\n        }\n\n        if(!this.props.onAction)\n            throw new Error(\"Button does not contain props 'onAction'\");\n        const result = this.props.onAction(e, this);\n        if (result !== false)\n            this.closeAllDropDownMenus();\n    }\n\n\n}\n\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport ASUIMenuContext from \"../ASUIMenuContext\";\n\nclass ASUIDropDownContainer extends React.Component {\n    static contextType = ASUIMenuContext;\n\n    // creating default props\n    static defaultProps = {\n        // arrow:          true,\n        vertical:       false,\n        // openOnHover:    null,\n        // disabled:       false,\n    };\n\n    // validating prop types\n    static propTypes = {\n        // closeCallback: PropTypes.func.isRequired,\n        vertical: PropTypes.bool,\n        disabled: PropTypes.bool,\n    };\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            open: false,\n            stick: false,\n        };\n        this.divRef = React.createRef();\n    }\n\n    getOverlay() { return this.context.overlay; }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n//         console.log('componentDidUpdate', this.state);\n        if(this.getOverlay()) {\n            if (this.state.open)\n                this.getOverlay().addCloseMenuCallback(this, this.closeMenu.bind(this));\n            else\n                this.getOverlay().removeCloseMenuCallback(this);\n        }\n        this.updateScreenPosition();\n    }\n\n    componentWillUnmount() {\n        if(this.getOverlay())\n            this.getOverlay().removeCloseMenuCallback(this);\n    }\n\n    render() {\n        if (!this.state.open)\n            return null;\n\n        let className = 'asui-menu-dropdown';\n        if (this.props.vertical)\n            className += ' vertical';\n        if (this.state.stick)\n            className += ' stick';\n        if(this.props.disabled)\n            return 'Disabled';\n\n        let options = this.state.options;\n\n        return <ASUIMenuContext.Provider\n            value={{overlay:this.getOverlay(), parentDropDown:this}}>\n            <div\n                className={className}\n                children={options}\n                ref={this.divRef}\n                />\n        </ASUIMenuContext.Provider>\n\n    }\n\n    hoverMenu() {\n        if(this.state.open === true || !this.getOverlay() || !this.getOverlay().isHoverEnabled())\n            return;\n        this.openMenu();\n    }\n\n    toggleMenu() {\n\n        if (!this.state.open)\n            this.openMenu();\n        else if (!this.state.stick)\n            this.stickMenu();\n        else\n            this.closeMenu();\n    }\n\n    async openMenu() {\n        if (this.props.disabled)\n            return console.error(\"Menu is disabled\");\n        if (this.state.open)\n            throw new Error(\"Menu was already open\");\n\n        // Try open menu handler\n        if(this.getOverlay()) {\n            const res = this.getOverlay().openMenu(this.props.options);\n            if (res !== false) {\n//                 console.info(\"Sub-menu options were sent to menu handler: \", this.getOverlay().openMenu);\n                return;\n            }\n        }\n\n        let options = this.props.options;\n        if (typeof options === \"function\")\n            options = options(this);\n        if(options instanceof Promise)\n            options = await options;\n        if (!options)\n            console.warn(\"Empty options returned by \", this);\n\n        this.setState({\n            open: true,\n            options\n        });\n\n        setTimeout(() => {\n            this.getOverlay().closeMenus(this.getAncestorMenus());\n        }, 100);\n    }\n\n    stickMenu() {\n        if (!this.state.open)\n            throw new Error(\"Unable to stick. Menu was not yet open\");\n\n        this.getAncestorMenus().forEach(menu => {\n            menu.setState({\n                stick: true,\n            });\n        })\n    }\n\n    closeMenu(stayOpenOnStick = false) {\n        if (this.state.stick && stayOpenOnStick === true) {\n            // console.warn(\"Ignoring close due to stick\", this);\n            return;\n        }\n        this.setState({\n            open: false,\n            stick: false,\n            options: null\n        })\n    }\n\n    getAncestorMenus() {\n        let menus = [];\n        let parent = this;\n        while (parent) {\n            menus.push(parent);\n            parent = parent.context.parentDropDown;\n        }\n        return menus;\n    }\n\n\n    closeAllDropDownMenus() {\n        if(this.getOverlay())\n            this.getOverlay().closeAllMenus();\n    }\n\n    updateScreenPosition() {\n        if(!this.state.open || !this.divRef.current)\n            return;\n        const div = this.divRef.current;\n        const rect = div.getBoundingClientRect();\n        if(rect.right > window.innerWidth)\n            div.classList.add('overflow-right');\n        if(rect.bottom > window.innerHeight)\n            div.classList.add('overflow-bottom');\n        // console.log(rect.right, window.innerWidth, rect.bottom, window.innerHeight)\n    }\n}\n\n// class DropDownContextWrapper extends React.Component {\n//     static contextType = DropDownContext;\n//\n//     render() {\n//         return <DropDownContext.Provider value={this}>\n//             <DropDownContainer\n//                 parentDropDown={this.context}\n//                 {...this.props}\n//                 />\n//         </DropDownContext.Provider>;\n//     }\n// }\n\nexport default ASUIDropDownContainer;\n\n// function reactMapRecursive(children, fn) {\n//     return React.Children.map(children, child => {\n//         if (!React.isValidElement(child)) {\n//             return child;\n//         }\n//\n//         if (child.props.children) {\n//             child = React.cloneElement(child, {\n//                 children: reactMapRecursive(child.props.children, fn)\n//             });\n//         }\n//\n//         return fn(child);\n//     });\n// }\n","import \"./assets/ASUIButton.css\"\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\nimport ASUIDropDownContainer from \"../menu/dropdown/ASUIDropDownContainer.native\";\nimport ASUIClickableBase from \"./ASUIClickableBase.native\";\n\nexport default class ASUIButtonDropDown extends ASUIClickableBase {\n    // Default Properties\n    static defaultProps = {\n        arrow:          true,\n        vertical:       true,\n    };\n\n    // Property validation\n    static propTypes = {\n        options: PropTypes.any.isRequired,\n    };\n\n    constructor(props) {\n        super(props);\n        this.dropdown = React.createRef();\n    }\n\n\n    renderChildren(props = {}) {\n        let arrow = this.props.arrow === true ? (this.props.vertical ? '▼' : '►') : this.props.arrow;\n        return [\n            super.renderChildren(props),\n            arrow ? <div className=\"arrow\">{arrow}</div> : null,\n            <ASUIDropDownContainer\n                ref={this.dropdown}\n                disabled={this.props.disabled}\n                options={this.props.options}\n                vertical={this.props.vertical}\n            />\n        ];\n    }\n\n\n    toggleMenu()    { return this.dropdown.current.toggleMenu(); }\n    hoverMenu()     { return this.dropdown.current.hoverMenu(); }\n\n    doAction(e) {\n        this.toggleMenu();\n    }\n}\n","import React from \"react\";\nimport \"./assets/ASUIForm.css\"\nimport PropTypes from \"prop-types\";\n\nclass ASUIForm extends React.Component {\n    /** Default Properties **/\n    static defaultProps = {\n    };\n\n    /** Property validation **/\n    static propTypes = {\n        className: PropTypes.string,\n        header: PropTypes.any,\n    };\n\n    render() {\n        let className = 'asui-form';\n        if(this.props.className)\n            className += ' ' + this.props.className;\n\n        let children = this.props.children;\n        if(typeof children === \"function\")\n            children = children(this);\n\n        return (\n            <div className={className}>\n                {this.props.header ? <div className=\"header\">{this.props.header}</div> : null}\n                <div className=\"container\">\n                    {children}\n                </div>\n            </div>\n        )\n    }\n}\n\n/** Export this script **/\nexport default ASUIForm;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./assets/ASUIPanel.css\"\n\nclass ASUIPanel extends React.Component {\n    /** Default Properties **/\n    static defaultProps = {\n    };\n\n    /** Property validation **/\n    static propTypes = {\n        className: PropTypes.string,\n        header: PropTypes.any,\n    };\n\n    render() {\n        let className = 'asui-panel';\n        if(this.props.className)\n            className += ' ' + this.props.className;\n\n        let children = this.props.children;\n        if(typeof children === \"function\")\n            children = children(this);\n\n        return (\n            <div\n                {...this.props}\n                className={className}\n                >\n                {this.props.header ? <div className=\"header\">{this.props.header}</div> : null}\n                {children}\n            </div>\n        )\n    }\n}\n/** Export this script **/\nexport default ASUIPanel;\n","import React from \"react\";\nimport \"./assets/ASUIInputRange.scss\";\nimport PropTypes from \"prop-types\";\n\nclass ASUIInputRange extends React.Component {\n    /** Default Properties **/\n    static defaultProps = {\n    };\n\n    /** Property validation **/\n    static propTypes = {\n        onChange: PropTypes.func.isRequired,\n    };\n\n\n\n    constructor(props = {}) {\n        super(props);\n        this.cb = {\n            onChange: e => this.onChange(e),\n            onClick: e => this.onClick(e),\n        };\n    }\n\n    onClick(e) {\n        e.preventDefault();\n        const newValue = parseFloat(e.target.value);\n        this.props.onChange(e, newValue)\n        // e.preventDefault();\n    }\n\n    onChange(e) {\n        e.preventDefault();\n        const newValue = parseFloat(e.target.value);\n        this.props.onChange(e, newValue)\n        // this.setState({value: newValue});\n    }\n\n    render() {\n        let className = \"asui-input-range\";\n        if(this.props.className)\n            className += ' ' + this.props.className;\n        return (\n            <input\n                className={className}\n                type=\"range\"\n                value={this.props.value}\n                onChange={this.cb.onChange}\n                onClick={this.cb.onClick}\n                min={this.props.min}\n                max={this.props.max}\n                step={this.props.step}\n                name={this.props.name}\n                title={this.props.title}\n                />\n        )\n    }\n\n}\n\n\n/** Export this script **/\nexport default ASUIInputRange;\n","\nimport ASUIDiv from \"./div/ASUIDiv\";\nimport ASUIIcon from \"./icon/ASUIIcon\";\nimport {\n    ASUIButton,\n    ASUIButtonDropDown\n} from \"./button/\";\n\nimport {\n    ASUIMenuAction,\n    ASUIMenuDropDown,\n    ASUIMenuBreak,\n    ASUIMenuOverlayContainer\n} from \"./menu/\";\n\nimport ASUIForm from \"./form/ASUIForm\";\nimport ASUIPanel from \"./form/ASUIPanel\";\n\nimport ASUIInputRange from \"./input-range/ASUIInputRange\";\n\nexport {\n    ASUIDiv,\n    ASUIIcon,\n    ASUIForm,\n    ASUIPanel,\n\n    ASUIButton,\n    ASUIButtonDropDown,\n\n    ASUIMenuAction,\n    ASUIMenuBreak,\n    ASUIMenuDropDown,\n    ASUIMenuOverlayContainer,\n\n    ASUIInputRange,\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport \"../assets/ASUIMenu.css\";\nimport ASUIDropDownContainer from \"./ASUIDropDownContainer\";\n\nexport default class ASUIMenuDropDown extends React.Component {\n    // Default Properties\n    static defaultProps = {\n        arrow:          true,\n        vertical:       false,\n    };\n\n    // Property validation\n    static propTypes = {\n        options: PropTypes.any.isRequired,\n    };\n\n\n    constructor(props) {\n        super(props);\n\n        this.cb = {\n            onKeyDown: (e) => this.onKeyDown(e),\n            onMouseInput: e => this.onMouseInput(e),\n        };\n        this.dropdown = React.createRef();\n    }\n\n\n    getClassName() { return 'asui-menu-item'; }\n\n    render() {\n        let className = this.getClassName(); // 'asui-menu-item';\n        if(this.props.className)\n            className += ' ' + this.props.className;\n        if(this.props.disabled)\n            className += ' disabled';\n        if(this.props.selected)\n            className += ' selected';\n\n        let arrow = this.props.arrow === true ? (this.props.vertical ? '▼' : '►') : this.props.arrow;\n        return (\n            <div\n                title={this.props.title}\n                className={className}\n                onMouseEnter={this.cb.onMouseInput}\n                onClick={this.cb.onMouseInput}\n                onKeyDown={this.cb.onKeyDown}\n                tabIndex={0}\n                >\n                {this.props.children}\n                {arrow ? <div className=\"arrow\">{arrow}</div> : null}\n                <ASUIDropDownContainer\n                    ref={this.dropdown}\n                    disabled={this.props.disabled}\n                    options={this.props.options}\n                    vertical={this.props.vertical}\n                    />\n            </div>\n        )\n    }\n\n    toggleMenu()    { return this.dropdown.current.toggleMenu(); }\n    hoverMenu()     { return this.dropdown.current.hoverMenu(); }\n\n    onMouseInput(e) {\n        if(e.defaultPrevented)\n            return;\n        e.preventDefault();\n        switch(e.type) {\n            case 'click':\n                // Try onClick handler first to avoid causing a state change within a render\n                if(this.props.onClick)\n                    if(this.props.onClick(e) === false)\n                        return;\n                this.toggleMenu();\n                break;\n\n            case 'mouseenter':\n            case 'mouseover':\n                this.hoverMenu();\n                break;\n\n            default:\n                throw new Error(\"Unknown Mouse event: \" + e.type);\n        }\n    }\n\n\n\n    onKeyDown(e) {\n        if(e.isDefaultPrevented())\n            return;\n        switch(e.key) {\n            case ' ':\n            case 'Enter':\n                this.toggleMenu();\n                break;\n\n            default:\n                console.info(\"Unhandled key: \", e.key);\n                break;\n        }\n    }\n    onMouseEnter(e) {\n        this.toggleMenu();\n    }\n\n}\n","import ASUIMenuAction from \"./ASUIMenuAction\";\nimport ASUIMenuDropDown from \"./dropdown/ASUIMenuDropDown\";\nimport ASUIDropDownContainer from \"./dropdown/ASUIDropDownContainer\";\nimport ASUIMenuBreak from \"./ASUIMenuBreak\";\nimport ASUIMenuOverlayContainer from \"./overlay/ASUIMenuOverlayContainer\";\n\nexport {\n    ASUIMenuAction,\n    ASUIMenuBreak,\n    ASUIMenuDropDown,\n    ASUIDropDownContainer,\n    ASUIMenuOverlayContainer\n}\n","class Keyboard {\n\n    getKeyboardLayout(layoutName=null) {\n        switch(layoutName) {\n            default:\n            case '2octave':\n                return {\n                    '@':'C#4',  '#':'D#4',  '%':'F#4', '^':'G#4',   '&':'A#4',  '*':'C#3',  ')':'D#3',\n                    'Q':'C4',   'W':'D4',   'E':'E4',   'R':'F4',   'T':'G4',   'Y':'A4',   'U':'B4',   'I':'C3',   'O':'D3',   'P':'E3',\n                    'S':'C#3',  'D':'D#3',  'G':'F#3',  'H':'G#3',  'J':'A#3',  'L':'C#4',  ':':'D#4',\n                    'Z':'C3',   'X':'D3',   'C':'E3',   'V':'F3',   'B':'G3',   'N':'A3',   'M':'B3', '<':'C4', '>':'D4', '?':'E4',\n\n                    '2':'C#2', '3':'D#2', '5':'F#2', '6':'G#2', '7':'A#2', '9':'C#3', '0':'D#3',\n                    'q':'C2', 'w':'D2', 'e':'E2', 'r':'F2', 't':'G2', 'y':'A2', 'u':'B2', 'i':'C3', 'o':'D3', 'p':'E3',\n                    's':'C#1', 'd':'D#1', 'g':'F#1', 'h':'G#1', 'j':'A#1', 'l':'C#2', ';':'D#2',\n                    'z':'C1', 'x':'D1', 'c':'E1', 'v':'F1', 'b':'G1', 'n':'A1', 'm':'B1', ',':'C2', '.':'D2', '/':'E2',\n                };\n\n            case '4octave':\n                return {\n                    // '1':'C4', '2':'C#4', '3':'D4', '4':'D#4', '5':'E4', '6':'F4', '7':'F#4', '8': 'G4', '9':'G#4', '0':'A4', \"-\":'A#4', \"=\":'B4', // TODO special commands?\n                    'Q':'C6', 'W':'C#6', 'E':'D6', 'R':'D#6', 'T':'E6', 'Y':'F6', 'U':'F#6', 'I': 'G6', 'O':'G#6', 'P':'A6', \"{\":'A#6', \"}\":'B6',\n                    'A':'C5', 'S':'C#5', 'D':'D5', 'F':'D#5', 'G':'E5', 'H':'F5', 'J':'F#5', 'K': 'G5', 'L':'G#5', ':':'A5', '\"': 'A#5',\n                    'Z':'C4', 'X':'C#4', 'C':'D4', 'V':'D#4', 'B':'E4', 'N':'F4', 'M':'F#4', '<': 'G4', '>':'G#4', '?':'A4',\n\n\n                    'q':'C3', 'w':'C#3', 'e':'D3', 'r':'D#3', 't':'E3', 'y':'F3', 'u':'F#3', 'i': 'G3', 'o':'G#3', 'p':'A3', \"[\":'A#3', \"]\":'B3',\n                    'a':'C2', 's':'C#2', 'd':'D2', 'f':'D#2', 'g':'E2', 'h':'F2', 'j':'F#2', 'k': 'G2', 'l':'G#2', ';':'A2', \"'\":'A#2',\n                    'z':'C1', 'x':'C#1', 'c':'D1', 'v':'D#1', 'b':'E1', 'n':'F1', 'm':'F#1', ',': 'G1', '.':'G#1', '/':'A1',\n                };\n        }\n    }\n\n    getKeyboardCommand(key, octave = 3, layoutName = null) {\n        if (!Number.isInteger(octave))\n            throw new Error(\"Octave value must be an integer\");\n        const keyboardLayout = this.getKeyboardLayout(layoutName);\n        if (typeof keyboardLayout[key] === 'undefined')\n            return null;\n        // const octave = parseInt(this.editor.track.fieldTrackerOctave.value) || 1;\n        let command = keyboardLayout[key];\n        for (let i = 6; i >= 1; i--)\n            command = command.replace(i, octave + i - 1);\n        return command;\n    }\n\n}\n\n\nexport default Keyboard;\n","\nimport Song from \"./Song\";\nimport Storage from \"../common/storage/Storage\";\nimport Keyboard from \"../common/keyboard/Keyboard\"\nimport {ProgramLoader} from \"../common/program\";\nimport {Instruction, NoteInstruction, TrackInstruction, InstructionIterator} from \"./instruction\";\nimport SongValues from \"./values/SongValues\";\nimport {TrackIterator, TrackPlayback} from \"./track\";\nimport Library from \"./library/Library\";\nexport {\n    Song,\n    Library,\n    ProgramLoader,\n\n    Instruction,\n    NoteInstruction,\n    TrackInstruction,\n    InstructionIterator,\n\n    TrackIterator,\n    TrackPlayback,\n\n    Storage,\n\n    Keyboard,\n\n    SongValues,\n}\n","import {ASUIMenuAction, ASUIMenuBreak, ASUIMenuDropDown} from \"../../components/menu\";\nimport {ASUIInputRange} from \"../../components\";\nimport ProgramLoader from \"../program/ProgramLoader\";\nimport React from \"react\";\nimport PromptManager from \"../prompt/PromptManager\";\n\nclass Values {\n\n    /** Menus **/\n\n    // TODO: move copy to SongValues\n    static renderMenuSelectCommand(onSelectValue, keyboardOctave=null) {\n        return (<>\n            <ASUIMenuDropDown options={() => this.renderMenuSelectCommandByFrequency(onSelectValue, keyboardOctave)}           >By Frequency</ASUIMenuDropDown>\n            <ASUIMenuDropDown options={() => this.renderMenuSelectCommandByOctave(onSelectValue, keyboardOctave)}              >By Octave</ASUIMenuDropDown>\n            <ASUIMenuBreak />\n            <ASUIMenuDropDown disabled options={() => this.renderMenuSelectCommandByNamed(onSelectValue)}               >By Alias</ASUIMenuDropDown>\n            <ASUIMenuDropDown disabled options={() => this.renderMenuSelectCommandByTrack(onSelectValue)}               >By Group</ASUIMenuDropDown>\n            <ASUIMenuAction onAction={async e => onSelectValue(await PromptManager.openPromptDialog(\"Insert custom command\"))}      >Custom Command</ASUIMenuAction>\n        </>);\n\n    }\n\n\n    // TODO: move copy to SongValues\n    static renderMenuSelectCommandByNamed(onSelectValue) {\n        return this.values.getAllNamedFrequencies((noteName, frequency, programID) =>\n            <ASUIMenuAction\n                key={noteName}\n                onAction={e => onSelectValue(noteName)}\n                children={noteName}\n            />\n        );\n    }\n\n    // TODO: move copy to SongValues\n    static renderMenuSelectCommandByTrack(onSelectValue, onTrackAdd=null) {\n        return (<>\n            {this.getAllSongGroups((trackName) =>\n                trackName === this.trackName ? null :\n                    <ASUIMenuAction\n                        key={trackName}\n                        disabled={trackName === this.state.selectedTrack}\n                        onAction={e => onSelectValue('@' + trackName)}\n                    >{trackName}</ASUIMenuAction>\n            )}\n            <ASUIMenuAction onAction={onTrackAdd} hasBreak  >Create New Track</ASUIMenuAction>\n        </>);\n    }\n\n\n    // renderMenuSelectCommandByCurrentOctave(onSelectValue, octave=null) {\n    //     octave = octave !== null ? octave : this.state.keyboardOctave;\n    //     return Values.getNoteFrequencies((noteName) =>\n    //         <MenuAction key={noteName} onAction={e => onSelectValue(`${noteName}${octave}`)}     >{noteName}{octave}</MenuAction>\n    //     );\n    // }\n\n\n    static renderMenuSelectCommandByFrequency(onSelectValue, keyboardOctave=null) {\n        return this.getNoteFrequencies((noteName) =>\n            <ASUIMenuDropDown key={noteName} options={() => this.renderMenuSelectCommandByFrequencyOctave(onSelectValue, noteName, keyboardOctave)}>\n                {noteName}\n            </ASUIMenuDropDown>\n        );\n    }\n\n    // TODO: move into lower menu?\n    static renderMenuSelectCommandByFrequencyOctave(onSelectValue, noteName, keyboardOctave=null) {\n        return (<>\n            {keyboardOctave !== null ? <ASUIMenuAction onAction={() => onSelectValue(noteName+''+keyboardOctave)}>{noteName+''+keyboardOctave} (Current)</ASUIMenuAction> : null}\n            {this.getNoteOctaves((octave) =>\n                <ASUIMenuAction key={octave} onAction={() => onSelectValue(noteName+''+octave)}>\n                    {noteName+''+octave}\n                </ASUIMenuAction>\n            )}\n        </>)\n    }\n\n    static renderMenuSelectCommandByOctave(onSelectValue, keyboardOctave=null) {\n        return (<>\n            {keyboardOctave !== null ? <ASUIMenuDropDown key={keyboardOctave} options={() => this.renderMenuSelectCommandByOctaveFrequency(onSelectValue, keyboardOctave)}>\n                {keyboardOctave} (Current)\n            </ASUIMenuDropDown> : null}\n            {this.getNoteOctaves((octave) =>\n                <ASUIMenuDropDown key={octave} options={() => this.renderMenuSelectCommandByOctaveFrequency(onSelectValue, octave)}>\n                    {octave}\n                </ASUIMenuDropDown>\n            )}\n        </>)\n    }\n\n    static renderMenuSelectCommandByOctaveFrequency(onSelectValue, octave) {\n        return this.getNoteFrequencies((noteName) =>\n            <ASUIMenuAction key={noteName} onAction={() => onSelectValue(noteName+''+octave)}     >{noteName+''+octave}</ASUIMenuAction>\n        );\n    }\n\n\n    static renderMenuSelectDuration(onSelectValue, currentDuration, timeDivision) {\n        return (<>\n            <ASUIMenuDropDown disabled options={() => renderMenuSelect('recent')}    >Recent</ASUIMenuDropDown>\n            <ASUIMenuBreak />\n            <ASUIMenuDropDown options={() => renderMenuSelect('fraction')}  >Fraction</ASUIMenuDropDown>\n            <ASUIMenuDropDown options={() => renderMenuSelect('triplet')}   >Triplet</ASUIMenuDropDown>\n            <ASUIMenuDropDown options={() => renderMenuSelect('dotted')}    >Dotted</ASUIMenuDropDown>\n            <ASUIMenuBreak />\n            <ASUIMenuDropDown disabled options={() => renderMenuSelect('custom')}    >Custom</ASUIMenuDropDown>\n        </>);\n\n        function renderMenuSelect(key) {\n            let results = [];\n            switch(key) {\n                case 'fraction':\n                    for (let i = 64; i > 1; i /= 2)\n                        results.push(\n                            <ASUIMenuAction key={`${i}a`} onAction={() => onSelectValue(1 / i * timeDivision, `1/${i}B`)}  >{`1/${i}B`}</ASUIMenuAction>\n                        );\n                    for (let i = 1; i <= 16; i++)\n                        results.push(\n                            <ASUIMenuAction key={`${i}b`} onAction={() => onSelectValue(i * timeDivision, i + 'B')}  >{i + 'B'}</ASUIMenuAction>\n                        );\n                    break;\n\n                case 'triplet':\n                    for (let i = 64; i > 1; i /= 2)\n                        results.push(\n                            <ASUIMenuAction key={`${i}a`} onAction={() => onSelectValue(1 / (i / 1.5) * timeDivision, `1/${i}T`)}  >{`1/${i}T`}</ASUIMenuAction>\n                        );\n                    for (let i = 1; i <= 16; i++)\n                        results.push(\n                            <ASUIMenuAction key={`${i}b`} onAction={() => onSelectValue((i / 1.5) * timeDivision, i + 'T')}  >{i + 'T'}</ASUIMenuAction>\n                        );\n                    break;\n\n                case 'dotted':\n                    for (let i = 64; i > 1; i /= 2)\n                        results.push(\n                            <ASUIMenuAction key={`${i}a`} onAction={() => onSelectValue(1 / (i * 1.5) * timeDivision, `1/${i}D`)}  >{`1/${i}D`}</ASUIMenuAction>\n                        );\n                    for (let i = 1; i <= 16; i++)\n                        results.push(\n                            <ASUIMenuAction key={`${i}b`} onAction={() => onSelectValue((i * 1.5) * timeDivision, i + 'D')}  >{i + 'D'}</ASUIMenuAction>\n                        );\n                    break;\n\n                default:\n                    throw new Error(\"Unknown key\");\n            }\n            return results;\n        }\n    }\n\n    static renderMenuSelectVelocity(onSelectValue, currentVelocity=null) {\n        const customAction = async () => {\n            const velocity = await PromptManager.openPromptDialog(\"Enter custom velocity (1-127)\", 127);\n            onSelectValue(velocity);\n        };\n        return (<>\n            <ASUIMenuAction onAction={()=>{}} disabled>Set Velocity</ASUIMenuAction>\n            <ASUIInputRange\n                min={0}\n                max={127}\n                value={currentVelocity}\n                onChange={(e, mixerValue) => onSelectValue(mixerValue)}\n            />\n            <ASUIMenuBreak/>\n            {this.getNoteVelocities((velocity) =>\n                <ASUIMenuAction key={velocity} onAction={() => onSelectValue(velocity)}  >{velocity}</ASUIMenuAction>)}\n            <ASUIMenuAction onAction={customAction} hasBreak >Custom</ASUIMenuAction>\n        </>);\n    }\n\n    /** @deprecated moved to Library **/\n    static renderMenuSelectAvailableProgram(onSelectValue, menuTitle=null) {\n        return (<>\n            {menuTitle ? <><ASUIMenuAction disabled onAction={() => {}}>{menuTitle}</ASUIMenuAction><ASUIMenuBreak/></> : null}\n            {ProgramLoader.getRegisteredPrograms().map((config, i) =>\n                <ASUIMenuAction key={i} onAction={() => onSelectValue(config.className)}       >{config.title}</ASUIMenuAction>\n            )}\n        </>);\n    }\n\n\n    /** UUID **/\n    static generateUUID() {\n        var d = new Date().getTime();\n        if (typeof performance !== 'undefined' && typeof performance.now === 'function') {\n            d += performance.now(); //use high-precision timer if available\n        }\n        return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n            var r = (d + Math.random() * 16) % 16 | 0;\n            d = Math.floor(d / 16);\n            // eslint-disable-next-line no-mixed-operators\n            return (c === 'x' ? r : (r & 0x3 | 0x8)).toString(16);\n        });\n    }\n\n    /** Values **/\n\n    static getNoteFrequencies(callback = (freq) => freq) {\n        const results = [];\n        const noteList = this.noteList();\n        for (let j = 0; j < noteList.length; j++) {\n            const noteFrequency = noteList[j];\n            const result = callback(noteFrequency);\n            if(!addResult(results, result)) return results;\n        }\n        return results;\n    }\n\n    static getNoteOctaves(callback = (octave) => octave) {\n        const results = [];\n        for (let i = 1; i <= 8; i++) {\n            const result = callback(i);\n            if(!addResult(results, result)) return results;\n        }\n        return results;\n    }\n\n\n    static getOctaveNoteFrequencies(callback = (freq) => freq) {\n        const results = [];\n        const noteFrequencies = this.noteList();\n        for (let i = 1; i <= 8; i++) {\n            for (let j = 0; j < noteFrequencies.length; j++) {\n                const noteFrequency = noteFrequencies[j] + i;\n                const result = callback(noteFrequency);\n                if(!addResult(results, result)) return results;\n            }\n        }\n        return results;\n    }\n\n\n    static getNoteVelocities(callback = (velocity) => velocity) {\n        const results = [];\n        for (let vi = 100; vi >= 0; vi -= 10) {\n            const result = callback(vi);\n            if(!addResult(results, result)) return results;\n        }\n        return results;\n    }\n\n\n\n    static getBeatsPerMeasure(callback = (beatsPerMeasure, beatsPerMeasureString) => [beatsPerMeasure, beatsPerMeasureString]) {\n        const results = [];\n        for (let beatPerMeasure = 1; beatPerMeasure <= 12; beatPerMeasure++) {\n            const result = callback(beatPerMeasure, beatPerMeasure + ` beat${beatPerMeasure > 1 ? 's' : ''} per measure`);\n            if(!addResult(results, result)) return results;\n        }\n        return results;\n    }\n\n    static getBeatsPerMinute(callback = (beatsPerMinute, beatsPerMinuteString) => [beatsPerMinute, beatsPerMinuteString]) {\n        const results = [];\n        for (let beatPerMinute = 40; beatPerMinute <= 300; beatPerMinute += 10) {\n            const result = callback(beatPerMinute, beatPerMinute + ` beat${beatPerMinute > 1 ? 's' : ''} per minute`);\n            if(!addResult(results, result)) return results;\n        }\n        return results;\n    }\n\n    static getTrackerSegmentLengthInRows(callback = (lengthInTicks, lengthString) => [lengthInTicks, lengthString]) {\n        const results = [];\n        [4, 5, 6, 7, 8, 10, 12, 16, 24, 32, 48, 64, 96, 128]\n            .forEach(i => {\n                const result = callback(i, i + ' Rows');\n                if(!addResult(results, result)) return results;\n            });\n        return results;\n    }\n\n    static formatVelocity(velocity) {\n        if (typeof velocity !== 'number')\n            return 'N/A'; // throw new Error(\"Invalid Program\");\n        return velocity === 100 ? \"Max\" : velocity + '';\n    }\n\n\n\n    static formatProgramID(programID) {\n        if (typeof programID !== 'number')\n            return 'N/A'; // throw new Error(\"Invalid Program\");\n        return programID < 10 ? \"0\" + programID : \"\" + programID;\n    }\n\n    static formatCommand(commandString) {\n        return commandString;\n    }\n\n    static formatPlaybackPosition(seconds) {\n        let m = Math.floor(seconds / 60);\n        seconds = seconds % 60;\n        let ms = Math.round((seconds - Math.floor(seconds)) * 1000);\n        seconds = Math.floor(seconds);\n\n        m = (m + '').padStart(2, '0');\n        seconds = (seconds + '').padStart(2, '0');\n        ms = (ms + '').padStart(3, '0'); // TODO: ticks?\n        return `${m}:${seconds}:${ms}`;\n    }\n\n    static parsePlaybackPosition(formattedSeconds) {\n        const parts = formattedSeconds.toString().split(':');\n        return (parseInt(parts[0], 10) * 60)\n            + (parseInt(parts[1], 10))\n            + (parseInt(parts[2], 10) / 1000);\n    }\n\n    static parseFrequencyString(note) {\n        if (typeof note !== \"string\")\n            throw new Error(\"Frequency is not a string\");\n        if (!note)\n            throw new Error(\"Frequency is null\");\n\n        const noteQuarterToneList = this.noteQuarterToneList();\n        const noteScale = note.slice(0, -1);\n        const octave = parseInt(note.slice(-1));\n        if(isNaN(octave))\n            throw new Error(\"Invalid octave value: \" + note);\n        if(typeof noteQuarterToneList[noteScale] === \"undefined\")\n            throw new Error(\"Unrecognized Note: \" + noteScale);\n        let keyNumber = noteQuarterToneList[noteScale];\n\n        if (keyNumber < 6)\n            keyNumber = keyNumber + 24 + ((octave - 1) * 24) + 2;\n        else\n            keyNumber = keyNumber + ((octave - 1) * 24) + 2;\n\n        return 440 * Math.pow(2, (keyNumber - 98) / 24);\n    }\n\n\n    /** Duration **/\n    static parseDurationAsTicks(durationString, timeDivision) {\n        if(!timeDivision)\n            throw new Error(\"Invalid timeDivision\");\n        if (typeof durationString !== 'string')\n            return durationString;\n        const units = durationString.substr(durationString.length - 1);\n        let fraction = durationString.substr(0, durationString.length - 1);\n        if(fraction.indexOf('/') !== -1) {\n            const fractionSplit = fraction.split('/');\n            fraction = parseInt(fractionSplit[0], 10) / parseInt(fractionSplit[1], 10);\n        }\n        switch (units) {\n            case 't':\n                return parseInt(fraction);\n            case 'B':\n                return timeDivision * parseFloat(fraction);\n            case 'D':\n                return timeDivision * 1.5 * parseFloat(fraction);\n            case 'T':\n                return timeDivision / 1.5 * parseFloat(fraction);\n            default:\n                throw new Error(\"Invalid Duration: \" + durationString);\n        }\n    }\n\n    static formatDuration(input, timeDivision) {\n        let stringValue;\n        this.getNoteDurations((duration, durationString) => {\n            if (input === duration || input === durationString) {\n                stringValue = durationString;\n                return false;\n            }\n        }, timeDivision);\n\n        if (stringValue)\n            return stringValue;\n        const beatDivisor = input / timeDivision;\n        if(beatDivisor === Math.round(beatDivisor))\n            return beatDivisor + 'B';\n\n        input = parseFloat(input).toFixed(2);\n        return input.replace('.00', 't');\n    }\n\n\n    static getNoteDurations(callback = (duration, durationString) => [duration, durationString], timeDivision) {\n        const results = [];\n        for (let i = 64; i > 1; i /= 2) {\n            let result = callback(1 / i * timeDivision, `1/${i}B`);            // Full Beats\n            if(!addResult(results, result)) return results;\n        }\n        for (let i = 64; i > 1; i /= 2) {\n            let result = callback((1 / i) / 1.5 * timeDivision, `1/${i}T`); // Triplet\n            if(!addResult(results, result)) return results;\n        }\n        for (let i = 64; i > 1; i /= 2) {\n            let result = callback(1 / i * 1.5 * timeDivision, `1/${i}D`);      // Dotted\n            if(!addResult(results, result)) return results;\n        }\n\n        for (let i = 1; i <= 16; i++) {\n            let result = callback(i * timeDivision, `${i}B`);            // Full Beats\n            if(!addResult(results, result)) return results;\n        }\n\n        for (let i = 1; i <= 16; i++) {\n            let result = callback(i / 1.5 * timeDivision, `${i}T`); // Triplet\n            if(!addResult(results, result)) return results;\n        }\n\n        for (let i = 1; i <= 16; i++) {\n            let result = callback(i * 1.5 * timeDivision, `${i}D`);      // Dotted\n            if(!addResult(results, result)) return results;\n        }\n        return results;\n    }\n\n    // get noteFrequencies() {\n    //     return this.renderer.noteFrequencies; // ['C', 'C#', 'D', 'D#', 'E', 'F', 'F#', 'G', 'G#', 'A', 'A#', 'B'];\n    // }\n\n\n    /** Frequency **/\n    // const noteCommands = ['A', 'A#', 'B', 'C', 'C#', 'D', 'D#', 'E', 'F', 'F#', 'G', 'G#'];\n    // Uses quarter tones\n    static noteList() {\n        return [\n            'A',\n            'A#',\n            'Bb',\n            'B',\n            'C',\n            'C#',\n            'Db',\n            'D',\n            'D#',\n            'Eb',\n            'E',\n            'E#',\n            'F',\n            'F#',\n            'Gb',\n            'G',\n            'G#',\n            'Ab',\n        ]\n    }\n\n    static noteQuarterToneList() {\n        return {\n            'A': 0,\n            'Aq': 1,\n            'A#': 2,\n            'A#q': 3,\n            'Bb': 2,\n            'Bbq': 3,\n            'B': 4,\n            'Bq': 5,\n            'C': 6,\n            'Cq': 7,\n            'C#': 8,\n            'C#q': 9,\n            'Db': 8,\n            'Dbq': 9,\n            'D': 10,\n            'Dq': 11,\n            'D#': 12,\n            'D#q': 13,\n            'Eb': 12,\n            'Ebq': 13,\n            'E': 14,\n            'Eq': 15,\n            'E#': 16,\n            'E#q': 17,\n            'F': 16,\n            'Fq': 17,\n            'F#': 18,\n            'F#q': 19,\n            'Gb': 18,\n            'Gbq': 19,\n            'G': 20,\n            'Gq': 21,\n            'G#': 22,\n            'G#q': 23,\n            'Ab': 22,\n            'Abq': 23,\n        }\n    }\n}\n\nfunction addResult (results, result) {\n    if (result !== null && typeof result !== \"undefined\")\n        results.push(result);\n    return result === false ? result : true;\n}\n\n\n\nexport default Values;\n\n\n","\nexport default class PromptManager {\n\n    /** Prompt **/\n\n    static async openPromptDialog(message, defaultValue='') {\n        return window.prompt(message, defaultValue);\n    }\n\n    static async openConfirmDialog(message) {\n        return window.confirm(message);\n    }\n}\n","import React from \"react\";\n\nclass ProgramLoader {\n    constructor(song) {\n        this.song = song;\n        // this.audioContext = audioContext;\n        // this.destinations = new WeakMap();\n    }\n\n\n    loadInstanceFromDestination(programID, destination) {\n        return this.loadInstanceFromID(programID);\n        // let programs = this.destinations.get(destination);\n        // if(!programs) {\n        //     programs = {};\n        //     this.destinations.set(destination, programs);\n        // }\n        // if(typeof programs[programID] === \"undefined\")\n        //     programs[programID] = this.programLoadInstance(programID);\n\n        // return programs[programID];\n    }\n\n    getData(programID) {\n        if (!this.song.data.programs[programID])\n            throw new Error(\"Invalid program ID: \" + programID);\n        return this.song.data.programs[programID];\n    }\n\n\n    getClassName(programID) {\n        const [className] = this.getData(programID);\n        return className;\n    }\n    getConfig(programID) {\n        const [, config] = this.getData(programID);\n        return config;\n    }\n    getClass(programID) {\n        const className = this.getClassName(programID);\n        const {classProgram} = ProgramLoader.getProgramClassInfo(className);\n        return classProgram;\n    }\n\n    loadInstanceFromID(programID) {\n        const [className, config] = this.getData(programID);\n        return ProgramLoader.loadInstance(className, config);\n    }\n\n\n    programLoadRenderer(programID) {\n        const [className, config] = this.getData(programID);\n        const {classRenderer: Renderer} = ProgramLoader.getProgramClassInfo(className);\n        return <Renderer\n            programID={programID}\n            config={config}\n        />;\n    }\n\n\n    /** Actions **/\n\n    stopProgramPlayback(programID) {\n        const classes = ProgramLoader.registeredProgramClasses;\n        const {classProgram} = classes[programID];\n        if(!classProgram.stopPlayback) {\n            // console.warn(classProgram.name + \" has no static stopPlayback method\");\n        } else {\n            classProgram.stopPlayback();\n        }\n    }\n\n    stopAllPlayback() {\n        const classes = ProgramLoader.registeredProgramClasses;\n        for(let i=0; i<classes.length; i++) {\n            this.stopProgramPlayback(i);\n        }\n    }\n\n    unloadAllPrograms() {\n        const classes = ProgramLoader.registeredProgramClasses;\n        for(let i=0; i<classes.length; i++) {\n            const {classProgram} = classes[i];\n            if(!classProgram.unloadAll) {\n                // TODO: use instance, not static\n                // console.warn(classProgram.name + \" has no static unloadAll method\");\n                continue;\n            }\n            classProgram.unloadAll();\n        }\n\n    }\n\n    /** Menu **/\n\n\n\n    /** Static **/\n\n    static loadInstance(className, config={}) {\n        const {classProgram} = this.getProgramClassInfo(className);\n        return new classProgram(config);\n    }\n\n    static getProgramClassInfo(className) {\n        const classes = ProgramLoader.registeredProgramClasses;\n        for(let i=0; i<classes.length; i++) {\n            const classInfo = classes[i];\n            if(classInfo.className === className)\n                return classInfo;\n        }\n        throw new Error(`Program class ${className} was not found`);\n    }\n\n\n\n    static addProgramClass(className, classProgram, classRenderer=null, title=null) {\n        // const className = classProgram.name;\n        const classes = ProgramLoader.registeredProgramClasses;\n        title = title || classProgram.name;\n        classes.push({classProgram, classRenderer, className, title})\n    }\n\n    static getRegisteredPrograms() { return ProgramLoader.registeredProgramClasses; }\n        // const classes = ProgramLoader.registeredProgramClasses;\n        // const results = [];\n        // for(let i=0; i<classes.length; i++) {\n        //     const classInfo = classes[i];\n        //     const {classObject, name, config} = classInfo;\n        //     const result = callback(classObject, name, config);\n        //     if(result !== null) results.push(result);\n        //     if(result === false) break;\n        // }\n        // return results;\n    // }\n    static registeredProgramClasses = []\n}\n\nexport default ProgramLoader;\n\n","import Instruction from \"./Instruction\";\n\nclass InstructionIterator {\n    constructor(instructionList, timeDivision, beatsPerMinute) {\n        this.instructions = instructionList;\n        this.beatsPerMinute = beatsPerMinute;\n        this.timeDivision = timeDivision;\n\n        this.currentIndex = -1; // TODO: rename to index?\n        this.positionTicks = 0;\n        this.endPositionTicks = 0;\n        this.positionSeconds = 0;\n        this.endPositionSeconds = 0;\n        this.lastInstructionPositionInTicks = 0;\n        this.lastInstructionPositionInSeconds = 0;\n        this.rowCount = 0;\n        this.cursorPosition = 0;\n\n        // this.nextQuantizationBreakInTicks = null;\n        // this.stats = stats || {};\n\n    }\n\n    hasReachedEnd() {\n        return this.currentIndex >= this.instructions.length - 1;\n    }\n\n    incrementPositionByInstruction(instruction, callback=null) {\n        const deltaDurationTicks = instruction.deltaDurationTicks;\n        this.positionTicks = this.lastInstructionPositionInTicks + deltaDurationTicks;\n        this.lastInstructionPositionInTicks = this.positionTicks;\n\n        const elapsedTime = (deltaDurationTicks / this.timeDivision) / (this.beatsPerMinute / 60);\n        this.positionSeconds = this.lastInstructionPositionInSeconds + elapsedTime;\n        this.lastInstructionPositionInSeconds = this.positionSeconds;\n\n        const durationTicks = instruction.durationTicks || 0;\n        if(durationTicks) {\n\n            const trackEndPositionInTicks = this.positionTicks + durationTicks;\n            if (trackEndPositionInTicks > this.endPositionTicks)\n                this.endPositionTicks = trackEndPositionInTicks;\n            const trackPlaybackEndTime = this.positionSeconds + (durationTicks / this.timeDivision) / (this.beatsPerMinute / 60);\n            if (trackPlaybackEndTime > this.endPositionSeconds)\n                this.endPositionSeconds = trackPlaybackEndTime;\n\n        }\n        if(callback)\n            callback(instruction);\n        this.cursorPosition++;\n\n        // TODO: calculate bpm changes\n    }\n\n    getInstruction(index) {\n        const instructionData = this.instructions[index];\n        return Instruction.getInstruction(instructionData);\n    }\n\n\n    currentInstruction() {\n        if (this.currentIndex === -1)\n            throw new Error(\"Iterator has not been started\");\n        return this.getInstruction(this.currentIndex);\n    }\n\n    nextInstruction(callback=null) {\n        if (this.hasReachedEnd())\n            return null;\n\n        this.currentIndex++;\n        let currentInstruction = this.currentInstruction(); // new SongInstruction(this.instructionList[this.trackIndex]);\n        this.incrementPositionByInstruction(currentInstruction, callback); // , currentInstruction.duration);\n        return currentInstruction;\n    }\n\n    nextInstructionRow(rowCallback=null, instructionCallback=null) {\n        if(this.hasReachedEnd())\n            return null;\n\n        const instructionList = [];\n        while(true) {\n            const instruction = this.nextInstruction(instructionCallback);\n            // Add instruction to the list\n            instructionList.push(instruction);\n\n            if(this.hasReachedEnd())\n                break;\n\n            // Check next instruction\n            const nextInstruction = this.getInstruction(this.currentIndex + 1);\n\n            // If the next instruction has a delta, then the current row ends\n            if (nextInstruction.deltaDurationTicks > 0) {\n                // Finish last row\n                break;\n            }\n\n            // Get next instruction\n            // instruction = this.nextInstruction(instructionCallback);\n        }\n\n        if(rowCallback)\n            rowCallback(instructionList);\n        this.rowCount++;\n        this.cursorPosition++;\n        return instructionList;\n    }\n\n\n    /** Seeking **/\n\n    seekToIndex(index, callback=null) {\n        if (!Number.isInteger(index))\n            throw new Error(\"Invalid seek index\");\n        while (!this.hasReachedEnd()) {\n            if (index <= this.currentIndex)\n                break;\n            if (!this.nextInstruction(callback))\n                break;\n        }\n    }\n\n    seekToEnd(callback=null) {\n        while (!this.hasReachedEnd())\n            this.nextInstruction(callback);\n    }\n\n    seekToPosition(positionSeconds, callback=null) {\n        while (!this.hasReachedEnd()) {\n            const nextInstruction = this.getInstruction(this.currentIndex + 1);\n            const elapsedTime = (nextInstruction.deltaDurationTicks / this.timeDivision) / (this.beatsPerMinute / 60);\n            if(this.positionSeconds + elapsedTime >= positionSeconds) {\n                break;\n            }\n            this.nextInstruction(callback);\n        }\n    }\n\n    seekToPositionTicks(positionTicks, callback=null) {\n        while (!this.hasReachedEnd() && this.positionTicks <= positionTicks) {\n            const nextInstruction = this.getInstruction(this.currentIndex + 1);\n            if(this.positionTicks + nextInstruction.deltaDurationTicks > positionTicks) {\n                break;\n            }\n            this.nextInstruction(callback);\n        }\n    }\n}\n\nexport default InstructionIterator;\n\n\n","import InstructionIterator from \"./InstructionIterator\";\n\n// TODO: make own class\nexport default class QuantizedInstructionIterator extends InstructionIterator {\n    constructor(instructionList, quantizationTicks, timeDivision, beatsPerMinute) {\n        super(instructionList, timeDivision, beatsPerMinute);\n        if(!quantizationTicks)\n            throw new Error(\"Invalid quantizationTicks\");\n        this.quantizationTicks = quantizationTicks;\n        // Initiate quantization breaks\n        this.nextQuantizationBreakInTicks = 0;\n    }\n\n    getNextInstructionPositionInTicks() {\n        if(this.hasReachedEnd())\n            return null;\n        let instruction = this.getInstruction(this.currentIndex + 1);\n        return instruction.deltaDurationTicks + this.lastInstructionPositionInTicks;\n    }\n\n    // getNextQuantizationBreaksInTicks() {\n    //     // Catch up the quantization breaks\n    //     const nextPositionTicks = this.getNextInstructionPositionInTicks();\n    //     while(this.nextQuantizationBreakInTicks <= this.positionTicks)\n    //         this.nextQuantizationBreakInTicks += this.quantizationTicks;\n    //\n    //     return this.nextQuantizationBreakInTicks;\n    // }\n\n    updateNextQuantizationBreakInTicks() {\n        let nextPositionTicks = this.getNextInstructionPositionInTicks();\n        if(nextPositionTicks < this.positionTicks)\n            nextPositionTicks = this.positionTicks;\n        while(this.nextQuantizationBreakInTicks <= nextPositionTicks)\n            this.nextQuantizationBreakInTicks += this.quantizationTicks;\n    }\n\n    getNextRowPositionTicks() {\n        const nextQuantizationBreakInTicks = this.nextQuantizationBreakInTicks;\n        // const nextQuantizationBreakInTicks = this.getNextQuantizationBreaksInTicks();\n        if(this.hasReachedEnd())\n            return nextQuantizationBreakInTicks;\n        // If there is a next instruction\n        let instruction = this.getInstruction(this.currentIndex + 1);\n        const nextPositionTicks = instruction.deltaDurationTicks + this.lastInstructionPositionInTicks;\n\n        if(nextPositionTicks < nextQuantizationBreakInTicks)\n            return nextPositionTicks;\n        return nextQuantizationBreakInTicks;\n    }\n\n\n    nextQuantizedInstructionRow(rowCallback=null, instructionCallback=null) {\n        // if(toPositionTicks !== null && this.positionTicks >= toPositionTicks)\n        //     return null; // Reached the end\n\n        const nextQuantizationBreakInTicks = this.nextQuantizationBreakInTicks;\n        const doRow = () => {\n            const elapsedTime = ((nextQuantizationBreakInTicks - this.positionTicks) / this.timeDivision) / (this.beatsPerMinute / 60);\n            this.positionSeconds += elapsedTime;\n            this.positionTicks = nextQuantizationBreakInTicks;\n            this.nextQuantizationBreakInTicks += this.quantizationTicks;\n            // this.updateNextQuantizationBreakInTicks();\n            // this.nextQuantizationBreakInTicks += this.quantizationTicks;\n            const row = [];\n            if(rowCallback)\n                rowCallback(row);\n\n            this.rowCount++;\n            this.cursorPosition++;\n            return row;\n        };\n\n        if(!this.hasReachedEnd()) {\n            // If there is a next instruction\n            const nextPositionTicks = this.getNextInstructionPositionInTicks();\n            if (\n                nextQuantizationBreakInTicks < nextPositionTicks) {\n                // Next break comes before next instruction\n\n                return doRow();\n            }\n\n            this.updateNextQuantizationBreakInTicks();\n            // Return the next row\n            return this.nextInstructionRow(rowCallback, instructionCallback);\n        }\n\n        // Render the next quantized row\n        return doRow();\n    }\n\n\n    // nextQuantizedInstructionRow(quantizationTicks, toPositionTicks, rowCallback=null, instructionCallback=null) {\n    //     // let nextQuantizationBreakInTicks = quantizationTicks;\n    //     const instructionList = [];\n    //     if(instructionCallback === null)\n    //         instructionCallback = function(instruction) { return instruction };\n    //\n    //     // Scan ahead to next instruction\n    //     let nextPositionTicks = this.positionTicks;\n    //     if(!this.hasReachedEnd()) {\n    //         let instruction = this.getInstruction(this.currentIndex + 1);\n    //         nextPositionTicks += instruction.deltaDurationTicks;\n    //     }\n    //\n    //     if(this.hasReachedEnd()) {\n    //\n    //     } else if(nextPositionTicks < this.nextQuantizationBreakInTicks) {\n    //         // If next position is after next quantized break, return a blank row\n    //         this.scrollPositionTicks = this.nextQuantizationBreakInTicks;\n    //         this.nextQuantizationBreakInTicks += this.quantizationTicks;\n    //\n    //     } else {\n    //         // Increment instruction position\n    //         this.nextInstruction();\n    //\n    //\n    //         while (!this.hasReachedEnd()) {\n    //             // Scan ahead to next instruction\n    //             let instruction = this.getInstruction(this.currentIndex + 1);\n    //\n    //             // If the next instruction has a delta, then the current row ends\n    //             if (!instruction || instruction.deltaDurationTicks > 0) {\n    //                 // Finish rendering last row\n    //                 break;\n    //\n    //                 // Move next quantized row up to current position\n    //                 // while (this.nextQuantizationBreakInTicks <= currentRowPositionTicks)\n    //                 //     this.nextQuantizationBreakInTicks += quantizationTicks;\n    //\n    //\n    //             }\n    //\n    //             // Increment instruction position\n    //             instruction = this.nextInstruction();\n    //\n    //             // Increment instruction cursor offset\n    //             this.cursorOffset++;\n    //             const ret = instructionCallback(instruction);\n    //             if (ret !== null)\n    //                 instructionList.push(ret);\n    //         }\n    //         this.scrollPositionTicks = this.positionTicks;\n    //     }\n    //     this.rowCount++;\n    //     this.cursorOffset++;\n    //     return instructionList;\n    //\n    //\n    // }\n\n    /** Seeking **/\n    // TODO: hack overrides subclass\n    seekToIndex(index, callback=null) {\n        if (!Number.isInteger(index))\n            throw new Error(\"Invalid seek index\");\n        while (true) {\n            if (index === this.currentIndex)\n                break;\n            this.nextInstruction(callback);\n            if (!this.nextQuantizedInstructionRow(null, callback))\n                break;\n        }\n    }\n\n    seekToEnd(callback=null) {\n        while (!this.hasReachedEnd())\n            this.nextQuantizedInstructionRow(null, callback);\n    }\n\n    seekToPosition(positionSeconds, callback=null) {\n        while (this.positionSeconds < positionSeconds) {\n            this.nextQuantizedInstructionRow(null, callback);\n        }\n    }\n\n    seekToPositionTicks(positionTicks, callback=null) {\n        while (this.positionTicks < positionTicks) {\n            this.nextQuantizedInstructionRow(null, callback);\n        }\n    }\n}\n\n\n\n","import InstructionIterator from \"./InstructionIterator\";\nimport QuantizedInstructionIterator from \"./QuantizedInstructionIterator\";\n\nimport Instruction from \"./Instruction\";\nimport TrackInstruction from \"./TrackInstruction\";\nimport NoteInstruction from \"./NoteInstruction\";\nexport {\n    Instruction,\n    InstructionIterator,\n    QuantizedInstructionIterator,\n\n    TrackInstruction,\n    NoteInstruction\n}\n","import Values from \"../../common/values/Values\";\n\nclass Instruction {\n    constructor(instructionData = [0]) {\n        this.data = instructionData;\n    }\n\n    get command() {\n        return this.data[1];\n    }\n\n    set command(newCommand) {\n        this.data[1] = newCommand;\n    }\n\n\n    get deltaDurationTicks() {\n        return this.data[0];\n    }\n\n    set deltaDurationTicks(newDeltaDuration) {\n        this.data[0] = newDeltaDuration;\n    }\n\n    getDurationString(timeDivision) {\n        const durationTicks = this.durationTicks;\n        if(durationTicks === null)\n            return 'N/A';\n        return Values.formatDuration(durationTicks, timeDivision);\n    }\n    set durationTicks(newDuration)  { throw new Error(\"TODO: Implement for \" + this.constructor.name);}\n    get durationTicks()             { throw new Error(\"TODO: Implement for \" + this.constructor.name);}\n    get clone()          { throw new Error(\"TODO: Implement for \" + this.constructor.name);}\n\n    /** @deprecated **/\n    set velocity(velocity)  { throw new Error(\"TODO: Implement for \" + this.constructor.name);}\n    /** @deprecated **/\n    get velocity()          { throw new Error(\"TODO: Implement for \" + this.constructor.name);}\n\n\n\n    /** Static **/\n\n    static processInstructionTracks(trackList) {\n        Object.keys(trackList).forEach((trackName, i) =>\n            this.processInstructionTrack(trackList[trackName]));\n    }\n    static processInstructionTrack(instructionList) {\n        if(!Array.isArray(instructionList))\n            throw new Error(\"Invalid ASCTrack instruction array\");\n        for(let i=0; i<instructionList.length; i++) {\n            const instruction = this.parseInstruction(instructionList[i]);\n            instructionList[i] = instruction.data;\n        }\n    }\n\n    static parseInstruction(instructionData) {\n        if (instructionData instanceof Instruction)\n            return instructionData;\n        if(typeof instructionData === \"number\")\n            instructionData = [instructionData];\n        if(typeof instructionData === \"string\")\n            instructionData = [0, instructionData];\n        if(!Array.isArray(instructionData))\n            throw new Error(\"Invalid instruction data\");\n        if(typeof instructionData[0] === \"string\")\n            instructionData.unshift(0);\n        return this.getInstruction(instructionData);\n    }\n\n    static getInstruction(instructionData) {\n        if(!instructionData)\n            throw new Error(\"Invalid Instruction data\");\n        const commandString = instructionData[1];\n        if(typeof commandString === \"string\") {\n            switch(commandString[0]) {\n                case '@':\n                    return new (require(\"./TrackInstruction\").default)(instructionData);\n                case '!':\n                    return new (require(\"./CommandInstruction\").default)(instructionData);\n                default:\n                    return new (require(\"./NoteInstruction\").default)(instructionData);\n            }\n\n        } else if(typeof commandString === \"number\") {\n            return new (require(\"./MIDIInstruction\").default)(instructionData);\n        }\n        throw new Error(\"Unknown Instruction\");\n        // if(this.isMIDIInstruction(instructionData))\n    }\n\n\n    // static isTrackInstruction(instructionData) {\n    //     return typeof instructionData[1] === \"string\" && instructionData[1][0] === '@';\n    // }\n    //\n    // static isMIDIInstruction(instructionData) {\n    //     return typeof instructionData[1] === \"number\";\n    // }\n\n\n}\n\n\nexport default Instruction;\n\n\n\n","import React from \"react\";\n\nconst unimplemented = function() { throw new Error(\"MenuContext Object is unimplemented\")};\nconst ASUIMenuContext = React.createContext({\n    openMenu: (options) =>                      unimplemented,\n    closeMenus: (butThese=[]) =>            unimplemented,\n    closeAllMenus: () =>                        unimplemented,\n    isHoverEnabled: () =>                       unimplemented,\n    removeDropDownMenu: (openMenuItem) =>       unimplemented,\n    addDropDownMenu: (openMenuItem) =>          unimplemented,\n});\n\nexport default ASUIMenuContext;\n","export default class LocalStorage {\n    static async setItem(key, value) {\n        return localStorage.setItem(key, value);\n    }\n\n    static async getItem(key) {\n        return localStorage.getItem(key);\n    }\n};\n","import LZString from 'lz-string';\nimport Values from \"../values/Values\";\n\nimport LocalStorage from \"./LocalStorage\";\n\nclass Storage {\n    /** Loading **/\n\n    async getRecentSongList() {\n        return this.decodeForStorage((await LocalStorage.getItem('song-recent-list')) || '[]');\n    }\n\n\n    /** Encoding / Decoding **/\n\n    encodeForStorage(json, replacer = null, space = null) {\n        let encodedString = JSON.stringify(json, replacer, space);\n//             console.log(`Compression: ${compressedString.length} / ${encodedString.length} = ${Math.round((compressedString.length / encodedString.length)*100)/100}`);\n        return LZString.compress(encodedString);\n    }\n\n    decodeForStorage(encodedString) {\n        if (!encodedString)\n            return null;\n        encodedString = LZString.decompress(encodedString) || encodedString;\n        return JSON.parse(encodedString);\n    }\n\n    /** Saving **/\n\n    async saveState(state, key='audio-source-state') {\n        await LocalStorage.setItem(key, JSON.stringify(state));\n    }\n\n    async loadState(key='audio-source-state') {\n        let state = await LocalStorage.getItem(key);\n        if (state)\n            state = JSON.parse(state);\n        return state;\n    }\n\n    async saveSongToMemory(songData, songHistory) {\n        // const song = this.data;\n        if (!songData.uuid)\n            songData.uuid = Values.generateUUID();\n        let songRecentUUIDs = [];\n        try {\n            songRecentUUIDs = this.decodeForStorage(await LocalStorage.getItem('song-recent-list') || '[]');\n        } catch (e) {\n            console.error(e);\n        }\n        songRecentUUIDs = songRecentUUIDs.filter((entry) => entry.uuid !== songData.uuid);\n        songRecentUUIDs.unshift({uuid: songData.uuid, title: songData.title});\n        await LocalStorage.setItem('song-recent-list', this.encodeForStorage(songRecentUUIDs));\n\n\n        await LocalStorage.setItem('song:' + songData.uuid, this.encodeForStorage(songData));\n        await LocalStorage.setItem('song-history:' + songData.uuid, this.encodeForStorage(songHistory)); // History stored separately due to memory limits\n        // this.querySelector('.song-menu').outerHTML = renderEditorMenuContent(this);\n        console.info(\"Song saved to memory: \" + songData.uuid, songData);\n    }\n\n    saveSongToFile(songData, prompt = true) {\n        // const song = this.data;\n        const instructionsKey = \"/** INSTRUCTIONS-\" + Values.generateUUID() + ' **/';\n        let jsonStringInstructions = JSON.stringify(songData.tracks);\n        let jsonString = JSON.stringify(Object.assign({}, songData, {\n            tracks: instructionsKey\n        }), null, \"\\t\");\n        jsonString = jsonString.replace('\"' + instructionsKey + '\"', jsonStringInstructions);\n        const dataStr = \"data:text/json;charset=utf-8,\" + encodeURIComponent(jsonString);\n        const downloadAnchorNode = document.createElement('a');\n        downloadAnchorNode.setAttribute(\"href\", dataStr);\n\n        let fileName = (songData.title || \"untitled\")\n                .replace(/\\s+/g, '_')\n            + '.json';\n        if (prompt)\n            fileName = window.prompt(\"Download as file?\", fileName);\n        if (!fileName)\n            return console.warn(\"Download canceled\");\n        downloadAnchorNode.setAttribute(\"download\", fileName);\n        document.body.appendChild(downloadAnchorNode); // required for firefox\n        downloadAnchorNode.click();\n        downloadAnchorNode.remove();\n    }\n\n    /** Loading **/\n\n    async loadSongFromMemory(songUUID) {\n        let songDataString = await LocalStorage.getItem('song:' + songUUID);\n        if (!songDataString)\n            throw new Error(\"Song Data not found for uuid: \" + songUUID);\n        let songData = this.decodeForStorage(songDataString);\n        if (!songData)\n            throw new Error(\"Invalid Song Data: \" + songDataString);\n        return songData;\n        // console.info(\"Song loaded from memory: \" + songUUID, songData, this.songHistory);\n    }\n\n    async loadSongHistoryFromMemory(songUUID) {\n        let songHistoryString = await LocalStorage.getItem('song-history:' + songUUID);\n        if (!songHistoryString)\n            return null;\n        return this.decodeForStorage(songHistoryString);\n        // this.render();\n        //this.gridSelect(null, 0);\n        // console.info(\"Song loaded from memory: \" + songUUID, songData, this.songHistory);\n    }\n\n\n    /** Batch Commands **/\n\n    async getBatchRecentCommands() {\n        let batchRecentCommands = await LocalStorage.getItem('batch-recent-commands');\n        if (!batchRecentCommands)\n            return [];\n        batchRecentCommands = JSON.parse(batchRecentCommands);\n        return batchRecentCommands;\n    }\n\n    async addBatchRecentCommands(batchCommand) {\n        let batchRecentCommands = this.getBatchRecentCommands();\n        if (batchRecentCommands.indexOf(batchCommand) === -1) {\n            batchRecentCommands.unshift(batchCommand);\n        }\n        await LocalStorage.setItem('batch-recent-commands', JSON.stringify(batchRecentCommands));\n    }\n\n    /** Batch Searches **/\n\n    async getBatchRecentSearches() {\n        let batchRecentSearches = await LocalStorage.getItem('batch-recent-searches');\n        if (!batchRecentSearches)\n            return [];\n        batchRecentSearches = JSON.parse(batchRecentSearches);\n        return batchRecentSearches;\n    }\n\n    async addBatchRecentSearches(batchCommand) {\n        let batchRecentSearches = this.getBatchRecentSearches();\n        if (batchRecentSearches.indexOf(batchCommand) === -1) {\n            batchRecentSearches.unshift(batchCommand);\n        }\n        await LocalStorage.setItem('batch-recent-searches', JSON.stringify(batchRecentSearches));\n    }\n\n\n    //\n    // historyQueue(songHistory) {\n    //     if(!Array.isArray(songHistory))\n    //         songHistory = [];\n    //     for(let i=0; i<songHistory.length; i++) {\n    //         const historyAction = songHistory[i];\n    //         this.status.history.currentStep++;\n    //         historyAction.step = this.status.history.currentStep;\n    //     }\n    //     //\n    //     // this.status.history.undoList.push(historyAction);\n    //     // this.status.history.undoPosition = this.status.history.undoList.length-1;\n    //\n    //     if(this.webSocket && songHistory.length > 0) {\n    //         console.info(\"Sending history actions: \", songHistory);\n    //         this.webSocket\n    //             .send(this.encodeForStorage({\n    //                 type: 'history:entry',\n    //                 songHistory: songHistory,\n    //                 // uuid: this.uuid\n    //             }))\n    //     }\n    // }\n    //\n    // historyUndo() {\n    //\n    // }\n    //\n    // historyRedo() {\n    //\n    // }\n    // clearHistoryActions() {\n    //     const actions = this.songHistory;\n    //     this.songHistory = [];\n    //     return actions;\n    // }\n\n\n}\n\n\nexport default Storage;\n","import Instruction from \"./Instruction\";\n\nclass TrackInstruction extends Instruction {\n\n\n    getTrackName() {\n        return typeof this.data[1] === \"string\" ? this.data[1].substr(1) : undefined;\n    }\n\n    setTrackName(newTrackName) {\n        this.data[1] = `@${newTrackName}`;\n    }\n\n    get instruction() {\n        return this.data[2];\n    }\n\n    set instruction(newCommand) {\n        this.data[2] = newCommand;\n    }\n\n    get durationTicks() {\n        return this.data[3] || undefined;\n    }\n\n    set durationTicks(newDuration) {\n        newDuration = parseFloat(newDuration);\n        if (Number.isNaN(newDuration))\n            throw new Error(\"Invalid Duration\");\n        this.data[3] = newDuration;\n    }\n\n    get velocity() {\n        return undefined;\n    }\n\n    clone() {\n        return new TrackInstruction(this.data.slice())\n    }\n}\n\nexport default TrackInstruction;\n","//\n// Player can be viewed as a state machine with\n// 3 states (playing, paused, stopped) and 5 transitions\n// (open, pause, unpause, seek, stop).\n// If the player has reached end of the song,\n// it is in the terminal \"stopped\" state and is\n// no longer playable:\n//                         ╭– (seek) –╮\n//                         ^          v\n//  ┌─ ─ ─ ─ ─┐         ┌─────────────────┐            ┌─────────┐\n//  │ stopped │–(open)–>│     playing     │––(stop)–––>│ stopped │\n//  └ ─ ─ ─ ─ ┘         └─────────────────┘            └─────────┘\n//                        | ┌────────┐ ^\n//                (pause) ╰>│ paused │–╯ (unpause)\n//                          └────────┘\n//\n// In the \"open\" transition, the audioNode is connected.\n// In the \"stop\" transition, it is disconnected.\n// \"stopped\" is synonymous with closed/empty.\n//\nexport default class Player {\n  constructor(audioCtx, destNode, chipCore, onPlayerStateUpdate) {\n    this._outerAudioProcess = this._outerAudioProcess.bind(this);\n\n    this.paused = true;\n    this.fileExtensions = [];\n    this.metadata = {};\n    this.audioCtx = audioCtx;\n    this.destinationNode = destNode;\n    this.onPlayerStateUpdate = onPlayerStateUpdate;\n    this.bufferSize = 2048;\n    this._innerAudioProcess = null;\n    this.audioNode = this.audioCtx.createScriptProcessor(this.bufferSize, 2, 2);\n    this.audioNode.onaudioprocess = this._outerAudioProcess;\n    this.debug = window.location.search.indexOf('debug=true') !== -1;\n    this.timeCount = 0;\n    this.renderTime = 0;\n    this.perfLoggingInterval = 100;\n  }\n\n  togglePause() {\n    this.paused = !this.paused;\n    return this.paused;\n  }\n\n  isPaused() {\n    return this.paused;\n  }\n\n  resume() {\n    this.paused = false;\n  }\n\n  canPlay(fileExtension) {\n    return this.fileExtensions.indexOf(fileExtension.toLowerCase()) !== -1;\n  }\n\n  loadData(data, filename) {\n    throw Error('Player.loadData() must be implemented.');\n  }\n\n  stop() {\n    throw Error('Player.stop() must be implemented.');\n  }\n\n  isPlaying() {\n    throw Error('Player.isPlaying() must be implemented.');\n  }\n\n  setTempo() {\n    console.warn('Player.setTempo() not implemented for this player.');\n  }\n\n  setVoices() {\n    console.warn('Player.setVoices() not implemented for this player.');\n  }\n\n  setFadeout(startMs) {\n    console.warn('Player.setFadeout() not implemented for this player.');\n  }\n\n  getVoiceName(index) {\n    console.warn('Player.getVoiceName() not implemented for this player.');\n  }\n\n  getNumVoices() {\n    return 0;\n  }\n\n  getNumSubtunes() {\n    return 1;\n  }\n\n  getSubtune() {\n    return 0;\n  }\n\n  getMetadata() {\n    return {\n      title: null,\n      author: null,\n    }\n  }\n\n  getParamDefs() {\n    return [];\n  }\n\n  connect() {\n    if (!this._innerAudioProcess) {\n      throw Error('Player.setAudioProcess has not been called.');\n    }\n    this.audioNode.connect(this.destinationNode);\n  }\n\n  suspend() {\n    this.stopped = true;\n    this.paused = true;\n  }\n\n  setOnPlayerStateUpdate(fn) {\n    this.onPlayerStateUpdate = fn;\n  }\n\n  setAudioProcess(fn) {\n    if (typeof fn !== 'function') {\n      throw Error('AudioProcess must be a function.');\n    }\n    this._innerAudioProcess = fn;\n  }\n\n  _outerAudioProcess(event) {\n    const start = performance.now();\n    this._innerAudioProcess(event);\n    const end = performance.now();\n\n    if (this.debug) {\n      this.renderTime += end - start;\n      this.timeCount++;\n      if (this.timeCount >= this.perfLoggingInterval) {\n        const cost = this.renderTime / this.timeCount;\n        const budget = 1000 * this.bufferSize / this.audioCtx.sampleRate;\n        console.log(\n          '[%s] %s ms to render %d frames (%s ms) (%s% utilization)',\n          this.constructor.name,\n          cost.toFixed(2),\n          this.bufferSize,\n          budget.toFixed(1),\n          (100 * cost / budget).toFixed(1),\n        );\n        this.renderTime = 0.0;\n        this.timeCount = 0;\n      }\n    }\n  }\n\n  muteAudioDuringCall(audioNode, fn) {\n    if (audioNode && audioNode.context.state === 'running' && this.paused === false) {\n      const audioprocess = audioNode.onaudioprocess;\n      // Workaround to eliminate stuttering:\n      // Temporarily swap the audio process callback, and do the\n      // expensive operation only after buffer is filled with silence\n      audioNode.onaudioprocess = function (e) {\n        for (let i = 0; i < e.outputBuffer.numberOfChannels; i++) {\n          e.outputBuffer.getChannelData(i).fill(0);\n        }\n        fn();\n        audioNode.onaudioprocess = audioprocess;\n      };\n    } else {\n      fn();\n    }\n  }\n\n  static metadataFromFilepath(filepath) {\n    // Guess metadata from path/filename for MIDI files.\n    // Assumes structure:  /Game MIDI/{game}/**/{title}\n    //             ...or:  /MIDI/{artist}/**/{title}\n    const parts = filepath.split('/');\n    const meta = {};\n    meta.title = parts.pop();\n    meta.system = parts.shift();\n    if (meta.system === 'Game MIDI') {\n      meta.game = parts.shift();\n    } else {\n      meta.artist = parts.shift();\n    }\n    return meta;\n  }\n}\n","import { CalcCascades, IirFilter } from 'fili';\n\nexport default class SubBass {\n  constructor(sampleRate) {\n    const iirCalculator = new CalcCascades();\n    const lowpass1Coeffs = iirCalculator.lowpass({\n      order: 5,\n      characteristic: 'butterworth',\n      Fs: sampleRate,\n      Fc: 200,\n      gain: 0,\n    });\n\n    const lowpass2Coeffs = iirCalculator.lowpass({\n      order: 3,\n      characteristic: 'butterworth',\n      Fs: sampleRate,\n      Fc: 120,\n      gain: 0,\n    });\n\n    const highpassCoeffs = iirCalculator.highpass({\n      order: 3,\n      characteristic: 'butterworth',\n      Fs: sampleRate,\n      Fc: 25,\n      gain: 0,\n    });\n\n    const lowpass1 = new IirFilter(lowpass1Coeffs);\n    const lowpass2 = new IirFilter(lowpass2Coeffs);\n    const highpass = new IirFilter(highpassCoeffs);\n    const numOctaves = 1;\n    const dcResponseTime = 0.16;\n    const envResponseTime = 0.016;\n\n    let sCurr = 0;\n    let sPrev = 0;\n    let cycleCounter = 0;\n    let dcAvg = 0;\n    let dcWeight = Math.exp(-1 / (sampleRate * dcResponseTime));\n    let envAvg = 0;\n    let envWeight = Math.exp(-1 / (sampleRate * envResponseTime));\n\n    function removeDcStep(sample) {\n      dcAvg = dcWeight * dcAvg + (1 - dcWeight) * sample;\n      return sample - dcAvg;\n    }\n\n    function envelopeStep(sample) {\n      sample = removeDcStep(sample);\n      envAvg = envWeight * envAvg + (1 - envWeight) * Math.abs(sample);\n      return envAvg * 1.414; // invert sine RMS\n    }\n\n    this.process = (sample) => {\n      const sBass = lowpass1.singleStep(sample);\n      const env = envelopeStep(sBass);\n\n      sPrev = sCurr;\n      sCurr = sBass;\n\n      // detect zero crossing (low to high)\n      if (sPrev < 0 && sCurr >= 0) {\n        cycleCounter = (cycleCounter + 1) % Math.pow(2, numOctaves);\n      }\n\n      let sOctaves = 0;\n      for (let i = 0; i < numOctaves; i++) {\n        const bit = cycleCounter & (1 << i);\n        sOctaves += bit ? 1 : -1;\n      }\n\n      const sSub = highpass.singleStep(lowpass2.singleStep(sOctaves));\n      return sSub * env;\n    }\n  }\n}","import Player from \"./Player.js\";\n// import App from \"../App\";\nimport SubBass from \"../effects/SubBass\";\nimport encoding from \"encoding-japanese\";\n\nlet emu = null;\nlet libgme = null;\nconst INT16_MAX = 65535;\nconst fileExtensions = [\n  'nsf',\n  'nsfe',\n  'spc',\n  'gym',\n  'vgm',\n  'vgz',\n  'ay',\n  'sgc',\n  'kss',\n];\n\nexport default class GMEPlayer extends Player {\n  constructor(audioCtx, destNode, chipCore, onPlayerStateUpdate) {\n    super(audioCtx, destNode, chipCore, onPlayerStateUpdate);\n    this.setParameter = this.setParameter.bind(this);\n    this.getParameter = this.getParameter.bind(this);\n    this.getParamDefs = this.getParamDefs.bind(this);\n\n    libgme = chipCore;\n    this.paused = false;\n    this.fileExtensions = fileExtensions;\n    this.subtune = 0;\n    this.tempo = 1.0;\n    this.params = { subbass: 1 };\n\n    this.buffer = libgme.allocate(this.bufferSize * 16, 'i16', libgme.ALLOC_NORMAL);\n    this.emuPtr = libgme.allocate(1, 'i32', libgme.ALLOC_NORMAL);\n\n    this.subBass = new SubBass(audioCtx.sampleRate);\n\n    this.setAudioProcess(this.gmeAudioProcess);\n  }\n\n  gmeAudioProcess(e) {\n    let i, channel;\n    const channels = [];\n    for (channel = 0; channel < e.outputBuffer.numberOfChannels; channel++) {\n      channels[channel] = e.outputBuffer.getChannelData(channel);\n    }\n\n    if (this.paused) {\n      for (channel = 0; channel < channels.length; channel++) {\n        channels[channel].fill(0);\n      }\n      return;\n    }\n\n    if (this.getPositionMs() >= this.getDurationMs() && this.fadingOut === false) {\n      console.log('Fading out at %d ms.', this.getPositionMs());\n      this.setFadeout(this.getPositionMs());\n      this.fadingOut = true;\n    }\n\n    if (libgme._gme_track_ended(emu) !== 1) {\n      libgme._gme_play(emu, this.bufferSize * 2, this.buffer);\n\n      for (channel = 0; channel < channels.length; channel++) {\n        for (i = 0; i < this.bufferSize; i++) {\n          channels[channel][i] = libgme.getValue(this.buffer +\n            // Interleaved channel format\n            i * 2 * 2 +             // frame offset   * bytes per sample * num channels +\n            channel * 2,            // channel offset * bytes per sample\n            'i16') / INT16_MAX;     // convert int16 to float\n        }\n      }\n\n      if (this.params.subbass > 0) {\n        for (i = 0; i < this.bufferSize; i++) {\n          const sub = this.subBass.process(channels[0][i]) * this.params.subbass;\n          channels[0][i] += sub;\n          channels[1][i] += sub;\n        }\n      }\n    } else {\n      this.subtune++;\n\n      if (this.subtune >= libgme._gme_track_count(emu) || this.playSubtune(this.subtune) !== 0) {\n        this.suspend();\n        console.debug(\n          'GMEPlayer.gmeAudioProcess(): _gme_track_ended == %s and subtune (%s) > _gme_track_count (%s).',\n          libgme._gme_track_ended(emu),\n          this.subtune,\n          libgme._gme_track_count(emu)\n        );\n        this.onPlayerStateUpdate(true);\n      }\n    }\n  }\n\n  playSubtune(subtune) {\n    this.fadingOut = false;\n    this.subtune = subtune;\n    this.metadata = this._parseMetadata(subtune);\n    console.debug('GMEPlayer.playSubtune(subtune=%s)', subtune);\n    this.onPlayerStateUpdate(false);\n    return libgme._gme_start_track(emu, subtune);\n  }\n\n  loadData(data, filepath) {\n    this.subtune = 0;\n    this.fadingOut = false;\n    this.filepathMeta = Player.metadataFromFilepath(filepath);\n    const formatNeedsBass = filepath.match(\n      /(\\.sgc$|\\.kss$|\\.nsfe?$|\\.ay$|Master System|Game Gear)/i\n    );\n    this.params.subbass = formatNeedsBass ? 1 : 0;\n\n    if (libgme.ccall(\n      \"gme_open_data\",\n      \"number\",\n      [\"array\", \"number\", \"number\", \"number\"],\n      [data, data.length, this.emuPtr, this.audioCtx.sampleRate]\n    ) !== 0) {\n      console.error(\"gme_open_data failed.\");\n      this.stop();\n      throw Error('Unable to load this file: ' + filepath);\n    }\n    emu = libgme.getValue(this.emuPtr, \"i32\");\n\n    this.connect();\n    this.resume();\n    if (this.playSubtune(this.subtune) !== 0) {\n      console.error(\"gme_start_track failed.\");\n      throw Error('Unable to play this subtune!');\n    }\n  }\n\n  _parseMetadata(subtune) {\n    const metadataPtr = libgme.allocate(1, \"i32\", libgme.ALLOC_NORMAL);\n    if (libgme._gme_track_info(emu, metadataPtr, subtune) !== 0)\n      console.error(\"could not load metadata\");\n    const ref = libgme.getValue(metadataPtr, \"*\");\n\n    let offset = 0;\n\n    const readInt32 = function () {\n      var value = libgme.getValue(ref + offset, \"i32\");\n      offset += 4;\n      return value;\n    };\n\n    const readString = function () {\n      const raw = [];\n      const ptr = libgme.getValue(ref + offset, 'i8*');\n      for (let i = 0; i < 255; i++) {\n        let char = libgme.getValue(ptr + i, 'i8');\n        if (char === 0) {\n          break;\n        }\n        raw.push(char & 0xFF);\n      }\n\n      offset += 4;\n      return encoding.convert(raw, {to: 'UNICODE', type: 'string'});\n    };\n\n    const meta = {};\n\n    meta.length = readInt32();\n    meta.intro_length = readInt32();\n    meta.loop_length = readInt32();\n    meta.play_length = readInt32();\n\n    offset += 4 * 12; // skip unused bytes\n\n    meta.system = readString();\n    meta.game = readString();\n    meta.title = readString() || meta.game || this.filepathMeta.title;\n    meta.artist = readString() || this.filepathMeta.artist;\n    meta.copyright = readString();\n    meta.comment = readString();\n\n    // meta.formatted = {\n    //   title: meta.game === meta.title ?\n    //     meta.title :\n    //     App.allOrNone(meta.game, ' - ') + meta.title,\n    //   subtitle: [meta.artist, meta.system].filter(x => x).join(' - ') +\n    //     App.allOrNone(' (', meta.copyright, ')'),\n    // };\n\n    return meta;\n  }\n\n  getVoiceName(index) {\n    if (emu) return libgme.UTF8ToString(libgme._gme_voice_name(emu, index));\n  }\n\n  getNumVoices() {\n    if (emu) return libgme._gme_voice_count(emu);\n  }\n\n  getNumSubtunes() {\n    if (emu) return libgme._gme_track_count(emu);\n  }\n\n  getSubtune() {\n    return this.subtune;\n  }\n\n  getPositionMs() {\n    if (emu) return libgme._gme_tell_scaled(emu);\n    return 0;\n  }\n\n  getDurationMs() {\n    if (emu) return this.metadata.play_length;\n    return 0;\n  }\n\n  getMetadata() {\n    return this.metadata;\n  }\n\n  getParameter(id) {\n    return this.params[id];\n  }\n\n  getParamDefs() {\n    return [\n      {\n        id: 'subbass',\n        label: 'Sub Bass',\n        type: 'number',\n        min: 0.0,\n        max: 2.0,\n        step: 0.01,\n        value: 1.0,\n      },\n    ];\n  }\n\n  setParameter(id, value) {\n    switch (id) {\n      case 'subbass':\n        this.params[id] = parseFloat(value);\n        break;\n      default:\n        console.warn('GMEPlayer has no parameter with id \"%s\".', id);\n    }\n  }\n\n  isPlaying() {\n    return !this.isPaused() && libgme._gme_track_ended(emu) !== 1;\n  }\n\n  setTempo(val) {\n    this.tempo = val;\n    if (emu) libgme._gme_set_tempo(emu, val);\n  }\n\n  setFadeout(startMs) {\n    if (emu) libgme._gme_set_fade(emu, startMs, 4000);\n  }\n\n  setVoices(voices) {\n    let mask = 0;\n    voices.forEach((isEnabled, i) => {\n      if (!isEnabled) {\n        mask += 1 << i;\n      }\n    });\n    if (emu) libgme._gme_mute_voices(emu, mask);\n  }\n\n  seekMs(positionMs) {\n    if (emu) {\n      this.muteAudioDuringCall(this.audioNode, () =>\n        libgme._gme_seek_scaled(emu, positionMs));\n    }\n  }\n\n  stop() {\n    this.suspend();\n    if (emu) libgme._gme_delete(emu);\n    emu = null;\n    console.debug('GMEPlayer.stop()');\n    this.onPlayerStateUpdate(true);\n  }\n}\n","/*eslint-disable*/\n\nvar CHIP_CORE = (function() {\n      var _scriptDir = '';\n\n      return (function(CHIP_CORE) {\n            CHIP_CORE = CHIP_CORE || {};\n\n            var Module = typeof CHIP_CORE !== \"undefined\" ? CHIP_CORE : {};\n            var moduleOverrides = {};\n            var key;\n            for (key in Module) {\n              if (Module.hasOwnProperty(key)) {\n                moduleOverrides[key] = Module[key]\n              }\n            }\n            var arguments_ = [];\n            var thisProgram = \"./this.program\";\n            var quit_ = function(status, toThrow) {\n              throw toThrow\n            };\n            var ENVIRONMENT_IS_WEB = true;\n            var ENVIRONMENT_IS_WORKER = false;\n            var scriptDirectory = \"\";\n            function locateFile(path) {\n              if (Module[\"locateFile\"]) {\n                return Module[\"locateFile\"](path, scriptDirectory)\n              }\n              return scriptDirectory + path\n            }\n            var read_, readAsync, readBinary, setWindowTitle;\n            if (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER) {\n              if (ENVIRONMENT_IS_WORKER) {\n                scriptDirectory = self.location.href\n              } else if (document.currentScript) {\n                scriptDirectory = document.currentScript.src\n              }\n              if (_scriptDir) {\n                scriptDirectory = _scriptDir\n              }\n              if (scriptDirectory.indexOf(\"blob:\") !== 0) {\n                scriptDirectory = scriptDirectory.substr(0, scriptDirectory.lastIndexOf(\"/\") + 1)\n              } else {\n                scriptDirectory = \"\"\n              }\n              {\n                read_ = function shell_read(url) {\n                  var xhr = new XMLHttpRequest;\n                  xhr.open(\"GET\", url, false);\n                  xhr.send(null);\n                  return xhr.responseText\n                }\n                ;\n                if (ENVIRONMENT_IS_WORKER) {\n                  readBinary = function readBinary(url) {\n                    var xhr = new XMLHttpRequest;\n                    xhr.open(\"GET\", url, false);\n                    xhr.responseType = \"arraybuffer\";\n                    xhr.send(null);\n                    return new Uint8Array(xhr.response)\n                  }\n                }\n                readAsync = function readAsync(url, onload, onerror) {\n                  var xhr = new XMLHttpRequest;\n                  xhr.open(\"GET\", url, true);\n                  xhr.responseType = \"arraybuffer\";\n                  xhr.onload = function xhr_onload() {\n                    if (xhr.status == 200 || xhr.status == 0 && xhr.response) {\n                      onload(xhr.response);\n                      return\n                    }\n                    onerror()\n                  }\n                  ;\n                  xhr.onerror = onerror;\n                  xhr.send(null)\n                }\n              }\n              setWindowTitle = function(title) {\n                document.title = title\n              }\n            } else {}\n            var out = Module[\"print\"] || console.log.bind(console);\n            var err = Module[\"printErr\"] || console.warn.bind(console);\n            for (key in moduleOverrides) {\n              if (moduleOverrides.hasOwnProperty(key)) {\n                Module[key] = moduleOverrides[key]\n              }\n            }\n            moduleOverrides = null;\n            if (Module[\"arguments\"])\n              arguments_ = Module[\"arguments\"];\n            if (Module[\"thisProgram\"])\n              thisProgram = Module[\"thisProgram\"];\n            if (Module[\"quit\"])\n              quit_ = Module[\"quit\"];\n            function dynamicAlloc(size) {\n              var ret = HEAP32[DYNAMICTOP_PTR >> 2];\n              var end = ret + size + 15 & -16;\n              if (end > _emscripten_get_heap_size()) {\n                abort()\n              }\n              HEAP32[DYNAMICTOP_PTR >> 2] = end;\n              return ret\n            }\n            function getNativeTypeSize(type) {\n              switch (type) {\n                case \"i1\":\n                case \"i8\":\n                  return 1;\n                case \"i16\":\n                  return 2;\n                case \"i32\":\n                  return 4;\n                case \"i64\":\n                  return 8;\n                case \"float\":\n                  return 4;\n                case \"double\":\n                  return 8;\n                default:\n                {\n                  if (type[type.length - 1] === \"*\") {\n                    return 4\n                  } else if (type[0] === \"i\") {\n                    var bits = Number(type.substr(1));\n                    assert(bits % 8 === 0, \"getNativeTypeSize invalid bits \" + bits + \", type \" + type);\n                    return bits / 8\n                  } else {\n                    return 0\n                  }\n                }\n              }\n            }\n            var wasmBinary;\n            if (Module[\"wasmBinary\"])\n              wasmBinary = Module[\"wasmBinary\"];\n            var noExitRuntime;\n            if (Module[\"noExitRuntime\"])\n              noExitRuntime = Module[\"noExitRuntime\"];\n            if (typeof WebAssembly !== \"object\") {\n              err(\"no native wasm support detected\")\n            }\n            function setValue(ptr, value, type, noSafe) {\n              type = type || \"i8\";\n              if (type.charAt(type.length - 1) === \"*\")\n                type = \"i32\";\n              switch (type) {\n                case \"i1\":\n                  HEAP8[ptr >> 0] = value;\n                  break;\n                case \"i8\":\n                  HEAP8[ptr >> 0] = value;\n                  break;\n                case \"i16\":\n                  HEAP16[ptr >> 1] = value;\n                  break;\n                case \"i32\":\n                  HEAP32[ptr >> 2] = value;\n                  break;\n                case \"i64\":\n                  tempI64 = [value >>> 0, (tempDouble = value,\n                      +Math_abs(tempDouble) >= 1 ? tempDouble > 0 ? (Math_min(+Math_floor(tempDouble / 4294967296), 4294967295) | 0) >>> 0 : ~~+Math_ceil((tempDouble - +(~~tempDouble >>> 0)) / 4294967296) >>> 0 : 0)],\n                      HEAP32[ptr >> 2] = tempI64[0],\n                      HEAP32[ptr + 4 >> 2] = tempI64[1];\n                  break;\n                case \"float\":\n                  HEAPF32[ptr >> 2] = value;\n                  break;\n                case \"double\":\n                  HEAPF64[ptr >> 3] = value;\n                  break;\n                default:\n                  abort(\"invalid type for setValue: \" + type)\n              }\n            }\n            function getValue(ptr, type, noSafe) {\n              type = type || \"i8\";\n              if (type.charAt(type.length - 1) === \"*\")\n                type = \"i32\";\n              switch (type) {\n                case \"i1\":\n                  return HEAP8[ptr >> 0];\n                case \"i8\":\n                  return HEAP8[ptr >> 0];\n                case \"i16\":\n                  return HEAP16[ptr >> 1];\n                case \"i32\":\n                  return HEAP32[ptr >> 2];\n                case \"i64\":\n                  return HEAP32[ptr >> 2];\n                case \"float\":\n                  return HEAPF32[ptr >> 2];\n                case \"double\":\n                  return HEAPF64[ptr >> 3];\n                default:\n                  abort(\"invalid type for getValue: \" + type)\n              }\n              return null\n            }\n            var wasmMemory;\n            var wasmTable = new WebAssembly.Table({\n              \"initial\": 915,\n              \"maximum\": 915 + 0,\n              \"element\": \"anyfunc\"\n            });\n            var ABORT = false;\n            var EXITSTATUS = 0;\n            function assert(condition, text) {\n              if (!condition) {\n                abort(\"Assertion failed: \" + text)\n              }\n            }\n            function getCFunc(ident) {\n              var func = Module[\"_\" + ident];\n              assert(func, \"Cannot call unknown function \" + ident + \", make sure it is exported\");\n              return func\n            }\n            function ccall(ident, returnType, argTypes, args, opts) {\n              var toC = {\n                \"string\": function(str) {\n                  var ret = 0;\n                  if (str !== null && str !== undefined && str !== 0) {\n                    var len = (str.length << 2) + 1;\n                    ret = stackAlloc(len);\n                    stringToUTF8(str, ret, len)\n                  }\n                  return ret\n                },\n                \"array\": function(arr) {\n                  var ret = stackAlloc(arr.length);\n                  writeArrayToMemory(arr, ret);\n                  return ret\n                }\n              };\n              function convertReturnValue(ret) {\n                if (returnType === \"string\")\n                  return UTF8ToString(ret);\n                if (returnType === \"boolean\")\n                  return Boolean(ret);\n                return ret\n              }\n              var func = getCFunc(ident);\n              var cArgs = [];\n              var stack = 0;\n              if (args) {\n                for (var i = 0; i < args.length; i++) {\n                  var converter = toC[argTypes[i]];\n                  if (converter) {\n                    if (stack === 0)\n                      stack = stackSave();\n                    cArgs[i] = converter(args[i])\n                  } else {\n                    cArgs[i] = args[i]\n                  }\n                }\n              }\n              var ret = func.apply(null, cArgs);\n              ret = convertReturnValue(ret);\n              if (stack !== 0)\n                stackRestore(stack);\n              return ret\n            }\n            var ALLOC_NORMAL = 0;\n            var ALLOC_NONE = 3;\n            function allocate(slab, types, allocator, ptr) {\n              var zeroinit, size;\n              if (typeof slab === \"number\") {\n                zeroinit = true;\n                size = slab\n              } else {\n                zeroinit = false;\n                size = slab.length\n              }\n              var singleType = typeof types === \"string\" ? types : null;\n              var ret;\n              if (allocator == ALLOC_NONE) {\n                ret = ptr\n              } else {\n                ret = [_malloc, stackAlloc, dynamicAlloc][allocator](Math.max(size, singleType ? 1 : types.length))\n              }\n              if (zeroinit) {\n                var stop;\n                ptr = ret;\n                assert((ret & 3) == 0);\n                stop = ret + (size & ~3);\n                for (; ptr < stop; ptr += 4) {\n                  HEAP32[ptr >> 2] = 0\n                }\n                stop = ret + size;\n                while (ptr < stop) {\n                  HEAP8[ptr++ >> 0] = 0\n                }\n                return ret\n              }\n              if (singleType === \"i8\") {\n                if (slab.subarray || slab.slice) {\n                  HEAPU8.set(slab, ret)\n                } else {\n                  HEAPU8.set(new Uint8Array(slab), ret)\n                }\n                return ret\n              }\n              var i = 0, type, typeSize, previousType;\n              while (i < size) {\n                var curr = slab[i];\n                type = singleType || types[i];\n                if (type === 0) {\n                  i++;\n                  continue\n                }\n                if (type == \"i64\")\n                  type = \"i32\";\n                setValue(ret + i, curr, type);\n                if (previousType !== type) {\n                  typeSize = getNativeTypeSize(type);\n                  previousType = type\n                }\n                i += typeSize\n              }\n              return ret\n            }\n            var UTF8Decoder = typeof TextDecoder !== \"undefined\" ? new TextDecoder(\"utf8\") : undefined;\n            function UTF8ArrayToString(u8Array, idx, maxBytesToRead) {\n              var endIdx = idx + maxBytesToRead;\n              var endPtr = idx;\n              while (u8Array[endPtr] && !(endPtr >= endIdx))\n                ++endPtr;\n              if (endPtr - idx > 16 && u8Array.subarray && UTF8Decoder) {\n                return UTF8Decoder.decode(u8Array.subarray(idx, endPtr))\n              } else {\n                var str = \"\";\n                while (idx < endPtr) {\n                  var u0 = u8Array[idx++];\n                  if (!(u0 & 128)) {\n                    str += String.fromCharCode(u0);\n                    continue\n                  }\n                  var u1 = u8Array[idx++] & 63;\n                  if ((u0 & 224) == 192) {\n                    str += String.fromCharCode((u0 & 31) << 6 | u1);\n                    continue\n                  }\n                  var u2 = u8Array[idx++] & 63;\n                  if ((u0 & 240) == 224) {\n                    u0 = (u0 & 15) << 12 | u1 << 6 | u2\n                  } else {\n                    u0 = (u0 & 7) << 18 | u1 << 12 | u2 << 6 | u8Array[idx++] & 63\n                  }\n                  if (u0 < 65536) {\n                    str += String.fromCharCode(u0)\n                  } else {\n                    var ch = u0 - 65536;\n                    str += String.fromCharCode(55296 | ch >> 10, 56320 | ch & 1023)\n                  }\n                }\n              }\n              return str\n            }\n            function UTF8ToString(ptr, maxBytesToRead) {\n              return ptr ? UTF8ArrayToString(HEAPU8, ptr, maxBytesToRead) : \"\"\n            }\n            function stringToUTF8Array(str, outU8Array, outIdx, maxBytesToWrite) {\n              if (!(maxBytesToWrite > 0))\n                return 0;\n              var startIdx = outIdx;\n              var endIdx = outIdx + maxBytesToWrite - 1;\n              for (var i = 0; i < str.length; ++i) {\n                var u = str.charCodeAt(i);\n                if (u >= 55296 && u <= 57343) {\n                  var u1 = str.charCodeAt(++i);\n                  u = 65536 + ((u & 1023) << 10) | u1 & 1023\n                }\n                if (u <= 127) {\n                  if (outIdx >= endIdx)\n                    break;\n                  outU8Array[outIdx++] = u\n                } else if (u <= 2047) {\n                  if (outIdx + 1 >= endIdx)\n                    break;\n                  outU8Array[outIdx++] = 192 | u >> 6;\n                  outU8Array[outIdx++] = 128 | u & 63\n                } else if (u <= 65535) {\n                  if (outIdx + 2 >= endIdx)\n                    break;\n                  outU8Array[outIdx++] = 224 | u >> 12;\n                  outU8Array[outIdx++] = 128 | u >> 6 & 63;\n                  outU8Array[outIdx++] = 128 | u & 63\n                } else {\n                  if (outIdx + 3 >= endIdx)\n                    break;\n                  outU8Array[outIdx++] = 240 | u >> 18;\n                  outU8Array[outIdx++] = 128 | u >> 12 & 63;\n                  outU8Array[outIdx++] = 128 | u >> 6 & 63;\n                  outU8Array[outIdx++] = 128 | u & 63\n                }\n              }\n              outU8Array[outIdx] = 0;\n              return outIdx - startIdx\n            }\n            function stringToUTF8(str, outPtr, maxBytesToWrite) {\n              return stringToUTF8Array(str, HEAPU8, outPtr, maxBytesToWrite)\n            }\n            function lengthBytesUTF8(str) {\n              var len = 0;\n              for (var i = 0; i < str.length; ++i) {\n                var u = str.charCodeAt(i);\n                if (u >= 55296 && u <= 57343)\n                  u = 65536 + ((u & 1023) << 10) | str.charCodeAt(++i) & 1023;\n                if (u <= 127)\n                  ++len;\n                else if (u <= 2047)\n                  len += 2;\n                else if (u <= 65535)\n                  len += 3;\n                else\n                  len += 4\n              }\n              return len\n            }\n            var UTF16Decoder = typeof TextDecoder !== \"undefined\" ? new TextDecoder(\"utf-16le\") : undefined;\n            function writeArrayToMemory(array, buffer) {\n              HEAP8.set(array, buffer)\n            }\n            function writeAsciiToMemory(str, buffer, dontAddNull) {\n              for (var i = 0; i < str.length; ++i) {\n                HEAP8[buffer++ >> 0] = str.charCodeAt(i)\n              }\n              if (!dontAddNull)\n                HEAP8[buffer >> 0] = 0\n            }\n            var WASM_PAGE_SIZE = 65536;\n            function alignUp(x, multiple) {\n              if (x % multiple > 0) {\n                x += multiple - x % multiple\n              }\n              return x\n            }\n            var buffer, HEAP8, HEAPU8, HEAP16, HEAPU16, HEAP32, HEAPU32, HEAPF32, HEAPF64;\n            function updateGlobalBufferAndViews(buf) {\n              buffer = buf;\n              Module[\"HEAP8\"] = HEAP8 = new Int8Array(buf);\n              Module[\"HEAP16\"] = HEAP16 = new Int16Array(buf);\n              Module[\"HEAP32\"] = HEAP32 = new Int32Array(buf);\n              Module[\"HEAPU8\"] = HEAPU8 = new Uint8Array(buf);\n              Module[\"HEAPU16\"] = HEAPU16 = new Uint16Array(buf);\n              Module[\"HEAPU32\"] = HEAPU32 = new Uint32Array(buf);\n              Module[\"HEAPF32\"] = HEAPF32 = new Float32Array(buf);\n              Module[\"HEAPF64\"] = HEAPF64 = new Float64Array(buf)\n            }\n            var DYNAMIC_BASE = 10925248\n                , DYNAMICTOP_PTR = 5682208;\n            var INITIAL_INITIAL_MEMORY = Module[\"INITIAL_MEMORY\"] || 16777216;\n            if (Module[\"wasmMemory\"]) {\n              wasmMemory = Module[\"wasmMemory\"]\n            } else {\n              wasmMemory = new WebAssembly.Memory({\n                \"initial\": INITIAL_INITIAL_MEMORY / WASM_PAGE_SIZE\n              })\n            }\n            if (wasmMemory) {\n              buffer = wasmMemory.buffer\n            }\n            INITIAL_INITIAL_MEMORY = buffer.byteLength;\n            updateGlobalBufferAndViews(buffer);\n            HEAP32[DYNAMICTOP_PTR >> 2] = DYNAMIC_BASE;\n            function callRuntimeCallbacks(callbacks) {\n              while (callbacks.length > 0) {\n                var callback = callbacks.shift();\n                if (typeof callback == \"function\") {\n                  callback();\n                  continue\n                }\n                var func = callback.func;\n                if (typeof func === \"number\") {\n                  if (callback.arg === undefined) {\n                    Module[\"dynCall_v\"](func)\n                  } else {\n                    Module[\"dynCall_vi\"](func, callback.arg)\n                  }\n                } else {\n                  func(callback.arg === undefined ? null : callback.arg)\n                }\n              }\n            }\n            var __ATPRERUN__ = [];\n            var __ATINIT__ = [];\n            var __ATMAIN__ = [];\n            var __ATPOSTRUN__ = [];\n            var runtimeInitialized = false;\n            function preRun() {\n              if (Module[\"preRun\"]) {\n                if (typeof Module[\"preRun\"] == \"function\")\n                  Module[\"preRun\"] = [Module[\"preRun\"]];\n                while (Module[\"preRun\"].length) {\n                  addOnPreRun(Module[\"preRun\"].shift())\n                }\n              }\n              callRuntimeCallbacks(__ATPRERUN__)\n            }\n            function initRuntime() {\n              runtimeInitialized = true;\n              if (!Module[\"noFSInit\"] && !FS.init.initialized)\n                FS.init();\n              TTY.init();\n              callRuntimeCallbacks(__ATINIT__)\n            }\n            function preMain() {\n              FS.ignorePermissions = false;\n              callRuntimeCallbacks(__ATMAIN__)\n            }\n            function postRun() {\n              if (Module[\"postRun\"]) {\n                if (typeof Module[\"postRun\"] == \"function\")\n                  Module[\"postRun\"] = [Module[\"postRun\"]];\n                while (Module[\"postRun\"].length) {\n                  addOnPostRun(Module[\"postRun\"].shift())\n                }\n              }\n              callRuntimeCallbacks(__ATPOSTRUN__)\n            }\n            function addOnPreRun(cb) {\n              __ATPRERUN__.unshift(cb)\n            }\n            function addOnPostRun(cb) {\n              __ATPOSTRUN__.unshift(cb)\n            }\n            var Math_abs = Math.abs;\n            var Math_ceil = Math.ceil;\n            var Math_floor = Math.floor;\n            var Math_min = Math.min;\n            var runDependencies = 0;\n            var runDependencyWatcher = null;\n            var dependenciesFulfilled = null;\n            function getUniqueRunDependency(id) {\n              return id\n            }\n            function addRunDependency(id) {\n              runDependencies++;\n              if (Module[\"monitorRunDependencies\"]) {\n                Module[\"monitorRunDependencies\"](runDependencies)\n              }\n            }\n            function removeRunDependency(id) {\n              runDependencies--;\n              if (Module[\"monitorRunDependencies\"]) {\n                Module[\"monitorRunDependencies\"](runDependencies)\n              }\n              if (runDependencies == 0) {\n                if (runDependencyWatcher !== null) {\n                  clearInterval(runDependencyWatcher);\n                  runDependencyWatcher = null\n                }\n                if (dependenciesFulfilled) {\n                  var callback = dependenciesFulfilled;\n                  dependenciesFulfilled = null;\n                  callback()\n                }\n              }\n            }\n            Module[\"preloadedImages\"] = {};\n            Module[\"preloadedAudios\"] = {};\n            function abort(what) {\n              if (Module[\"onAbort\"]) {\n                Module[\"onAbort\"](what)\n              }\n              what += \"\";\n              out(what);\n              err(what);\n              ABORT = true;\n              EXITSTATUS = 1;\n              what = \"abort(\" + what + \"). Build with -s ASSERTIONS=1 for more info.\";\n              throw new WebAssembly.RuntimeError(what)\n            }\n            var dataURIPrefix = \"data:application/octet-stream;base64,\";\n            function isDataURI(filename) {\n              return String.prototype.startsWith ? filename.startsWith(dataURIPrefix) : filename.indexOf(dataURIPrefix) === 0\n            }\n            var wasmBinaryFile = \"chip-core.wasm\";\n            if (!isDataURI(wasmBinaryFile)) {\n              wasmBinaryFile = locateFile(wasmBinaryFile)\n            }\n            function getBinary() {\n              try {\n                if (wasmBinary) {\n                  return new Uint8Array(wasmBinary)\n                }\n                if (readBinary) {\n                  return readBinary(wasmBinaryFile)\n                } else {\n                  throw \"both async and sync fetching of the wasm failed\"\n                }\n              } catch (err) {\n                abort(err)\n              }\n            }\n            function getBinaryPromise() {\n              if (!wasmBinary && (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER) && typeof fetch === \"function\") {\n                return fetch(wasmBinaryFile, {\n                  credentials: \"same-origin\"\n                }).then(function(response) {\n                  if (!response[\"ok\"]) {\n                    throw \"failed to load wasm binary file at '\" + wasmBinaryFile + \"'\"\n                  }\n                  return response[\"arrayBuffer\"]()\n                }).catch(function() {\n                  return getBinary()\n                })\n              }\n              return new Promise(function(resolve, reject) {\n                    resolve(getBinary())\n                  }\n              )\n            }\n            function createWasm() {\n              var info = {\n                \"a\": asmLibraryArg\n              };\n              function receiveInstance(instance, module) {\n                var exports = instance.exports;\n                Module[\"asm\"] = exports;\n                removeRunDependency(\"wasm-instantiate\")\n              }\n              addRunDependency(\"wasm-instantiate\");\n              function receiveInstantiatedSource(output) {\n                receiveInstance(output[\"instance\"])\n              }\n              function instantiateArrayBuffer(receiver) {\n                return getBinaryPromise().then(function(binary) {\n                  return WebAssembly.instantiate(binary, info)\n                }).then(receiver, function(reason) {\n                  err(\"failed to asynchronously prepare wasm: \" + reason);\n                  abort(reason)\n                })\n              }\n              function instantiateAsync() {\n                if (!wasmBinary && typeof WebAssembly.instantiateStreaming === \"function\" && !isDataURI(wasmBinaryFile) && typeof fetch === \"function\") {\n                  fetch(wasmBinaryFile, {\n                    credentials: \"same-origin\"\n                  }).then(function(response) {\n                    var result = WebAssembly.instantiateStreaming(response, info);\n                    return result.then(receiveInstantiatedSource, function(reason) {\n                      err(\"wasm streaming compile failed: \" + reason);\n                      err(\"falling back to ArrayBuffer instantiation\");\n                      instantiateArrayBuffer(receiveInstantiatedSource)\n                    })\n                  })\n                } else {\n                  return instantiateArrayBuffer(receiveInstantiatedSource)\n                }\n              }\n              if (Module[\"instantiateWasm\"]) {\n                try {\n                  var exports = Module[\"instantiateWasm\"](info, receiveInstance);\n                  return exports\n                } catch (e) {\n                  err(\"Module.instantiateWasm callback failed with error: \" + e);\n                  return false\n                }\n              }\n              instantiateAsync();\n              return {}\n            }\n            var tempDouble;\n            var tempI64;\n            var ASM_CONSTS = {\n              161276: function($0) {\n                console.log(\"Error during V2M conversion.\", $0)\n              },\n              161441: function($0) {\n                console.log(\"Tiny MIDI Player loaded %d bytes.\", $0)\n              },\n              161499: function($0) {\n                console.log(\"First note appears at %d ms.\", $0)\n              }\n            };\n            function _emscripten_asm_const_iii(code, sigPtr, argbuf) {\n              var args = readAsmConstArgs(sigPtr, argbuf);\n              return ASM_CONSTS[code].apply(null, args)\n            }\n            __ATINIT__.push({\n              func: function() {\n                ___wasm_call_ctors()\n              }\n            });\n            function demangle(func) {\n              return func\n            }\n            function demangleAll(text) {\n              var regex = /\\b_Z[\\w\\d_]+/g;\n              return text.replace(regex, function(x) {\n                var y = demangle(x);\n                return x === y ? x : y + \" [\" + x + \"]\"\n              })\n            }\n            function jsStackTrace() {\n              var err = new Error;\n              if (!err.stack) {\n                try {\n                  throw new Error\n                } catch (e) {\n                  err = e\n                }\n                if (!err.stack) {\n                  return \"(no stack trace available)\"\n                }\n              }\n              return err.stack.toString()\n            }\n            function stackTrace() {\n              var js = jsStackTrace();\n              if (Module[\"extraStackTrace\"])\n                js += \"\\n\" + Module[\"extraStackTrace\"]();\n              return demangleAll(js)\n            }\n            function ___assert_fail(condition, filename, line, func) {\n              abort(\"Assertion failed: \" + UTF8ToString(condition) + \", at: \" + [filename ? UTF8ToString(filename) : \"unknown filename\", line, func ? UTF8ToString(func) : \"unknown function\"])\n            }\n            function ___cxa_allocate_exception(size) {\n              return _malloc(size)\n            }\n            var ___exception_infos = {};\n            var ___exception_last = 0;\n            function __ZSt18uncaught_exceptionv() {\n              return __ZSt18uncaught_exceptionv.uncaught_exceptions > 0\n            }\n            function ___cxa_throw(ptr, type, destructor) {\n              ___exception_infos[ptr] = {\n                ptr: ptr,\n                adjusted: [ptr],\n                type: type,\n                destructor: destructor,\n                refcount: 0,\n                caught: false,\n                rethrown: false\n              };\n              ___exception_last = ptr;\n              if (!(\"uncaught_exception\"in __ZSt18uncaught_exceptionv)) {\n                __ZSt18uncaught_exceptionv.uncaught_exceptions = 1\n              } else {\n                __ZSt18uncaught_exceptionv.uncaught_exceptions++\n              }\n              throw ptr\n            }\n            function ___setErrNo(value) {\n              if (Module[\"___errno_location\"])\n                HEAP32[Module[\"___errno_location\"]() >> 2] = value;\n              return value\n            }\n            function ___map_file(pathname, size) {\n              ___setErrNo(63);\n              return -1\n            }\n            var PATH = {\n              splitPath: function(filename) {\n                var splitPathRe = /^(\\/?|)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?|)(\\.[^.\\/]*|))(?:[\\/]*)$/;\n                return splitPathRe.exec(filename).slice(1)\n              },\n              normalizeArray: function(parts, allowAboveRoot) {\n                var up = 0;\n                for (var i = parts.length - 1; i >= 0; i--) {\n                  var last = parts[i];\n                  if (last === \".\") {\n                    parts.splice(i, 1)\n                  } else if (last === \"..\") {\n                    parts.splice(i, 1);\n                    up++\n                  } else if (up) {\n                    parts.splice(i, 1);\n                    up--\n                  }\n                }\n                if (allowAboveRoot) {\n                  for (; up; up--) {\n                    parts.unshift(\"..\")\n                  }\n                }\n                return parts\n              },\n              normalize: function(path) {\n                var isAbsolute = path.charAt(0) === \"/\"\n                    , trailingSlash = path.substr(-1) === \"/\";\n                path = PATH.normalizeArray(path.split(\"/\").filter(function(p) {\n                  return !!p\n                }), !isAbsolute).join(\"/\");\n                if (!path && !isAbsolute) {\n                  path = \".\"\n                }\n                if (path && trailingSlash) {\n                  path += \"/\"\n                }\n                return (isAbsolute ? \"/\" : \"\") + path\n              },\n              dirname: function(path) {\n                var result = PATH.splitPath(path)\n                    , root = result[0]\n                    , dir = result[1];\n                if (!root && !dir) {\n                  return \".\"\n                }\n                if (dir) {\n                  dir = dir.substr(0, dir.length - 1)\n                }\n                return root + dir\n              },\n              basename: function(path) {\n                if (path === \"/\")\n                  return \"/\";\n                var lastSlash = path.lastIndexOf(\"/\");\n                if (lastSlash === -1)\n                  return path;\n                return path.substr(lastSlash + 1)\n              },\n              extname: function(path) {\n                return PATH.splitPath(path)[3]\n              },\n              join: function() {\n                var paths = Array.prototype.slice.call(arguments, 0);\n                return PATH.normalize(paths.join(\"/\"))\n              },\n              join2: function(l, r) {\n                return PATH.normalize(l + \"/\" + r)\n              }\n            };\n            var PATH_FS = {\n              resolve: function() {\n                var resolvedPath = \"\"\n                    , resolvedAbsolute = false;\n                for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n                  var path = i >= 0 ? arguments[i] : FS.cwd();\n                  if (typeof path !== \"string\") {\n                    throw new TypeError(\"Arguments to path.resolve must be strings\")\n                  } else if (!path) {\n                    return \"\"\n                  }\n                  resolvedPath = path + \"/\" + resolvedPath;\n                  resolvedAbsolute = path.charAt(0) === \"/\"\n                }\n                resolvedPath = PATH.normalizeArray(resolvedPath.split(\"/\").filter(function(p) {\n                  return !!p\n                }), !resolvedAbsolute).join(\"/\");\n                return (resolvedAbsolute ? \"/\" : \"\") + resolvedPath || \".\"\n              },\n              relative: function(from, to) {\n                from = PATH_FS.resolve(from).substr(1);\n                to = PATH_FS.resolve(to).substr(1);\n                function trim(arr) {\n                  var start = 0;\n                  for (; start < arr.length; start++) {\n                    if (arr[start] !== \"\")\n                      break\n                  }\n                  var end = arr.length - 1;\n                  for (; end >= 0; end--) {\n                    if (arr[end] !== \"\")\n                      break\n                  }\n                  if (start > end)\n                    return [];\n                  return arr.slice(start, end - start + 1)\n                }\n                var fromParts = trim(from.split(\"/\"));\n                var toParts = trim(to.split(\"/\"));\n                var length = Math.min(fromParts.length, toParts.length);\n                var samePartsLength = length;\n                for (var i = 0; i < length; i++) {\n                  if (fromParts[i] !== toParts[i]) {\n                    samePartsLength = i;\n                    break\n                  }\n                }\n                var outputParts = [];\n                for (var i = samePartsLength; i < fromParts.length; i++) {\n                  outputParts.push(\"..\")\n                }\n                outputParts = outputParts.concat(toParts.slice(samePartsLength));\n                return outputParts.join(\"/\")\n              }\n            };\n            var TTY = {\n              ttys: [],\n              init: function() {},\n              shutdown: function() {},\n              register: function(dev, ops) {\n                TTY.ttys[dev] = {\n                  input: [],\n                  output: [],\n                  ops: ops\n                };\n                FS.registerDevice(dev, TTY.stream_ops)\n              },\n              stream_ops: {\n                open: function(stream) {\n                  var tty = TTY.ttys[stream.node.rdev];\n                  if (!tty) {\n                    throw new FS.ErrnoError(43)\n                  }\n                  stream.tty = tty;\n                  stream.seekable = false\n                },\n                close: function(stream) {\n                  stream.tty.ops.flush(stream.tty)\n                },\n                flush: function(stream) {\n                  stream.tty.ops.flush(stream.tty)\n                },\n                read: function(stream, buffer, offset, length, pos) {\n                  if (!stream.tty || !stream.tty.ops.get_char) {\n                    throw new FS.ErrnoError(60)\n                  }\n                  var bytesRead = 0;\n                  for (var i = 0; i < length; i++) {\n                    var result;\n                    try {\n                      result = stream.tty.ops.get_char(stream.tty)\n                    } catch (e) {\n                      throw new FS.ErrnoError(29)\n                    }\n                    if (result === undefined && bytesRead === 0) {\n                      throw new FS.ErrnoError(6)\n                    }\n                    if (result === null || result === undefined)\n                      break;\n                    bytesRead++;\n                    buffer[offset + i] = result\n                  }\n                  if (bytesRead) {\n                    stream.node.timestamp = Date.now()\n                  }\n                  return bytesRead\n                },\n                write: function(stream, buffer, offset, length, pos) {\n                  if (!stream.tty || !stream.tty.ops.put_char) {\n                    throw new FS.ErrnoError(60)\n                  }\n                  try {\n                    for (var i = 0; i < length; i++) {\n                      stream.tty.ops.put_char(stream.tty, buffer[offset + i])\n                    }\n                  } catch (e) {\n                    throw new FS.ErrnoError(29)\n                  }\n                  if (length) {\n                    stream.node.timestamp = Date.now()\n                  }\n                  return i\n                }\n              },\n              default_tty_ops: {\n                get_char: function(tty) {\n                  if (!tty.input.length) {\n                    var result = null;\n                    if (typeof window != \"undefined\" && typeof window.prompt == \"function\") {\n                      result = window.prompt(\"Input: \");\n                      if (result !== null) {\n                        result += \"\\n\"\n                      }\n                    } else if (typeof readline == \"function\") {\n                      result = readline();\n                      if (result !== null) {\n                        result += \"\\n\"\n                      }\n                    }\n                    if (!result) {\n                      return null\n                    }\n                    tty.input = intArrayFromString(result, true)\n                  }\n                  return tty.input.shift()\n                },\n                put_char: function(tty, val) {\n                  if (val === null || val === 10) {\n                    out(UTF8ArrayToString(tty.output, 0));\n                    tty.output = []\n                  } else {\n                    if (val != 0)\n                      tty.output.push(val)\n                  }\n                },\n                flush: function(tty) {\n                  if (tty.output && tty.output.length > 0) {\n                    out(UTF8ArrayToString(tty.output, 0));\n                    tty.output = []\n                  }\n                }\n              },\n              default_tty1_ops: {\n                put_char: function(tty, val) {\n                  if (val === null || val === 10) {\n                    err(UTF8ArrayToString(tty.output, 0));\n                    tty.output = []\n                  } else {\n                    if (val != 0)\n                      tty.output.push(val)\n                  }\n                },\n                flush: function(tty) {\n                  if (tty.output && tty.output.length > 0) {\n                    err(UTF8ArrayToString(tty.output, 0));\n                    tty.output = []\n                  }\n                }\n              }\n            };\n            var MEMFS = {\n              ops_table: null,\n              mount: function(mount) {\n                return MEMFS.createNode(null, \"/\", 16384 | 511, 0)\n              },\n              createNode: function(parent, name, mode, dev) {\n                if (FS.isBlkdev(mode) || FS.isFIFO(mode)) {\n                  throw new FS.ErrnoError(63)\n                }\n                if (!MEMFS.ops_table) {\n                  MEMFS.ops_table = {\n                    dir: {\n                      node: {\n                        getattr: MEMFS.node_ops.getattr,\n                        setattr: MEMFS.node_ops.setattr,\n                        lookup: MEMFS.node_ops.lookup,\n                        mknod: MEMFS.node_ops.mknod,\n                        rename: MEMFS.node_ops.rename,\n                        unlink: MEMFS.node_ops.unlink,\n                        rmdir: MEMFS.node_ops.rmdir,\n                        readdir: MEMFS.node_ops.readdir,\n                        symlink: MEMFS.node_ops.symlink\n                      },\n                      stream: {\n                        llseek: MEMFS.stream_ops.llseek\n                      }\n                    },\n                    file: {\n                      node: {\n                        getattr: MEMFS.node_ops.getattr,\n                        setattr: MEMFS.node_ops.setattr\n                      },\n                      stream: {\n                        llseek: MEMFS.stream_ops.llseek,\n                        read: MEMFS.stream_ops.read,\n                        write: MEMFS.stream_ops.write,\n                        allocate: MEMFS.stream_ops.allocate,\n                        mmap: MEMFS.stream_ops.mmap,\n                        msync: MEMFS.stream_ops.msync\n                      }\n                    },\n                    link: {\n                      node: {\n                        getattr: MEMFS.node_ops.getattr,\n                        setattr: MEMFS.node_ops.setattr,\n                        readlink: MEMFS.node_ops.readlink\n                      },\n                      stream: {}\n                    },\n                    chrdev: {\n                      node: {\n                        getattr: MEMFS.node_ops.getattr,\n                        setattr: MEMFS.node_ops.setattr\n                      },\n                      stream: FS.chrdev_stream_ops\n                    }\n                  }\n                }\n                var node = FS.createNode(parent, name, mode, dev);\n                if (FS.isDir(node.mode)) {\n                  node.node_ops = MEMFS.ops_table.dir.node;\n                  node.stream_ops = MEMFS.ops_table.dir.stream;\n                  node.contents = {}\n                } else if (FS.isFile(node.mode)) {\n                  node.node_ops = MEMFS.ops_table.file.node;\n                  node.stream_ops = MEMFS.ops_table.file.stream;\n                  node.usedBytes = 0;\n                  node.contents = null\n                } else if (FS.isLink(node.mode)) {\n                  node.node_ops = MEMFS.ops_table.link.node;\n                  node.stream_ops = MEMFS.ops_table.link.stream\n                } else if (FS.isChrdev(node.mode)) {\n                  node.node_ops = MEMFS.ops_table.chrdev.node;\n                  node.stream_ops = MEMFS.ops_table.chrdev.stream\n                }\n                node.timestamp = Date.now();\n                if (parent) {\n                  parent.contents[name] = node\n                }\n                return node\n              },\n              getFileDataAsRegularArray: function(node) {\n                if (node.contents && node.contents.subarray) {\n                  var arr = [];\n                  for (var i = 0; i < node.usedBytes; ++i)\n                    arr.push(node.contents[i]);\n                  return arr\n                }\n                return node.contents\n              },\n              getFileDataAsTypedArray: function(node) {\n                if (!node.contents)\n                  return new Uint8Array(0);\n                if (node.contents.subarray)\n                  return node.contents.subarray(0, node.usedBytes);\n                return new Uint8Array(node.contents)\n              },\n              expandFileStorage: function(node, newCapacity) {\n                var prevCapacity = node.contents ? node.contents.length : 0;\n                if (prevCapacity >= newCapacity)\n                  return;\n                var CAPACITY_DOUBLING_MAX = 1024 * 1024;\n                newCapacity = Math.max(newCapacity, prevCapacity * (prevCapacity < CAPACITY_DOUBLING_MAX ? 2 : 1.125) | 0);\n                if (prevCapacity != 0)\n                  newCapacity = Math.max(newCapacity, 256);\n                var oldContents = node.contents;\n                node.contents = new Uint8Array(newCapacity);\n                if (node.usedBytes > 0)\n                  node.contents.set(oldContents.subarray(0, node.usedBytes), 0);\n                return\n              },\n              resizeFileStorage: function(node, newSize) {\n                if (node.usedBytes == newSize)\n                  return;\n                if (newSize == 0) {\n                  node.contents = null;\n                  node.usedBytes = 0;\n                  return\n                }\n                if (!node.contents || node.contents.subarray) {\n                  var oldContents = node.contents;\n                  node.contents = new Uint8Array(newSize);\n                  if (oldContents) {\n                    node.contents.set(oldContents.subarray(0, Math.min(newSize, node.usedBytes)))\n                  }\n                  node.usedBytes = newSize;\n                  return\n                }\n                if (!node.contents)\n                  node.contents = [];\n                if (node.contents.length > newSize)\n                  node.contents.length = newSize;\n                else\n                  while (node.contents.length < newSize)\n                    node.contents.push(0);\n                node.usedBytes = newSize\n              },\n              node_ops: {\n                getattr: function(node) {\n                  var attr = {};\n                  attr.dev = FS.isChrdev(node.mode) ? node.id : 1;\n                  attr.ino = node.id;\n                  attr.mode = node.mode;\n                  attr.nlink = 1;\n                  attr.uid = 0;\n                  attr.gid = 0;\n                  attr.rdev = node.rdev;\n                  if (FS.isDir(node.mode)) {\n                    attr.size = 4096\n                  } else if (FS.isFile(node.mode)) {\n                    attr.size = node.usedBytes\n                  } else if (FS.isLink(node.mode)) {\n                    attr.size = node.link.length\n                  } else {\n                    attr.size = 0\n                  }\n                  attr.atime = new Date(node.timestamp);\n                  attr.mtime = new Date(node.timestamp);\n                  attr.ctime = new Date(node.timestamp);\n                  attr.blksize = 4096;\n                  attr.blocks = Math.ceil(attr.size / attr.blksize);\n                  return attr\n                },\n                setattr: function(node, attr) {\n                  if (attr.mode !== undefined) {\n                    node.mode = attr.mode\n                  }\n                  if (attr.timestamp !== undefined) {\n                    node.timestamp = attr.timestamp\n                  }\n                  if (attr.size !== undefined) {\n                    MEMFS.resizeFileStorage(node, attr.size)\n                  }\n                },\n                lookup: function(parent, name) {\n                  throw FS.genericErrors[44]\n                },\n                mknod: function(parent, name, mode, dev) {\n                  return MEMFS.createNode(parent, name, mode, dev)\n                },\n                rename: function(old_node, new_dir, new_name) {\n                  if (FS.isDir(old_node.mode)) {\n                    var new_node;\n                    try {\n                      new_node = FS.lookupNode(new_dir, new_name)\n                    } catch (e) {}\n                    if (new_node) {\n                      for (var i in new_node.contents) {\n                        throw new FS.ErrnoError(55)\n                      }\n                    }\n                  }\n                  delete old_node.parent.contents[old_node.name];\n                  old_node.name = new_name;\n                  new_dir.contents[new_name] = old_node;\n                  old_node.parent = new_dir\n                },\n                unlink: function(parent, name) {\n                  delete parent.contents[name]\n                },\n                rmdir: function(parent, name) {\n                  var node = FS.lookupNode(parent, name);\n                  for (var i in node.contents) {\n                    throw new FS.ErrnoError(55)\n                  }\n                  delete parent.contents[name]\n                },\n                readdir: function(node) {\n                  var entries = [\".\", \"..\"];\n                  for (var key in node.contents) {\n                    if (!node.contents.hasOwnProperty(key)) {\n                      continue\n                    }\n                    entries.push(key)\n                  }\n                  return entries\n                },\n                symlink: function(parent, newname, oldpath) {\n                  var node = MEMFS.createNode(parent, newname, 511 | 40960, 0);\n                  node.link = oldpath;\n                  return node\n                },\n                readlink: function(node) {\n                  if (!FS.isLink(node.mode)) {\n                    throw new FS.ErrnoError(28)\n                  }\n                  return node.link\n                }\n              },\n              stream_ops: {\n                read: function(stream, buffer, offset, length, position) {\n                  var contents = stream.node.contents;\n                  if (position >= stream.node.usedBytes)\n                    return 0;\n                  var size = Math.min(stream.node.usedBytes - position, length);\n                  if (size > 8 && contents.subarray) {\n                    buffer.set(contents.subarray(position, position + size), offset)\n                  } else {\n                    for (var i = 0; i < size; i++)\n                      buffer[offset + i] = contents[position + i]\n                  }\n                  return size\n                },\n                write: function(stream, buffer, offset, length, position, canOwn) {\n                  if (buffer.buffer === HEAP8.buffer) {\n                    canOwn = false\n                  }\n                  if (!length)\n                    return 0;\n                  var node = stream.node;\n                  node.timestamp = Date.now();\n                  if (buffer.subarray && (!node.contents || node.contents.subarray)) {\n                    if (canOwn) {\n                      node.contents = buffer.subarray(offset, offset + length);\n                      node.usedBytes = length;\n                      return length\n                    } else if (node.usedBytes === 0 && position === 0) {\n                      node.contents = buffer.slice(offset, offset + length);\n                      node.usedBytes = length;\n                      return length\n                    } else if (position + length <= node.usedBytes) {\n                      node.contents.set(buffer.subarray(offset, offset + length), position);\n                      return length\n                    }\n                  }\n                  MEMFS.expandFileStorage(node, position + length);\n                  if (node.contents.subarray && buffer.subarray)\n                    node.contents.set(buffer.subarray(offset, offset + length), position);\n                  else {\n                    for (var i = 0; i < length; i++) {\n                      node.contents[position + i] = buffer[offset + i]\n                    }\n                  }\n                  node.usedBytes = Math.max(node.usedBytes, position + length);\n                  return length\n                },\n                llseek: function(stream, offset, whence) {\n                  var position = offset;\n                  if (whence === 1) {\n                    position += stream.position\n                  } else if (whence === 2) {\n                    if (FS.isFile(stream.node.mode)) {\n                      position += stream.node.usedBytes\n                    }\n                  }\n                  if (position < 0) {\n                    throw new FS.ErrnoError(28)\n                  }\n                  return position\n                },\n                allocate: function(stream, offset, length) {\n                  MEMFS.expandFileStorage(stream.node, offset + length);\n                  stream.node.usedBytes = Math.max(stream.node.usedBytes, offset + length)\n                },\n                mmap: function(stream, buffer, offset, length, position, prot, flags) {\n                  if (!FS.isFile(stream.node.mode)) {\n                    throw new FS.ErrnoError(43)\n                  }\n                  var ptr;\n                  var allocated;\n                  var contents = stream.node.contents;\n                  if (!(flags & 2) && contents.buffer === buffer.buffer) {\n                    allocated = false;\n                    ptr = contents.byteOffset\n                  } else {\n                    if (position > 0 || position + length < contents.length) {\n                      if (contents.subarray) {\n                        contents = contents.subarray(position, position + length)\n                      } else {\n                        contents = Array.prototype.slice.call(contents, position, position + length)\n                      }\n                    }\n                    allocated = true;\n                    var fromHeap = buffer.buffer == HEAP8.buffer;\n                    ptr = _malloc(length);\n                    if (!ptr) {\n                      throw new FS.ErrnoError(48)\n                    }\n                    (fromHeap ? HEAP8 : buffer).set(contents, ptr)\n                  }\n                  return {\n                    ptr: ptr,\n                    allocated: allocated\n                  }\n                },\n                msync: function(stream, buffer, offset, length, mmapFlags) {\n                  if (!FS.isFile(stream.node.mode)) {\n                    throw new FS.ErrnoError(43)\n                  }\n                  if (mmapFlags & 2) {\n                    return 0\n                  }\n                  var bytesWritten = MEMFS.stream_ops.write(stream, buffer, 0, length, offset, false);\n                  return 0\n                }\n              }\n            };\n            var FS = {\n              root: null,\n              mounts: [],\n              devices: {},\n              streams: [],\n              nextInode: 1,\n              nameTable: null,\n              currentPath: \"/\",\n              initialized: false,\n              ignorePermissions: true,\n              trackingDelegate: {},\n              tracking: {\n                openFlags: {\n                  READ: 1,\n                  WRITE: 2\n                }\n              },\n              ErrnoError: null,\n              genericErrors: {},\n              filesystems: null,\n              syncFSRequests: 0,\n              handleFSError: function(e) {\n                if (!(e instanceof FS.ErrnoError))\n                  throw e + \" : \" + stackTrace();\n                return ___setErrNo(e.errno)\n              },\n              lookupPath: function(path, opts) {\n                path = PATH_FS.resolve(FS.cwd(), path);\n                opts = opts || {};\n                if (!path)\n                  return {\n                    path: \"\",\n                    node: null\n                  };\n                var defaults = {\n                  follow_mount: true,\n                  recurse_count: 0\n                };\n                for (var key in defaults) {\n                  if (opts[key] === undefined) {\n                    opts[key] = defaults[key]\n                  }\n                }\n                if (opts.recurse_count > 8) {\n                  throw new FS.ErrnoError(32)\n                }\n                var parts = PATH.normalizeArray(path.split(\"/\").filter(function(p) {\n                  return !!p\n                }), false);\n                var current = FS.root;\n                var current_path = \"/\";\n                for (var i = 0; i < parts.length; i++) {\n                  var islast = i === parts.length - 1;\n                  if (islast && opts.parent) {\n                    break\n                  }\n                  current = FS.lookupNode(current, parts[i]);\n                  current_path = PATH.join2(current_path, parts[i]);\n                  if (FS.isMountpoint(current)) {\n                    if (!islast || islast && opts.follow_mount) {\n                      current = current.mounted.root\n                    }\n                  }\n                  if (!islast || opts.follow) {\n                    var count = 0;\n                    while (FS.isLink(current.mode)) {\n                      var link = FS.readlink(current_path);\n                      current_path = PATH_FS.resolve(PATH.dirname(current_path), link);\n                      var lookup = FS.lookupPath(current_path, {\n                        recurse_count: opts.recurse_count\n                      });\n                      current = lookup.node;\n                      if (count++ > 40) {\n                        throw new FS.ErrnoError(32)\n                      }\n                    }\n                  }\n                }\n                return {\n                  path: current_path,\n                  node: current\n                }\n              },\n              getPath: function(node) {\n                var path;\n                while (true) {\n                  if (FS.isRoot(node)) {\n                    var mount = node.mount.mountpoint;\n                    if (!path)\n                      return mount;\n                    return mount[mount.length - 1] !== \"/\" ? mount + \"/\" + path : mount + path\n                  }\n                  path = path ? node.name + \"/\" + path : node.name;\n                  node = node.parent\n                }\n              },\n              hashName: function(parentid, name) {\n                var hash = 0;\n                for (var i = 0; i < name.length; i++) {\n                  hash = (hash << 5) - hash + name.charCodeAt(i) | 0\n                }\n                return (parentid + hash >>> 0) % FS.nameTable.length\n              },\n              hashAddNode: function(node) {\n                var hash = FS.hashName(node.parent.id, node.name);\n                node.name_next = FS.nameTable[hash];\n                FS.nameTable[hash] = node\n              },\n              hashRemoveNode: function(node) {\n                var hash = FS.hashName(node.parent.id, node.name);\n                if (FS.nameTable[hash] === node) {\n                  FS.nameTable[hash] = node.name_next\n                } else {\n                  var current = FS.nameTable[hash];\n                  while (current) {\n                    if (current.name_next === node) {\n                      current.name_next = node.name_next;\n                      break\n                    }\n                    current = current.name_next\n                  }\n                }\n              },\n              lookupNode: function(parent, name) {\n                var errCode = FS.mayLookup(parent);\n                if (errCode) {\n                  throw new FS.ErrnoError(errCode,parent)\n                }\n                var hash = FS.hashName(parent.id, name);\n                for (var node = FS.nameTable[hash]; node; node = node.name_next) {\n                  var nodeName = node.name;\n                  if (node.parent.id === parent.id && nodeName === name) {\n                    return node\n                  }\n                }\n                return FS.lookup(parent, name)\n              },\n              createNode: function(parent, name, mode, rdev) {\n                var node = new FS.FSNode(parent,name,mode,rdev);\n                FS.hashAddNode(node);\n                return node\n              },\n              destroyNode: function(node) {\n                FS.hashRemoveNode(node)\n              },\n              isRoot: function(node) {\n                return node === node.parent\n              },\n              isMountpoint: function(node) {\n                return !!node.mounted\n              },\n              isFile: function(mode) {\n                return (mode & 61440) === 32768\n              },\n              isDir: function(mode) {\n                return (mode & 61440) === 16384\n              },\n              isLink: function(mode) {\n                return (mode & 61440) === 40960\n              },\n              isChrdev: function(mode) {\n                return (mode & 61440) === 8192\n              },\n              isBlkdev: function(mode) {\n                return (mode & 61440) === 24576\n              },\n              isFIFO: function(mode) {\n                return (mode & 61440) === 4096\n              },\n              isSocket: function(mode) {\n                return (mode & 49152) === 49152\n              },\n              flagModes: {\n                \"r\": 0,\n                \"rs\": 1052672,\n                \"r+\": 2,\n                \"w\": 577,\n                \"wx\": 705,\n                \"xw\": 705,\n                \"w+\": 578,\n                \"wx+\": 706,\n                \"xw+\": 706,\n                \"a\": 1089,\n                \"ax\": 1217,\n                \"xa\": 1217,\n                \"a+\": 1090,\n                \"ax+\": 1218,\n                \"xa+\": 1218\n              },\n              modeStringToFlags: function(str) {\n                var flags = FS.flagModes[str];\n                if (typeof flags === \"undefined\") {\n                  throw new Error(\"Unknown file open mode: \" + str)\n                }\n                return flags\n              },\n              flagsToPermissionString: function(flag) {\n                var perms = [\"r\", \"w\", \"rw\"][flag & 3];\n                if (flag & 512) {\n                  perms += \"w\"\n                }\n                return perms\n              },\n              nodePermissions: function(node, perms) {\n                if (FS.ignorePermissions) {\n                  return 0\n                }\n                if (perms.indexOf(\"r\") !== -1 && !(node.mode & 292)) {\n                  return 2\n                } else if (perms.indexOf(\"w\") !== -1 && !(node.mode & 146)) {\n                  return 2\n                } else if (perms.indexOf(\"x\") !== -1 && !(node.mode & 73)) {\n                  return 2\n                }\n                return 0\n              },\n              mayLookup: function(dir) {\n                var errCode = FS.nodePermissions(dir, \"x\");\n                if (errCode)\n                  return errCode;\n                if (!dir.node_ops.lookup)\n                  return 2;\n                return 0\n              },\n              mayCreate: function(dir, name) {\n                try {\n                  var node = FS.lookupNode(dir, name);\n                  return 20\n                } catch (e) {}\n                return FS.nodePermissions(dir, \"wx\")\n              },\n              mayDelete: function(dir, name, isdir) {\n                var node;\n                try {\n                  node = FS.lookupNode(dir, name)\n                } catch (e) {\n                  return e.errno\n                }\n                var errCode = FS.nodePermissions(dir, \"wx\");\n                if (errCode) {\n                  return errCode\n                }\n                if (isdir) {\n                  if (!FS.isDir(node.mode)) {\n                    return 54\n                  }\n                  if (FS.isRoot(node) || FS.getPath(node) === FS.cwd()) {\n                    return 10\n                  }\n                } else {\n                  if (FS.isDir(node.mode)) {\n                    return 31\n                  }\n                }\n                return 0\n              },\n              mayOpen: function(node, flags) {\n                if (!node) {\n                  return 44\n                }\n                if (FS.isLink(node.mode)) {\n                  return 32\n                } else if (FS.isDir(node.mode)) {\n                  if (FS.flagsToPermissionString(flags) !== \"r\" || flags & 512) {\n                    return 31\n                  }\n                }\n                return FS.nodePermissions(node, FS.flagsToPermissionString(flags))\n              },\n              MAX_OPEN_FDS: 4096,\n              nextfd: function(fd_start, fd_end) {\n                fd_start = fd_start || 0;\n                fd_end = fd_end || FS.MAX_OPEN_FDS;\n                for (var fd = fd_start; fd <= fd_end; fd++) {\n                  if (!FS.streams[fd]) {\n                    return fd\n                  }\n                }\n                throw new FS.ErrnoError(33)\n              },\n              getStream: function(fd) {\n                return FS.streams[fd]\n              },\n              createStream: function(stream, fd_start, fd_end) {\n                if (!FS.FSStream) {\n                  FS.FSStream = function() {}\n                  ;\n                  FS.FSStream.prototype = {\n                    object: {\n                      get: function() {\n                        return this.node\n                      },\n                      set: function(val) {\n                        this.node = val\n                      }\n                    },\n                    isRead: {\n                      get: function() {\n                        return (this.flags & 2097155) !== 1\n                      }\n                    },\n                    isWrite: {\n                      get: function() {\n                        return (this.flags & 2097155) !== 0\n                      }\n                    },\n                    isAppend: {\n                      get: function() {\n                        return this.flags & 1024\n                      }\n                    }\n                  }\n                }\n                var newStream = new FS.FSStream;\n                for (var p in stream) {\n                  newStream[p] = stream[p]\n                }\n                stream = newStream;\n                var fd = FS.nextfd(fd_start, fd_end);\n                stream.fd = fd;\n                FS.streams[fd] = stream;\n                return stream\n              },\n              closeStream: function(fd) {\n                FS.streams[fd] = null\n              },\n              chrdev_stream_ops: {\n                open: function(stream) {\n                  var device = FS.getDevice(stream.node.rdev);\n                  stream.stream_ops = device.stream_ops;\n                  if (stream.stream_ops.open) {\n                    stream.stream_ops.open(stream)\n                  }\n                },\n                llseek: function() {\n                  throw new FS.ErrnoError(70)\n                }\n              },\n              major: function(dev) {\n                return dev >> 8\n              },\n              minor: function(dev) {\n                return dev & 255\n              },\n              makedev: function(ma, mi) {\n                return ma << 8 | mi\n              },\n              registerDevice: function(dev, ops) {\n                FS.devices[dev] = {\n                  stream_ops: ops\n                }\n              },\n              getDevice: function(dev) {\n                return FS.devices[dev]\n              },\n              getMounts: function(mount) {\n                var mounts = [];\n                var check = [mount];\n                while (check.length) {\n                  var m = check.pop();\n                  mounts.push(m);\n                  check.push.apply(check, m.mounts)\n                }\n                return mounts\n              },\n              syncfs: function(populate, callback) {\n                if (typeof populate === \"function\") {\n                  callback = populate;\n                  populate = false\n                }\n                FS.syncFSRequests++;\n                if (FS.syncFSRequests > 1) {\n                  err(\"warning: \" + FS.syncFSRequests + \" FS.syncfs operations in flight at once, probably just doing extra work\")\n                }\n                var mounts = FS.getMounts(FS.root.mount);\n                var completed = 0;\n                function doCallback(errCode) {\n                  FS.syncFSRequests--;\n                  return callback(errCode)\n                }\n                function done(errCode) {\n                  if (errCode) {\n                    if (!done.errored) {\n                      done.errored = true;\n                      return doCallback(errCode)\n                    }\n                    return\n                  }\n                  if (++completed >= mounts.length) {\n                    doCallback(null)\n                  }\n                }\n                mounts.forEach(function(mount) {\n                  if (!mount.type.syncfs) {\n                    return done(null)\n                  }\n                  mount.type.syncfs(mount, populate, done)\n                })\n              },\n              mount: function(type, opts, mountpoint) {\n                var root = mountpoint === \"/\";\n                var pseudo = !mountpoint;\n                var node;\n                if (root && FS.root) {\n                  throw new FS.ErrnoError(10)\n                } else if (!root && !pseudo) {\n                  var lookup = FS.lookupPath(mountpoint, {\n                    follow_mount: false\n                  });\n                  mountpoint = lookup.path;\n                  node = lookup.node;\n                  if (FS.isMountpoint(node)) {\n                    throw new FS.ErrnoError(10)\n                  }\n                  if (!FS.isDir(node.mode)) {\n                    throw new FS.ErrnoError(54)\n                  }\n                }\n                var mount = {\n                  type: type,\n                  opts: opts,\n                  mountpoint: mountpoint,\n                  mounts: []\n                };\n                var mountRoot = type.mount(mount);\n                mountRoot.mount = mount;\n                mount.root = mountRoot;\n                if (root) {\n                  FS.root = mountRoot\n                } else if (node) {\n                  node.mounted = mount;\n                  if (node.mount) {\n                    node.mount.mounts.push(mount)\n                  }\n                }\n                return mountRoot\n              },\n              unmount: function(mountpoint) {\n                var lookup = FS.lookupPath(mountpoint, {\n                  follow_mount: false\n                });\n                if (!FS.isMountpoint(lookup.node)) {\n                  throw new FS.ErrnoError(28)\n                }\n                var node = lookup.node;\n                var mount = node.mounted;\n                var mounts = FS.getMounts(mount);\n                Object.keys(FS.nameTable).forEach(function(hash) {\n                  var current = FS.nameTable[hash];\n                  while (current) {\n                    var next = current.name_next;\n                    if (mounts.indexOf(current.mount) !== -1) {\n                      FS.destroyNode(current)\n                    }\n                    current = next\n                  }\n                });\n                node.mounted = null;\n                var idx = node.mount.mounts.indexOf(mount);\n                node.mount.mounts.splice(idx, 1)\n              },\n              lookup: function(parent, name) {\n                return parent.node_ops.lookup(parent, name)\n              },\n              mknod: function(path, mode, dev) {\n                var lookup = FS.lookupPath(path, {\n                  parent: true\n                });\n                var parent = lookup.node;\n                var name = PATH.basename(path);\n                if (!name || name === \".\" || name === \"..\") {\n                  throw new FS.ErrnoError(28)\n                }\n                var errCode = FS.mayCreate(parent, name);\n                if (errCode) {\n                  throw new FS.ErrnoError(errCode)\n                }\n                if (!parent.node_ops.mknod) {\n                  throw new FS.ErrnoError(63)\n                }\n                return parent.node_ops.mknod(parent, name, mode, dev)\n              },\n              create: function(path, mode) {\n                mode = mode !== undefined ? mode : 438;\n                mode &= 4095;\n                mode |= 32768;\n                return FS.mknod(path, mode, 0)\n              },\n              mkdir: function(path, mode) {\n                mode = mode !== undefined ? mode : 511;\n                mode &= 511 | 512;\n                mode |= 16384;\n                return FS.mknod(path, mode, 0)\n              },\n              mkdirTree: function(path, mode) {\n                var dirs = path.split(\"/\");\n                var d = \"\";\n                for (var i = 0; i < dirs.length; ++i) {\n                  if (!dirs[i])\n                    continue;\n                  d += \"/\" + dirs[i];\n                  try {\n                    FS.mkdir(d, mode)\n                  } catch (e) {\n                    if (e.errno != 20)\n                      throw e\n                  }\n                }\n              },\n              mkdev: function(path, mode, dev) {\n                if (typeof dev === \"undefined\") {\n                  dev = mode;\n                  mode = 438\n                }\n                mode |= 8192;\n                return FS.mknod(path, mode, dev)\n              },\n              symlink: function(oldpath, newpath) {\n                if (!PATH_FS.resolve(oldpath)) {\n                  throw new FS.ErrnoError(44)\n                }\n                var lookup = FS.lookupPath(newpath, {\n                  parent: true\n                });\n                var parent = lookup.node;\n                if (!parent) {\n                  throw new FS.ErrnoError(44)\n                }\n                var newname = PATH.basename(newpath);\n                var errCode = FS.mayCreate(parent, newname);\n                if (errCode) {\n                  throw new FS.ErrnoError(errCode)\n                }\n                if (!parent.node_ops.symlink) {\n                  throw new FS.ErrnoError(63)\n                }\n                return parent.node_ops.symlink(parent, newname, oldpath)\n              },\n              rename: function(old_path, new_path) {\n                var old_dirname = PATH.dirname(old_path);\n                var new_dirname = PATH.dirname(new_path);\n                var old_name = PATH.basename(old_path);\n                var new_name = PATH.basename(new_path);\n                var lookup, old_dir, new_dir;\n                try {\n                  lookup = FS.lookupPath(old_path, {\n                    parent: true\n                  });\n                  old_dir = lookup.node;\n                  lookup = FS.lookupPath(new_path, {\n                    parent: true\n                  });\n                  new_dir = lookup.node\n                } catch (e) {\n                  throw new FS.ErrnoError(10)\n                }\n                if (!old_dir || !new_dir)\n                  throw new FS.ErrnoError(44);\n                if (old_dir.mount !== new_dir.mount) {\n                  throw new FS.ErrnoError(75)\n                }\n                var old_node = FS.lookupNode(old_dir, old_name);\n                var relative = PATH_FS.relative(old_path, new_dirname);\n                if (relative.charAt(0) !== \".\") {\n                  throw new FS.ErrnoError(28)\n                }\n                relative = PATH_FS.relative(new_path, old_dirname);\n                if (relative.charAt(0) !== \".\") {\n                  throw new FS.ErrnoError(55)\n                }\n                var new_node;\n                try {\n                  new_node = FS.lookupNode(new_dir, new_name)\n                } catch (e) {}\n                if (old_node === new_node) {\n                  return\n                }\n                var isdir = FS.isDir(old_node.mode);\n                var errCode = FS.mayDelete(old_dir, old_name, isdir);\n                if (errCode) {\n                  throw new FS.ErrnoError(errCode)\n                }\n                errCode = new_node ? FS.mayDelete(new_dir, new_name, isdir) : FS.mayCreate(new_dir, new_name);\n                if (errCode) {\n                  throw new FS.ErrnoError(errCode)\n                }\n                if (!old_dir.node_ops.rename) {\n                  throw new FS.ErrnoError(63)\n                }\n                if (FS.isMountpoint(old_node) || new_node && FS.isMountpoint(new_node)) {\n                  throw new FS.ErrnoError(10)\n                }\n                if (new_dir !== old_dir) {\n                  errCode = FS.nodePermissions(old_dir, \"w\");\n                  if (errCode) {\n                    throw new FS.ErrnoError(errCode)\n                  }\n                }\n                try {\n                  if (FS.trackingDelegate[\"willMovePath\"]) {\n                    FS.trackingDelegate[\"willMovePath\"](old_path, new_path)\n                  }\n                } catch (e) {\n                  err(\"FS.trackingDelegate['willMovePath']('\" + old_path + \"', '\" + new_path + \"') threw an exception: \" + e.message)\n                }\n                FS.hashRemoveNode(old_node);\n                try {\n                  old_dir.node_ops.rename(old_node, new_dir, new_name)\n                } catch (e) {\n                  throw e\n                } finally {\n                  FS.hashAddNode(old_node)\n                }\n                try {\n                  if (FS.trackingDelegate[\"onMovePath\"])\n                    FS.trackingDelegate[\"onMovePath\"](old_path, new_path)\n                } catch (e) {\n                  err(\"FS.trackingDelegate['onMovePath']('\" + old_path + \"', '\" + new_path + \"') threw an exception: \" + e.message)\n                }\n              },\n              rmdir: function(path) {\n                var lookup = FS.lookupPath(path, {\n                  parent: true\n                });\n                var parent = lookup.node;\n                var name = PATH.basename(path);\n                var node = FS.lookupNode(parent, name);\n                var errCode = FS.mayDelete(parent, name, true);\n                if (errCode) {\n                  throw new FS.ErrnoError(errCode)\n                }\n                if (!parent.node_ops.rmdir) {\n                  throw new FS.ErrnoError(63)\n                }\n                if (FS.isMountpoint(node)) {\n                  throw new FS.ErrnoError(10)\n                }\n                try {\n                  if (FS.trackingDelegate[\"willDeletePath\"]) {\n                    FS.trackingDelegate[\"willDeletePath\"](path)\n                  }\n                } catch (e) {\n                  err(\"FS.trackingDelegate['willDeletePath']('\" + path + \"') threw an exception: \" + e.message)\n                }\n                parent.node_ops.rmdir(parent, name);\n                FS.destroyNode(node);\n                try {\n                  if (FS.trackingDelegate[\"onDeletePath\"])\n                    FS.trackingDelegate[\"onDeletePath\"](path)\n                } catch (e) {\n                  err(\"FS.trackingDelegate['onDeletePath']('\" + path + \"') threw an exception: \" + e.message)\n                }\n              },\n              readdir: function(path) {\n                var lookup = FS.lookupPath(path, {\n                  follow: true\n                });\n                var node = lookup.node;\n                if (!node.node_ops.readdir) {\n                  throw new FS.ErrnoError(54)\n                }\n                return node.node_ops.readdir(node)\n              },\n              unlink: function(path) {\n                var lookup = FS.lookupPath(path, {\n                  parent: true\n                });\n                var parent = lookup.node;\n                var name = PATH.basename(path);\n                var node = FS.lookupNode(parent, name);\n                var errCode = FS.mayDelete(parent, name, false);\n                if (errCode) {\n                  throw new FS.ErrnoError(errCode)\n                }\n                if (!parent.node_ops.unlink) {\n                  throw new FS.ErrnoError(63)\n                }\n                if (FS.isMountpoint(node)) {\n                  throw new FS.ErrnoError(10)\n                }\n                try {\n                  if (FS.trackingDelegate[\"willDeletePath\"]) {\n                    FS.trackingDelegate[\"willDeletePath\"](path)\n                  }\n                } catch (e) {\n                  err(\"FS.trackingDelegate['willDeletePath']('\" + path + \"') threw an exception: \" + e.message)\n                }\n                parent.node_ops.unlink(parent, name);\n                FS.destroyNode(node);\n                try {\n                  if (FS.trackingDelegate[\"onDeletePath\"])\n                    FS.trackingDelegate[\"onDeletePath\"](path)\n                } catch (e) {\n                  err(\"FS.trackingDelegate['onDeletePath']('\" + path + \"') threw an exception: \" + e.message)\n                }\n              },\n              readlink: function(path) {\n                var lookup = FS.lookupPath(path);\n                var link = lookup.node;\n                if (!link) {\n                  throw new FS.ErrnoError(44)\n                }\n                if (!link.node_ops.readlink) {\n                  throw new FS.ErrnoError(28)\n                }\n                return PATH_FS.resolve(FS.getPath(link.parent), link.node_ops.readlink(link))\n              },\n              stat: function(path, dontFollow) {\n                var lookup = FS.lookupPath(path, {\n                  follow: !dontFollow\n                });\n                var node = lookup.node;\n                if (!node) {\n                  throw new FS.ErrnoError(44)\n                }\n                if (!node.node_ops.getattr) {\n                  throw new FS.ErrnoError(63)\n                }\n                return node.node_ops.getattr(node)\n              },\n              lstat: function(path) {\n                return FS.stat(path, true)\n              },\n              chmod: function(path, mode, dontFollow) {\n                var node;\n                if (typeof path === \"string\") {\n                  var lookup = FS.lookupPath(path, {\n                    follow: !dontFollow\n                  });\n                  node = lookup.node\n                } else {\n                  node = path\n                }\n                if (!node.node_ops.setattr) {\n                  throw new FS.ErrnoError(63)\n                }\n                node.node_ops.setattr(node, {\n                  mode: mode & 4095 | node.mode & ~4095,\n                  timestamp: Date.now()\n                })\n              },\n              lchmod: function(path, mode) {\n                FS.chmod(path, mode, true)\n              },\n              fchmod: function(fd, mode) {\n                var stream = FS.getStream(fd);\n                if (!stream) {\n                  throw new FS.ErrnoError(8)\n                }\n                FS.chmod(stream.node, mode)\n              },\n              chown: function(path, uid, gid, dontFollow) {\n                var node;\n                if (typeof path === \"string\") {\n                  var lookup = FS.lookupPath(path, {\n                    follow: !dontFollow\n                  });\n                  node = lookup.node\n                } else {\n                  node = path\n                }\n                if (!node.node_ops.setattr) {\n                  throw new FS.ErrnoError(63)\n                }\n                node.node_ops.setattr(node, {\n                  timestamp: Date.now()\n                })\n              },\n              lchown: function(path, uid, gid) {\n                FS.chown(path, uid, gid, true)\n              },\n              fchown: function(fd, uid, gid) {\n                var stream = FS.getStream(fd);\n                if (!stream) {\n                  throw new FS.ErrnoError(8)\n                }\n                FS.chown(stream.node, uid, gid)\n              },\n              truncate: function(path, len) {\n                if (len < 0) {\n                  throw new FS.ErrnoError(28)\n                }\n                var node;\n                if (typeof path === \"string\") {\n                  var lookup = FS.lookupPath(path, {\n                    follow: true\n                  });\n                  node = lookup.node\n                } else {\n                  node = path\n                }\n                if (!node.node_ops.setattr) {\n                  throw new FS.ErrnoError(63)\n                }\n                if (FS.isDir(node.mode)) {\n                  throw new FS.ErrnoError(31)\n                }\n                if (!FS.isFile(node.mode)) {\n                  throw new FS.ErrnoError(28)\n                }\n                var errCode = FS.nodePermissions(node, \"w\");\n                if (errCode) {\n                  throw new FS.ErrnoError(errCode)\n                }\n                node.node_ops.setattr(node, {\n                  size: len,\n                  timestamp: Date.now()\n                })\n              },\n              ftruncate: function(fd, len) {\n                var stream = FS.getStream(fd);\n                if (!stream) {\n                  throw new FS.ErrnoError(8)\n                }\n                if ((stream.flags & 2097155) === 0) {\n                  throw new FS.ErrnoError(28)\n                }\n                FS.truncate(stream.node, len)\n              },\n              utime: function(path, atime, mtime) {\n                var lookup = FS.lookupPath(path, {\n                  follow: true\n                });\n                var node = lookup.node;\n                node.node_ops.setattr(node, {\n                  timestamp: Math.max(atime, mtime)\n                })\n              },\n              open: function(path, flags, mode, fd_start, fd_end) {\n                if (path === \"\") {\n                  throw new FS.ErrnoError(44)\n                }\n                flags = typeof flags === \"string\" ? FS.modeStringToFlags(flags) : flags;\n                mode = typeof mode === \"undefined\" ? 438 : mode;\n                if (flags & 64) {\n                  mode = mode & 4095 | 32768\n                } else {\n                  mode = 0\n                }\n                var node;\n                if (typeof path === \"object\") {\n                  node = path\n                } else {\n                  path = PATH.normalize(path);\n                  try {\n                    var lookup = FS.lookupPath(path, {\n                      follow: !(flags & 131072)\n                    });\n                    node = lookup.node\n                  } catch (e) {}\n                }\n                var created = false;\n                if (flags & 64) {\n                  if (node) {\n                    if (flags & 128) {\n                      throw new FS.ErrnoError(20)\n                    }\n                  } else {\n                    node = FS.mknod(path, mode, 0);\n                    created = true\n                  }\n                }\n                if (!node) {\n                  throw new FS.ErrnoError(44)\n                }\n                if (FS.isChrdev(node.mode)) {\n                  flags &= ~512\n                }\n                if (flags & 65536 && !FS.isDir(node.mode)) {\n                  throw new FS.ErrnoError(54)\n                }\n                if (!created) {\n                  var errCode = FS.mayOpen(node, flags);\n                  if (errCode) {\n                    throw new FS.ErrnoError(errCode)\n                  }\n                }\n                if (flags & 512) {\n                  FS.truncate(node, 0)\n                }\n                flags &= ~(128 | 512);\n                var stream = FS.createStream({\n                  node: node,\n                  path: FS.getPath(node),\n                  flags: flags,\n                  seekable: true,\n                  position: 0,\n                  stream_ops: node.stream_ops,\n                  ungotten: [],\n                  error: false\n                }, fd_start, fd_end);\n                if (stream.stream_ops.open) {\n                  stream.stream_ops.open(stream)\n                }\n                if (Module[\"logReadFiles\"] && !(flags & 1)) {\n                  if (!FS.readFiles)\n                    FS.readFiles = {};\n                  if (!(path in FS.readFiles)) {\n                    FS.readFiles[path] = 1;\n                    err(\"FS.trackingDelegate error on read file: \" + path)\n                  }\n                }\n                try {\n                  if (FS.trackingDelegate[\"onOpenFile\"]) {\n                    var trackingFlags = 0;\n                    if ((flags & 2097155) !== 1) {\n                      trackingFlags |= FS.tracking.openFlags.READ\n                    }\n                    if ((flags & 2097155) !== 0) {\n                      trackingFlags |= FS.tracking.openFlags.WRITE\n                    }\n                    FS.trackingDelegate[\"onOpenFile\"](path, trackingFlags)\n                  }\n                } catch (e) {\n                  err(\"FS.trackingDelegate['onOpenFile']('\" + path + \"', flags) threw an exception: \" + e.message)\n                }\n                return stream\n              },\n              close: function(stream) {\n                if (FS.isClosed(stream)) {\n                  throw new FS.ErrnoError(8)\n                }\n                if (stream.getdents)\n                  stream.getdents = null;\n                try {\n                  if (stream.stream_ops.close) {\n                    stream.stream_ops.close(stream)\n                  }\n                } catch (e) {\n                  throw e\n                } finally {\n                  FS.closeStream(stream.fd)\n                }\n                stream.fd = null\n              },\n              isClosed: function(stream) {\n                return stream.fd === null\n              },\n              llseek: function(stream, offset, whence) {\n                if (FS.isClosed(stream)) {\n                  throw new FS.ErrnoError(8)\n                }\n                if (!stream.seekable || !stream.stream_ops.llseek) {\n                  throw new FS.ErrnoError(70)\n                }\n                if (whence != 0 && whence != 1 && whence != 2) {\n                  throw new FS.ErrnoError(28)\n                }\n                stream.position = stream.stream_ops.llseek(stream, offset, whence);\n                stream.ungotten = [];\n                return stream.position\n              },\n              read: function(stream, buffer, offset, length, position) {\n                if (length < 0 || position < 0) {\n                  throw new FS.ErrnoError(28)\n                }\n                if (FS.isClosed(stream)) {\n                  throw new FS.ErrnoError(8)\n                }\n                if ((stream.flags & 2097155) === 1) {\n                  throw new FS.ErrnoError(8)\n                }\n                if (FS.isDir(stream.node.mode)) {\n                  throw new FS.ErrnoError(31)\n                }\n                if (!stream.stream_ops.read) {\n                  throw new FS.ErrnoError(28)\n                }\n                var seeking = typeof position !== \"undefined\";\n                if (!seeking) {\n                  position = stream.position\n                } else if (!stream.seekable) {\n                  throw new FS.ErrnoError(70)\n                }\n                var bytesRead = stream.stream_ops.read(stream, buffer, offset, length, position);\n                if (!seeking)\n                  stream.position += bytesRead;\n                return bytesRead\n              },\n              write: function(stream, buffer, offset, length, position, canOwn) {\n                if (length < 0 || position < 0) {\n                  throw new FS.ErrnoError(28)\n                }\n                if (FS.isClosed(stream)) {\n                  throw new FS.ErrnoError(8)\n                }\n                if ((stream.flags & 2097155) === 0) {\n                  throw new FS.ErrnoError(8)\n                }\n                if (FS.isDir(stream.node.mode)) {\n                  throw new FS.ErrnoError(31)\n                }\n                if (!stream.stream_ops.write) {\n                  throw new FS.ErrnoError(28)\n                }\n                if (stream.flags & 1024) {\n                  FS.llseek(stream, 0, 2)\n                }\n                var seeking = typeof position !== \"undefined\";\n                if (!seeking) {\n                  position = stream.position\n                } else if (!stream.seekable) {\n                  throw new FS.ErrnoError(70)\n                }\n                var bytesWritten = stream.stream_ops.write(stream, buffer, offset, length, position, canOwn);\n                if (!seeking)\n                  stream.position += bytesWritten;\n                try {\n                  if (stream.path && FS.trackingDelegate[\"onWriteToFile\"])\n                    FS.trackingDelegate[\"onWriteToFile\"](stream.path)\n                } catch (e) {\n                  err(\"FS.trackingDelegate['onWriteToFile']('\" + stream.path + \"') threw an exception: \" + e.message)\n                }\n                return bytesWritten\n              },\n              allocate: function(stream, offset, length) {\n                if (FS.isClosed(stream)) {\n                  throw new FS.ErrnoError(8)\n                }\n                if (offset < 0 || length <= 0) {\n                  throw new FS.ErrnoError(28)\n                }\n                if ((stream.flags & 2097155) === 0) {\n                  throw new FS.ErrnoError(8)\n                }\n                if (!FS.isFile(stream.node.mode) && !FS.isDir(stream.node.mode)) {\n                  throw new FS.ErrnoError(43)\n                }\n                if (!stream.stream_ops.allocate) {\n                  throw new FS.ErrnoError(138)\n                }\n                stream.stream_ops.allocate(stream, offset, length)\n              },\n              mmap: function(stream, buffer, offset, length, position, prot, flags) {\n                if ((prot & 2) !== 0 && (flags & 2) === 0 && (stream.flags & 2097155) !== 2) {\n                  throw new FS.ErrnoError(2)\n                }\n                if ((stream.flags & 2097155) === 1) {\n                  throw new FS.ErrnoError(2)\n                }\n                if (!stream.stream_ops.mmap) {\n                  throw new FS.ErrnoError(43)\n                }\n                return stream.stream_ops.mmap(stream, buffer, offset, length, position, prot, flags)\n              },\n              msync: function(stream, buffer, offset, length, mmapFlags) {\n                if (!stream || !stream.stream_ops.msync) {\n                  return 0\n                }\n                return stream.stream_ops.msync(stream, buffer, offset, length, mmapFlags)\n              },\n              munmap: function(stream) {\n                return 0\n              },\n              ioctl: function(stream, cmd, arg) {\n                if (!stream.stream_ops.ioctl) {\n                  throw new FS.ErrnoError(59)\n                }\n                return stream.stream_ops.ioctl(stream, cmd, arg)\n              },\n              readFile: function(path, opts) {\n                opts = opts || {};\n                opts.flags = opts.flags || \"r\";\n                opts.encoding = opts.encoding || \"binary\";\n                if (opts.encoding !== \"utf8\" && opts.encoding !== \"binary\") {\n                  throw new Error('Invalid encoding type \"' + opts.encoding + '\"')\n                }\n                var ret;\n                var stream = FS.open(path, opts.flags);\n                var stat = FS.stat(path);\n                var length = stat.size;\n                var buf = new Uint8Array(length);\n                FS.read(stream, buf, 0, length, 0);\n                if (opts.encoding === \"utf8\") {\n                  ret = UTF8ArrayToString(buf, 0)\n                } else if (opts.encoding === \"binary\") {\n                  ret = buf\n                }\n                FS.close(stream);\n                return ret\n              },\n              writeFile: function(path, data, opts) {\n                opts = opts || {};\n                opts.flags = opts.flags || \"w\";\n                var stream = FS.open(path, opts.flags, opts.mode);\n                if (typeof data === \"string\") {\n                  var buf = new Uint8Array(lengthBytesUTF8(data) + 1);\n                  var actualNumBytes = stringToUTF8Array(data, buf, 0, buf.length);\n                  FS.write(stream, buf, 0, actualNumBytes, undefined, opts.canOwn)\n                } else if (ArrayBuffer.isView(data)) {\n                  FS.write(stream, data, 0, data.byteLength, undefined, opts.canOwn)\n                } else {\n                  throw new Error(\"Unsupported data type\")\n                }\n                FS.close(stream)\n              },\n              cwd: function() {\n                return FS.currentPath\n              },\n              chdir: function(path) {\n                var lookup = FS.lookupPath(path, {\n                  follow: true\n                });\n                if (lookup.node === null) {\n                  throw new FS.ErrnoError(44)\n                }\n                if (!FS.isDir(lookup.node.mode)) {\n                  throw new FS.ErrnoError(54)\n                }\n                var errCode = FS.nodePermissions(lookup.node, \"x\");\n                if (errCode) {\n                  throw new FS.ErrnoError(errCode)\n                }\n                FS.currentPath = lookup.path\n              },\n              createDefaultDirectories: function() {\n                FS.mkdir(\"/tmp\");\n                FS.mkdir(\"/home\");\n                FS.mkdir(\"/home/web_user\")\n              },\n              createDefaultDevices: function() {\n                FS.mkdir(\"/dev\");\n                FS.registerDevice(FS.makedev(1, 3), {\n                  read: function() {\n                    return 0\n                  },\n                  write: function(stream, buffer, offset, length, pos) {\n                    return length\n                  }\n                });\n                FS.mkdev(\"/dev/null\", FS.makedev(1, 3));\n                TTY.register(FS.makedev(5, 0), TTY.default_tty_ops);\n                TTY.register(FS.makedev(6, 0), TTY.default_tty1_ops);\n                FS.mkdev(\"/dev/tty\", FS.makedev(5, 0));\n                FS.mkdev(\"/dev/tty1\", FS.makedev(6, 0));\n                var random_device;\n                if (typeof crypto === \"object\" && typeof crypto[\"getRandomValues\"] === \"function\") {\n                  var randomBuffer = new Uint8Array(1);\n                  random_device = function() {\n                    crypto.getRandomValues(randomBuffer);\n                    return randomBuffer[0]\n                  }\n                } else {}\n                if (!random_device) {\n                  random_device = function() {\n                    abort(\"random_device\")\n                  }\n                }\n                FS.createDevice(\"/dev\", \"random\", random_device);\n                FS.createDevice(\"/dev\", \"urandom\", random_device);\n                FS.mkdir(\"/dev/shm\");\n                FS.mkdir(\"/dev/shm/tmp\")\n              },\n              createSpecialDirectories: function() {\n                FS.mkdir(\"/proc\");\n                FS.mkdir(\"/proc/self\");\n                FS.mkdir(\"/proc/self/fd\");\n                FS.mount({\n                  mount: function() {\n                    var node = FS.createNode(\"/proc/self\", \"fd\", 16384 | 511, 73);\n                    node.node_ops = {\n                      lookup: function(parent, name) {\n                        var fd = +name;\n                        var stream = FS.getStream(fd);\n                        if (!stream)\n                          throw new FS.ErrnoError(8);\n                        var ret = {\n                          parent: null,\n                          mount: {\n                            mountpoint: \"fake\"\n                          },\n                          node_ops: {\n                            readlink: function() {\n                              return stream.path\n                            }\n                          }\n                        };\n                        ret.parent = ret;\n                        return ret\n                      }\n                    };\n                    return node\n                  }\n                }, {}, \"/proc/self/fd\")\n              },\n              createStandardStreams: function() {\n                if (Module[\"stdin\"]) {\n                  FS.createDevice(\"/dev\", \"stdin\", Module[\"stdin\"])\n                } else {\n                  FS.symlink(\"/dev/tty\", \"/dev/stdin\")\n                }\n                if (Module[\"stdout\"]) {\n                  FS.createDevice(\"/dev\", \"stdout\", null, Module[\"stdout\"])\n                } else {\n                  FS.symlink(\"/dev/tty\", \"/dev/stdout\")\n                }\n                if (Module[\"stderr\"]) {\n                  FS.createDevice(\"/dev\", \"stderr\", null, Module[\"stderr\"])\n                } else {\n                  FS.symlink(\"/dev/tty1\", \"/dev/stderr\")\n                }\n                var stdin = FS.open(\"/dev/stdin\", \"r\");\n                var stdout = FS.open(\"/dev/stdout\", \"w\");\n                var stderr = FS.open(\"/dev/stderr\", \"w\")\n              },\n              ensureErrnoError: function() {\n                if (FS.ErrnoError)\n                  return;\n                FS.ErrnoError = function ErrnoError(errno, node) {\n                  this.node = node;\n                  this.setErrno = function(errno) {\n                    this.errno = errno\n                  }\n                  ;\n                  this.setErrno(errno);\n                  this.message = \"FS error\"\n                }\n                ;\n                FS.ErrnoError.prototype = new Error;\n                FS.ErrnoError.prototype.constructor = FS.ErrnoError;\n                [44].forEach(function(code) {\n                  FS.genericErrors[code] = new FS.ErrnoError(code);\n                  FS.genericErrors[code].stack = \"<generic error, no stack>\"\n                })\n              },\n              staticInit: function() {\n                FS.ensureErrnoError();\n                FS.nameTable = new Array(4096);\n                FS.mount(MEMFS, {}, \"/\");\n                FS.createDefaultDirectories();\n                FS.createDefaultDevices();\n                FS.createSpecialDirectories();\n                FS.filesystems = {\n                  \"MEMFS\": MEMFS\n                }\n              },\n              init: function(input, output, error) {\n                FS.init.initialized = true;\n                FS.ensureErrnoError();\n                Module[\"stdin\"] = input || Module[\"stdin\"];\n                Module[\"stdout\"] = output || Module[\"stdout\"];\n                Module[\"stderr\"] = error || Module[\"stderr\"];\n                FS.createStandardStreams()\n              },\n              quit: function() {\n                FS.init.initialized = false;\n                var fflush = Module[\"_fflush\"];\n                if (fflush)\n                  fflush(0);\n                for (var i = 0; i < FS.streams.length; i++) {\n                  var stream = FS.streams[i];\n                  if (!stream) {\n                    continue\n                  }\n                  FS.close(stream)\n                }\n              },\n              getMode: function(canRead, canWrite) {\n                var mode = 0;\n                if (canRead)\n                  mode |= 292 | 73;\n                if (canWrite)\n                  mode |= 146;\n                return mode\n              },\n              joinPath: function(parts, forceRelative) {\n                var path = PATH.join.apply(null, parts);\n                if (forceRelative && path[0] == \"/\")\n                  path = path.substr(1);\n                return path\n              },\n              absolutePath: function(relative, base) {\n                return PATH_FS.resolve(base, relative)\n              },\n              standardizePath: function(path) {\n                return PATH.normalize(path)\n              },\n              findObject: function(path, dontResolveLastLink) {\n                var ret = FS.analyzePath(path, dontResolveLastLink);\n                if (ret.exists) {\n                  return ret.object\n                } else {\n                  ___setErrNo(ret.error);\n                  return null\n                }\n              },\n              analyzePath: function(path, dontResolveLastLink) {\n                try {\n                  var lookup = FS.lookupPath(path, {\n                    follow: !dontResolveLastLink\n                  });\n                  path = lookup.path\n                } catch (e) {}\n                var ret = {\n                  isRoot: false,\n                  exists: false,\n                  error: 0,\n                  name: null,\n                  path: null,\n                  object: null,\n                  parentExists: false,\n                  parentPath: null,\n                  parentObject: null\n                };\n                try {\n                  var lookup = FS.lookupPath(path, {\n                    parent: true\n                  });\n                  ret.parentExists = true;\n                  ret.parentPath = lookup.path;\n                  ret.parentObject = lookup.node;\n                  ret.name = PATH.basename(path);\n                  lookup = FS.lookupPath(path, {\n                    follow: !dontResolveLastLink\n                  });\n                  ret.exists = true;\n                  ret.path = lookup.path;\n                  ret.object = lookup.node;\n                  ret.name = lookup.node.name;\n                  ret.isRoot = lookup.path === \"/\"\n                } catch (e) {\n                  ret.error = e.errno\n                }\n                return ret\n              },\n              createFolder: function(parent, name, canRead, canWrite) {\n                var path = PATH.join2(typeof parent === \"string\" ? parent : FS.getPath(parent), name);\n                var mode = FS.getMode(canRead, canWrite);\n                return FS.mkdir(path, mode)\n              },\n              createPath: function(parent, path, canRead, canWrite) {\n                parent = typeof parent === \"string\" ? parent : FS.getPath(parent);\n                var parts = path.split(\"/\").reverse();\n                while (parts.length) {\n                  var part = parts.pop();\n                  if (!part)\n                    continue;\n                  var current = PATH.join2(parent, part);\n                  try {\n                    FS.mkdir(current)\n                  } catch (e) {}\n                  parent = current\n                }\n                return current\n              },\n              createFile: function(parent, name, properties, canRead, canWrite) {\n                var path = PATH.join2(typeof parent === \"string\" ? parent : FS.getPath(parent), name);\n                var mode = FS.getMode(canRead, canWrite);\n                return FS.create(path, mode)\n              },\n              createDataFile: function(parent, name, data, canRead, canWrite, canOwn) {\n                var path = name ? PATH.join2(typeof parent === \"string\" ? parent : FS.getPath(parent), name) : parent;\n                var mode = FS.getMode(canRead, canWrite);\n                var node = FS.create(path, mode);\n                if (data) {\n                  if (typeof data === \"string\") {\n                    var arr = new Array(data.length);\n                    for (var i = 0, len = data.length; i < len; ++i)\n                      arr[i] = data.charCodeAt(i);\n                    data = arr\n                  }\n                  FS.chmod(node, mode | 146);\n                  var stream = FS.open(node, \"w\");\n                  FS.write(stream, data, 0, data.length, 0, canOwn);\n                  FS.close(stream);\n                  FS.chmod(node, mode)\n                }\n                return node\n              },\n              createDevice: function(parent, name, input, output) {\n                var path = PATH.join2(typeof parent === \"string\" ? parent : FS.getPath(parent), name);\n                var mode = FS.getMode(!!input, !!output);\n                if (!FS.createDevice.major)\n                  FS.createDevice.major = 64;\n                var dev = FS.makedev(FS.createDevice.major++, 0);\n                FS.registerDevice(dev, {\n                  open: function(stream) {\n                    stream.seekable = false\n                  },\n                  close: function(stream) {\n                    if (output && output.buffer && output.buffer.length) {\n                      output(10)\n                    }\n                  },\n                  read: function(stream, buffer, offset, length, pos) {\n                    var bytesRead = 0;\n                    for (var i = 0; i < length; i++) {\n                      var result;\n                      try {\n                        result = input()\n                      } catch (e) {\n                        throw new FS.ErrnoError(29)\n                      }\n                      if (result === undefined && bytesRead === 0) {\n                        throw new FS.ErrnoError(6)\n                      }\n                      if (result === null || result === undefined)\n                        break;\n                      bytesRead++;\n                      buffer[offset + i] = result\n                    }\n                    if (bytesRead) {\n                      stream.node.timestamp = Date.now()\n                    }\n                    return bytesRead\n                  },\n                  write: function(stream, buffer, offset, length, pos) {\n                    for (var i = 0; i < length; i++) {\n                      try {\n                        output(buffer[offset + i])\n                      } catch (e) {\n                        throw new FS.ErrnoError(29)\n                      }\n                    }\n                    if (length) {\n                      stream.node.timestamp = Date.now()\n                    }\n                    return i\n                  }\n                });\n                return FS.mkdev(path, mode, dev)\n              },\n              createLink: function(parent, name, target, canRead, canWrite) {\n                var path = PATH.join2(typeof parent === \"string\" ? parent : FS.getPath(parent), name);\n                return FS.symlink(target, path)\n              },\n              forceLoadFile: function(obj) {\n                if (obj.isDevice || obj.isFolder || obj.link || obj.contents)\n                  return true;\n                var success = true;\n                if (typeof XMLHttpRequest !== \"undefined\") {\n                  throw new Error(\"Lazy loading should have been performed (contents set) in createLazyFile, but it was not. Lazy loading only works in web workers. Use --embed-file or --preload-file in emcc on the main thread.\")\n                } else if (read_) {\n                  try {\n                    obj.contents = intArrayFromString(read_(obj.url), true);\n                    obj.usedBytes = obj.contents.length\n                  } catch (e) {\n                    success = false\n                  }\n                } else {\n                  throw new Error(\"Cannot load without read() or XMLHttpRequest.\")\n                }\n                if (!success)\n                  ___setErrNo(29);\n                return success\n              },\n              createLazyFile: function(parent, name, url, canRead, canWrite) {\n                function LazyUint8Array() {\n                  this.lengthKnown = false;\n                  this.chunks = []\n                }\n                LazyUint8Array.prototype.get = function LazyUint8Array_get(idx) {\n                  if (idx > this.length - 1 || idx < 0) {\n                    return undefined\n                  }\n                  var chunkOffset = idx % this.chunkSize;\n                  var chunkNum = idx / this.chunkSize | 0;\n                  return this.getter(chunkNum)[chunkOffset]\n                }\n                ;\n                LazyUint8Array.prototype.setDataGetter = function LazyUint8Array_setDataGetter(getter) {\n                  this.getter = getter\n                }\n                ;\n                LazyUint8Array.prototype.cacheLength = function LazyUint8Array_cacheLength() {\n                  var xhr = new XMLHttpRequest;\n                  xhr.open(\"HEAD\", url, false);\n                  xhr.send(null);\n                  if (!(xhr.status >= 200 && xhr.status < 300 || xhr.status === 304))\n                    throw new Error(\"Couldn't load \" + url + \". Status: \" + xhr.status);\n                  var datalength = Number(xhr.getResponseHeader(\"Content-length\"));\n                  var header;\n                  var hasByteServing = (header = xhr.getResponseHeader(\"Accept-Ranges\")) && header === \"bytes\";\n                  var usesGzip = (header = xhr.getResponseHeader(\"Content-Encoding\")) && header === \"gzip\";\n                  var chunkSize = 1024 * 1024;\n                  if (!hasByteServing)\n                    chunkSize = datalength;\n                  var doXHR = function(from, to) {\n                    if (from > to)\n                      throw new Error(\"invalid range (\" + from + \", \" + to + \") or no bytes requested!\");\n                    if (to > datalength - 1)\n                      throw new Error(\"only \" + datalength + \" bytes available! programmer error!\");\n                    var xhr = new XMLHttpRequest;\n                    xhr.open(\"GET\", url, false);\n                    if (datalength !== chunkSize)\n                      xhr.setRequestHeader(\"Range\", \"bytes=\" + from + \"-\" + to);\n                    if (typeof Uint8Array != \"undefined\")\n                      xhr.responseType = \"arraybuffer\";\n                    if (xhr.overrideMimeType) {\n                      xhr.overrideMimeType(\"text/plain; charset=x-user-defined\")\n                    }\n                    xhr.send(null);\n                    if (!(xhr.status >= 200 && xhr.status < 300 || xhr.status === 304))\n                      throw new Error(\"Couldn't load \" + url + \". Status: \" + xhr.status);\n                    if (xhr.response !== undefined) {\n                      return new Uint8Array(xhr.response || [])\n                    } else {\n                      return intArrayFromString(xhr.responseText || \"\", true)\n                    }\n                  };\n                  var lazyArray = this;\n                  lazyArray.setDataGetter(function(chunkNum) {\n                    var start = chunkNum * chunkSize;\n                    var end = (chunkNum + 1) * chunkSize - 1;\n                    end = Math.min(end, datalength - 1);\n                    if (typeof lazyArray.chunks[chunkNum] === \"undefined\") {\n                      lazyArray.chunks[chunkNum] = doXHR(start, end)\n                    }\n                    if (typeof lazyArray.chunks[chunkNum] === \"undefined\")\n                      throw new Error(\"doXHR failed!\");\n                    return lazyArray.chunks[chunkNum]\n                  });\n                  if (usesGzip || !datalength) {\n                    chunkSize = datalength = 1;\n                    datalength = this.getter(0).length;\n                    chunkSize = datalength;\n                    out(\"LazyFiles on gzip forces download of the whole file when length is accessed\")\n                  }\n                  this._length = datalength;\n                  this._chunkSize = chunkSize;\n                  this.lengthKnown = true\n                }\n                ;\n                if (typeof XMLHttpRequest !== \"undefined\") {\n                  if (!ENVIRONMENT_IS_WORKER)\n                    throw \"Cannot do synchronous binary XHRs outside webworkers in modern browsers. Use --embed-file or --preload-file in emcc\";\n                  var lazyArray = new LazyUint8Array;\n                  Object.defineProperties(lazyArray, {\n                    length: {\n                      get: function() {\n                        if (!this.lengthKnown) {\n                          this.cacheLength()\n                        }\n                        return this._length\n                      }\n                    },\n                    chunkSize: {\n                      get: function() {\n                        if (!this.lengthKnown) {\n                          this.cacheLength()\n                        }\n                        return this._chunkSize\n                      }\n                    }\n                  });\n                  var properties = {\n                    isDevice: false,\n                    contents: lazyArray\n                  }\n                } else {\n                  var properties = {\n                    isDevice: false,\n                    url: url\n                  }\n                }\n                var node = FS.createFile(parent, name, properties, canRead, canWrite);\n                if (properties.contents) {\n                  node.contents = properties.contents\n                } else if (properties.url) {\n                  node.contents = null;\n                  node.url = properties.url\n                }\n                Object.defineProperties(node, {\n                  usedBytes: {\n                    get: function() {\n                      return this.contents.length\n                    }\n                  }\n                });\n                var stream_ops = {};\n                var keys = Object.keys(node.stream_ops);\n                keys.forEach(function(key) {\n                  var fn = node.stream_ops[key];\n                  stream_ops[key] = function forceLoadLazyFile() {\n                    if (!FS.forceLoadFile(node)) {\n                      throw new FS.ErrnoError(29)\n                    }\n                    return fn.apply(null, arguments)\n                  }\n                });\n                stream_ops.read = function stream_ops_read(stream, buffer, offset, length, position) {\n                  if (!FS.forceLoadFile(node)) {\n                    throw new FS.ErrnoError(29)\n                  }\n                  var contents = stream.node.contents;\n                  if (position >= contents.length)\n                    return 0;\n                  var size = Math.min(contents.length - position, length);\n                  if (contents.slice) {\n                    for (var i = 0; i < size; i++) {\n                      buffer[offset + i] = contents[position + i]\n                    }\n                  } else {\n                    for (var i = 0; i < size; i++) {\n                      buffer[offset + i] = contents.get(position + i)\n                    }\n                  }\n                  return size\n                }\n                ;\n                node.stream_ops = stream_ops;\n                return node\n              },\n              createPreloadedFile: function(parent, name, url, canRead, canWrite, onload, onerror, dontCreateFile, canOwn, preFinish) {\n                Browser.init();\n                var fullname = name ? PATH_FS.resolve(PATH.join2(parent, name)) : parent;\n                var dep = getUniqueRunDependency(\"cp \" + fullname);\n                function processData(byteArray) {\n                  function finish(byteArray) {\n                    if (preFinish)\n                      preFinish();\n                    if (!dontCreateFile) {\n                      FS.createDataFile(parent, name, byteArray, canRead, canWrite, canOwn)\n                    }\n                    if (onload)\n                      onload();\n                    removeRunDependency(dep)\n                  }\n                  var handled = false;\n                  Module[\"preloadPlugins\"].forEach(function(plugin) {\n                    if (handled)\n                      return;\n                    if (plugin[\"canHandle\"](fullname)) {\n                      plugin[\"handle\"](byteArray, fullname, finish, function() {\n                        if (onerror)\n                          onerror();\n                        removeRunDependency(dep)\n                      });\n                      handled = true\n                    }\n                  });\n                  if (!handled)\n                    finish(byteArray)\n                }\n                addRunDependency(dep);\n                if (typeof url == \"string\") {\n                  Browser.asyncLoad(url, function(byteArray) {\n                    processData(byteArray)\n                  }, onerror)\n                } else {\n                  processData(url)\n                }\n              },\n              indexedDB: function() {\n                return window.indexedDB || window.mozIndexedDB || window.webkitIndexedDB || window.msIndexedDB\n              },\n              DB_NAME: function() {\n                return \"EM_FS_\" + window.location.pathname\n              },\n              DB_VERSION: 20,\n              DB_STORE_NAME: \"FILE_DATA\",\n              saveFilesToDB: function(paths, onload, onerror) {\n                onload = onload || function() {}\n                ;\n                onerror = onerror || function() {}\n                ;\n                var indexedDB = FS.indexedDB();\n                try {\n                  var openRequest = indexedDB.open(FS.DB_NAME(), FS.DB_VERSION)\n                } catch (e) {\n                  return onerror(e)\n                }\n                openRequest.onupgradeneeded = function openRequest_onupgradeneeded() {\n                  out(\"creating db\");\n                  var db = openRequest.result;\n                  db.createObjectStore(FS.DB_STORE_NAME)\n                }\n                ;\n                openRequest.onsuccess = function openRequest_onsuccess() {\n                  var db = openRequest.result;\n                  var transaction = db.transaction([FS.DB_STORE_NAME], \"readwrite\");\n                  var files = transaction.objectStore(FS.DB_STORE_NAME);\n                  var ok = 0\n                      , fail = 0\n                      , total = paths.length;\n                  function finish() {\n                    if (fail == 0)\n                      onload();\n                    else\n                      onerror()\n                  }\n                  paths.forEach(function(path) {\n                    var putRequest = files.put(FS.analyzePath(path).object.contents, path);\n                    putRequest.onsuccess = function putRequest_onsuccess() {\n                      ok++;\n                      if (ok + fail == total)\n                        finish()\n                    }\n                    ;\n                    putRequest.onerror = function putRequest_onerror() {\n                      fail++;\n                      if (ok + fail == total)\n                        finish()\n                    }\n                  });\n                  transaction.onerror = onerror\n                }\n                ;\n                openRequest.onerror = onerror\n              },\n              loadFilesFromDB: function(paths, onload, onerror) {\n                onload = onload || function() {}\n                ;\n                onerror = onerror || function() {}\n                ;\n                var indexedDB = FS.indexedDB();\n                try {\n                  var openRequest = indexedDB.open(FS.DB_NAME(), FS.DB_VERSION)\n                } catch (e) {\n                  return onerror(e)\n                }\n                openRequest.onupgradeneeded = onerror;\n                openRequest.onsuccess = function openRequest_onsuccess() {\n                  var db = openRequest.result;\n                  try {\n                    var transaction = db.transaction([FS.DB_STORE_NAME], \"readonly\")\n                  } catch (e) {\n                    onerror(e);\n                    return\n                  }\n                  var files = transaction.objectStore(FS.DB_STORE_NAME);\n                  var ok = 0\n                      , fail = 0\n                      , total = paths.length;\n                  function finish() {\n                    if (fail == 0)\n                      onload();\n                    else\n                      onerror()\n                  }\n                  paths.forEach(function(path) {\n                    var getRequest = files.get(path);\n                    getRequest.onsuccess = function getRequest_onsuccess() {\n                      if (FS.analyzePath(path).exists) {\n                        FS.unlink(path)\n                      }\n                      FS.createDataFile(PATH.dirname(path), PATH.basename(path), getRequest.result, true, true, true);\n                      ok++;\n                      if (ok + fail == total)\n                        finish()\n                    }\n                    ;\n                    getRequest.onerror = function getRequest_onerror() {\n                      fail++;\n                      if (ok + fail == total)\n                        finish()\n                    }\n                  });\n                  transaction.onerror = onerror\n                }\n                ;\n                openRequest.onerror = onerror\n              }\n            };\n            var SYSCALLS = {\n              mappings: {},\n              DEFAULT_POLLMASK: 5,\n              umask: 511,\n              calculateAt: function(dirfd, path) {\n                if (path[0] !== \"/\") {\n                  var dir;\n                  if (dirfd === -100) {\n                    dir = FS.cwd()\n                  } else {\n                    var dirstream = FS.getStream(dirfd);\n                    if (!dirstream)\n                      throw new FS.ErrnoError(8);\n                    dir = dirstream.path\n                  }\n                  path = PATH.join2(dir, path)\n                }\n                return path\n              },\n              doStat: function(func, path, buf) {\n                try {\n                  var stat = func(path)\n                } catch (e) {\n                  if (e && e.node && PATH.normalize(path) !== PATH.normalize(FS.getPath(e.node))) {\n                    return -54\n                  }\n                  throw e\n                }\n                HEAP32[buf >> 2] = stat.dev;\n                HEAP32[buf + 4 >> 2] = 0;\n                HEAP32[buf + 8 >> 2] = stat.ino;\n                HEAP32[buf + 12 >> 2] = stat.mode;\n                HEAP32[buf + 16 >> 2] = stat.nlink;\n                HEAP32[buf + 20 >> 2] = stat.uid;\n                HEAP32[buf + 24 >> 2] = stat.gid;\n                HEAP32[buf + 28 >> 2] = stat.rdev;\n                HEAP32[buf + 32 >> 2] = 0;\n                tempI64 = [stat.size >>> 0, (tempDouble = stat.size,\n                    +Math_abs(tempDouble) >= 1 ? tempDouble > 0 ? (Math_min(+Math_floor(tempDouble / 4294967296), 4294967295) | 0) >>> 0 : ~~+Math_ceil((tempDouble - +(~~tempDouble >>> 0)) / 4294967296) >>> 0 : 0)],\n                    HEAP32[buf + 40 >> 2] = tempI64[0],\n                    HEAP32[buf + 44 >> 2] = tempI64[1];\n                HEAP32[buf + 48 >> 2] = 4096;\n                HEAP32[buf + 52 >> 2] = stat.blocks;\n                HEAP32[buf + 56 >> 2] = stat.atime.getTime() / 1e3 | 0;\n                HEAP32[buf + 60 >> 2] = 0;\n                HEAP32[buf + 64 >> 2] = stat.mtime.getTime() / 1e3 | 0;\n                HEAP32[buf + 68 >> 2] = 0;\n                HEAP32[buf + 72 >> 2] = stat.ctime.getTime() / 1e3 | 0;\n                HEAP32[buf + 76 >> 2] = 0;\n                tempI64 = [stat.ino >>> 0, (tempDouble = stat.ino,\n                    +Math_abs(tempDouble) >= 1 ? tempDouble > 0 ? (Math_min(+Math_floor(tempDouble / 4294967296), 4294967295) | 0) >>> 0 : ~~+Math_ceil((tempDouble - +(~~tempDouble >>> 0)) / 4294967296) >>> 0 : 0)],\n                    HEAP32[buf + 80 >> 2] = tempI64[0],\n                    HEAP32[buf + 84 >> 2] = tempI64[1];\n                return 0\n              },\n              doMsync: function(addr, stream, len, flags, offset) {\n                var buffer = HEAPU8.slice(addr, addr + len);\n                FS.msync(stream, buffer, offset, len, flags)\n              },\n              doMkdir: function(path, mode) {\n                path = PATH.normalize(path);\n                if (path[path.length - 1] === \"/\")\n                  path = path.substr(0, path.length - 1);\n                FS.mkdir(path, mode, 0);\n                return 0\n              },\n              doMknod: function(path, mode, dev) {\n                switch (mode & 61440) {\n                  case 32768:\n                  case 8192:\n                  case 24576:\n                  case 4096:\n                  case 49152:\n                    break;\n                  default:\n                    return -28\n                }\n                FS.mknod(path, mode, dev);\n                return 0\n              },\n              doReadlink: function(path, buf, bufsize) {\n                if (bufsize <= 0)\n                  return -28;\n                var ret = FS.readlink(path);\n                var len = Math.min(bufsize, lengthBytesUTF8(ret));\n                var endChar = HEAP8[buf + len];\n                stringToUTF8(ret, buf, bufsize + 1);\n                HEAP8[buf + len] = endChar;\n                return len\n              },\n              doAccess: function(path, amode) {\n                if (amode & ~7) {\n                  return -28\n                }\n                var node;\n                var lookup = FS.lookupPath(path, {\n                  follow: true\n                });\n                node = lookup.node;\n                if (!node) {\n                  return -44\n                }\n                var perms = \"\";\n                if (amode & 4)\n                  perms += \"r\";\n                if (amode & 2)\n                  perms += \"w\";\n                if (amode & 1)\n                  perms += \"x\";\n                if (perms && FS.nodePermissions(node, perms)) {\n                  return -2\n                }\n                return 0\n              },\n              doDup: function(path, flags, suggestFD) {\n                var suggest = FS.getStream(suggestFD);\n                if (suggest)\n                  FS.close(suggest);\n                return FS.open(path, flags, 0, suggestFD, suggestFD).fd\n              },\n              doReadv: function(stream, iov, iovcnt, offset) {\n                var ret = 0;\n                for (var i = 0; i < iovcnt; i++) {\n                  var ptr = HEAP32[iov + i * 8 >> 2];\n                  var len = HEAP32[iov + (i * 8 + 4) >> 2];\n                  var curr = FS.read(stream, HEAP8, ptr, len, offset);\n                  if (curr < 0)\n                    return -1;\n                  ret += curr;\n                  if (curr < len)\n                    break\n                }\n                return ret\n              },\n              doWritev: function(stream, iov, iovcnt, offset) {\n                var ret = 0;\n                for (var i = 0; i < iovcnt; i++) {\n                  var ptr = HEAP32[iov + i * 8 >> 2];\n                  var len = HEAP32[iov + (i * 8 + 4) >> 2];\n                  var curr = FS.write(stream, HEAP8, ptr, len, offset);\n                  if (curr < 0)\n                    return -1;\n                  ret += curr\n                }\n                return ret\n              },\n              varargs: undefined,\n              get: function() {\n                SYSCALLS.varargs += 4;\n                var ret = HEAP32[SYSCALLS.varargs - 4 >> 2];\n                return ret\n              },\n              getStr: function(ptr) {\n                var ret = UTF8ToString(ptr);\n                return ret\n              },\n              getStreamFromFD: function(fd) {\n                var stream = FS.getStream(fd);\n                if (!stream)\n                  throw new FS.ErrnoError(8);\n                return stream\n              },\n              get64: function(low, high) {\n                return low\n              }\n            };\n            function ___syscall221(fd, cmd, varargs) {\n              SYSCALLS.varargs = varargs;\n              try {\n                var stream = SYSCALLS.getStreamFromFD(fd);\n                switch (cmd) {\n                  case 0:\n                  {\n                    var arg = SYSCALLS.get();\n                    if (arg < 0) {\n                      return -28\n                    }\n                    var newStream;\n                    newStream = FS.open(stream.path, stream.flags, 0, arg);\n                    return newStream.fd\n                  }\n                  case 1:\n                  case 2:\n                    return 0;\n                  case 3:\n                    return stream.flags;\n                  case 4:\n                  {\n                    var arg = SYSCALLS.get();\n                    stream.flags |= arg;\n                    return 0\n                  }\n                  case 12:\n                  {\n                    var arg = SYSCALLS.get();\n                    var offset = 0;\n                    HEAP16[arg + offset >> 1] = 2;\n                    return 0\n                  }\n                  case 13:\n                  case 14:\n                    return 0;\n                  case 16:\n                  case 8:\n                    return -28;\n                  case 9:\n                    ___setErrNo(28);\n                    return -1;\n                  default:\n                  {\n                    return -28\n                  }\n                }\n              } catch (e) {\n                if (typeof FS === \"undefined\" || !(e instanceof FS.ErrnoError))\n                  abort(e);\n                return -e.errno\n              }\n            }\n            function ___syscall5(path, flags, varargs) {\n              SYSCALLS.varargs = varargs;\n              try {\n                var pathname = SYSCALLS.getStr(path);\n                var mode = SYSCALLS.get();\n                var stream = FS.open(pathname, flags, mode);\n                return stream.fd\n              } catch (e) {\n                if (typeof FS === \"undefined\" || !(e instanceof FS.ErrnoError))\n                  abort(e);\n                return -e.errno\n              }\n            }\n            function ___syscall54(fd, op, varargs) {\n              SYSCALLS.varargs = varargs;\n              try {\n                var stream = SYSCALLS.getStreamFromFD(fd);\n                switch (op) {\n                  case 21509:\n                  case 21505:\n                  {\n                    if (!stream.tty)\n                      return -59;\n                    return 0\n                  }\n                  case 21510:\n                  case 21511:\n                  case 21512:\n                  case 21506:\n                  case 21507:\n                  case 21508:\n                  {\n                    if (!stream.tty)\n                      return -59;\n                    return 0\n                  }\n                  case 21519:\n                  {\n                    if (!stream.tty)\n                      return -59;\n                    var argp = SYSCALLS.get();\n                    HEAP32[argp >> 2] = 0;\n                    return 0\n                  }\n                  case 21520:\n                  {\n                    if (!stream.tty)\n                      return -59;\n                    return -28\n                  }\n                  case 21531:\n                  {\n                    var argp = SYSCALLS.get();\n                    return FS.ioctl(stream, op, argp)\n                  }\n                  case 21523:\n                  {\n                    if (!stream.tty)\n                      return -59;\n                    return 0\n                  }\n                  case 21524:\n                  {\n                    if (!stream.tty)\n                      return -59;\n                    return 0\n                  }\n                  default:\n                    abort(\"bad ioctl syscall \" + op)\n                }\n              } catch (e) {\n                if (typeof FS === \"undefined\" || !(e instanceof FS.ErrnoError))\n                  abort(e);\n                return -e.errno\n              }\n            }\n            function syscallMunmap(addr, len) {\n              if (addr === -1 || len === 0) {\n                return -28\n              }\n              var info = SYSCALLS.mappings[addr];\n              if (!info)\n                return 0;\n              if (len === info.len) {\n                var stream = FS.getStream(info.fd);\n                SYSCALLS.doMsync(addr, stream, len, info.flags, info.offset);\n                FS.munmap(stream);\n                SYSCALLS.mappings[addr] = null;\n                if (info.allocated) {\n                  _free(info.malloc)\n                }\n              }\n              return 0\n            }\n            function ___syscall91(addr, len) {\n              try {\n                return syscallMunmap(addr, len)\n              } catch (e) {\n                if (typeof FS === \"undefined\" || !(e instanceof FS.ErrnoError))\n                  abort(e);\n                return -e.errno\n              }\n            }\n            function _abort() {\n              abort()\n            }\n            var _abs = Math_abs;\n            function _emscripten_get_heap_size() {\n              return HEAPU8.length\n            }\n            function _emscripten_memcpy_big(dest, src, num) {\n              HEAPU8.copyWithin(dest, src, src + num)\n            }\n            function emscripten_realloc_buffer(size) {\n              try {\n                wasmMemory.grow(size - buffer.byteLength + 65535 >> 16);\n                updateGlobalBufferAndViews(wasmMemory.buffer);\n                return 1\n              } catch (e) {}\n            }\n            function _emscripten_resize_heap(requestedSize) {\n              var oldSize = _emscripten_get_heap_size();\n              var PAGE_MULTIPLE = 65536;\n              var maxHeapSize = 2147483648 - PAGE_MULTIPLE;\n              if (requestedSize > maxHeapSize) {\n                return false\n              }\n              var minHeapSize = 16777216;\n              for (var cutDown = 1; cutDown <= 4; cutDown *= 2) {\n                var overGrownHeapSize = oldSize * (1 + .2 / cutDown);\n                overGrownHeapSize = Math.min(overGrownHeapSize, requestedSize + 100663296);\n                var newSize = Math.min(maxHeapSize, alignUp(Math.max(minHeapSize, requestedSize, overGrownHeapSize), PAGE_MULTIPLE));\n                var replacement = emscripten_realloc_buffer(newSize);\n                if (replacement) {\n                  return true\n                }\n              }\n              return false\n            }\n            var ENV = {};\n            function __getExecutableName() {\n              return thisProgram || \"./this.program\"\n            }\n            function _emscripten_get_environ() {\n              if (!_emscripten_get_environ.strings) {\n                var env = {\n                  \"USER\": \"web_user\",\n                  \"LOGNAME\": \"web_user\",\n                  \"PATH\": \"/\",\n                  \"PWD\": \"/\",\n                  \"HOME\": \"/home/web_user\",\n                  \"LANG\": (typeof navigator === \"object\" && navigator.languages && navigator.languages[0] || \"C\").replace(\"-\", \"_\") + \".UTF-8\",\n                  \"_\": __getExecutableName()\n                };\n                for (var x in ENV) {\n                  env[x] = ENV[x]\n                }\n                var strings = [];\n                for (var x in env) {\n                  strings.push(x + \"=\" + env[x])\n                }\n                _emscripten_get_environ.strings = strings\n              }\n              return _emscripten_get_environ.strings\n            }\n            function _environ_get(__environ, environ_buf) {\n              var strings = _emscripten_get_environ();\n              var bufSize = 0;\n              strings.forEach(function(string, i) {\n                var ptr = environ_buf + bufSize;\n                HEAP32[__environ + i * 4 >> 2] = ptr;\n                writeAsciiToMemory(string, ptr);\n                bufSize += string.length + 1\n              });\n              return 0\n            }\n            function _environ_sizes_get(penviron_count, penviron_buf_size) {\n              var strings = _emscripten_get_environ();\n              HEAP32[penviron_count >> 2] = strings.length;\n              var bufSize = 0;\n              strings.forEach(function(string) {\n                bufSize += string.length + 1\n              });\n              HEAP32[penviron_buf_size >> 2] = bufSize;\n              return 0\n            }\n            function _fd_close(fd) {\n              try {\n                var stream = SYSCALLS.getStreamFromFD(fd);\n                FS.close(stream);\n                return 0\n              } catch (e) {\n                if (typeof FS === \"undefined\" || !(e instanceof FS.ErrnoError))\n                  abort(e);\n                return e.errno\n              }\n            }\n            function _fd_read(fd, iov, iovcnt, pnum) {\n              try {\n                var stream = SYSCALLS.getStreamFromFD(fd);\n                var num = SYSCALLS.doReadv(stream, iov, iovcnt);\n                HEAP32[pnum >> 2] = num;\n                return 0\n              } catch (e) {\n                if (typeof FS === \"undefined\" || !(e instanceof FS.ErrnoError))\n                  abort(e);\n                return e.errno\n              }\n            }\n            function _fd_seek(fd, offset_low, offset_high, whence, newOffset) {\n              try {\n                var stream = SYSCALLS.getStreamFromFD(fd);\n                var HIGH_OFFSET = 4294967296;\n                var offset = offset_high * HIGH_OFFSET + (offset_low >>> 0);\n                var DOUBLE_LIMIT = 9007199254740992;\n                if (offset <= -DOUBLE_LIMIT || offset >= DOUBLE_LIMIT) {\n                  return -61\n                }\n                FS.llseek(stream, offset, whence);\n                tempI64 = [stream.position >>> 0, (tempDouble = stream.position,\n                    +Math_abs(tempDouble) >= 1 ? tempDouble > 0 ? (Math_min(+Math_floor(tempDouble / 4294967296), 4294967295) | 0) >>> 0 : ~~+Math_ceil((tempDouble - +(~~tempDouble >>> 0)) / 4294967296) >>> 0 : 0)],\n                    HEAP32[newOffset >> 2] = tempI64[0],\n                    HEAP32[newOffset + 4 >> 2] = tempI64[1];\n                if (stream.getdents && offset === 0 && whence === 0)\n                  stream.getdents = null;\n                return 0\n              } catch (e) {\n                if (typeof FS === \"undefined\" || !(e instanceof FS.ErrnoError))\n                  abort(e);\n                return e.errno\n              }\n            }\n            function _fd_write(fd, iov, iovcnt, pnum) {\n              try {\n                var stream = SYSCALLS.getStreamFromFD(fd);\n                var num = SYSCALLS.doWritev(stream, iov, iovcnt);\n                HEAP32[pnum >> 2] = num;\n                return 0\n              } catch (e) {\n                if (typeof FS === \"undefined\" || !(e instanceof FS.ErrnoError))\n                  abort(e);\n                return e.errno\n              }\n            }\n            function _round(d) {\n              d = +d;\n              return d >= +0 ? +Math_floor(d + +.5) : +Math_ceil(d - +.5)\n            }\n            function _roundf(d) {\n              d = +d;\n              return d >= +0 ? +Math_floor(d + +.5) : +Math_ceil(d - +.5)\n            }\n            function __isLeapYear(year) {\n              return year % 4 === 0 && (year % 100 !== 0 || year % 400 === 0)\n            }\n            function __arraySum(array, index) {\n              var sum = 0;\n              for (var i = 0; i <= index; sum += array[i++]) {}\n              return sum\n            }\n            var __MONTH_DAYS_LEAP = [31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n            var __MONTH_DAYS_REGULAR = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n            function __addDays(date, days) {\n              var newDate = new Date(date.getTime());\n              while (days > 0) {\n                var leap = __isLeapYear(newDate.getFullYear());\n                var currentMonth = newDate.getMonth();\n                var daysInCurrentMonth = (leap ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR)[currentMonth];\n                if (days > daysInCurrentMonth - newDate.getDate()) {\n                  days -= daysInCurrentMonth - newDate.getDate() + 1;\n                  newDate.setDate(1);\n                  if (currentMonth < 11) {\n                    newDate.setMonth(currentMonth + 1)\n                  } else {\n                    newDate.setMonth(0);\n                    newDate.setFullYear(newDate.getFullYear() + 1)\n                  }\n                } else {\n                  newDate.setDate(newDate.getDate() + days);\n                  return newDate\n                }\n              }\n              return newDate\n            }\n            function _strftime(s, maxsize, format, tm) {\n              var tm_zone = HEAP32[tm + 40 >> 2];\n              var date = {\n                tm_sec: HEAP32[tm >> 2],\n                tm_min: HEAP32[tm + 4 >> 2],\n                tm_hour: HEAP32[tm + 8 >> 2],\n                tm_mday: HEAP32[tm + 12 >> 2],\n                tm_mon: HEAP32[tm + 16 >> 2],\n                tm_year: HEAP32[tm + 20 >> 2],\n                tm_wday: HEAP32[tm + 24 >> 2],\n                tm_yday: HEAP32[tm + 28 >> 2],\n                tm_isdst: HEAP32[tm + 32 >> 2],\n                tm_gmtoff: HEAP32[tm + 36 >> 2],\n                tm_zone: tm_zone ? UTF8ToString(tm_zone) : \"\"\n              };\n              var pattern = UTF8ToString(format);\n              var EXPANSION_RULES_1 = {\n                \"%c\": \"%a %b %d %H:%M:%S %Y\",\n                \"%D\": \"%m/%d/%y\",\n                \"%F\": \"%Y-%m-%d\",\n                \"%h\": \"%b\",\n                \"%r\": \"%I:%M:%S %p\",\n                \"%R\": \"%H:%M\",\n                \"%T\": \"%H:%M:%S\",\n                \"%x\": \"%m/%d/%y\",\n                \"%X\": \"%H:%M:%S\",\n                \"%Ec\": \"%c\",\n                \"%EC\": \"%C\",\n                \"%Ex\": \"%m/%d/%y\",\n                \"%EX\": \"%H:%M:%S\",\n                \"%Ey\": \"%y\",\n                \"%EY\": \"%Y\",\n                \"%Od\": \"%d\",\n                \"%Oe\": \"%e\",\n                \"%OH\": \"%H\",\n                \"%OI\": \"%I\",\n                \"%Om\": \"%m\",\n                \"%OM\": \"%M\",\n                \"%OS\": \"%S\",\n                \"%Ou\": \"%u\",\n                \"%OU\": \"%U\",\n                \"%OV\": \"%V\",\n                \"%Ow\": \"%w\",\n                \"%OW\": \"%W\",\n                \"%Oy\": \"%y\"\n              };\n              for (var rule in EXPANSION_RULES_1) {\n                pattern = pattern.replace(new RegExp(rule,\"g\"), EXPANSION_RULES_1[rule])\n              }\n              var WEEKDAYS = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n              var MONTHS = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n              function leadingSomething(value, digits, character) {\n                var str = typeof value === \"number\" ? value.toString() : value || \"\";\n                while (str.length < digits) {\n                  str = character[0] + str\n                }\n                return str\n              }\n              function leadingNulls(value, digits) {\n                return leadingSomething(value, digits, \"0\")\n              }\n              function compareByDay(date1, date2) {\n                function sgn(value) {\n                  return value < 0 ? -1 : value > 0 ? 1 : 0\n                }\n                var compare;\n                if ((compare = sgn(date1.getFullYear() - date2.getFullYear())) === 0) {\n                  if ((compare = sgn(date1.getMonth() - date2.getMonth())) === 0) {\n                    compare = sgn(date1.getDate() - date2.getDate())\n                  }\n                }\n                return compare\n              }\n              function getFirstWeekStartDate(janFourth) {\n                switch (janFourth.getDay()) {\n                  case 0:\n                    return new Date(janFourth.getFullYear() - 1,11,29);\n                  case 1:\n                    return janFourth;\n                  case 2:\n                    return new Date(janFourth.getFullYear(),0,3);\n                  case 3:\n                    return new Date(janFourth.getFullYear(),0,2);\n                  case 4:\n                    return new Date(janFourth.getFullYear(),0,1);\n                  case 5:\n                    return new Date(janFourth.getFullYear() - 1,11,31);\n                  case 6:\n                    return new Date(janFourth.getFullYear() - 1,11,30)\n                }\n              }\n              function getWeekBasedYear(date) {\n                var thisDate = __addDays(new Date(date.tm_year + 1900,0,1), date.tm_yday);\n                var janFourthThisYear = new Date(thisDate.getFullYear(),0,4);\n                var janFourthNextYear = new Date(thisDate.getFullYear() + 1,0,4);\n                var firstWeekStartThisYear = getFirstWeekStartDate(janFourthThisYear);\n                var firstWeekStartNextYear = getFirstWeekStartDate(janFourthNextYear);\n                if (compareByDay(firstWeekStartThisYear, thisDate) <= 0) {\n                  if (compareByDay(firstWeekStartNextYear, thisDate) <= 0) {\n                    return thisDate.getFullYear() + 1\n                  } else {\n                    return thisDate.getFullYear()\n                  }\n                } else {\n                  return thisDate.getFullYear() - 1\n                }\n              }\n              var EXPANSION_RULES_2 = {\n                \"%a\": function(date) {\n                  return WEEKDAYS[date.tm_wday].substring(0, 3)\n                },\n                \"%A\": function(date) {\n                  return WEEKDAYS[date.tm_wday]\n                },\n                \"%b\": function(date) {\n                  return MONTHS[date.tm_mon].substring(0, 3)\n                },\n                \"%B\": function(date) {\n                  return MONTHS[date.tm_mon]\n                },\n                \"%C\": function(date) {\n                  var year = date.tm_year + 1900;\n                  return leadingNulls(year / 100 | 0, 2)\n                },\n                \"%d\": function(date) {\n                  return leadingNulls(date.tm_mday, 2)\n                },\n                \"%e\": function(date) {\n                  return leadingSomething(date.tm_mday, 2, \" \")\n                },\n                \"%g\": function(date) {\n                  return getWeekBasedYear(date).toString().substring(2)\n                },\n                \"%G\": function(date) {\n                  return getWeekBasedYear(date)\n                },\n                \"%H\": function(date) {\n                  return leadingNulls(date.tm_hour, 2)\n                },\n                \"%I\": function(date) {\n                  var twelveHour = date.tm_hour;\n                  if (twelveHour == 0)\n                    twelveHour = 12;\n                  else if (twelveHour > 12)\n                    twelveHour -= 12;\n                  return leadingNulls(twelveHour, 2)\n                },\n                \"%j\": function(date) {\n                  return leadingNulls(date.tm_mday + __arraySum(__isLeapYear(date.tm_year + 1900) ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR, date.tm_mon - 1), 3)\n                },\n                \"%m\": function(date) {\n                  return leadingNulls(date.tm_mon + 1, 2)\n                },\n                \"%M\": function(date) {\n                  return leadingNulls(date.tm_min, 2)\n                },\n                \"%n\": function() {\n                  return \"\\n\"\n                },\n                \"%p\": function(date) {\n                  if (date.tm_hour >= 0 && date.tm_hour < 12) {\n                    return \"AM\"\n                  } else {\n                    return \"PM\"\n                  }\n                },\n                \"%S\": function(date) {\n                  return leadingNulls(date.tm_sec, 2)\n                },\n                \"%t\": function() {\n                  return \"\\t\"\n                },\n                \"%u\": function(date) {\n                  return date.tm_wday || 7\n                },\n                \"%U\": function(date) {\n                  var janFirst = new Date(date.tm_year + 1900,0,1);\n                  var firstSunday = janFirst.getDay() === 0 ? janFirst : __addDays(janFirst, 7 - janFirst.getDay());\n                  var endDate = new Date(date.tm_year + 1900,date.tm_mon,date.tm_mday);\n                  if (compareByDay(firstSunday, endDate) < 0) {\n                    var februaryFirstUntilEndMonth = __arraySum(__isLeapYear(endDate.getFullYear()) ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR, endDate.getMonth() - 1) - 31;\n                    var firstSundayUntilEndJanuary = 31 - firstSunday.getDate();\n                    var days = firstSundayUntilEndJanuary + februaryFirstUntilEndMonth + endDate.getDate();\n                    return leadingNulls(Math.ceil(days / 7), 2)\n                  }\n                  return compareByDay(firstSunday, janFirst) === 0 ? \"01\" : \"00\"\n                },\n                \"%V\": function(date) {\n                  var janFourthThisYear = new Date(date.tm_year + 1900,0,4);\n                  var janFourthNextYear = new Date(date.tm_year + 1901,0,4);\n                  var firstWeekStartThisYear = getFirstWeekStartDate(janFourthThisYear);\n                  var firstWeekStartNextYear = getFirstWeekStartDate(janFourthNextYear);\n                  var endDate = __addDays(new Date(date.tm_year + 1900,0,1), date.tm_yday);\n                  if (compareByDay(endDate, firstWeekStartThisYear) < 0) {\n                    return \"53\"\n                  }\n                  if (compareByDay(firstWeekStartNextYear, endDate) <= 0) {\n                    return \"01\"\n                  }\n                  var daysDifference;\n                  if (firstWeekStartThisYear.getFullYear() < date.tm_year + 1900) {\n                    daysDifference = date.tm_yday + 32 - firstWeekStartThisYear.getDate()\n                  } else {\n                    daysDifference = date.tm_yday + 1 - firstWeekStartThisYear.getDate()\n                  }\n                  return leadingNulls(Math.ceil(daysDifference / 7), 2)\n                },\n                \"%w\": function(date) {\n                  return date.tm_wday\n                },\n                \"%W\": function(date) {\n                  var janFirst = new Date(date.tm_year,0,1);\n                  var firstMonday = janFirst.getDay() === 1 ? janFirst : __addDays(janFirst, janFirst.getDay() === 0 ? 1 : 7 - janFirst.getDay() + 1);\n                  var endDate = new Date(date.tm_year + 1900,date.tm_mon,date.tm_mday);\n                  if (compareByDay(firstMonday, endDate) < 0) {\n                    var februaryFirstUntilEndMonth = __arraySum(__isLeapYear(endDate.getFullYear()) ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR, endDate.getMonth() - 1) - 31;\n                    var firstMondayUntilEndJanuary = 31 - firstMonday.getDate();\n                    var days = firstMondayUntilEndJanuary + februaryFirstUntilEndMonth + endDate.getDate();\n                    return leadingNulls(Math.ceil(days / 7), 2)\n                  }\n                  return compareByDay(firstMonday, janFirst) === 0 ? \"01\" : \"00\"\n                },\n                \"%y\": function(date) {\n                  return (date.tm_year + 1900).toString().substring(2)\n                },\n                \"%Y\": function(date) {\n                  return date.tm_year + 1900\n                },\n                \"%z\": function(date) {\n                  var off = date.tm_gmtoff;\n                  var ahead = off >= 0;\n                  off = Math.abs(off) / 60;\n                  off = off / 60 * 100 + off % 60;\n                  return (ahead ? \"+\" : \"-\") + String(\"0000\" + off).slice(-4)\n                },\n                \"%Z\": function(date) {\n                  return date.tm_zone\n                },\n                \"%%\": function() {\n                  return \"%\"\n                }\n              };\n              for (var rule in EXPANSION_RULES_2) {\n                if (pattern.indexOf(rule) >= 0) {\n                  pattern = pattern.replace(new RegExp(rule,\"g\"), EXPANSION_RULES_2[rule](date))\n                }\n              }\n              var bytes = intArrayFromString(pattern, false);\n              if (bytes.length > maxsize) {\n                return 0\n              }\n              writeArrayToMemory(bytes, s);\n              return bytes.length - 1\n            }\n            function _strftime_l(s, maxsize, format, tm) {\n              return _strftime(s, maxsize, format, tm)\n            }\n            function readAsmConstArgs(sigPtr, buf) {\n              if (!readAsmConstArgs.array) {\n                readAsmConstArgs.array = []\n              }\n              var args = readAsmConstArgs.array;\n              args.length = 0;\n              var ch;\n              while (ch = HEAPU8[sigPtr++]) {\n                if (ch === 100 || ch === 102) {\n                  buf = buf + 7 & ~7;\n                  args.push(HEAPF64[buf >> 3]);\n                  buf += 8\n                } else {\n                  buf = buf + 3 & ~3;\n                  args.push(HEAP32[buf >> 2]);\n                  buf += 4\n                }\n              }\n              return args\n            }\n            var FSNode = function(parent, name, mode, rdev) {\n              if (!parent) {\n                parent = this\n              }\n              this.parent = parent;\n              this.mount = parent.mount;\n              this.mounted = null;\n              this.id = FS.nextInode++;\n              this.name = name;\n              this.mode = mode;\n              this.node_ops = {};\n              this.stream_ops = {};\n              this.rdev = rdev\n            };\n            var readMode = 292 | 73;\n            var writeMode = 146;\n            Object.defineProperties(FSNode.prototype, {\n              read: {\n                get: function() {\n                  return (this.mode & readMode) === readMode\n                },\n                set: function(val) {\n                  val ? this.mode |= readMode : this.mode &= ~readMode\n                }\n              },\n              write: {\n                get: function() {\n                  return (this.mode & writeMode) === writeMode\n                },\n                set: function(val) {\n                  val ? this.mode |= writeMode : this.mode &= ~writeMode\n                }\n              },\n              isFolder: {\n                get: function() {\n                  return FS.isDir(this.mode)\n                }\n              },\n              isDevice: {\n                get: function() {\n                  return FS.isChrdev(this.mode)\n                }\n              }\n            });\n            FS.FSNode = FSNode;\n            FS.staticInit();\n            function intArrayFromString(stringy, dontAddNull, length) {\n              var len = length > 0 ? length : lengthBytesUTF8(stringy) + 1;\n              var u8array = new Array(len);\n              var numBytesWritten = stringToUTF8Array(stringy, u8array, 0, u8array.length);\n              if (dontAddNull)\n                u8array.length = numBytesWritten;\n              return u8array\n            }\n            var asmLibraryArg = {\n              \"a\": ___assert_fail,\n              \"e\": ___cxa_allocate_exception,\n              \"d\": ___cxa_throw,\n              \"t\": ___map_file,\n              \"f\": ___syscall221,\n              \"l\": ___syscall5,\n              \"k\": ___syscall54,\n              \"s\": ___syscall91,\n              \"i\": _abort,\n              \"m\": _abs,\n              \"c\": _emscripten_asm_const_iii,\n              \"p\": _emscripten_memcpy_big,\n              \"q\": _emscripten_resize_heap,\n              \"u\": _environ_get,\n              \"v\": _environ_sizes_get,\n              \"h\": _fd_close,\n              \"j\": _fd_read,\n              \"n\": _fd_seek,\n              \"g\": _fd_write,\n              \"memory\": wasmMemory,\n              \"b\": _round,\n              \"o\": _roundf,\n              \"r\": _strftime_l,\n              \"table\": wasmTable\n            };\n            var asm = createWasm();\n            Module[\"asm\"] = asm;\n            var ___wasm_call_ctors = Module[\"___wasm_call_ctors\"] = function() {\n                  return (___wasm_call_ctors = Module[\"___wasm_call_ctors\"] = Module[\"asm\"][\"w\"]).apply(null, arguments)\n                }\n            ;\n            var _free = Module[\"_free\"] = function() {\n                  return (_free = Module[\"_free\"] = Module[\"asm\"][\"x\"]).apply(null, arguments)\n                }\n            ;\n            var _malloc = Module[\"_malloc\"] = function() {\n                  return (_malloc = Module[\"_malloc\"] = Module[\"asm\"][\"y\"]).apply(null, arguments)\n                }\n            ;\n            var _gme_open_data = Module[\"_gme_open_data\"] = function() {\n                  return (_gme_open_data = Module[\"_gme_open_data\"] = Module[\"asm\"][\"z\"]).apply(null, arguments)\n                }\n            ;\n            var _gme_delete = Module[\"_gme_delete\"] = function() {\n                  return (_gme_delete = Module[\"_gme_delete\"] = Module[\"asm\"][\"A\"]).apply(null, arguments)\n                }\n            ;\n            var _gme_track_count = Module[\"_gme_track_count\"] = function() {\n                  return (_gme_track_count = Module[\"_gme_track_count\"] = Module[\"asm\"][\"B\"]).apply(null, arguments)\n                }\n            ;\n            var _gme_track_info = Module[\"_gme_track_info\"] = function() {\n                  return (_gme_track_info = Module[\"_gme_track_info\"] = Module[\"asm\"][\"C\"]).apply(null, arguments)\n                }\n            ;\n            var _gme_start_track = Module[\"_gme_start_track\"] = function() {\n                  return (_gme_start_track = Module[\"_gme_start_track\"] = Module[\"asm\"][\"D\"]).apply(null, arguments)\n                }\n            ;\n            var _gme_play = Module[\"_gme_play\"] = function() {\n                  return (_gme_play = Module[\"_gme_play\"] = Module[\"asm\"][\"E\"]).apply(null, arguments)\n                }\n            ;\n            var _gme_set_fade = Module[\"_gme_set_fade\"] = function() {\n                  return (_gme_set_fade = Module[\"_gme_set_fade\"] = Module[\"asm\"][\"F\"]).apply(null, arguments)\n                }\n            ;\n            var _gme_track_ended = Module[\"_gme_track_ended\"] = function() {\n                  return (_gme_track_ended = Module[\"_gme_track_ended\"] = Module[\"asm\"][\"G\"]).apply(null, arguments)\n                }\n            ;\n            var _gme_tell_scaled = Module[\"_gme_tell_scaled\"] = function() {\n                  return (_gme_tell_scaled = Module[\"_gme_tell_scaled\"] = Module[\"asm\"][\"H\"]).apply(null, arguments)\n                }\n            ;\n            var _gme_seek_scaled = Module[\"_gme_seek_scaled\"] = function() {\n                  return (_gme_seek_scaled = Module[\"_gme_seek_scaled\"] = Module[\"asm\"][\"I\"]).apply(null, arguments)\n                }\n            ;\n            var _gme_voice_count = Module[\"_gme_voice_count\"] = function() {\n                  return (_gme_voice_count = Module[\"_gme_voice_count\"] = Module[\"asm\"][\"J\"]).apply(null, arguments)\n                }\n            ;\n            var _gme_ignore_silence = Module[\"_gme_ignore_silence\"] = function() {\n                  return (_gme_ignore_silence = Module[\"_gme_ignore_silence\"] = Module[\"asm\"][\"K\"]).apply(null, arguments)\n                }\n            ;\n            var _gme_set_tempo = Module[\"_gme_set_tempo\"] = function() {\n                  return (_gme_set_tempo = Module[\"_gme_set_tempo\"] = Module[\"asm\"][\"L\"]).apply(null, arguments)\n                }\n            ;\n            var _gme_mute_voices = Module[\"_gme_mute_voices\"] = function() {\n                  return (_gme_mute_voices = Module[\"_gme_mute_voices\"] = Module[\"asm\"][\"M\"]).apply(null, arguments)\n                }\n            ;\n            var _gme_voice_name = Module[\"_gme_voice_name\"] = function() {\n                  return (_gme_voice_name = Module[\"_gme_voice_name\"] = Module[\"asm\"][\"N\"]).apply(null, arguments)\n                }\n            ;\n            var _adl_init = Module[\"_adl_init\"] = function() {\n                  return (_adl_init = Module[\"_adl_init\"] = Module[\"asm\"][\"O\"]).apply(null, arguments)\n                }\n            ;\n            var _adl_setNumChips = Module[\"_adl_setNumChips\"] = function() {\n                  return (_adl_setNumChips = Module[\"_adl_setNumChips\"] = Module[\"asm\"][\"P\"]).apply(null, arguments)\n                }\n            ;\n            var _adl_getNumChips = Module[\"_adl_getNumChips\"] = function() {\n                  return (_adl_getNumChips = Module[\"_adl_getNumChips\"] = Module[\"asm\"][\"Q\"]).apply(null, arguments)\n                }\n            ;\n            var _adl_setBank = Module[\"_adl_setBank\"] = function() {\n                  return (_adl_setBank = Module[\"_adl_setBank\"] = Module[\"asm\"][\"R\"]).apply(null, arguments)\n                }\n            ;\n            var _adl_getBanksCount = Module[\"_adl_getBanksCount\"] = function() {\n                  return (_adl_getBanksCount = Module[\"_adl_getBanksCount\"] = Module[\"asm\"][\"S\"]).apply(null, arguments)\n                }\n            ;\n            var _adl_getBankNames = Module[\"_adl_getBankNames\"] = function() {\n                  return (_adl_getBankNames = Module[\"_adl_getBankNames\"] = Module[\"asm\"][\"T\"]).apply(null, arguments)\n                }\n            ;\n            var _adl_setSoftPanEnabled = Module[\"_adl_setSoftPanEnabled\"] = function() {\n                  return (_adl_setSoftPanEnabled = Module[\"_adl_setSoftPanEnabled\"] = Module[\"asm\"][\"U\"]).apply(null, arguments)\n                }\n            ;\n            var _adl_generate = Module[\"_adl_generate\"] = function() {\n                  return (_adl_generate = Module[\"_adl_generate\"] = Module[\"asm\"][\"V\"]).apply(null, arguments)\n                }\n            ;\n            var _adl_panic = Module[\"_adl_panic\"] = function() {\n                  return (_adl_panic = Module[\"_adl_panic\"] = Module[\"asm\"][\"W\"]).apply(null, arguments)\n                }\n            ;\n            var _adl_rt_resetState = Module[\"_adl_rt_resetState\"] = function() {\n                  return (_adl_rt_resetState = Module[\"_adl_rt_resetState\"] = Module[\"asm\"][\"X\"]).apply(null, arguments)\n                }\n            ;\n            var _adl_rt_noteOn = Module[\"_adl_rt_noteOn\"] = function() {\n                  return (_adl_rt_noteOn = Module[\"_adl_rt_noteOn\"] = Module[\"asm\"][\"Y\"]).apply(null, arguments)\n                }\n            ;\n            var _adl_rt_noteOff = Module[\"_adl_rt_noteOff\"] = function() {\n                  return (_adl_rt_noteOff = Module[\"_adl_rt_noteOff\"] = Module[\"asm\"][\"Z\"]).apply(null, arguments)\n                }\n            ;\n            var _adl_rt_channelAfterTouch = Module[\"_adl_rt_channelAfterTouch\"] = function() {\n                  return (_adl_rt_channelAfterTouch = Module[\"_adl_rt_channelAfterTouch\"] = Module[\"asm\"][\"_\"]).apply(null, arguments)\n                }\n            ;\n            var _adl_rt_controllerChange = Module[\"_adl_rt_controllerChange\"] = function() {\n                  return (_adl_rt_controllerChange = Module[\"_adl_rt_controllerChange\"] = Module[\"asm\"][\"$\"]).apply(null, arguments)\n                }\n            ;\n            var _adl_rt_patchChange = Module[\"_adl_rt_patchChange\"] = function() {\n                  return (_adl_rt_patchChange = Module[\"_adl_rt_patchChange\"] = Module[\"asm\"][\"aa\"]).apply(null, arguments)\n                }\n            ;\n            var _adl_rt_pitchBend = Module[\"_adl_rt_pitchBend\"] = function() {\n                  return (_adl_rt_pitchBend = Module[\"_adl_rt_pitchBend\"] = Module[\"asm\"][\"ba\"]).apply(null, arguments)\n                }\n            ;\n            var _v2m_open = Module[\"_v2m_open\"] = function() {\n                  return (_v2m_open = Module[\"_v2m_open\"] = Module[\"asm\"][\"ca\"]).apply(null, arguments)\n                }\n            ;\n            var _v2m_write_audio = Module[\"_v2m_write_audio\"] = function() {\n                  return (_v2m_write_audio = Module[\"_v2m_write_audio\"] = Module[\"asm\"][\"da\"]).apply(null, arguments)\n                }\n            ;\n            var _v2m_get_position_ms = Module[\"_v2m_get_position_ms\"] = function() {\n                  return (_v2m_get_position_ms = Module[\"_v2m_get_position_ms\"] = Module[\"asm\"][\"ea\"]).apply(null, arguments)\n                }\n            ;\n            var _v2m_get_duration_ms = Module[\"_v2m_get_duration_ms\"] = function() {\n                  return (_v2m_get_duration_ms = Module[\"_v2m_get_duration_ms\"] = Module[\"asm\"][\"fa\"]).apply(null, arguments)\n                }\n            ;\n            var _v2m_seek_ms = Module[\"_v2m_seek_ms\"] = function() {\n                  return (_v2m_seek_ms = Module[\"_v2m_seek_ms\"] = Module[\"asm\"][\"ga\"]).apply(null, arguments)\n                }\n            ;\n            var _v2m_set_speed = Module[\"_v2m_set_speed\"] = function() {\n                  return (_v2m_set_speed = Module[\"_v2m_set_speed\"] = Module[\"asm\"][\"ha\"]).apply(null, arguments)\n                }\n            ;\n            var _v2m_close = Module[\"_v2m_close\"] = function() {\n                  return (_v2m_close = Module[\"_v2m_close\"] = Module[\"asm\"][\"ia\"]).apply(null, arguments)\n                }\n            ;\n            var _xmp_start_player = Module[\"_xmp_start_player\"] = function() {\n                  return (_xmp_start_player = Module[\"_xmp_start_player\"] = Module[\"asm\"][\"ja\"]).apply(null, arguments)\n                }\n            ;\n            var _xmp_end_player = Module[\"_xmp_end_player\"] = function() {\n                  return (_xmp_end_player = Module[\"_xmp_end_player\"] = Module[\"asm\"][\"ka\"]).apply(null, arguments)\n                }\n            ;\n            var _xmp_play_buffer = Module[\"_xmp_play_buffer\"] = function() {\n                  return (_xmp_play_buffer = Module[\"_xmp_play_buffer\"] = Module[\"asm\"][\"la\"]).apply(null, arguments)\n                }\n            ;\n            var _xmp_get_frame_info = Module[\"_xmp_get_frame_info\"] = function() {\n                  return (_xmp_get_frame_info = Module[\"_xmp_get_frame_info\"] = Module[\"asm\"][\"ma\"]).apply(null, arguments)\n                }\n            ;\n            var _xmp_get_module_info = Module[\"_xmp_get_module_info\"] = function() {\n                  return (_xmp_get_module_info = Module[\"_xmp_get_module_info\"] = Module[\"asm\"][\"na\"]).apply(null, arguments)\n                }\n            ;\n            var _xmp_create_context = Module[\"_xmp_create_context\"] = function() {\n                  return (_xmp_create_context = Module[\"_xmp_create_context\"] = Module[\"asm\"][\"oa\"]).apply(null, arguments)\n                }\n            ;\n            var _xmp_stop_module = Module[\"_xmp_stop_module\"] = function() {\n                  return (_xmp_stop_module = Module[\"_xmp_stop_module\"] = Module[\"asm\"][\"pa\"]).apply(null, arguments)\n                }\n            ;\n            var _xmp_restart_module = Module[\"_xmp_restart_module\"] = function() {\n                  return (_xmp_restart_module = Module[\"_xmp_restart_module\"] = Module[\"asm\"][\"qa\"]).apply(null, arguments)\n                }\n            ;\n            var _xmp_seek_time = Module[\"_xmp_seek_time\"] = function() {\n                  return (_xmp_seek_time = Module[\"_xmp_seek_time\"] = Module[\"asm\"][\"ra\"]).apply(null, arguments)\n                }\n            ;\n            var _xmp_channel_mute = Module[\"_xmp_channel_mute\"] = function() {\n                  return (_xmp_channel_mute = Module[\"_xmp_channel_mute\"] = Module[\"asm\"][\"sa\"]).apply(null, arguments)\n                }\n            ;\n            var _xmp_get_player = Module[\"_xmp_get_player\"] = function() {\n                  return (_xmp_get_player = Module[\"_xmp_get_player\"] = Module[\"asm\"][\"ta\"]).apply(null, arguments)\n                }\n            ;\n            var _xmp_get_format_list = Module[\"_xmp_get_format_list\"] = function() {\n                  return (_xmp_get_format_list = Module[\"_xmp_get_format_list\"] = Module[\"asm\"][\"ua\"]).apply(null, arguments)\n                }\n            ;\n            var _xmp_inject_event = Module[\"_xmp_inject_event\"] = function() {\n                  return (_xmp_inject_event = Module[\"_xmp_inject_event\"] = Module[\"asm\"][\"va\"]).apply(null, arguments)\n                }\n            ;\n            var _xmp_load_module_from_memory = Module[\"_xmp_load_module_from_memory\"] = function() {\n                  return (_xmp_load_module_from_memory = Module[\"_xmp_load_module_from_memory\"] = Module[\"asm\"][\"wa\"]).apply(null, arguments)\n                }\n            ;\n            var _new_fluid_settings = Module[\"_new_fluid_settings\"] = function() {\n                  return (_new_fluid_settings = Module[\"_new_fluid_settings\"] = Module[\"asm\"][\"xa\"]).apply(null, arguments)\n                }\n            ;\n            var _fluid_settings_setstr = Module[\"_fluid_settings_setstr\"] = function() {\n                  return (_fluid_settings_setstr = Module[\"_fluid_settings_setstr\"] = Module[\"asm\"][\"ya\"]).apply(null, arguments)\n                }\n            ;\n            var _fluid_settings_setnum = Module[\"_fluid_settings_setnum\"] = function() {\n                  return (_fluid_settings_setnum = Module[\"_fluid_settings_setnum\"] = Module[\"asm\"][\"za\"]).apply(null, arguments)\n                }\n            ;\n            var _fluid_settings_setint = Module[\"_fluid_settings_setint\"] = function() {\n                  return (_fluid_settings_setint = Module[\"_fluid_settings_setint\"] = Module[\"asm\"][\"Aa\"]).apply(null, arguments)\n                }\n            ;\n            var _new_fluid_synth = Module[\"_new_fluid_synth\"] = function() {\n                  return (_new_fluid_synth = Module[\"_new_fluid_synth\"] = Module[\"asm\"][\"Ba\"]).apply(null, arguments)\n                }\n            ;\n            var _fluid_synth_set_reverb = Module[\"_fluid_synth_set_reverb\"] = function() {\n                  return (_fluid_synth_set_reverb = Module[\"_fluid_synth_set_reverb\"] = Module[\"asm\"][\"Ca\"]).apply(null, arguments)\n                }\n            ;\n            var _fluid_synth_noteon = Module[\"_fluid_synth_noteon\"] = function() {\n                  return (_fluid_synth_noteon = Module[\"_fluid_synth_noteon\"] = Module[\"asm\"][\"Da\"]).apply(null, arguments)\n                }\n            ;\n            var _fluid_synth_noteoff = Module[\"_fluid_synth_noteoff\"] = function() {\n                  return (_fluid_synth_noteoff = Module[\"_fluid_synth_noteoff\"] = Module[\"asm\"][\"Ea\"]).apply(null, arguments)\n                }\n            ;\n            var _fluid_synth_all_notes_off = Module[\"_fluid_synth_all_notes_off\"] = function() {\n                  return (_fluid_synth_all_notes_off = Module[\"_fluid_synth_all_notes_off\"] = Module[\"asm\"][\"Fa\"]).apply(null, arguments)\n                }\n            ;\n            var _fluid_synth_all_sounds_off = Module[\"_fluid_synth_all_sounds_off\"] = function() {\n                  return (_fluid_synth_all_sounds_off = Module[\"_fluid_synth_all_sounds_off\"] = Module[\"asm\"][\"Ga\"]).apply(null, arguments)\n                }\n            ;\n            var _fluid_synth_write_float = Module[\"_fluid_synth_write_float\"] = function() {\n                  return (_fluid_synth_write_float = Module[\"_fluid_synth_write_float\"] = Module[\"asm\"][\"Ha\"]).apply(null, arguments)\n                }\n            ;\n            var _fluid_synth_sfload = Module[\"_fluid_synth_sfload\"] = function() {\n                  return (_fluid_synth_sfload = Module[\"_fluid_synth_sfload\"] = Module[\"asm\"][\"Ia\"]).apply(null, arguments)\n                }\n            ;\n            var _tp_note_on = Module[\"_tp_note_on\"] = function() {\n                  return (_tp_note_on = Module[\"_tp_note_on\"] = Module[\"asm\"][\"Ja\"]).apply(null, arguments)\n                }\n            ;\n            var _tp_note_off = Module[\"_tp_note_off\"] = function() {\n                  return (_tp_note_off = Module[\"_tp_note_off\"] = Module[\"asm\"][\"Ka\"]).apply(null, arguments)\n                }\n            ;\n            var _tp_program_change = Module[\"_tp_program_change\"] = function() {\n                  return (_tp_program_change = Module[\"_tp_program_change\"] = Module[\"asm\"][\"La\"]).apply(null, arguments)\n                }\n            ;\n            var _tp_pitch_bend = Module[\"_tp_pitch_bend\"] = function() {\n                  return (_tp_pitch_bend = Module[\"_tp_pitch_bend\"] = Module[\"asm\"][\"Ma\"]).apply(null, arguments)\n                }\n            ;\n            var _tp_control_change = Module[\"_tp_control_change\"] = function() {\n                  return (_tp_control_change = Module[\"_tp_control_change\"] = Module[\"asm\"][\"Na\"]).apply(null, arguments)\n                }\n            ;\n            var _tp_channel_pressure = Module[\"_tp_channel_pressure\"] = function() {\n                  return (_tp_channel_pressure = Module[\"_tp_channel_pressure\"] = Module[\"asm\"][\"Oa\"]).apply(null, arguments)\n                }\n            ;\n            var _tp_render = Module[\"_tp_render\"] = function() {\n                  return (_tp_render = Module[\"_tp_render\"] = Module[\"asm\"][\"Pa\"]).apply(null, arguments)\n                }\n            ;\n            var _tp_panic = Module[\"_tp_panic\"] = function() {\n                  return (_tp_panic = Module[\"_tp_panic\"] = Module[\"asm\"][\"Qa\"]).apply(null, arguments)\n                }\n            ;\n            var _tp_panic_channel = Module[\"_tp_panic_channel\"] = function() {\n                  return (_tp_panic_channel = Module[\"_tp_panic_channel\"] = Module[\"asm\"][\"Ra\"]).apply(null, arguments)\n                }\n            ;\n            var _tp_reset = Module[\"_tp_reset\"] = function() {\n                  return (_tp_reset = Module[\"_tp_reset\"] = Module[\"asm\"][\"Sa\"]).apply(null, arguments)\n                }\n            ;\n            var _tp_init = Module[\"_tp_init\"] = function() {\n                  return (_tp_init = Module[\"_tp_init\"] = Module[\"asm\"][\"Ta\"]).apply(null, arguments)\n                }\n            ;\n            var _tp_write_audio = Module[\"_tp_write_audio\"] = function() {\n                  return (_tp_write_audio = Module[\"_tp_write_audio\"] = Module[\"asm\"][\"Ua\"]).apply(null, arguments)\n                }\n            ;\n            var _tp_get_duration_ms = Module[\"_tp_get_duration_ms\"] = function() {\n                  return (_tp_get_duration_ms = Module[\"_tp_get_duration_ms\"] = Module[\"asm\"][\"Va\"]).apply(null, arguments)\n                }\n            ;\n            var _tp_seek = Module[\"_tp_seek\"] = function() {\n                  return (_tp_seek = Module[\"_tp_seek\"] = Module[\"asm\"][\"Wa\"]).apply(null, arguments)\n                }\n            ;\n            var _tp_get_position_ms = Module[\"_tp_get_position_ms\"] = function() {\n                  return (_tp_get_position_ms = Module[\"_tp_get_position_ms\"] = Module[\"asm\"][\"Xa\"]).apply(null, arguments)\n                }\n            ;\n            var _tp_set_speed = Module[\"_tp_set_speed\"] = function() {\n                  return (_tp_set_speed = Module[\"_tp_set_speed\"] = Module[\"asm\"][\"Ya\"]).apply(null, arguments)\n                }\n            ;\n            var _tp_stop = Module[\"_tp_stop\"] = function() {\n                  return (_tp_stop = Module[\"_tp_stop\"] = Module[\"asm\"][\"Za\"]).apply(null, arguments)\n                }\n            ;\n            var _tp_open = Module[\"_tp_open\"] = function() {\n                  return (_tp_open = Module[\"_tp_open\"] = Module[\"asm\"][\"_a\"]).apply(null, arguments)\n                }\n            ;\n            var _tp_unload_soundfont = Module[\"_tp_unload_soundfont\"] = function() {\n                  return (_tp_unload_soundfont = Module[\"_tp_unload_soundfont\"] = Module[\"asm\"][\"$a\"]).apply(null, arguments)\n                }\n            ;\n            var _tp_load_soundfont = Module[\"_tp_load_soundfont\"] = function() {\n                  return (_tp_load_soundfont = Module[\"_tp_load_soundfont\"] = Module[\"asm\"][\"ab\"]).apply(null, arguments)\n                }\n            ;\n            var _tp_add_soundfont = Module[\"_tp_add_soundfont\"] = function() {\n                  return (_tp_add_soundfont = Module[\"_tp_add_soundfont\"] = Module[\"asm\"][\"bb\"]).apply(null, arguments)\n                }\n            ;\n            var _tp_set_reverb = Module[\"_tp_set_reverb\"] = function() {\n                  return (_tp_set_reverb = Module[\"_tp_set_reverb\"] = Module[\"asm\"][\"cb\"]).apply(null, arguments)\n                }\n            ;\n            var _tp_get_channel_in_use = Module[\"_tp_get_channel_in_use\"] = function() {\n                  return (_tp_get_channel_in_use = Module[\"_tp_get_channel_in_use\"] = Module[\"asm\"][\"db\"]).apply(null, arguments)\n                }\n            ;\n            var _tp_get_channel_program = Module[\"_tp_get_channel_program\"] = function() {\n                  return (_tp_get_channel_program = Module[\"_tp_get_channel_program\"] = Module[\"asm\"][\"eb\"]).apply(null, arguments)\n                }\n            ;\n            var _tp_set_channel_mute = Module[\"_tp_set_channel_mute\"] = function() {\n                  return (_tp_set_channel_mute = Module[\"_tp_set_channel_mute\"] = Module[\"asm\"][\"fb\"]).apply(null, arguments)\n                }\n            ;\n            var _tp_set_bank = Module[\"_tp_set_bank\"] = function() {\n                  return (_tp_set_bank = Module[\"_tp_set_bank\"] = Module[\"asm\"][\"gb\"]).apply(null, arguments)\n                }\n            ;\n            var _tp_set_synth_engine = Module[\"_tp_set_synth_engine\"] = function() {\n                  return (_tp_set_synth_engine = Module[\"_tp_set_synth_engine\"] = Module[\"asm\"][\"hb\"]).apply(null, arguments)\n                }\n            ;\n            var _cqt_init = Module[\"_cqt_init\"] = function() {\n                  return (_cqt_init = Module[\"_cqt_init\"] = Module[\"asm\"][\"ib\"]).apply(null, arguments)\n                }\n            ;\n            var _cqt_calc = Module[\"_cqt_calc\"] = function() {\n                  return (_cqt_calc = Module[\"_cqt_calc\"] = Module[\"asm\"][\"jb\"]).apply(null, arguments)\n                }\n            ;\n            var _cqt_render_line = Module[\"_cqt_render_line\"] = function() {\n                  return (_cqt_render_line = Module[\"_cqt_render_line\"] = Module[\"asm\"][\"kb\"]).apply(null, arguments)\n                }\n            ;\n            var _cqt_bin_to_freq = Module[\"_cqt_bin_to_freq\"] = function() {\n                  return (_cqt_bin_to_freq = Module[\"_cqt_bin_to_freq\"] = Module[\"asm\"][\"lb\"]).apply(null, arguments)\n                }\n            ;\n            var ___errno_location = Module[\"___errno_location\"] = function() {\n                  return (___errno_location = Module[\"___errno_location\"] = Module[\"asm\"][\"mb\"]).apply(null, arguments)\n                }\n            ;\n            var stackSave = Module[\"stackSave\"] = function() {\n                  return (stackSave = Module[\"stackSave\"] = Module[\"asm\"][\"nb\"]).apply(null, arguments)\n                }\n            ;\n            var stackAlloc = Module[\"stackAlloc\"] = function() {\n                  return (stackAlloc = Module[\"stackAlloc\"] = Module[\"asm\"][\"ob\"]).apply(null, arguments)\n                }\n            ;\n            var stackRestore = Module[\"stackRestore\"] = function() {\n                  return (stackRestore = Module[\"stackRestore\"] = Module[\"asm\"][\"pb\"]).apply(null, arguments)\n                }\n            ;\n            var dynCall_vi = Module[\"dynCall_vi\"] = function() {\n                  return (dynCall_vi = Module[\"dynCall_vi\"] = Module[\"asm\"][\"qb\"]).apply(null, arguments)\n                }\n            ;\n            var dynCall_v = Module[\"dynCall_v\"] = function() {\n                  return (dynCall_v = Module[\"dynCall_v\"] = Module[\"asm\"][\"rb\"]).apply(null, arguments)\n                }\n            ;\n            Module[\"asm\"] = asm;\n            Module[\"ccall\"] = ccall;\n            Module[\"setValue\"] = setValue;\n            Module[\"getValue\"] = getValue;\n            Module[\"allocate\"] = allocate;\n            Module[\"UTF8ToString\"] = UTF8ToString;\n            Module[\"FS\"] = FS;\n            Module[\"ALLOC_NORMAL\"] = ALLOC_NORMAL;\n            var calledRun;\n            Module[\"then\"] = function(func) {\n              if (calledRun) {\n                func(Module)\n              } else {\n                var old = Module[\"onRuntimeInitialized\"];\n                Module[\"onRuntimeInitialized\"] = function() {\n                  if (old)\n                    old();\n                  func(Module)\n                }\n              }\n              return Module\n            }\n            ;\n            dependenciesFulfilled = function runCaller() {\n              if (!calledRun)\n                run();\n              if (!calledRun)\n                dependenciesFulfilled = runCaller\n            }\n            ;\n            function run(args) {\n              args = args || arguments_;\n              if (runDependencies > 0) {\n                return\n              }\n              preRun();\n              if (runDependencies > 0)\n                return;\n              function doRun() {\n                if (calledRun)\n                  return;\n                calledRun = true;\n                Module[\"calledRun\"] = true;\n                if (ABORT)\n                  return;\n                initRuntime();\n                preMain();\n                if (Module[\"onRuntimeInitialized\"])\n                  Module[\"onRuntimeInitialized\"]();\n                postRun()\n              }\n              if (Module[\"setStatus\"]) {\n                Module[\"setStatus\"](\"Running...\");\n                setTimeout(function() {\n                  setTimeout(function() {\n                    Module[\"setStatus\"](\"\")\n                  }, 1);\n                  doRun()\n                }, 1)\n              } else {\n                doRun()\n              }\n            }\n            Module[\"run\"] = run;\n            if (Module[\"preInit\"]) {\n              if (typeof Module[\"preInit\"] == \"function\")\n                Module[\"preInit\"] = [Module[\"preInit\"]];\n              while (Module[\"preInit\"].length > 0) {\n                Module[\"preInit\"].pop()()\n              }\n            }\n            noExitRuntime = true;\n            run();\n\n            return CHIP_CORE\n          }\n      );\n    }\n)();\nexport default CHIP_CORE;\n \n","import Player from \"./Player.js\";\n\nconst INT16_MAX = Math.pow(2, 16) - 1;\nconst XMP_PLAYER_STATE = 8;\nconst XMP_STATE_PLAYING = 2;\nconst fileExtensions = [\n  // libxmp-lite:\n  'it',  //  Impulse Tracker  1.00, 2.00, 2.14, 2.15\n  'mod', //  Sound/Noise/Protracker M.K., M!K!, M&K!, N.T., CD81\n  's3m', //  Scream Tracker 3 3.00, 3.01+\n  'xm',  //  Fast Tracker II  1.02, 1.03, 1.04\n];\n\nexport default class XMPPlayer extends Player {\n  constructor(audioCtx, destNode, chipCore, onPlayerStateUpdate = function() {}) {\n    super(audioCtx, destNode, chipCore, onPlayerStateUpdate);\n\n    this.lib = chipCore;\n    this.xmpCtx = chipCore._xmp_create_context();\n    this.xmp_frame_infoPtr = chipCore._malloc(2048);\n    this.fileExtensions = fileExtensions;\n    this.initialBPM = 125;\n    this.tempoScale = 1;\n    this._positionMs = 0;\n    this._durationMs = 1000;\n    this.buffer = chipCore.allocate(this.bufferSize * 16, 'i16', chipCore.ALLOC_NORMAL);\n\n    this.setAudioProcess(this.xmpAudioProcess);\n  }\n\n  xmpAudioProcess(e) {\n    let err;\n    let i, channel;\n    const infoPtr = this.xmp_frame_infoPtr;\n    const channels = [];\n    for (channel = 0; channel < e.outputBuffer.numberOfChannels; channel++) {\n      channels[channel] = e.outputBuffer.getChannelData(channel);\n    }\n\n    if (this.paused) {\n      for (channel = 0; channel < channels.length; channel++) {\n        channels[channel].fill(0);\n      }\n      return;\n    }\n\n    err = this.lib._xmp_play_buffer(this.xmpCtx, this.buffer, this.bufferSize * 4, 1);\n    if (err === -1) {\n      this.stop();\n    } else if (err !== 0) {\n      this.suspend();\n      console.error(\"xmp_play_buffer failed. error code: %d\", err);\n      throw Error('Unable to play this file!');\n    }\n\n    // Get current module BPM\n    // see http://xmp.sourceforge.net/libxmp.html#id25\n    this.lib._xmp_get_frame_info(this.xmpCtx, infoPtr);\n    const bpm = this.lib.getValue(infoPtr + 6 * 4, 'i32');\n    this._positionMs = this.lib.getValue(infoPtr + 7 * 4, 'i32'); // xmp_frame_info.time\n    this._maybeInjectTempo(bpm);\n\n    for (channel = 0; channel < channels.length; channel++) {\n      for (i = 0; i < this.bufferSize; i++) {\n        channels[channel][i] = this.lib.getValue(\n          this.buffer +           // Interleaved channel format\n          i * 2 * 2 +             // frame offset   * bytes per sample * num channels +\n          channel * 2,            // channel offset * bytes per sample\n          'i16'                   // the sample values are signed 16-bit integers\n        ) / INT16_MAX;            // convert int16 to float\n      }\n    }\n  }\n\n  _parseMetadata() {\n    const xmp = this.lib;\n    const meta = {};\n\n    // Match layout of xmp_module_info struct\n    // http://xmp.sourceforge.net/libxmp.html\n    // #void-xmp-get-module-info-xmp-context-c-struct-xmp-module-info-info\n    const xmp_module_infoPtr = xmp._malloc(2048);\n    xmp._xmp_get_module_info(this.xmpCtx, xmp_module_infoPtr);\n    const xmp_modulePtr = xmp.getValue(xmp_module_infoPtr + 20, '*');\n    meta.title = xmp.UTF8ToString(xmp_modulePtr, 256);\n    meta.system = xmp.UTF8ToString(xmp_modulePtr + 64, 256);\n    meta.comment = xmp.UTF8ToString(xmp.getValue(xmp_module_infoPtr + 24, '*'), 512);\n\n    const infoPtr = this.xmp_frame_infoPtr;\n    xmp._xmp_get_frame_info(this.xmpCtx, infoPtr);\n    this._durationMs = xmp.getValue(infoPtr + 8 * 4, 'i32');\n\n    // XMP-specific metadata\n    meta.patterns = xmp.getValue(xmp_modulePtr + 128 + 4 * 0, 'i32'); // patterns\n    meta.tracks = xmp.getValue(xmp_modulePtr + 128 + 4 * 1, 'i32'); // tracks\n    meta.numChannels = xmp.getValue(xmp_modulePtr + 128 + 4 * 2, 'i32'); // tracks per pattern\n    meta.numInstruments = xmp.getValue(xmp_modulePtr + 128 + 4 * 3, 'i32'); // instruments\n    meta.numSamples = xmp.getValue(xmp_modulePtr + 128 + 4 * 4, 'i32'); // samples\n    meta.initialSpeed = xmp.getValue(xmp_modulePtr + 128 + 4 * 5, 'i32'); // initial speed\n    meta.initialBPM = xmp.getValue(xmp_modulePtr + 128 + 4 * 6, 'i32'); // initial bpm\n    meta.moduleLength = xmp.getValue(xmp_modulePtr + 128 + 4 * 7, 'i32'); // module length\n    meta.restartPosition = xmp.getValue(xmp_modulePtr + 128 + 4 * 8, 'i32'); // restart position\n\n    // Filename fallback\n    if (!meta.title) meta.title = this.filepathMeta.title;\n\n    this.initialBPM = meta.initialBPM;\n\n    return meta;\n  }\n\n  loadData(data, filename) {\n    let err;\n    this.filepathMeta = Player.metadataFromFilepath(filename);\n\n    err = this.lib.ccall(\n      'xmp_load_module_from_memory', 'number',\n      ['number', 'array', 'number'],\n      [this.xmpCtx, data, data.length]\n    );\n    if (err !== 0) {\n      console.error(\"xmp_load_module_from_memory failed. error code: %d\", err);\n      throw Error('Unable to load this file!');\n    }\n\n    err = this.lib._xmp_start_player(this.xmpCtx, this.audioCtx.sampleRate, 0);\n    if (err !== 0) {\n      console.error('xmp_start_player failed. error code: %d', err);\n    }\n\n    this.metadata = this._parseMetadata(filename);\n\n    this.connect();\n    this.resume();\n    this.onPlayerStateUpdate(false);\n  }\n\n  setVoices(voices) {\n    voices.forEach((isEnabled, i) => {\n      this.lib._xmp_channel_mute(this.xmpCtx, i, isEnabled ? 0 : 1);\n    });\n  }\n\n  setTempo(val) {\n    if (!this.metadata.initialSpeed) {\n      console.error('Unable to set speed for this file format.');\n      return;\n    }\n    this.tempoScale = val;\n  }\n\n  _maybeInjectTempo(measuredBPM) {\n    const xmp = this.lib;\n    const minBPM = 20;\n    const maxBPM = 255;\n    const targetBPM = Math.floor(Math.max(Math.min(this.metadata.initialBPM * this.tempoScale, maxBPM), minBPM));\n\n    if (targetBPM === measuredBPM) return;\n\n    console.log('Injecting %d BPM into libxmp. (Initial: %d)', targetBPM, this.metadata.initialBPM);\n    const xmp_eventPtr = xmp._malloc(8);\n    for (let i = 0; i < 8; i++) xmp.setValue(xmp_eventPtr + i, 0, 'i8');\n    xmp.setValue(xmp_eventPtr + 3, 0x87, 'i8');\n    xmp.setValue(xmp_eventPtr + 4, targetBPM, 'i32');\n    xmp._xmp_inject_event(this.xmpCtx, 0, xmp_eventPtr);\n  }\n\n  getVoiceName(index) {\n    return `Ch ${index + 1}`;\n  }\n\n  getNumVoices() {\n    return this.metadata.numChannels;\n  }\n\n  getNumSubtunes() {\n    return 0;\n  }\n\n  getPositionMs() {\n    return this._positionMs;\n  }\n\n  getDurationMs() {\n    return this._durationMs;\n  }\n\n  getMetadata() {\n    return this.metadata;\n  }\n\n  isPlaying() {\n    const playingState = this.lib._xmp_get_player(this.xmpCtx, XMP_PLAYER_STATE);\n    return !this.isPaused() && playingState === XMP_STATE_PLAYING;\n  }\n\n  seekMs(seekMs) {\n    this.lib._xmp_seek_time(this.xmpCtx, seekMs);\n  }\n\n  stop() {\n    this.suspend();\n    this.lib._xmp_stop_module(this.xmpCtx);\n    console.debug('XMPPlayer.stop()');\n    this.onPlayerStateUpdate(true);\n  }\n}\n","import {ChipCore, GMEPlayer} from \"../../3rdparty/chip-player-js-lib\";\n// import queryString from \"querystring\";\n\n\nclass GMESongFile {\n    async init() { // TODO: lazy load\n\n        await new Promise((resolve, reject) => {\n            // Load the chip-core Emscripten runtime\n            try {\n                this.chipCore = new ChipCore({\n                    // Look for .wasm file in web root, not the same location as the app bundle (static/js).\n                    locateFile: (path, prefix) => {\n                        if (path.endsWith('.wasm') || path.endsWith('.wast'))\n                            return `${process.env.PUBLIC_URL}/${path}`;\n                        return prefix + path;\n                    },\n                    onRuntimeInitialized: (e) => {\n                        console.log('onRuntimeInitialized', e);\n                        resolve();\n                        // this.sequencer.setPlayers([\n                        //     new GMEPlayer(audioCtx, playerNode, chipCore),\n                        //     new XMPPlayer(audioCtx, playerNode, chipCore),\n                        //     new MIDIPlayer(audioCtx, playerNode, chipCore),\n                        //     new V2MPlayer(audioCtx, playerNode, chipCore),\n                        // ]);\n                        // this.setState({loading: false});\n\n                        // Experimental: Split Module Support\n                        //\n                        // chipCore.loadDynamicLibrary('./xmp.wasm', {\n                        //     loadAsync: true,\n                        //     global: true,\n                        //     nodelete: true,\n                        //   })\n                        //   .then(() => {\n                        //     return this.sequencer.setPlayers([new XMPPlayer(audioCtx, playerNode, chipCore)]);\n                        //   });\n\n                        // const urlParams = queryString.parse(window.location.search.substr(1));\n                        // if (urlParams.play) {\n                        //     // Allow a little time for initial page render before starting the song.\n                        //     // This is not absolutely necessary but helps prevent stuttering.\n                        //     setTimeout(() => {\n                        //         this.sequencer.playSonglist([urlParams.play]);\n                        //         if (urlParams.t) {\n                        //             setTimeout(() => {\n                        //                 if (this.sequencer.getPlayer()) {\n                        //                     this.sequencer.getPlayer().seekMs(parseInt(urlParams.t, 10));\n                        //                 }\n                        //             }, 100);\n                        //         }\n                        //     }, 500);\n                        // }\n                    },\n                });\n            } catch (e) {\n                // Browser doesn't file WASM (Safari in iOS Simulator)\n                throw e;\n            }\n        });\n\n        // this.sequencer = new Sequencer([], this.handleSequencerStateUpdate, this.handlePlayerError);\n    }\n\n    loadPlayerFromBuffer(audioContext, destinationNode, buffer, filepath) {\n        let uint8Array;\n        uint8Array = new Uint8Array(buffer);\n\n\n        const player = new GMEPlayer(audioContext, destinationNode, this.chipCore, e => this.onPlayerStateUpdate(e));\n        try {\n            player.loadData(uint8Array, filepath);\n        } catch (e) {\n            throw e;\n            // this.onPlayerError(e.message);\n            // return;\n        }\n        // this.onPlayerError(null);\n\n        const numVoices = player.getNumVoices();\n        player.setTempo(1.0); // this.tempo);\n        player.setVoices([...Array(numVoices)].fill(true));\n        player.stop();\n        return player;\n\n        // console.debug('Sequencer.playSong(...) song request completed');\n    }\n\n    onPlayerStateUpdate(e) {\n        console.log(e);\n    }\n\n\n\n    loadSongDataFromBuffer(buffer, filepath) {\n        var audioCtx = new AudioContext();\n        const player = this.loadPlayerFromBuffer(audioCtx, audioCtx.destination, buffer, filepath);\n        return this.loadSongDataFromPlayer(player, filepath);\n    }\n\n    loadSongDataFromPlayer(player, filepath) {\n        const metadata = player.metadata;\n        console.log('metadata', metadata);\n        // id666.length = 5;\n        const timeDivision = 96;\n        const beatsPerMinute = 120;\n        const lengthInTicks = (metadata.length * (beatsPerMinute / 60)) * timeDivision;\n\n        const songData = {\n            title: metadata.title,\n            // game: (id666.game ? id666.game + ': ' : ''),\n            game: metadata.game,\n            system: metadata.system,\n            artist: metadata.artist,\n            copyright: metadata.copyright,\n            version: 'auto',\n            created: new Date().getTime(),\n            timeDivision: timeDivision,\n            beatsPerMinute: beatsPerMinute,\n            // beatsPerMeasure: 4,\n            rootGroup: 'root',\n            programs: [\n                {\n                    \"className\": \"GMEPlayerSynthesizer\",\n                    fileURL: filepath\n                }\n            ],\n            instructions: {\n                'root': [\n                    ['C4', 0, lengthInTicks],\n                ]\n            }\n        };\n\n        return songData;\n    }\n\n    async loadSongDataFromURL(filepath, children={}) {\n        const response = await fetch(filepath);\n        const buffer = await response.arrayBuffer();\n        var audioCtx = new AudioContext();\n        const player = this.loadPlayerFromBuffer(audioCtx, audioCtx.destination, buffer, filepath);\n        const songData = this.loadSongDataFromPlayer(player, filepath);\n        return songData;\n    }\n\n\n}\n\n\nexport default GMESongFile;\n","class JSONSongFile {\n\n    async loadSongDataFromFileInput(file) {\n        const fileResult = await new Promise((resolve, reject) => {\n            let reader = new FileReader();                                      // prepare the file Reader\n            reader.readAsText(file);                 // read the binary data\n            reader.onload =  (e) => {\n                resolve(e.target.result);\n            };\n        });\n\n        // noinspection JSCheckFunctionSignatures\n        return JSON.parse(fileResult);\n    }\n\n\n    async loadSongDataFromURL(url, children={}) {\n        const response = await fetch(url);\n        const songData = await response.json();\n        return songData;\n    }\n\n}\n\n\nexport default JSONSongFile;\n","\nconst archiveBuffers = {};\nconst torrentCache = {};\nconst trackerURLS = [\n    \"udp://explodie.org:6969\",\n    \"udp://track.coppersurfer.tk:6969\",\n    \"udp://track.empire-js.us:1337\",\n    \"udp://track.leechers-paradise.org:6969\",\n    \"udp://track.opentrackr.org:1337\",\n    // \"wss://snesology.net/wss\",\n    \"wss://track.fastcast.nz\",\n    \"wss://track.openwebtorrent.com\",\n    \"wss://track.btorrent.xyz\",\n];\n\nclass FileService {\n    // constructor(song) {\n    //     this.song = song;\n    // }\n\n    log(message) {\n        console.info(message);\n        // if(this.song) {\n        //     this.song.dispatchEvent(new CustomEvent('log', {detail: message}))\n        // }\n    }\n\n    async loadBufferFromURL(url) {\n        // this.log(\"Loading buffer from url: \" + url);\n        if(url.toString().startsWith('torrent://')) {\n            console.time('getFileBufferFromTorrent');\n            const buffer = await this.getFileBufferFromTorrent(url);\n            console.timeEnd('getFileBufferFromTorrent');\n            return buffer;\n        }\n\n        const response = await fetch(url);\n        return await response.arrayBuffer();\n    }\n\n    getMagnetURL(torrentID) {\n        // &dn=snes\n        const magnetURL = `magnet:?xt=urn:btih:${torrentID}&dn=torrent&${trackerURLS.map(t => 'tr='+t).join('&')}`;\n        return magnetURL;\n    }\n\n    async getFileBufferFromTorrent(torrentURL) {\n        var match = torrentURL.match(/^(torrent?:)\\/\\/(([^:/?#]*)(?::([0-9]+))?)([/]{0,1}[^?#]*)(\\?[^#]*|)(#.*|)$/);\n        const parsedURL = match && {\n            hostname: match[3],\n            pathname: match[5],\n        };\n\n        const torrentID = parsedURL.hostname;\n        const filePath = parsedURL.pathname.substr(1);\n\n        const torrent = await this.getTorrent(torrentID);\n        for(let i=0; i<torrent.files.length; i++) {\n            const file = torrent.files[i];\n            if(filePath === file.path) {\n                return await getBuffer(file);\n            }\n            if(filePath.startsWith(file.path)) {\n                const archiveFilePath = filePath.substr(file.path.length);\n                let archiveBuffer;\n                if(typeof archiveBuffers[file.path] !== \"undefined\") {\n                    archiveBuffer = archiveBuffers[file.path];\n                } else {\n                    archiveBuffer = getBuffer(file);\n                    archiveBuffers[file.path] = archiveBuffer;\n                }\n                if(archiveBuffer instanceof Promise)\n                    archiveBuffer = await archiveBuffer;\n                return await this.getFileBufferFromArchive(archiveBuffer, archiveFilePath);\n            }\n        }\n        throw new Error(\"Archive file not found: \" + filePath);\n\n        async function getBuffer(file) {\n            return await new Promise((resolve, reject) => {\n                file.getBuffer(async function(err, buffer) {\n                    if(err) throw new Error(err);\n                    resolve(buffer);\n                });\n            })\n        }\n    }\n\n    async getFileBufferFromArchive(archiveBuffer, filePath) {\n        const files = await this.decompress7ZipArchive(archiveBuffer);\n        for(let i=0; i<files.length; i++) {\n            const file = files[i];\n            if(file.path === filePath) {\n                return file.data;\n            }\n        }\n        throw new Error(\"Archive file not found: \" + filePath);\n\n    }\n\n    async getTorrent(torrentID) {\n        var WebTorrent = await requireWebTorrent();\n\n        if(torrentCache[torrentID]) {\n            if(torrentCache[torrentID] instanceof Promise)\n                await torrentCache[torrentID];\n            return torrentCache[torrentID];\n        }\n\n        const magnetURL = this.getMagnetURL(torrentID);\n\n        var client = new WebTorrent();\n\n        torrentCache[torrentID] = new Promise((resolve, reject) => {\n            this.log(\"Connecting to cloud url: \" + magnetURL);\n            client.add(magnetURL, function (torrent) {\n                // Got torrent metadata!\n                resolve(torrent);\n            });\n        });\n        torrentCache[torrentID] = await torrentCache[torrentID];\n        const torrent = torrentCache[torrentID];\n        this.log(\"Connected to cloud: \" + torrent.infoHash);\n        return torrent;\n    }\n\n    async decompress7ZipArchive(archiveBuffer) {\n        const fda = [];\n        var totalMemory = 268435456;\n        var INTERRUPT = false;\n        var rootdata = \"/data\";\n        var fileName=  'archive.7z';\n        fda.push(new DataStorage(rootdata,true,null));\n        const filedata = new Uint8Array(archiveBuffer);\n        fda.push(new DataStorage(rootdata  + \"/\" + fileName,false,filedata));\n\n        const workerURL =  'assets/3rdparty/7zip/js/worker.7z.wrapper.js';\n\n        let worker7z = new Worker(workerURL);\n\n        return await new Promise((resolve, reject) => {\n            worker7z.onerror = console.error; // TODO: reuse webworker\n            worker7z.onmessage = function(event) {//1\n                if (INTERRUPT) {\n                    finfunc();\n                    return;\n                }\n                if (event.data.type === 1){\n                    // console.info(event.data.text);\n                } else if (event.data.type === 2){\n                    // console.info(event.data.text);\n                } else if (event.data.type === 3){\n                    resolve(event.data.results);\n                    worker7z.terminate();//this is very important!!! You have to release memory!\n                }\n            };\n            var fda0 = [fda[0],fda[1]];\n            var args = [\"x\",  fda0[1].path ,\"-o/result\"];\n            worker7z.postMessage({\n                id:1,\n                action:'doit',\n                arguments:args,\n                totalMemory: totalMemory,\n                FilesDataArray: fda0\n            });\n\n            function finfunc() {\n                worker7z.terminate();\n                worker7z = undefined;\n                INTERRUPT = false;\n                // clearDataWrapper();\n            }\n        });\n\n        function DataStorage(path,isdir,data) {\n            this.path = path;\n            this.isdir = isdir;\n            this.data = data;\n        }\n    }\n}\n\n\n\nasync function requireWebTorrent() {\n    const AudioSourceLoader = customElements.get('audio-source-loader');\n    const relativeScriptPath = 'node_modules/webtorrent/webtorrent.min.js';\n\n    let scriptElm = AudioSourceLoader.findScript(relativeScriptPath, false);\n    if(!scriptElm) {\n        window.exports = {};\n        window.module = {exports: window.exports};\n        // const scriptURL = findThisScript()[0].basePath + relativeScriptPath;\n        scriptElm = document.createElement('script');\n        // scriptElm.src = scriptURL;\n        scriptElm.promises = (scriptElm.promises || []).concat(new Promise(async (resolve, reject) => {\n            scriptElm.onload = e => {\n                scriptElm.exports = window.module.exports;\n                delete window.module; delete window.exports;\n                resolve();\n            };\n            document.head.appendChild(scriptElm);\n        }));\n    }\n    for (let i=0; i<scriptElm.promises.length; i++)\n        await scriptElm.promises[i];\n    return scriptElm.exports\n        || (() => { throw new Error(\"Script module has no exports: \" + relativeScriptPath); })()\n}\n\nexport default FileService;\n","const TARGET = Symbol('proxy_target');\nconst LISTENER = Symbol('proxy_listener');\n\nexport class ConfigListener {\n    constructor(song, path=[]) {\n        this.path = path;\n        this.song = song;\n        this.updateTimeout = null;\n        this.changeListeners = [];\n        // TODO: allow fast changes. trigger update slowly\n    }\n\n    addChangeListener(listener) {\n        this.changeListeners(listener);\n    }\n    removeChangeListener(listener) {\n        const i = this.changeListeners.indexOf(listener)\n        if(i !== -1)\n            this.changeListeners.splice(i);\n    }\n\n\n    get(obj, prop) {\n        switch(prop) { // TODO: support all common methods\n            case TARGET: return obj;\n            case LISTENER: return this;\n            case 'indexOf': return (v,b,e) => obj.indexOf(v,b,e);\n            case 'splice': return (number, deleteCount, ...newValues) => this.splice(obj, this.path.concat(number), number, deleteCount, ...newValues);\n            default:\n                const path = this.path.concat(prop);\n                if(typeof obj[prop] === 'object') {\n                    return new Proxy(obj[prop], new ConfigListener(this.song, path));\n                }\n                return obj[prop];\n        }\n    }\n\n    set(obj, prop, value) {\n        obj[prop] = value;\n        this.queueChange('set', this.path.concat(prop), value);\n        return true;\n    }\n\n    deleteProperty(obj, prop) {\n        if (prop in obj) {\n            delete obj[prop];\n            this.queueChange('delete', this.path.concat(prop));\n        }\n        return true;\n    }\n\n    queueChange(action, path) {\n        this.song.queueHistoryAction(action, path);\n        for(let i=0; i<this.changeListeners.length; i++) {\n            this.changeListeners[i](action, path);\n        }\n    }\n\n\n\n    splice(obj, path, number, deleteCount, ...newValues) {\n        if(!Array.isArray(obj))\n            throw new Error(`Splice may only be used in array objects for path: ${path.join('.')}`);\n\n        obj.splice(number, deleteCount, ...newValues);\n        this.queueChange('splice', path, number, deleteCount, ...newValues);\n    }\n\n    /** Static **/\n\n    static TARGET = TARGET;\n    static LISTENER = LISTENER;\n\n    static resolveProxiedObject(proxyObject) {\n        return proxyObject[TARGET] || proxyObject;\n    }\n\n    static addChangeListener(proxyObject, listener) {\n        const configListener = proxyObject[LISTENER];\n        configListener.addChangeListener(listener);\n    }\n}\n","class AudioBufferInstrument {\n    constructor(config={}, audioContext=null) {\n        this.config = config;\n        this.audioContext = audioContext;\n        this.audioBuffer = null;\n        this.loadAudioBuffer();\n    }\n    async loadAudioBuffer() {\n        const response = await fetch(this.config.url);\n        const buffer = await response.arrayBuffer();\n        this.audioBuffer = this.audioContext.decodeAudioData(buffer);\n    }\n\n    /** Playback **/\n\n    playFrequency(destination, frequencyValue, startTime, duration, velocity, onended=null) {\n        // Velocity\n        let velocityGain = destination.context.createGain();\n        velocityGain.gain.value = parseFloat(velocity || 127) / 127;\n        velocityGain.connect(destination);\n        destination = velocityGain;\n\n        // Audio Buffer\n        const source = destination.context.createBufferSource();\n        source.buffer = this.audioBuffer;\n        if(typeof this.config.loop !== \"undefined\")\n            source.loop = !!this.config.loop;\n        const playbackRate = frequencyValue / (this.config.root ? this.getCommandFrequency(this.config.root) : 440);\n        source.playbackRate.value = playbackRate; //  Math.random()*2;\n        if(typeof this.config.detune !== \"undefined\")\n            source.detune.value = this.config.detune;\n\n\n        source.connect(destination);\n        source.start(startTime);\n        source.stop(startTime + duration);\n        if(onended)\n            source.onended = onended;\n\n        // TODO: envelop is an effect\n        // let adsr = this.config.adsr || [0, 0, 0, .1];\n        // let currentTime = destination.context.currentTime;\n        // startTime = startTime !== null ? startTime : currentTime;\n        // duration = duration !== null ? duration : 0;\n\n\n        // velocityGain.gain.linearRampToValueAtTime(velocityGain.gain.value, startTime + duration);\n        // velocityGain.gain.linearRampToValueAtTime(0, startTime + duration + adsr[3]);\n        return source;\n    }\n\n}\n\nexport default AudioBufferInstrument;\n\n","import React from 'react';\nimport {\n    // Button,\n    // InputSelect,\n    ASUIDiv,\n    ASUIButton,\n    ASUIMenuAction,\n    ASUIMenuBreak,\n    ASUIIcon, ASUIInputRange, ASUIMenuDropDown,\n} from \"../../../../components\";\n\nimport AudioBufferInstrumentRendererStyle from \"./AudioBufferInstrumentRendererStyle\";\n\n/** PolyphonyInstrumentRenderer **/\nclass AudioBufferInstrumentRenderer extends AudioBufferInstrumentRendererStyle {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            open: false\n        }\n    }\n\n    getSong() { return this.props.song; }\n    getSampleID() { return this.props.sampleID; }\n    getInstrumentID() { return this.props.instrumentID; }\n    getSampleData() { return this.props.sampleData; }\n\n    render() {\n        const sample = this.getSampleData();\n        // console.log('voice', voice);\n        const sampleName = sample.url.replace(/\\.(wav|mp3)$/, '');\n\n        let className = 'audiobuffer-instrument-renderer';\n        if(this.state.open)\n            className += ' open';\n\n        return (\n            <ASUIDiv\n                className={className}\n                >\n                <ASUIButton\n                    title=\"Change Sample\"\n                    className=\"name\"\n                    onAction={e => this.toggleOpen(e)}>\n                    {sampleName || \"Unnamed\"}\n                </ASUIButton>\n                {!this.state.open ? null : (\n                    <>\n                        {typeof sample.mixer === 'undefined' ? null : (\n                            <ASUIDiv title=\"Edit Mixer\" className=\"mixer\">\n                                <ASUIButton onAction={e => this.openMenuChangeMixer(e)} vertical openOnHover={false}>\n                                    {sample.mixer+'%'}\n                                </ASUIButton>\n                            </ASUIDiv>\n                        )}\n                        {typeof sample.detune === 'undefined' ? null : (\n                            <ASUIDiv title={`Detune by ${sample.detune} cents`} className=\"detune\">\n                                <ASUIButton onAction={e => this.openMenuChangeDetune(e)} vertical openOnHover={false}>\n                                    {sample.detune+'c'}\n                                </ASUIButton>\n                            </ASUIDiv>\n                        )}\n                        {typeof sample.root === 'undefined' ? null : (\n                            <ASUIDiv title={`Key Root is ${sample.root}`} className=\"root\">\n                                <ASUIButton onAction={e => this.openMenuChangeKeyRoot(e)} vertical openOnHover={false}>\n                                    {sample.root}\n                                </ASUIButton>\n                            </ASUIDiv>\n                        )}\n                        {typeof sample.alias === 'undefined' ? null : (\n                            <ASUIDiv title={`Key Alias is ${sample.alias}`} className=\"alias\">\n                                <ASUIButton onAction={e => this.openMenuChangeKeyAlias(e)} vertical openOnHover={false}>\n                                    {sample.alias}\n                                </ASUIButton>\n                            </ASUIDiv>\n                        )}\n                        {typeof sample.range === 'undefined' ? null : (\n                            <ASUIDiv title={`Key Range is ${sample.range}`} className=\"range\">\n                                <ASUIButton onAction={e => this.openMenuChangeKeyRange(e)} vertical openOnHover={false}>\n                                    {sample.range}\n                                </ASUIButton>\n                            </ASUIDiv>\n                        )}\n                        {typeof sample.loop === 'undefined' ? null : (\n                            <ASUIDiv title=\"Toggle Loop\" className=\"loop\">\n                                <ASUIButton title=\"\" onAction={e => this.changeLoop(!sample.loop)} arrow={false} vertical openOnHover={false}>\n                                    {sample.loop?'∞':'⇥'}\n                                </ASUIButton>\n                            </ASUIDiv>\n                        )}\n                    </>)\n                }\n                <ASUIDiv title={`Edit Sample '${sampleName}'`} className=\"config\">\n                    <ASUIButton onAction={e => this.openMenuRoot(e)} vertical openOnHover={false}>\n                        <ASUIIcon source=\"config\"/>\n                    </ASUIButton>\n                </ASUIDiv>\n            </ASUIDiv>\n        );\n    }\n\n\n    openMenu(e, options) {\n        if(typeof this.props.openMenu === \"function\")\n            this.props.openMenu(e, options);\n        else\n            throw new Error(\"Invalid 'openMenu' props\");\n    }\n\n    openMenuRoot(e) {\n        this.openMenu(e, <>\n            <ASUIMenuAction onAction={()=>{}} disabled>Sample {this.props.sampleID}</ASUIMenuAction>\n            <ASUIMenuBreak />\n            <ASUIMenuDropDown key=\"mixer\" onAction={e => this.openMenuChangeMixer(e)}>Edit Mixer</ASUIMenuDropDown>\n            <ASUIMenuDropDown key=\"detune\" onAction={e => this.openMenuChangeDetune(e)}>Edit Detune</ASUIMenuDropDown>\n            <ASUIMenuDropDown key=\"root\" onAction={e => this.openMenuChangeKeyRoot(e)}>Edit Key Root</ASUIMenuDropDown>\n            <ASUIMenuDropDown key=\"alias\" onAction={e => this.openMenuChangeKeyAlias(e)}>Edit Key Alias</ASUIMenuDropDown>\n            <ASUIMenuDropDown key=\"range\" onAction={e => this.openMenuChangeKeyRange(e)}>Edit Key Range</ASUIMenuDropDown>\n            <ASUIMenuDropDown key=\"loop\" onAction={e => this.openMenuChangeLoop(e)}>Toggle Loop</ASUIMenuDropDown>\n            <ASUIMenuBreak />\n            <ASUIMenuDropDown key=\"change\" onAction={e => this.openMenuChangeSample(e)}>Change Sample</ASUIMenuDropDown>\n            <ASUIMenuAction key=\"remove\" onAction={e => this.renderMenu('voice-remove')}>Remove Sample</ASUIMenuAction>\n        </>);\n    }\n\n    openMenuChangeSample(e) {\n        const sample = this.getSampleData();\n        this.openMenu(e, <ASUIInputRange min={0} max={100} value={sample.mixer} />);\n    }\n\n    openMenuChangeMixer(e) {\n        const sample = this.getSampleData();\n        this.openMenu(e, <ASUIInputRange\n            min={0}\n            max={100}\n            value={typeof sample.mixer !== \"undefined\" ? sample.mixer : 100}\n            onChange={(e, mixerValue) => this.changeMixer(mixerValue)}\n        />);\n    }\n\n    openMenuChangeDetune(e) {\n        const sample = this.getSampleData();\n        this.openMenu(e, <ASUIInputRange\n            min={-1000}\n            max={1000}\n            value={typeof sample.detune !== \"undefined\" ? sample.detune : 100}\n            onChange={(e, detuneValue) => this.changeDetune(detuneValue)}\n        />);\n    }\n\n    // TODO: use generic menu/value library\n    openMenuChangeKeyRoot(e) {\n        const values = this.getSong().values;\n        this.openMenu(e, <>\n            <ASUIMenuAction onAction={null} disabled>Edit Key Root</ASUIMenuAction>\n            <ASUIMenuBreak />\n            {values.getNoteOctaves((octave) =>\n                <ASUIMenuDropDown onAction={e => this.openMenu(e,\n                    values.getNoteFrequencies((noteName) =>\n                        <ASUIMenuAction onAction={e => this.changeRoot(noteName+octave)}    >{noteName+octave}</ASUIMenuAction>\n                    )\n                )}>{octave}</ASUIMenuDropDown>)}\n        </>);\n    }\n\n    openMenuChangeKeyAlias(e) {\n        const values = this.getSong().values;\n        this.openMenu(e, <>\n            <ASUIMenuAction onAction={null} disabled>Edit Key Root</ASUIMenuAction>\n            <ASUIMenuBreak />\n            {values.getNoteOctaves((octave) =>\n                <ASUIMenuDropDown onAction={e => this.openMenu(e,\n                    values.getNoteFrequencies((noteName) =>\n                        <ASUIMenuAction onAction={e => this.changeAlias(noteName+octave)}    >{noteName+octave}</ASUIMenuAction>\n                    )\n                )}>{octave}</ASUIMenuDropDown>)}\n        </>);\n    }\n\n    openMenuChangeKeyRange(e) {\n        this.openMenu(e, );\n    }\n\n    openMenuChangeLoop(e) {\n        this.openMenu(e, );\n    }\n\n\n\n    renderMenu(menuKey=null) {\n        // const voice = this.getSampleData();\n        const values = this.getSong().values;\n        switch(menuKey) {\n            case 'voice-loop':\n            case 'voice-remove':\n            case null:\n                return ;\n\n            case 'voice-change':\n                return <>\n\n                </>;\n\n            case 'voice-mixer':\n                return <>\n\n                    <ASUIMenuBreak />\n                    <ASUIMenuAction onAction={null} disabled>Edit Mixer</ASUIMenuAction>\n                </>;\n\n            case 'voice-detune':\n                return <>\n\n                    <ASUIMenuBreak />\n                    <ASUIMenuAction onAction={null} disabled>Edit Detune</ASUIMenuAction>\n                </>;\n\n            case 'voice-root':\n                return <>\n                    <ASUIMenuAction onAction={null} disabled>Edit Key Root</ASUIMenuAction>\n                    <ASUIMenuBreak />\n                    {values.getNoteOctaves((octave) =>\n                    <ASUIMenuAction onAction={\n                        () => values.getNoteFrequencies((noteName) =>\n                            <ASUIMenuAction onAction={e => this.changeRoot(noteName+octave)}    >{noteName+octave}</ASUIMenuAction>\n                        )\n                    }>{octave}</ASUIMenuAction>)}\n                </>;\n\n            case 'voice-alias':\n                return <>\n                    <ASUIMenuAction onAction={null} disabled>Edit Key Alias</ASUIMenuAction>\n                    <ASUIMenuBreak />\n                    {values.getNoteOctaves((octave) =>\n                    <ASUIMenuAction onAction={\n                        () => values.getNoteFrequencies((noteName) =>\n                            <ASUIMenuAction onAction={e => this.changeAlias(noteName+octave)}    >{noteName+octave}</ASUIMenuAction>\n                        )\n                    }>{octave}</ASUIMenuAction>)}\n                </>;\n\n            case 'voice-range':\n                return <>\n                    <ASUIMenuAction onAction={null} disabled>Edit Key Range</ASUIMenuAction>\n                    <ASUIMenuBreak />\n                    <ASUIMenuAction onAction={e => this.renderMenu('voice-range-start')} >Set Range Start</ASUIMenuAction>\n                    <ASUIMenuAction onAction={e => this.renderMenu('voice-range-end')} >Set Range End</ASUIMenuAction>\n                </>;\n\n            case 'voice-range-start':\n                return (<>\n                    <ASUIMenuAction onAction={null} disabled>Range Start</ASUIMenuAction>\n                    <ASUIMenuBreak />\n                    {values.getNoteOctaves((octave) =>\n                        <ASUIMenuAction onAction={\n                            () => values.getNoteFrequencies((noteName) =>\n                                <ASUIMenuAction onAction={e => this.changeRange(noteName+octave)}    >{noteName+octave}</ASUIMenuAction>\n                            )\n                        }>{octave}</ASUIMenuAction>)}\n                </>);\n\n            case 'voice-range-end':\n                return (<>\n                    <ASUIMenuAction onAction={null} disabled>Range End</ASUIMenuAction>\n                    <ASUIMenuBreak />\n                    {values.getNoteOctaves((octave) =>\n                        <ASUIMenuAction onAction={\n                            () => values.getNoteFrequencies((noteName) =>\n                                <ASUIMenuAction onAction={e => this.changeRange(null, noteName+octave)}    >{noteName+octave}</ASUIMenuAction>\n                            )\n                        }>{octave}</ASUIMenuAction>)}\n                </>);\n\n\n\n            default:\n                throw new Error(\"Unknown menu key: \" + menuKey);\n        }\n\n    }\n\n\n    toggleOpen(e) {\n        this.setState({open: !this.state.open})\n    }\n\n    changeMixer(newMixerValue) {\n        if(!Number.isInteger(newMixerValue))\n            throw new Error(\"Invalid mixer value type: \" + typeof newMixerValue);\n        this.config.samples[this.getSampleID()].mixer = newMixerValue;\n    }\n\n    changeDetune(newDetuneValue) {\n        if(!Number.isInteger(newDetuneValue))\n            throw new Error(\"Invalid detune value type: \" + typeof newDetuneValue);\n        this.config.samples[this.getSampleID()].detune = newDetuneValue;\n    }\n\n    changeRoot(newRootValue) {\n        this.config.samples[this.getSampleID()].root = newRootValue;\n    }\n\n    changeAlias(newAliasValue) {\n        this.config.samples[this.getSampleID()].alias = newAliasValue;\n    }\n\n    changeLoop(newLoopValue=null) {\n        if(newLoopValue === null)\n            newLoopValue = !this.getSampleData().loop;\n        this.config.samples[this.getSampleID()].loop = newLoopValue?1:0;\n    }\n\n}\n\nexport default AudioBufferInstrumentRenderer;\n","import React from 'react';\n\n\nimport \"./assets/AudioBufferInstrumentRenderer.css\";\n\n/** PolyphonyInstrumentRenderer **/\nclass AudioBufferInstrumentRendererStyle extends React.Component {\n\n}\n\nexport default AudioBufferInstrumentRendererStyle;\n","export default class PeriodicWaveLoader {\n    constructor(audioContext) {\n        this.audioContext = audioContext;\n    }\n\n    isPeriodicWaveAvailable(url) {\n        return !!PeriodicWaveLoader.waveURLCache[url];\n    }\n    getCachedPeriodicWaveFromURL(url) {\n        return PeriodicWaveLoader.waveURLCache[url];\n    }\n\n    async loadPeriodicWaveFromURL(url) {\n        if(PeriodicWaveLoader.waveURLCache[url])\n            return PeriodicWaveLoader.waveURLCache[url];\n\n        // TODO Use file service\n        const response = await fetch(url);\n        const waveData = await response.json();\n        if (!waveData.real)\n            throw new Error(\"Invalid 'real' data for createPeriodicWave\");\n        if (!waveData.imag)\n            throw new Error(\"Invalid 'imag' data for createPeriodicWave\");\n\n        return PeriodicWaveLoader.waveURLCache[url] = this.audioContext.createPeriodicWave(\n            new Float32Array(waveData.real),\n            new Float32Array(waveData.imag)\n        );\n\n        // throw new Error(\"Periodic wave was not found\");\n    }\n\n\n    /** Static **/\n\n    static waveURLCache = {};\n}\n","import PeriodicWaveLoader from \"../loader/PeriodicWaveLoader\";\n\n\nclass OscillatorInstrument {\n    constructor(config={}) {\n        // console.log('OscillatorInstrument', config);\n        this.config = config;\n    }\n\n    /** Effect **/\n\n    useDestination(oldDestination) {\n        return null; // Null is no effect processing\n    }\n\n    /** Playback **/\n\n    playFrequency(destination, frequency, startTime, duration, velocity, onended=null) {\n        const audioContext = destination.context;\n        const waveLoader = new PeriodicWaveLoader(audioContext);\n\n\n        // TODO: Detect config changes on the fly. Leave caching to browser. Destination cache?\n\n        // console.log('playFrequency', destination, frequency, startTime, duration, velocity)\n\n\n        //         // Filter voice playback\n        //         if (voiceConfig.alias) {\n        //             if(voiceConfig.alias !== commandFrequency)\n        //                 // if(voiceConfig.name !== namedFrequency)\n        //                 continue;\n        //         } else {\n        //             frequencyValue = this.getCommandFrequency(commandFrequency);\n        //         }\n        //\n        //         if (voiceConfig.keyLow && this.getCommandFrequency(voiceConfig.keyLow) > frequencyValue)\n        //             continue;\n        //         if (voiceConfig.keyHigh && this.getCommandFrequency(voiceConfig.keyHigh) < frequencyValue)\n        //             continue;\n\n        // Velocity\n//         console.log('velocity', velocity);\n        if(velocity !== null) {\n            let velocityGain = destination.context.createGain();\n            velocityGain.gain.value = parseFloat(velocity || 127) / 127;\n            velocityGain.connect(destination);\n            destination = velocityGain;\n        }\n\n        const osc = destination.context.createOscillator();   // instantiate an oscillator\n        osc.frequency.value = frequency;    // set Frequency (hz)\n        if (typeof this.config.detune !== \"undefined\")\n            osc.detune.value = this.config.detune;\n\n        switch(this.config.type) {\n            default:\n                osc.type = this.config.type;\n                break;\n\n            // case null:\n            case 'custom':\n                if(!this.config.url)\n                    throw new Error(\"Custom osc requires a url\");\n                if(waveLoader.isPeriodicWaveAvailable(this.config.url)) {\n                    osc.setPeriodicWave(waveLoader.getCachedPeriodicWaveFromURL(this.config.url))\n                } else {\n                    waveLoader.loadPeriodicWaveFromURL(this.config.url)\n                        .then(periodicWave => osc.setPeriodicWave(periodicWave));\n                }\n                break;\n        }\n\n        osc.connect(destination);\n        osc.start(startTime);\n        osc.stop(startTime + duration);\n\n        OscillatorInstrument.playingOSCs.push(osc);\n        osc.onended = function() {\n            const i = OscillatorInstrument.playingOSCs.indexOf(osc);\n            if(i !== -1)\n                OscillatorInstrument.playingOSCs.splice(i, 1);\n            onended && onended();\n        };\n\n    }\n\n\n\n    /** Static **/\n\n    static playingOSCs = [];\n\n    static stopPlayback() {\n        // Stop all active sources\n        //     console.log(\"this.playingOSCs\", this.playingOSCs);\n        for (let i = 0; i < this.playingOSCs.length; i++) {\n            try {\n                this.playingOSCs[i].stop();\n            } catch (e) {\n                console.warn(e);\n            }\n        }\n        this.playingOSCs = [];\n    }\n\n\n    static waveURLCache = {};\n\n    static unloadAll() {\n        this.waveURLCache = {}\n        // Unload all cached samples from this program type\n    }\n}\n\nexport default OscillatorInstrument;\n","import React from 'react';\n\nimport \"./assets/OscillatorInstrumentRenderer.css\";\nimport OscillatorInstrumentRendererBase from \"./OscillatorInstrumentRendererBase\";\nimport {ASUIIcon, ASUIMenuDropDown} from \"../../../../components\";\n\nclass OscillatorInstrumentRenderer extends OscillatorInstrumentRendererBase {\n\n    render() {\n        let className = \"instrument-renderer-oscillator-node\";\n        if(this.state.open)\n            className += ' open';\n        let title = this.getTitle();\n\n\n        return <div className={className}>\n            <div\n                className=\"title\"\n                title={`Oscillator: ${title}`}\n                onClick={this.cb.onClick}\n            >\n                {title}\n            </div>\n            {this.renderParameters()}\n            <ASUIMenuDropDown\n                arrow={false}\n                className=\"config\"\n                options={() => this.renderMenuRoot()}\n            >\n                <ASUIIcon source=\"config\"/>\n            </ASUIMenuDropDown>\n        </div>;\n    }\n}\nexport default OscillatorInstrumentRenderer;\n","import React from 'react';\nimport {\n    ASUIMenuAction,\n    ASUIMenuBreak,\n    ASUIInputRange,\n    ASUIMenuDropDown,\n} from \"../../../../components\";\nimport Library from \"../../../../song/library/Library\";\nimport Values from \"../../../../common/values/Values\";\n\n\nclass OscillatorInstrumentRendererBase extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            open: false\n        };\n        this.cb = {\n            onClick: e => this.toggleOpen(),\n        };\n        this.library = Library.loadDefault();\n    }\n\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if(!this.props.config.type) {\n            console.warn(\"No default oscillator type was set. Setting to 'sawtooth'\");\n            this.props.config.type = 'sawtooth';\n        }\n    }\n\n    getTitle() {\n        return this.props.config.title\n            || this.props.config.type\n            || \"Unknown Osc\";\n    }\n\n\n    renderParameters() {\n        if(!this.state.open)\n            return [];\n        const config = this.props.config;\n        return (<>\n            <ASUIMenuDropDown title=\"Edit Mixer\"\n                              className=\"mixer\"\n                              options={() => this.renderMenuChangeMixer()}\n                              arrow={false}\n                              vertical>\n                {typeof config.mixer !== \"undefined\" ? config.mixer+'%' : '100%'}\n            </ASUIMenuDropDown>\n            <ASUIMenuDropDown title={`Detune by ${config.detune} cents`}\n                              className=\"detune\"\n                              options={() => this.renderMenuChangeDetune()}\n                              arrow={false}\n                              vertical>\n                {typeof config.detune !== \"undefined\" ? config.detune+'c' : '0c'}\n            </ASUIMenuDropDown>\n            {config.root ? <ASUIMenuDropDown title={`Key Root is ${config.root}`}\n                                             className=\"root\"\n                                             options={() => this.renderMenuChangeKeyRoot()}\n                                             arrow={false}\n                                             vertical>\n                {config.root ? config.root : \"-\"}\n            </ASUIMenuDropDown> : null}\n            {config.alias ? <ASUIMenuDropDown title={`Key Alias is ${config.alias}`}\n                                              className=\"alias\"\n                                              options={() => this.renderMenuChangeKeyAlias()}\n                                              arrow={false}\n                                              vertical>\n                {config.alias ? config.alias : \"-\"}\n            </ASUIMenuDropDown> : null}\n            {config.range ? <ASUIMenuDropDown title={`Key Range is ${config.range}`}\n                                              className=\"range\"\n                                              options={() => this.renderMenuChangeKeyRange()}\n                                              arrow={false}\n                                              vertical>\n                {config.range ? config.range : \"-\"}\n            </ASUIMenuDropDown> : null}\n            <ASUIMenuAction\n                    className=\"loop\"\n                    title=\"Toggle Loop\"\n                    onAction={e => this.changeLoop(!config.loop)}\n                    arrow={false}\n                    vertical>\n                    {config.loop?'∞':'1'}\n            </ASUIMenuAction>\n        </>);\n    }\n\n\n    /** Actions **/\n\n    toggleOpen() {\n        this.setState({open: !this.state.open});\n    }\n\n    changeMixer(newMixerValue) {\n        if(!Number.isInteger(newMixerValue))\n            throw new Error(\"Invalid mixer value type: \" + typeof newMixerValue);\n        this.props.config.mixer = newMixerValue;\n    }\n\n    changeDetune(newDetuneValue) {\n        if(!Number.isInteger(newDetuneValue))\n            throw new Error(\"Invalid detune value type: \" + typeof newDetuneValue);\n        this.props.config.detune = newDetuneValue;\n    }\n\n    changeRoot(newRootValue) {\n        this.props.config.root = newRootValue;\n    }\n\n    changeAlias(newAliasValue) {\n        this.props.config.alias = newAliasValue;\n    }\n\n\n    changeOscillator(newType) {\n        if(newType === 'custom') {\n        } else {\n            delete this.props.config.url;\n            delete this.props.config.real;\n            delete this.props.config.imag;\n            delete this.props.config.title;\n            this.props.config.type = newType;\n        }\n    }\n\n    changeLoop(newLoopValue=null) {\n        if(newLoopValue === null)\n            newLoopValue = !this.props.config.loop;\n        this.props.config.loop = newLoopValue?1:0;\n    }\n\n    loadPreset(preset) {\n        console.log(\"Loading preset: \", preset);\n        preset.type = 'custom';\n        Object.assign(this.props.config, preset);\n    }\n\n    /** Menus **/\n\n    renderMenuRoot() {\n        return (<>\n            <ASUIMenuAction onAction={()=>{}} disabled>Oscillator: {this.getTitle()}</ASUIMenuAction>\n            <ASUIMenuBreak />\n            <ASUIMenuDropDown options={() => this.renderMenuChangeOscillator()}>Change Oscillator</ASUIMenuDropDown>\n            <ASUIMenuBreak />\n            <ASUIMenuDropDown options={() => this.renderMenuChangeMixer()}>Edit Mixer</ASUIMenuDropDown>\n            <ASUIMenuDropDown options={() => this.renderMenuChangeDetune()}>Edit Detune</ASUIMenuDropDown>\n            <ASUIMenuDropDown options={() => this.renderMenuChangeKeyRoot()}>Edit Key Root</ASUIMenuDropDown>\n            <ASUIMenuDropDown options={() => this.renderMenuChangeKeyAlias()}>Edit Key Alias</ASUIMenuDropDown>\n            <ASUIMenuDropDown options={() => this.renderMenuChangeKeyRange()}>Edit Key Range</ASUIMenuDropDown>\n            <ASUIMenuDropDown options={() => this.renderMenuChangeLoop()}>Toggle Loop</ASUIMenuDropDown>\n            <ASUIMenuAction disabled={!this.props.onRemove} onAction={(e) => this.props.onRemove(this.props.instrumentID)}>Remove Oscillator</ASUIMenuAction>\n        </>);\n    }\n\n    renderMenuChangeOscillator() {\n        return (<>\n            <ASUIMenuDropDown options={() => this.renderMenuChangeOscillatorStandard()}>Standard</ASUIMenuDropDown>\n            {/*<MenuDropDown options={() => this.renderMenuChangeOscillator('custom')}>Custom</MenuDropDown>*/}\n            <ASUIMenuBreak/>\n            {this.library.renderMenuProgramAllPresets(([className, presetConfig]) => {\n                this.loadPreset(className, presetConfig);\n            })}\n        </>);\n    }\n\n    renderMenuChangeOscillatorStandard() {\n        return (<>\n            <ASUIMenuAction onAction={e => this.changeOscillator('sine')}>Sine</ASUIMenuAction>\n            <ASUIMenuAction onAction={e => this.changeOscillator('square')}>Square</ASUIMenuAction>\n            <ASUIMenuAction onAction={e => this.changeOscillator('sawtooth')}>Sawtooth</ASUIMenuAction>\n            <ASUIMenuAction onAction={e => this.changeOscillator('triangle')}>Triangle</ASUIMenuAction>\n        </>);\n    }\n\n\n\n    renderMenuChangeMixer() {\n        const config = this.props.config;\n        return <ASUIInputRange\n            min={0}\n            max={100}\n            value={typeof config.mixer !== \"undefined\" ? config.mixer : 100}\n            onChange={(e, mixerValue) => this.changeMixer(mixerValue)}\n        />;\n    }\n\n    renderMenuChangeDetune() {\n        const config = this.props.config;\n        return ( <ASUIInputRange\n            min={-1000}\n            max={1000}\n            value={typeof config.detune !== \"undefined\" ? config.detune : 100}\n            onChange={(e, detuneValue) => this.changeDetune(detuneValue)}\n        />);\n    }\n\n    renderMenuChangeKeyRoot() {\n        return Values.renderMenuSelectCommand(noteNameOctave => {\n            this.changeRoot(noteNameOctave)\n        });\n    }\n\n    renderMenuChangeKeyAlias() {\n        return Values.renderMenuSelectCommand(noteNameOctave => {\n            this.changeAlias(noteNameOctave)\n        });\n    }\n\n\n    renderMenuChangeKeyRange() {\n        return (<>TODO</>);\n    }\n\n    renderMenuChangeLoop() {\n        return (<>TODO</>);\n    }\n}\n\nexport default OscillatorInstrumentRendererBase;\n","import ProgramLoader from \"../../../common/program/ProgramLoader\";\n// import Values from \"../../song/Values\";\n\nclass PolyphonyInstrument {\n    constructor(config={}) {\n        this.config = config;\n    }\n\n    /** Loading **/\n\n    loadVoice(voiceID) {\n        if(!this.config.voices[voiceID])\n            throw new Error(\"Voice config is missing: \" + voiceID);\n        const [voiceClassName, voiceConfig] = this.config.voices[voiceID];\n        let {classProgram:voiceClass} = ProgramLoader.getProgramClassInfo(voiceClassName);\n        return new voiceClass(voiceConfig);\n    }\n\n\n    /** Playback **/\n\n    playFrequency(destination, frequency, startTime, duration, velocity=null, onended=null) {\n        for (let i = 0; i < this.config.voices.length; i++) {\n            const voice = this.loadVoice(i);\n            voice.playFrequency(destination, frequency, startTime, duration, velocity, onended);\n        }\n    }\n\n    stopPlayback() {\n        // Stop all active sources\n//             console.log(\"activeSources!\", this.activeSources);\n        for (let i = 0; i < this.config.voices.length; i++) {\n            try {\n                const voice = this.loadVoice(i);\n                voice.stopPlayback(); // TODO: hacky?\n            } catch (e) {\n                console.warn(e);\n            }\n        }\n\n    }\n\n    /** Static **/\n\n    unloadAll() {\n        // Unload all cached samples from this program type\n    }\n\n\n\n}\n\n\nexport default PolyphonyInstrument;\n\n","import React from 'react';\n\nimport {\n    ASUIMenuAction, ASUIMenuBreak,\n} from \"../../../../components\";\n\nimport ProgramLoader from \"../../../../common/program/ProgramLoader\";\nimport Library from \"../../../../song/library/Library\";\nimport PromptManager from \"../../../../common/prompt/PromptManager\";\n\n/** PolyphonyInstrumentRenderer **/\nclass PolyphonyInstrumentRendererBase extends React.Component {\n    constructor(props) {\n        super(props);\n        this.cb = {\n            onRemove: (voiceID) => this.removeVoice(voiceID),\n            onAction: (e) => this.addVoice()\n        }\n    }\n\n    /** Actions **/\n\n    // TODO: Use Context Consumer/Provider for status/error callbacks\n    setStatus(message) { console.info(this.constructor.name, 'setStatus', message); }\n    setError(message) { console.error(this.constructor.name, 'setStatus', message); }\n\n    wrapVoiceWithNewInstrument(voiceID) {\n\n    }\n\n    async addVoice(instrumentClassName, promptUser=true) {\n        if (!instrumentClassName)\n            throw new Error(`Invalid voice instrument class`);\n        const {title} = ProgramLoader.getProgramClassInfo(instrumentClassName);\n        const instrumentConfig = {};\n        // instrumentConfig = InstrumentLoader.createInstrumentConfig(instrumentClassName, instrumentConfig);\n        // instrumentConfig.libraryURL = this.defaultLibraryURL;\n        // instrumentConfig.name = instrumentConfig.name || instrumentURL.split('/').pop();\n\n//         e.target.form.elements['instrumentURL'].value = '';\n        if (promptUser === false || await PromptManager.openConfirmDialog(`Add voice class '${title}' to Instrument?`)) {\n            const newVoiceID = this.props.config.voices.length;\n            this.props.config.voices[newVoiceID] = [instrumentClassName, instrumentConfig];\n            this.setStatus(`Instrument '${instrumentClassName}' added as voice ${newVoiceID}`);\n\n        } else {\n            this.setError(`New voice canceled: ${instrumentClassName}`);\n        }\n\n    }\n\n    renameVoice(voiceID, newTitle) {\n\n    }\n\n    removeVoice(voiceID) {\n        const voices = this.props.config.voices;\n        if(typeof voices[voiceID] === \"undefined\")\n            throw new Error(\"Voice ID not found: \" + voiceID);\n        voices.splice(voiceID, 1);\n    }\n\n    /** Menu **/\n\n    renderMenuAddVoice() {\n        const library = Library.loadDefault();\n        return (<>\n            <ASUIMenuAction disabled action={()=>{}}>Add new voice instrument</ASUIMenuAction>\n            <ASUIMenuBreak/>\n            {library.songLengthAllPresets(([className, presetConfig]) => {\n                this.addVoice(className, presetConfig);\n            })}\n        </>)\n        // return Values.renderMenuSelectAvailableInstrument((instrumentClass) => {\n        //     this.addVoice(instrumentClass);\n        // }, \"Add new program as voice\")\n    }\n}\n\nexport default PolyphonyInstrumentRendererBase;\n","import React from 'react';\n\nimport \"./PolyphonyInstrumentRenderer.css\";\nimport PolyphonyInstrumentRendererBase from \"./PolyphonyInstrumentRendererBase\";\nimport {ASUIButtonDropDown} from \"../../../../components\";\nimport {ProgramLoader} from \"../../../../common/program\";\n\n/** PolyphonyInstrumentRenderer **/\nexport default class PolyphonyInstrumentRenderer extends PolyphonyInstrumentRendererBase {\n\n    render() {\n        const voices = this.props.config.voices;\n//         console.log('voices', voices);\n        // Presets are handled by composer\n        return (\n            <div className=\"polyphony-instrument-renderer\">\n                <div className=\"voices\">\n                    {voices.map((voiceData, voiceID) => {\n                        const [className, config] = voiceData;\n                        const {classRenderer: Renderer} = ProgramLoader.getProgramClassInfo(className);\n                        return <Renderer\n                            onRemove={this.cb.onRemove}\n                            key={voiceID}\n                            instrumentID={voiceID}\n                            config={config}\n                        />\n                    })}\n                </div>\n                <ASUIButtonDropDown\n                    title=\"Add new voice\"\n                    className=\"add-voice\"\n                    arrow={false}\n                    options={() => this.renderMenuAddVoice()}>\n                    +\n                </ASUIButtonDropDown>\n            </div>\n        );\n\n    }\n\n}\n","import FileService from \"../../../song/file/FileService\";\nimport GMESongFile from \"../../../song/file/GMESongFile\";\n\nlet libGMESupport = null;\nclass GMEPlayerSynthesizer {\n    constructor(config={}) {\n        this.config = config;\n        if(libGMESupport === null) {\n            libGMESupport = new GMESongFile();\n            libGMESupport.init();\n        }\n    }\n\n    connect(destination) {\n\n    }\n\n    async loadBuffer() {\n        if(!this.fileBuffer) {\n            const src = this.config.fileURL;\n            const service = new FileService();\n            this.fileBuffer = service.loadBufferFromURL(src);\n            console.info(\"SPC ASPlayer loaded\");\n        }\n        if(this.fileBuffer instanceof Promise)\n            this.spcBuffer = await this.spcBuffer;\n        return this.fileBuffer;\n    }\n\n    async loadGMEPlayer(destination) {\n        const buffer = await this.loadBuffer();\n        return libGMESupport.loadPlayerFromBuffer(destination.context, destination, buffer, 'file', {\n            destination\n        });\n    }\n\n    /** Initializing Audio **/\n\n    async init(audioContext) {\n        this.audioContext = audioContext;\n        if (this.config.fileURL)\n            await this.loadBuffer();\n        console.info(\"SPC ASPlayer initialized\");\n    }\n\n    /** Playback **/\n\n\n    // Instruments return promises\n    async play(destination, namedFrequency, startTime, duration, velocity) {\n        const spcPlayer = await this.loadGMEPlayer(destination);\n        this.spcPlayers.push(spcPlayer);\n\n        let currentTime = destination.context.currentTime;\n        startTime = startTime !== null ? startTime : currentTime;\n        if(startTime > currentTime) {\n            const waitTime = startTime - currentTime;\n            await new Promise((resolve, reject) => setTimeout(resolve, waitTime * 1000));\n        }\n        // const commandFrequency = this.getFrequencyFromAlias(namedFrequency) || namedFrequency;\n        // const max = spcPlayer.getMaxPlaybackPosition();\n        if(startTime < currentTime) {\n            const seekPos = (currentTime - startTime) * 1000;\n            spcPlayer.seekPlaybackPosition(seekPos);\n        }\n        spcPlayer.play(destination);\n\n        if(duration) {\n            const waitTime = (startTime + duration) - destination.context.currentTime;\n            await new Promise((resolve, reject) => setTimeout(resolve, waitTime * 1000));\n            spcPlayer.pause();\n        }\n    }\n\n    stopPlayback() {\n        for(let i=0; i<this.spcPlayers.length; i++) {\n            // this.spcPlayers[i].stop();\n            this.spcPlayers[i].pause();\n        }\n        // this.spcPlayer.stop();\n\n    }\n\n    getFrequencyFromAlias(aliasName) {\n        return null;\n    }\n\n    getCommandFrequency(command) {\n        const keyNumber = this.getCommandKeyNumber(command);\n        return 440 * Math.pow(2, (keyNumber - 49) / 12);\n    }\n\n    getCommandKeyNumber(command) {\n        if (Number(command) === command && command % 1 !== 0)\n            return command;\n        if (!command)\n            return null;\n\n        const noteCommands = this.noteFrequencies; // ['A', 'A#', 'B', 'C', 'C#', 'D', 'D#', 'E', 'F', 'F#', 'G', 'G#'];\n        let octave = command.length === 3 ? command.charAt(2) : command.charAt(1),\n            keyNumber = noteCommands.indexOf(command.slice(0, -1));\n        if (keyNumber < 3) keyNumber = keyNumber + 12 + ((octave - 1) * 12) + 1;\n        else keyNumber = keyNumber + ((octave - 1) * 12) + 1;\n        return keyNumber;\n    }\n\n\n    get noteFrequencies() {\n        return ['A', 'A#', 'B', 'C', 'C#', 'D', 'D#', 'E', 'F', 'F#', 'G', 'G#'];\n    }\n\n    // get instrumentID() {\n    //     return this.getAttribute('data-id');\n    // }\n\n    // render(renderObject=null) {\n    //     if(renderObject instanceof HTMLElement && renderObject.matches('asui-div')) {\n    //         this.form = new GMEPlayerFormRenderer(renderObject, this);\n    //     } else {\n    //         throw new Error(\"Unknown renderer\");\n    //     }\n    // }\n\n\n}\n\n\n\n\n\n/**\n * Used for all Instrument UI. Instance not necessary for song playback\n */\n// class GMEPlayerRenderer {\n//\n//     /**\n//      *\n//      * @param {AudioSourceComposerForm} instrumentForm\n//      * @param programs\n//      */\n//     constructor(instrumentForm, programs) {\n//         this.form = instrumentForm;\n//         this.programs = programs;\n//         const root = instrumentForm.getRootNode() || document;\n//         this.appendCSS(root);\n//         this.render();\n//     }\n//\n//     // get DEFAULT_SAMPLE_LIBRARY_URL() {\n//     //     return getScriptDirectory('default.library.json');\n//     // }\n//\n//\n//\n// //     appendCSS(rootElm) {\n// //\n// //         // Append Instrument CSS\n// //         const PATH = 'programs/chip/spc-player-synthesizer.css';\n// //         const linkHRef = getScriptDirectory(PATH);\n// // //             console.log(rootElm);\n// //         let linkElms = rootElm.querySelectorAll('link');\n// //         for(let i=0; i<linkElms.length; i++) {\n// //             if(linkElms[i].href.endsWith(PATH))\n// //                 return;\n// //         }\n// //         const linkElm = document.createElement('link');\n// //         linkElm.setAttribute('href', linkHRef);\n// //         linkElm.setAttribute('rel', 'stylesheet');\n// //         rootElm.insertBefore(linkElm, rootElm.firstChild);\n// //     }\n//\n//     /** Modify Instrument **/\n//\n//     remove() {\n//         this.programs.song.instrumentRemove(this.programs.id);\n//         // document.dispatchEvent(new CustomEvent('programs:remove', this));\n//     }\n//\n//     instrumentRename(newInstrumentName) {\n//         return this.programs.song.instrumentRename(this.programs.id, newInstrumentName);\n//     }\n//\n//     render() {\n//         // const programs = this.programs;\n//         const instrumentID = typeof this.programs.id !== \"undefined\" ? this.programs.id : -1;\n//         const instrumentIDHTML = (instrumentID < 10 ? \"0\" : \"\") + (instrumentID);\n//         this.form.innerHTML = '';\n//         this.form.classList.add('spc-player-synthesizer-container');\n//\n//         // this.form.removeEventListener('focus', this.focusHandler);\n//         // this.form.addEventListener('focus', this.focusHandler, true);\n//\n//         const instrumentToggleButton = this.form.addButtonInput('programs-id',\n//             e => this.form.classList.toggle('selected'),\n//             instrumentIDHTML + ':'\n//         );\n//         instrumentToggleButton.classList.add('show-on-focus');\n//\n//         const instrumentNameInput = this.form.addTextInput('programs-name',\n//             (e, newInstrumentName) => this.instrumentRename(newInstrumentName),\n//             'Instrument Name',\n//             this.programs.config.name || '',\n//             'Unnamed'\n//         );\n//         instrumentNameInput.classList.add('show-on-focus');\n//\n//\n//         this.form.addButtonInput('programs-remove',\n//             (e) => this.remove(e, instrumentID),\n//             this.form.createIcon('delete'),\n//             'Remove Instrument');\n//\n//         let defaultPresetURL = '';\n//         if (this.programs.config.libraryURL && this.programs.config.preset)\n//             defaultPresetURL = new URL(this.programs.config.libraryURL + '#' + this.programs.config.preset, document.location) + '';\n//\n//         this.fieldChangePreset = this.form.addSelectInput('programs-preset',\n//             (e, presetURL) => this.setPreset(presetURL),\n//             (addOption, setOptgroup) => {\n//                 addOption('', 'Change Preset');\n//                 // setOptgroup(this.sampleLibrary.name || 'Unnamed Library');\n//                 // this.sampleLibrary.getPresets().map(presetConfig => addOption(presetConfig.url, presetConfig.name));\n//                 // setOptgroup('Libraries');\n//                 // this.sampleLibrary.getLibraries().map(libraryConfig => addOption(libraryConfig.url, libraryConfig.name));\n//                 // setOptgroup('Other Libraries');\n//                 // const Library = customElements.get('audio-source-library');\n//                 // Library.eachHistoricLibrary(addOption);\n//             },\n//             'Change Instrument',\n//             defaultPresetURL);\n//\n//\n//         this.form.addBreak();\n//     }\n// }\n\nexport default GMEPlayerSynthesizer;\n\n\n","// import FileService from \"../../song/file/FileService\";\nimport React from \"react\";\n// import GMESongFile from \"../../song/file/GMESongFile\";\n\n\nclass GMEPlayerSynthesizerRenderer extends React.Component {\n    constructor(props={}) {\n        console.log(props);\n        super(props);\n        this.config = props.config || {};\n        this.state = {};\n    }\n\n}\n\n\n\n\n\n/**\n * Used for all Instrument UI. Instance not necessary for song playback\n */\n// class GMEPlayerRenderer {\n//\n//     /**\n//      *\n//      * @param {AudioSourceComposerForm} instrumentForm\n//      * @param programs\n//      */\n//     constructor(instrumentForm, programs) {\n//         this.form = instrumentForm;\n//         this.programs = programs;\n//         const root = instrumentForm.getRootNode() || document;\n//         this.appendCSS(root);\n//         this.render();\n//     }\n//\n//     // get DEFAULT_SAMPLE_LIBRARY_URL() {\n//     //     return getScriptDirectory('default.library.json');\n//     // }\n//\n//\n//\n// //     appendCSS(rootElm) {\n// //\n// //         // Append Instrument CSS\n// //         const PATH = 'programs/chip/spc-player-synthesizer.css';\n// //         const linkHRef = getScriptDirectory(PATH);\n// // //             console.log(rootElm);\n// //         let linkElms = rootElm.querySelectorAll('link');\n// //         for(let i=0; i<linkElms.length; i++) {\n// //             if(linkElms[i].href.endsWith(PATH))\n// //                 return;\n// //         }\n// //         const linkElm = document.createElement('link');\n// //         linkElm.setAttribute('href', linkHRef);\n// //         linkElm.setAttribute('rel', 'stylesheet');\n// //         rootElm.insertBefore(linkElm, rootElm.firstChild);\n// //     }\n//\n//     /** Modify Instrument **/\n//\n//     remove() {\n//         this.programs.song.instrumentRemove(this.programs.id);\n//         // document.dispatchEvent(new CustomEvent('programs:remove', this));\n//     }\n//\n//     instrumentRename(newInstrumentName) {\n//         return this.programs.song.instrumentRename(this.programs.id, newInstrumentName);\n//     }\n//\n//     render() {\n//         // const programs = this.programs;\n//         const instrumentID = typeof this.programs.id !== \"undefined\" ? this.programs.id : -1;\n//         const instrumentIDHTML = (instrumentID < 10 ? \"0\" : \"\") + (instrumentID);\n//         this.form.innerHTML = '';\n//         this.form.classList.add('spc-player-synthesizer-container');\n//\n//         // this.form.removeEventListener('focus', this.focusHandler);\n//         // this.form.addEventListener('focus', this.focusHandler, true);\n//\n//         const instrumentToggleButton = this.form.addButtonInput('programs-id',\n//             e => this.form.classList.toggle('selected'),\n//             instrumentIDHTML + ':'\n//         );\n//         instrumentToggleButton.classList.add('show-on-focus');\n//\n//         const instrumentNameInput = this.form.addTextInput('programs-name',\n//             (e, newInstrumentName) => this.instrumentRename(newInstrumentName),\n//             'Instrument Name',\n//             this.programs.config.name || '',\n//             'Unnamed'\n//         );\n//         instrumentNameInput.classList.add('show-on-focus');\n//\n//\n//         this.form.addButtonInput('programs-remove',\n//             (e) => this.remove(e, instrumentID),\n//             this.form.createIcon('delete'),\n//             'Remove Instrument');\n//\n//         let defaultPresetURL = '';\n//         if (this.programs.config.libraryURL && this.programs.config.preset)\n//             defaultPresetURL = new URL(this.programs.config.libraryURL + '#' + this.programs.config.preset, document.location) + '';\n//\n//         this.fieldChangePreset = this.form.addSelectInput('programs-preset',\n//             (e, presetURL) => this.setPreset(presetURL),\n//             (addOption, setOptgroup) => {\n//                 addOption('', 'Change Preset');\n//                 // setOptgroup(this.sampleLibrary.name || 'Unnamed Library');\n//                 // this.sampleLibrary.getPresets().map(presetConfig => addOption(presetConfig.url, presetConfig.name));\n//                 // setOptgroup('Libraries');\n//                 // this.sampleLibrary.getLibraries().map(libraryConfig => addOption(libraryConfig.url, libraryConfig.name));\n//                 // setOptgroup('Other Libraries');\n//                 // const Library = customElements.get('audio-source-library');\n//                 // Library.eachHistoricLibrary(addOption);\n//             },\n//             'Change Instrument',\n//             defaultPresetURL);\n//\n//\n//         this.form.addBreak();\n//     }\n// }\n\nexport default GMEPlayerSynthesizerRenderer;\n","\nclass TestInstrument {\n    constructor(config={}, audioContext=null) {\n        this.config = {};\n        this.audioContext = audioContext;\n    }\n\n\n    /** Playback **/\n\n    playFrequency(destination, frequency, startTime, duration=null, velocity=null, onended=null) {\n        console.info('playFrequency(', frequency, startTime, duration, velocity, ')')\n    }\n\n\n}\n\nexport default TestInstrument;\n\n\n","import AudioBufferInstrument from \"./instrument/voice/AudioBufferInstrument\";\nimport AudioBufferInstrumentRenderer from \"./instrument/voice/render/AudioBufferInstrumentRenderer\";\nimport OscillatorInstrument from \"./instrument/voice/OscillatorInstrument\";\nimport OscillatorInstrumentRenderer from \"./instrument/voice/render/OscillatorInstrumentRenderer\";\nimport PolyphonyInstrument from \"./instrument/poly/PolyphonyInstrument\";\nimport PolyphonyInstrumentRenderer from \"./instrument/poly/render/PolyphonyInstrumentRenderer\";\nimport GMEPlayerSynthesizer from \"./player/gme/GMEPlayerSynthesizer\";\nimport GMEPlayerSynthesizerRenderer from \"./player/gme/GMEPlayerSynthesizerRenderer\";\nimport ProgramLoader from \"../common/program/ProgramLoader\";\nimport TestInstrument from \"./instrument/test/TestInstrument\";\n\nexport default {\n    AudioBufferInstrument,\n    AudioBufferInstrumentRenderer,\n    OscillatorInstrument,\n    OscillatorInstrumentRenderer,\n    PolyphonyInstrument,\n    PolyphonyInstrumentRenderer,\n    GMEPlayerSynthesizer,\n    GMEPlayerSynthesizerRenderer,\n    TestInstrument,\n    addAllPrograms: function() {\n        ProgramLoader.addProgramClass('AudioBufferInstrument', AudioBufferInstrument, AudioBufferInstrumentRenderer, 'AudioBuffer Instrument');\n        ProgramLoader.addProgramClass('OscillatorInstrument', OscillatorInstrument, OscillatorInstrumentRenderer, 'OscillatorNode Instrument');\n        ProgramLoader.addProgramClass('PolyphonyInstrument', PolyphonyInstrument, PolyphonyInstrumentRenderer, 'Audio Source Synthesizer');\n        ProgramLoader.addProgramClass('GMEPlayerSynthesizer', GMEPlayerSynthesizer, GMEPlayerSynthesizerRenderer, 'Game Music ASPlayer Synthesizer');\n        ProgramLoader.addProgramClass('TestInstrument', TestInstrument, null, 'Test Instrument');\n    }\n}\n\n\n","import ProgramLoader from \"../common/program/ProgramLoader\";\nimport SongValues from \"./values/SongValues\";\n\nimport Storage from \"../common/storage/Storage\";\nimport GMESongFile from \"./file/GMESongFile\";\nimport JSONSongFile from \"./file/JSONSongFile\";\nimport FileService from \"./file/FileService\";\nimport {ConfigListener} from \"./config/ConfigListener\";\nimport {Instruction, InstructionIterator, QuantizedInstructionIterator} from \"./instruction/\";\n\n\nimport ProgramList from \"../programs\";\nimport Values from \"../common/values/Values\";\nimport TrackIterator from \"./track/TrackIterator\";\nimport TrackPlayback from \"./track/TrackPlayback\";\n\n// TODO: can be handled cleaner\nProgramList.addAllPrograms();\n// const DEFAULT_PROGRAM_CLASS = 'PolyphonyProgram';\n\n\nclass Song {\n    constructor(songData={}) {\n\n        this.eventListeners = [];\n        this.programLoader = new ProgramLoader(this);\n\n        this.volume = null;\n        this.lastVolumeGain = null;\n        this.playback = null;\n\n        const data = {\n            title: Song.generateTitle(),\n            uuid: Values.generateUUID(),\n            version: '0.0.1',\n            created: new Date().getTime(),\n            timeDivision: 96 * 4,\n            beatsPerMinute: 120,\n            beatsPerMeasure: 4,\n            startTrack: 'root',\n            programs: [ // Also called 'programs' or 'patches'\n                ['PolyphonyInstrument', {\n                    voices: [\n                        ['OscillatorInstrument', {\n                            type: 'sawtooth'\n                        }],\n                        ['OscillatorInstrument', {\n                            type: 'sawtooth'\n                        }],\n                    ]}\n                ],\n                ['OscillatorInstrument',{type: 'square'}],\n            ],\n            tracks: {\n                root: [\n                    ['@track0', 288],\n                    ['@track1'],\n                    [2000, '@track0', 288],\n                    ['@track1'],\n                    [2000, '@track0', 288],\n                    ['@track1'],\n                    [2000, '@track0', 288],\n                    ['@track1'],\n                ],\n                track0: [\n                    // ['!d', 'Effect'],\n                    ['!p', 0],\n                    [0, 'C4', 64],\n                    [64, 'D4', 64],\n                    [64, 'E4', 64],\n                    [64, 'F4', 64],\n                    [64, 'G4', 64],\n                    [64, 'A4', 64],\n                ],\n                track1: [\n                    ['!p', 1],\n                    [64, 'A3', 64],\n                    // [64, 'Aq3', 64],\n                    // [64, 'A#3', 64],\n                    [64, 'A#q3', 64],\n                    // [64, 'B3', 64],\n                    // [64, 'Bq3', 64],\n                    [64, 'C4', 64],\n                    // [64, 'Cq4', 64],\n                    // [64, 'C#4', 64],\n                    [64, 'C#q4', 64],\n                    // [64, 'D4', 64],\n                    // [64, 'Dq4', 64],\n                    [64, 'D#4', 64],\n                    // [64, 'D#q4', 64],\n                    // [64, 'E4', 64],\n                    [64, 'Eq4', 64],\n                    // [64, 'E#4', 64],\n                    // [64, 'E#q4', 64],\n                    [64, 'F#4', 64],\n                    // [64, 'F#q4', 64],\n                    // [64, 'G4', 64],\n                    [64, 'Gq4', 64],\n                    // [64, 'G#4', 64],\n                    // [64, 'G#q4', 64],\n                    [64, 'A4', 64],\n                    // [64, 'Aq4', 64],\n                    // [64, 'A#4', 64],\n                    [64, 'A#q4', 64],\n                    // [64, 'B4', 64],\n                    // [64, 'Bq4', 64],\n                    [64, 'C5', 64],\n                    // [64, 'Cq4', 64],\n                    // [64, 'C#4', 64],\n                    [64, 'C#q5', 64],\n                    // [64, 'D4', 64],\n                    // [64, 'Dq4', 64],\n                    [64, 'D#5', 64],\n                    // [64, 'D#q4', 64],\n                    // [64, 'E4', 64],\n                    [64, 'Eq5', 64],\n                    // [64, 'E#4', 64],\n                    // [64, 'E#q4', 64],\n                    [64, 'F#5', 64],\n                    // [64, 'F#q4', 64],\n                    // [64, 'G4', 64],\n                    [64, 'Gq5', 64],\n                    // [64, 'G#4', 64],\n                    // [64, 'G#q4', 64],\n                    [64, 'A5', 64],\n                ]\n            }\n        };\n\n        this.getProxiedData = function() { return data; };\n        this.data = new Proxy(data, new ConfigListener(this));\n        this.history = [];\n        this.values = new SongValues(this);\n\n        this.loadSongData(songData);\n        this.programLoadAll();\n\n        this.dispatchEventCallback = e => this.dispatchEvent(e);\n    }\n\n    /** @deprecated? **/\n    connect(destination) {\n        this.destination = destination;\n    }\n\n    /** Events and Listeners **/\n\n    dispatchEvent(e) {\n        for (let i = 0; i < this.eventListeners.length; i++) {\n            const [eventName, listenerCallback] = this.eventListeners[i];\n            if(e.name === eventName || eventName === '*') {\n                listenerCallback(e);\n            }\n        }\n    }\n\n    addEventListener(eventName, listenerCallback) {\n        this.eventListeners.push([eventName, listenerCallback]);\n    }\n\n    removeEventListener(eventName, listenerCallback) {\n        for (let i = 0; i < this.eventListeners.length; i++) {\n            const [eventName2, listenerCallback2] = this.eventListeners[i];\n            if(eventName === eventName2 && listenerCallback === listenerCallback2) {\n                this.eventListeners.splice(i, 1);\n                break;\n            }\n        }\n    }\n\n    unloadAll() {\n        this.programLoader.unloadAllPrograms();\n        this.eventListeners = [];\n    }\n\n\n    /** Song Data **/\n\n\n    loadSongData(songData) {\n        const data = this.getProxiedData();\n\n        if (this.playback)\n            this.stopPlayback();\n        Object.assign(data, songData);\n\n        // this.data = songData;\n        this.playbackPosition = 0;\n\n        // Process all instructions\n        if(!data.tracks)\n            throw new Error(\"No tracks found in song data\");\n        Instruction.processInstructionTracks(data.tracks);\n\n        // let loadingPrograms = 0;\n\n        // console.log(\"Song data loaded: \", songData);\n\n        this.dispatchEvent({\n            type: 'song:loaded',\n            song: this\n        });\n    }\n\n\n    loadSongHistory(songHistory) {\n        this.history = songHistory;\n    }\n\n\n    /** Instruction Tracks **/\n\n    getStartTrackName() {\n        return typeof this.data.startTrack === \"undefined\"\n            ? this.data.startTrack\n            : Object.keys(this.data.tracks)[0];\n    }\n\n    hasTrack(trackName) {\n        return typeof this.data.tracks[trackName] !== \"undefined\";\n    }\n\n\n    generateInstructionTrackName(trackName = 'track') {\n        const tracks = this.data.tracks;\n        for (let i = 0; i <= 999; i++) {\n            const currentTrackName = trackName + i;\n            if (!tracks.hasOwnProperty(currentTrackName))\n                return currentTrackName;\n        }\n        throw new Error(\"Failed to generate group name\");\n    }\n\n\n\n    /** Programs **/\n    // All programs are sent a 0 frequency play in order to pre-load samples.\n\n    hasProgram(programID) {\n        return !!this.data.programs[programID];\n    }\n\n    playProgram(destination, program, noteFrequency, noteStartTime, noteDuration=null, noteVelocity=null, onstart=null, onended=null) {\n        // if (!programID && programID !== 0)\n        //     throw new Error(\"Invalid program ID\");\n        // if (!programID && programID !== 0) {\n        //     console.warn(\"No programs set for instruction. Using programs 0\");\n        //     programID = 0;\n        //     // return;\n        // }\n        // let program = this.programLoader.loadInstanceFromID(programID);\n        // return await program.play(destination, noteFrequency, noteStartTime, noteDuration, noteVelocity);\n        if(onstart !== null) {\n            let currentTime = destination.context.currentTime;\n            setTimeout(onstart, (noteStartTime - currentTime) * 1000);\n        }\n        if(typeof noteFrequency === \"string\")\n            noteFrequency = Values.parseFrequencyString(noteFrequency);\n        return program.playFrequency(destination, noteFrequency, noteStartTime, noteDuration, noteVelocity, onended);\n    }\n\n    programGetData(programID)         { return this.programLoader.getData(programID); }\n    programGetClassName(programID)    { return this.programLoader.getClassName(programID); }\n    programGetClass(programID)        { return this.programLoader.getClass(programID); }\n    programGetConfig(programID)       { return this.programLoader.getConfig(programID); }\n\n\n    // programGetList() {\n    //     return this.data.programs;\n    // }\n    programEach(callback) {\n        return this.data.programs.map(function(entry, programID) {\n            const [className, config] = entry;\n            return callback(programID, className, config);\n        });\n    }\n\n\n    programLoadAll() {\n        const programList = this.data.programs;\n        for (let programID = 0; programID < programList.length; programID++) {\n            if (programList[programID]) {\n                this.programLoadInstanceFromID(programID);\n                // TODO wait for init?\n            }\n        }\n    }\n\n\n    programLoadInstanceFromID(programID) {\n        return this.programLoader.loadInstanceFromID(programID);\n        // this.dispatchEvent({\n        //     type: 'programs:instance',\n        //     program,\n        //     programID,\n        //     song: this\n        // });\n    }\n\n    programLoadRenderer(programID) {\n        return this.programLoader.programLoadRenderer(programID);\n    }\n\n\n    programAdd(config) {\n        if (typeof config !== 'object')\n            throw new Error(\"Invalid programs config object\");\n        if (!config.className)\n            throw new Error(\"Invalid Program Class\");\n\n        const programList = this.data.programs;\n        const programID = programList.length;\n\n        this.data.programs[programID] = config;\n        this.programLoadInstanceFromID(programID);\n        // this.dispatchEvent({\n        //     type: 'programs:added',\n        //     programID,\n        //     config,\n        //     song: this\n        // });\n        return programID;\n    }\n\n    programReplace(programID, programClassName, programConfig={}) {\n        // Preserve old programs name\n        // if (oldConfig && oldConfig.title && !programConfig.title)\n        //     programConfig.title = oldConfig.title;\n\n        const oldConfig = this.data.programs[programID];\n        this.data.programs[programID] = [programClassName, programConfig];\n        this.programLoadInstanceFromID(programID);\n\n        // this.dispatchEvent({\n        //     type: 'programs:modified',\n        //     programID,\n        //     oldConfig,\n        //     song: this\n        // });\n        return oldConfig;\n    }\n\n    programRename(programID, newTitle) {\n        const config = this.programGetConfig(programID);\n        config.title = newTitle;\n    }\n\n    programRemove(programID) {\n        const programList = this.data.programs;\n        if (!programList[programID])\n            return console.error(\"Invalid programs ID: \" + programID);\n        const isLastProgram = programID === programList.length - 1;\n\n        const oldConfig = programList[programID];\n        if(isLastProgram) {\n            delete programList[programID];\n        } else {\n            programList[programID] = null;\n        }\n        // this.programUnload(programID);\n\n        // this.dispatchEvent({\n        //     type: 'programs:removed',\n        //     programID,\n        //     song: this\n        // });\n        return oldConfig;\n    }\n\n\n\n\n    /** Instructions **/\n\n    instructionIndexOf(trackName, instruction) {\n        if (instruction instanceof Instruction)\n            instruction = instruction.data;\n\n        if(!this.data.tracks[trackName])\n            throw new Error(\"Invalid instruction track: \" + trackName);\n        let instructionList = this.data.tracks[trackName];\n\n        instruction = ConfigListener.resolveProxiedObject(instruction);\n        // instructionList = ConfigListener.resolveProxiedObject(instructionList);\n\n        const p = instructionList.indexOf(instruction);\n        if (p === -1)\n            throw new Error(\"Instruction not found in instruction list\");\n        return p;\n    }\n\n    instructionGetList(trackName) {\n        if(!this.data.tracks[trackName])\n            throw new Error(\"Invalid instruction track: \" + trackName);\n        return this.data.tracks[trackName];\n    }\n\n    instructionGetByIndex(trackName, index) {\n        if(!this.data.tracks[trackName])\n            throw new Error(\"Invalid instruction track: \" + trackName);\n        let instructionList = this.instructionGetList(trackName);\n        if(index < 0 || index > instructionList.length)\n            throw new Error(\"Index is out or range: \" + index);\n        if(!instructionList[index])\n            throw new Error(\"Invalid instruction index: \" + index);\n        return Instruction.getInstruction(instructionList[index]);\n    }\n\n\n    instructionGetIterator(trackName, timeDivision=null, beatsPerMinute=null) {\n        if(!this.data.tracks[trackName])\n            throw new Error(\"Invalid instruction track: \" + trackName);\n        const instructionList = this.data.tracks[trackName];\n\n        return new InstructionIterator(\n            instructionList,\n            timeDivision || this.data.timeDivision,\n            beatsPerMinute || this.data.beatsPerMinute,\n        );\n    }\n\n    instructionGetQuantizedIterator(trackName, quantizationTicks, timeDivision=null, beatsPerMinute=null) {\n        if(!this.data.tracks[trackName])\n            throw new Error(\"Invalid instruction track: \" + trackName);\n        const instructionList = this.data.tracks[trackName];\n\n        return new QuantizedInstructionIterator(\n            instructionList,\n            quantizationTicks,\n            timeDivision || this.data.timeDivision,\n            beatsPerMinute || this.data.beatsPerMinute,\n        );\n    }\n\n\n    /** Modify Instructions **/\n\n    /** TODO: fix insertion bugs **/\n    instructionInsertAtPosition(trackName, insertPositionInTicks, insertInstructionData) {\n        if (typeof insertPositionInTicks === 'string')\n            insertPositionInTicks = Values.parseDurationAsTicks(insertPositionInTicks, this.data.timeDivision);\n\n        if (!Number.isInteger(insertPositionInTicks))\n            throw new Error(\"Invalid integer: \" + typeof insertPositionInTicks);\n        if (!insertInstructionData)\n            throw new Error(\"Invalid insert instruction\");\n        const insertInstruction = Instruction.parseInstruction(insertInstructionData);\n        let instructionList = this.data.tracks[trackName];\n\n\n        const iterator = this.instructionGetIterator(trackName);\n\n        let instruction = iterator.nextInstruction();\n        while (instruction) {\n            // if(instruction.deltaDuration > 0) {\n            const currentPositionInTicks = iterator.positionTicks;\n            if (currentPositionInTicks > insertPositionInTicks) {\n                // Delta note appears after note to be inserted\n                const splitDuration = [\n                    insertPositionInTicks - (currentPositionInTicks - instruction.deltaDurationTicks),\n                    currentPositionInTicks - insertPositionInTicks\n                ];\n\n                const modifyIndex = iterator.currentIndex;\n                // Make following delta note smaller\n                this.instructionReplaceDeltaDuration(trackName, modifyIndex, splitDuration[1]);\n\n                // Insert new note before delta note.\n                insertInstruction.deltaDurationTicks = splitDuration[0];                     // Make new note equal the rest of the duration\n                this.instructionInsertAtIndex(trackName, modifyIndex, insertInstruction);\n\n                return modifyIndex; // this.splitPauseInstruction(trackName, i,insertPosition - groupPosition , insertInstruction);\n\n            } else if (currentPositionInTicks === insertPositionInTicks) {\n                // Delta note plays at the same time as new note, append after\n\n                let lastInsertIndex;\n                // Search for last insert position\n                for (lastInsertIndex = iterator.currentIndex + 1; lastInsertIndex < instructionList.length; lastInsertIndex++)\n                    if (new Instruction(instructionList[lastInsertIndex]).deltaDurationTicks > 0)\n                        break;\n\n                insertInstruction.deltaDurationTicks = 0; // TODO: is this correct?\n                this.instructionInsertAtIndex(trackName, lastInsertIndex, insertInstruction);\n                return lastInsertIndex;\n            }\n            // groupPosition += instruction.deltaDuration;\n            // lastDeltaInstructionIndex = i;\n            // }\n            // if (!instruction)\n            //     break;\n            instruction = iterator.nextInstruction();\n        }\n\n        if (iterator.positionTicks >= insertPositionInTicks)\n            throw new Error(\"Something went wrong\");\n        // Insert a new pause at the end of the song, lasting until the new note?\n        let lastPauseIndex = instructionList.length;\n        // this.instructionInsertAtIndex(trackName, lastPauseIndex, {\n        //     command: '!pause',\n        //     duration: insertPosition - groupPosition\n        // });\n        // Insert new note\n        insertInstruction.deltaDurationTicks = insertPositionInTicks - iterator.positionTicks;\n        this.instructionInsertAtIndex(trackName, lastPauseIndex, insertInstruction);\n        return lastPauseIndex;\n    }\n\n\n    instructionInsertAtIndex(trackName, insertIndex, insertInstructionData) {\n        if (!insertInstructionData)\n            throw new Error(\"Invalid insert instruction\");\n        let insertInstruction = Instruction.parseInstruction(insertInstructionData);\n        insertInstructionData = insertInstruction.data;\n        this.instructionGetList(trackName).splice(insertIndex, 0, insertInstructionData);\n        return insertIndex;\n    }\n\n\n    instructionDeleteAtIndex(trackName, deleteIndex) {\n        const deleteInstruction = this.instructionGetByIndex(trackName, deleteIndex);\n        if (deleteInstruction.deltaDurationTicks > 0) {\n            const nextInstruction = this.instructionGetByIndex(trackName, deleteIndex + 1, false);\n            if (nextInstruction) {\n                // this.getInstruction(trackName, deleteIndex+1).deltaDuration =\n                //     nextInstruction.deltaDuration + deleteInstruction.deltaDuration;\n                this.instructionReplaceDeltaDuration(trackName, deleteIndex + 1, nextInstruction.deltaDurationTicks + deleteInstruction.deltaDurationTicks)\n            }\n        }\n        this.instructionGetList(trackName).splice(deleteIndex, 1);\n        // return this.spliceDataByPath(['instructions', trackName, deleteIndex], 1);\n    }\n\n    instructionReplaceDeltaDuration(trackName, replaceIndex, newDelta) {\n        this.instructionGetByIndex(trackName, replaceIndex).deltaDurationTicks = newDelta;\n        // return this.instructionReplaceParam(trackName, replaceIndex, 0, newDelta);\n    }\n\n    instructionReplaceCommand(trackName, replaceIndex, newCommand) {\n        //: TODO: check for recursive group\n        this.instructionGetByIndex(trackName, replaceIndex).command = newCommand;\n    }\n\n    instructionReplaceProgram(trackName, replaceIndex, programID) {\n        this.instructionGetByIndex(trackName, replaceIndex).program = programID;\n    }\n\n    instructionReplaceDuration(trackName, replaceIndex, newDuration) {\n        if (typeof newDuration === 'string')\n            newDuration = Values.parseDurationAsTicks(newDuration, this.data.timeDivision);\n        this.instructionGetByIndex(trackName, replaceIndex).durationTicks = newDuration;\n    }\n\n    instructionReplaceVelocity(trackName, replaceIndex, newVelocity) {\n        if (!Number.isInteger(newVelocity))\n            throw new Error(\"Velocity must be an integer: \" + newVelocity);\n        if (newVelocity < 0)\n            throw new Error(\"Velocity must be a positive integer: \" + newVelocity);\n        this.instructionGetByIndex(trackName, replaceIndex).velocity = newVelocity;\n    }\n\n\n    /** Song Tracks **/\n\n    trackAdd(newTrackName, instructionList) {\n        if (this.data.tracks.hasOwnProperty(newTrackName))\n            throw new Error(\"New group already exists: \" + newTrackName);\n        this.data.tracks[newTrackName] = instructionList || [];\n    }\n\n\n    trackRemove(removeTrackName) {\n        if (removeTrackName === 'root')\n            throw new Error(\"Cannot remove root instruction track, n00b\");\n        if (!this.data.tracks.hasOwnProperty(removeTrackName))\n            throw new Error(\"Existing group not found: \" + removeTrackName);\n\n        delete this.data.tracks[removeTrackName];\n    }\n\n\n    trackRename(oldTrackName, newTrackName) {\n        if (oldTrackName === 'root')\n            throw new Error(\"Cannot rename root instruction track, n00b\");\n        if (!this.data.tracks.hasOwnProperty(oldTrackName))\n            throw new Error(\"Existing group not found: \" + oldTrackName);\n        if (this.data.tracks.hasOwnProperty(newTrackName))\n            throw new Error(\"New group already exists: \" + newTrackName);\n\n        const removedGroupData = this.data.tracks[oldTrackName];\n        delete this.data.tracks[oldTrackName];\n        this.data.tracks[newTrackName] = removedGroupData;\n    }\n\n\n    // trackGetIterator(destination, onEvent=null) {\n    //     return new TrackIterator(destination, this, this.getStartTrackName(), onEvent);\n    // }\n\n    /** Playback Timing **/\n\n    getSongLengthInSeconds() {\n        const iterator = new TrackIterator(this.data.tracks, this.getStartTrackName(), this.data.beatsPerMinute, this.data.timeDivision);\n        iterator.seekToEnd();\n        // console.log('getSongLengthInSeconds()', iterator.getEndPositionInSeconds())\n        return iterator.getEndPositionInSeconds();\n    }\n\n    // getSongLengthTicks() {\n    //     return this.instructionGetIterator(this.getStartTrackName())\n    //         .seekToEnd()\n    //         .endPositionTicks;\n    // }\n\n    // getSongLength() {\n    //     return this.getGroupLength(this.getStartTrackName());\n    // }\n    //\n    // getGroupLength(trackName) {\n    //     const instructionIterator = this.getInstructionIterator(trackName);\n    //     while (instructionIterator.nextInstruction()) {}\n    //     return instructionIterator;\n    //     // return {\n    //     //     inSeconds: instructionIterator.endPositionSeconds,\n    //     //     inTicks: instructionIterator.endPositionTicks\n    //     // }\n    // }\n\n\n    getSongPositionFromTicks(songPositionInTicks) {\n        return this.getGroupPositionFromTicks(this.getStartTrackName(), songPositionInTicks);\n    }\n\n    // Refactor\n    getGroupPositionFromTicks(trackName, groupPositionInTicks) {\n        const iterator = this.instructionGetIterator(trackName);\n        while (true) {\n            if (iterator.positionTicks >= groupPositionInTicks || !iterator.nextInstruction())\n                break;\n        }\n\n\n        let currentPosition = iterator.positionSeconds;\n\n        if (groupPositionInTicks > iterator.positionTicks) {\n            const elapsedTicks = groupPositionInTicks - iterator.positionTicks;\n            currentPosition += Song.ticksToSeconds(elapsedTicks, iterator.beatsPerMinute, iterator.timeDivision);\n\n        } else if (groupPositionInTicks < iterator.positionTicks) {\n            const elapsedTicks = iterator.positionTicks - groupPositionInTicks;\n            currentPosition -= Song.ticksToSeconds(elapsedTicks, iterator.beatsPerMinute, iterator.timeDivision);\n        }\n\n        // console.info(\"getGroupPositionFromTicks\", groupPositionInTicks, currentPosition);\n        return currentPosition;\n    }\n\n\n    getSongPositionInTicks(positionInSeconds = null) {\n        if (positionInSeconds === null)\n            positionInSeconds = this.getSongPlaybackPosition();\n        return this.getGroupPositionInTicks(this.getStartTrackName(), positionInSeconds);\n    }\n\n\n    getGroupPositionInTicks(trackName, positionInSeconds) {\n        const iterator = this.instructionGetIterator(trackName);\n        while (true) {\n            if (iterator.positionSeconds >= positionInSeconds || !iterator.nextInstruction())\n                break;\n        }\n\n        let currentPositionInTicks = iterator.positionTicks;\n        if (positionInSeconds > iterator.positionSeconds) {\n            const elapsedTime = positionInSeconds - iterator.positionSeconds;\n            currentPositionInTicks += Song.secondsToTicks(elapsedTime, iterator.beatsPerMinute);\n\n        } else if (positionInSeconds < iterator.positionSeconds) {\n            const elapsedTime = iterator.positionSeconds - positionInSeconds;\n            currentPositionInTicks -= Song.secondsToTicks(elapsedTime, iterator.beatsPerMinute);\n        }\n\n        // console.info(\"getSongPositionInTicks\", positionInSeconds, currentPositionInTicks);\n        return currentPositionInTicks;\n    }\n\n    static ticksToSeconds(elapsedTicks, beatsPerMinute, timeDivision) {\n        return (elapsedTicks / timeDivision) * (60 / beatsPerMinute);\n    }\n\n    static secondsToTicks(elapsedTime, beatsPerMinute, timeDivision) {\n        return Math.round((elapsedTime * timeDivision) / (60 / beatsPerMinute));\n    }\n\n\n    /** Playback **/\n\n    setVolume(newVolume) {\n        this.volume = newVolume;\n        if(this.lastVolumeGain)\n            this.lastVolumeGain.gain.value = newVolume;\n    }\n\n\n    getSongPlaybackPosition() {\n        if (this.playback)\n            return this.playback.audioContext.currentTime - this.playback.startTime;\n        return this.playbackPosition;\n    }\n\n\n    setPlaybackPositionInTicks(songPositionInTicks) {\n        if (!Number.isInteger(songPositionInTicks))\n            throw new Error(\"Invalid start position in ticks\");\n        // TODO: is start position beyond song's ending?\n\n        const playbackPosition = this.getSongPositionFromTicks(songPositionInTicks);\n        return this.setPlaybackPosition(playbackPosition);\n    }\n\n    setPlaybackPosition(songPosition) {// TODO: duplicate values? Does the song need to store position?\n        songPosition = parseFloat(songPosition);\n        if (Number.isNaN(songPosition))\n            throw new Error(\"Invalid start position\");\n\n        // this.playback.setPlaybackPosition(this.getAudioContext().currentTime - this.playbackPosition);\n        // let isPlaying = !!this.playback;\n        if (this.playback) {\n            this.stopPlayback();\n        }\n        this.playbackPosition = songPosition;\n\n        this.dispatchEvent({\n            type: 'song:seek',\n            position: this.playbackPosition,\n            // positionInTicks: this.getSongPositionInTicks(this.playbackPosition), // TODO: use iterator\n            song: this\n        });\n\n        console.log('setPlaybackPosition', songPosition);\n\n        // if (isPlaying) {\n        //     const oldDestination = this.playback.destination;\n        //     this.playback = new InstructionPlayback(oldDestination, this, this.getStartTrackName(), oldDestination.context.currentTime - this.playbackPosition);\n        //     // this.playback.awaitPlaybackReachedEnd()\n        //     //     .then((reachedEnding) => reachedEnding ? this.stopPlayback(true) : null);\n        // }\n        // const positionInTicks = this.getSongPositionInTicks(this.playbackPosition);\n//         console.log(\"Seek position: \", this.playbackPosition, positionInTicks);\n\n    }\n\n\n    play(destination, startPosition=null, onended=null) {\n        // destination = this.getVolumeGain(destination);\n        // const audioContext = destination.context;\n        if (this.playback) {\n            this.stopPlayback();\n            this.setPlaybackPosition(0);\n            // throw new Error(\"Song is already playing\");\n        }\n\n        // await this.init(audioContext);\n        if(startPosition === null)\n            startPosition = this.playbackPosition;\n        console.log(\"Start playback:\", startPosition);\n        const playback = new TrackPlayback(this, this.getStartTrackName(), this.dispatchEventCallback);\n        this.playback = playback;\n        playback.play(destination, startPosition)\n\n        this.dispatchEvent({\n            type: 'song:play',\n            playback: this.playback,\n            // positionInTicks: this.getSongPositionInTicks(this.playbackPosition), // TODO: use iterator\n            song: this\n        });\n\n        playback.awaitPlaybackReachedEnd()\n            .then(() => {\n                if(onended)\n                    onended();\n                this.dispatchEvent({\n                    type: 'song:end',\n                    playback: this.playback,\n                    // positionInTicks: this.getSongPositionInTicks(this.playbackPosition), // TODO: use iterator\n                    song: this\n                });\n                // if(this.playback)\n                //     this.stopPlayback();\n            });\n\n\n        return playback;\n        // const reachedEnding = await this.playback.awaitPlaybackReachedEnd();\n        // if(reachedEnding)\n        //     this.stopPlayback(true);\n    }\n\n\n    stopProgramPlayback(programID) {\n        this.programLoader.stopProgramPlayback(programID);\n        // let programClass = this.programLoader.programGetClass(programID);\n        // if(typeof programClass.stopPlayback !== \"function\")\n        //     return console.error(programClass.name + \".stopPlayback is not a function\");\n        // programClass.stopPlayback();\n    }\n\n    stopPlayback() {\n        if (!this.playback)\n            return console.warn(\"Playback is already stopped\");\n        const playback = this.playback;\n        this.playback = null;\n        this.playbackPosition = playback.getPositionInSeconds();\n        playback.stopPlayback();\n        this.programLoader.stopAllPlayback(); // TODO: redundant?\n\n        // TODO: move to playback class\n        // for (let i = 0; i < this.playbackEndCallbacks.length; i++)\n        //     this.playbackEndCallbacks[i]();\n        // this.playbackEndCallbacks = [];\n        // for (let i = 0; i < this.waitCancels.length; i++)\n        //     this.waitCancels[i]();\n        // this.waitCancels = [];\n\n\n        console.log(\"End playback:\", this.playbackPosition);\n\n\n        this.dispatchEvent({\n            type: 'song:end',\n            playback: this.playback,\n            // positionInTicks: this.getSongPositionInTicks(this.playbackPosition), // TODO: use iterator\n            song: this\n        });\n    }\n\n    pause() {\n        if (this.isPaused)\n            throw new Error(\"Song is already paused\");\n        this.isPaused = true;\n    }\n\n    resume() {\n        if (!this.isPaused)\n            throw new Error(\"Song is not paused\");\n        this.isPaused = false;\n    }\n\n    isPlaying() {\n        return !!this.playback;\n    }\n\n\n    playSelectedInstructions(destination, trackName, selectedIndices) {\n        // destination = this.getVolumeGain(destination);\n\n        // TrackIterator find playback position of first index start point\n        if(this.playback)\n            this.stopPlayback();\n        const playback = new TrackPlayback(this, trackName, this.dispatchEventCallback);\n        this.playback = playback;\n        playback.addInstructionFilter(function(instruction, trackStats) {\n            if(trackStats.trackName !== trackName)\n                return null;\n            const index = trackStats.iterator.currentIndex;\n            for(let i=0; i<selectedIndices.length; i++)\n                if(selectedIndices[i] === index) {\n                    // console.log(\"Playing instruction \", index, instruction);\n                    return instruction;\n                }\n            // console.log(\"Skipping instruction \", index, instruction);\n        })\n        // TrackPlayback with selective callback\n        if(selectedIndices.length > 0)\n            playback.playAtStartingTrackIndex(destination, selectedIndices[0])\n        // playback.play(destination);\n\n\n        // for(let i=0; i<selectedIndices.length; i++) {\n        //     const selectedIndex = selectedIndices[i];\n        //     const instruction = song.instructionGetByIndex(trackName, selectedIndex);\n        //     song.playInstruction(destination, instruction, trackState.programID);\n        // }\n\n    }\n\n    // playInstructionAtIndex(destination, trackName, instructionIndex, noteStartTime = null) {\n    //     const instruction = this.instructionGetByIndex(trackName, instructionIndex, false);\n    //     if (instruction)\n    //         this.playInstruction(instruction, noteStartTime);\n    //     else\n    //         console.warn(\"No instruction at index\");\n    // }\n\n    playInstruction(destination, instruction, program, noteStartTime = null, onstart=null, onended=null) {\n        // destination = this.getVolumeGain(destination);\n\n        const audioContext = destination.context;\n        if (!instruction instanceof Instruction)\n            throw new Error(\"Invalid instruction\");\n\n        // if(this.playback)\n        //     this.stopPlayback();\n\n        // if (instruction instanceof ASCTrackInstruction) { // Handled in  TrackPlayback\n        //     return new TrackPlayback(destination, this, instruction.getTrackName(), noteStartTime);\n        // }\n\n\n        // const noteDuration = (instruction.duration || 1) * (60 / beatsPerMinute);\n\n        let noteDuration = null;\n        if(typeof instruction.durationTicks !== \"undefined\") {\n            let beatsPerMinute = this.data.beatsPerMinute; // getStartingBeatsPerMinute();\n            let timeDivision = this.data.timeDivision;\n            const noteDurationTicks = instruction.durationTicks; // (timeDivision);\n            noteDuration = (noteDurationTicks / timeDivision) / (beatsPerMinute / 60);\n        }\n\n        let currentTime = audioContext.currentTime;\n\n        if (!noteStartTime && noteStartTime !== 0)\n            noteStartTime = currentTime;\n\n\n        this.playProgram(destination, program, instruction.command, noteStartTime, noteDuration, instruction.velocity, onstart, onended);\n        // Wait for note to start\n        // if (noteStartTime > currentTime) {\n        //     await this.wait(noteStartTime - currentTime);\n        //     // await new Promise((resolve, reject) => setTimeout(resolve, (noteStartTime - currentTime) * 1000));\n        // }\n\n        // Dispatch note start event\n        // this.dispatchEvent({\n        //     type: 'note:start',\n        //     trackName,\n        //     instruction,\n        //     song: this\n        // });\n\n        // currentTime = audioContext.currentTime;\n        // if (noteStartTime + noteDuration > currentTime) {\n        //     await this.wait(noteStartTime + noteDuration - currentTime);\n        //     // await new Promise((resolve, reject) => setTimeout(resolve, (noteStartTime + noteDuration - currentTime) * 1000));\n        // }\n        // // TODO: check for song stop\n        // // Dispatch note end event\n        // this.dispatchEvent({\n        //     type: 'note:end',\n        //     trackName,\n        //     instruction,\n        //     song: this\n        // });\n    }\n\n\n\n    /** Song Modification History **/\n\n\n\n    queueHistoryAction(action, pathList, data = null, oldData = null) {\n        if(Array.isArray(pathList))\n            pathList = pathList.join('.');\n        const historyAction = [\n            action + ':' + pathList,\n        ];\n        if (data !== null || oldData !== null)\n            historyAction.push(data);\n        if (oldData !== null)\n            historyAction.push(oldData);\n        // this.history.push(historyAction);\n\n        // setTimeout(() => {\n\n        this.dispatchEvent({\n            type: 'song:modified',\n            historyAction,\n            song: this\n        });\n\n        return historyAction;\n    }\n\n\n\n    /** History **/\n\n    // applyHistoryActions(songHistory) {\n    //     for (let i = 0; i < songHistory.length; i++) {\n    //         const historyAction = songHistory[i];\n    //         switch (historyAction.action) {\n    //             case 'reset':\n    //                 Object.assign(this.data, historyAction.data);\n    //                 break;\n    //             case 'insert':\n    //                 this.insertDataPath(historyAction.path, historyAction.data);\n    //                 break;\n    //             case 'delete':\n    //                 this.deleteDataPath(historyAction.path);\n    //                 break;\n    //             case 'replace':\n    //                 this.updateData(historyAction.path, historyAction.data);\n    //                 break;\n    //             default:\n    //                 throw new Error(\"Unknown history action: \" + historyAction.action);\n    //         }\n    //     }\n    //     this.history = [];\n    //     this.instructionProcessGroupData();\n    // }\n\n\n    /** Static Song Loading **/\n\n    /** @deprecated **/\n    static loadSongFromData(audioContext, songData) {\n        const song = new Song();\n        song.loadSongData(songData);\n        return song;\n    }\n\n    /** @deprecated **/\n    static loadSongFromMemory(audioContext, songUUID) {\n        const storage = new Storage();\n        const songData = storage.loadSongFromMemory(songUUID);\n        const songHistory = storage.loadSongHistoryFromMemory(songUUID);\n        const song = new Song(songData);\n        song.loadSongData(songData);\n        song.loadSongHistory(songHistory);\n        return song;\n    }\n\n    /** @deprecated **/\n    static loadSongFromFileInput(audioContext, file) {\n        const library = Song.getFileSupportModule(file.name);\n        if (typeof library.loadSongDataFromFileInput !== \"function\")\n            throw new Error(\"Invalid library.loadSongDataFromFileInput method\");\n\n        const buffer = Song.loadBufferFromFileInput(file);\n        const songData = library.loadSongDataFromBuffer(buffer, file.name);\n        const song = new Song();\n        song.loadSongData(songData);\n        return song;\n    }\n\n    /** @deprecated **/\n    static async loadSongFromURL(audioContext, src) {\n        const library = Song.getFileSupportModule(src);\n        if (typeof library.loadSongDataFromBuffer !== \"function\")\n            throw new Error(\"Invalid library.loadSongDataFromURL method: \" + src);\n\n        const fileService = new FileService();\n        const buffer = await fileService.loadBufferFromURL(src);\n        // const buffer = await response.arrayBuffer();\n        const songData = library.loadSongDataFromBuffer(buffer, src);\n        const song = new Song();\n        song.loadSongData(songData);\n        return song;\n    }\n\n    /** @deprecated **/\n    static async loadBufferFromFileInput(file) {\n        return await new Promise((resolve, reject) => {\n            let reader = new FileReader();                                      // prepare the file Reader\n            reader.readAsArrayBuffer(file);                 // read the binary data\n            reader.onload =  (e) => {\n                resolve(e.target.result);\n            };\n        });\n    }\n\n    /** Static Fle Support Module **/\n\n    static getFileSupportModule(filePath) {\n        // const AudioSourceLoader = customElements.get('audio-source-loader');\n        // const requireAsync = AudioSourceLoader.getRequireAsync(thisModule);\n        const fileExt = filePath.split('.').pop().toLowerCase();\n        let library;\n        switch (fileExt) {\n            // case 'mid':\n            // case 'midi':\n            //     const {MIDISupport} = require('../file/MIDIFile.js');\n            //     return new MIDISupport;\n            //\n            case 'json':\n                library = new JSONSongFile();\n                // await library.init();\n                return library;\n            //\n            case 'nsf':\n            case 'nsfe':\n            case 'spc':\n            case 'gym':\n            case 'vgm':\n            case 'vgz':\n            case 'ay':\n            case 'sgc':\n            case 'kss':\n                library = new GMESongFile();\n                library.init();\n                return library;\n            //\n            // case 'mp3':\n            //     const {MP3Support} = require('../file/MP3File.js');\n            //     return new MP3Support;\n\n            default:\n                throw new Error(\"Unknown file module for file type: \" + fileExt);\n        }\n    };\n\n\n\n\n    /** Generate Song Data **/\n\n    static generateTitle() {\n        return `Untitled (${new Date().toJSON().slice(0, 10).replace(/-/g, '/')})`;\n    }\n\n}\n\nSong.DEFAULT_VOLUME = 0.7;\n\n\n// Song.loadSongFromMIDIFile = async function (file, defaultProgramURL = null) {\n//     defaultProgramURL = defaultProgramURL || this.getDefaultProgramURL();\n//     const midiSupport = new MIDIImport();\n//     const songData = await midiSupport.loadSongFromMidiFile(file, defaultProgramURL);\n//     const song = new Song();\n//     await song.loadSongData(songData);\n//     return song;\n// };\n\n\n\n\nexport default Song;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport ASUIMenuContext from \"../ASUIMenuContext\";\n\nimport \"./ASUIDropDownContainer.css\";\n\nclass ASUIDropDownContainer extends React.Component {\n    static contextType = ASUIMenuContext;\n\n    // creating default props\n    static defaultProps = {\n        // arrow:          true,\n        vertical:       false,\n        // openOnHover:    null,\n        // disabled:       false,\n    };\n\n    // validating prop types\n    static propTypes = {\n        // closeCallback: PropTypes.func.isRequired,\n        vertical: PropTypes.bool,\n        disabled: PropTypes.bool,\n    };\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            open: false,\n            stick: false,\n        };\n        this.divRef = React.createRef();\n    }\n\n    getOverlay() { return this.context.overlay; }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n//         console.log('componentDidUpdate', this.state);\n        if(this.getOverlay()) {\n            if (this.state.open)\n                this.getOverlay().addCloseMenuCallback(this, this.closeMenu.bind(this));\n            else\n                this.getOverlay().removeCloseMenuCallback(this);\n        }\n        this.updateScreenPosition();\n    }\n\n    componentWillUnmount() {\n        if(this.getOverlay())\n            this.getOverlay().removeCloseMenuCallback(this);\n    }\n\n    render() {\n        if (!this.state.open)\n            return null;\n\n        let className = 'asui-menu-dropdown';\n        if (this.props.vertical)\n            className += ' vertical';\n        if (this.state.stick)\n            className += ' stick';\n        if(this.props.disabled)\n            return 'Disabled';\n\n        let options = this.props.options;\n        if (typeof options === \"function\")\n            options = options(this);\n        if (!options)\n            console.warn(\"Empty options returned by \", this);\n\n        return <ASUIMenuContext.Provider\n            value={{overlay:this.getOverlay(), parentDropDown:this}}>\n            <div\n                className={className}\n                children={options}\n                ref={this.divRef}\n                />\n        </ASUIMenuContext.Provider>\n\n    }\n\n    hoverMenu() {\n        if(this.state.open === true || !this.getOverlay() || !this.getOverlay().isHoverEnabled())\n            return;\n        this.openMenu();\n    }\n\n    toggleMenu() {\n\n        if (!this.state.open)\n            this.openMenu();\n        else if (!this.state.stick)\n            this.stickMenu();\n        else\n            this.closeMenu();\n    }\n\n    openMenu() {\n        if (this.props.disabled)\n            return console.error(\"Menu is disabled\");\n        if (this.state.open)\n            throw new Error(\"Menu was already open\");\n\n        // Try open menu handler\n        if(this.getOverlay()) {\n            const res = this.getOverlay().openMenu(this.props.options);\n            if (res !== false) {\n//                 console.info(\"Sub-menu options were sent to menu handler: \", this.getOverlay().openMenu);\n                return;\n            }\n        }\n\n        this.setState({\n            open: true,\n        });\n\n        setTimeout(() => {\n            this.getOverlay().closeMenus(this.getAncestorMenus());\n        }, 100);\n    }\n\n    stickMenu() {\n        if (!this.state.open)\n            throw new Error(\"Unable to stick. Menu was not yet open\");\n\n        this.getAncestorMenus().forEach(menu => {\n            menu.setState({\n                stick: true,\n            });\n        })\n    }\n\n    closeMenu(stayOpenOnStick = false) {\n        if (this.state.stick && stayOpenOnStick === true) {\n            // console.warn(\"Ignoring close due to stick\", this);\n            return;\n        }\n        this.setState({\n            open: false,\n            stick: false,\n            options: null\n        })\n    }\n\n    getAncestorMenus() {\n        let menus = [];\n        let parent = this;\n        while (parent) {\n            menus.push(parent);\n            parent = parent.context.parentDropDown;\n        }\n        return menus;\n    }\n\n\n    closeAllDropDownMenus() {\n        if(this.getOverlay())\n            this.getOverlay().closeAllMenus();\n    }\n\n    updateScreenPosition() {\n        if(!this.state.open || !this.divRef.current)\n            return;\n        const div = this.divRef.current;\n        const rect = div.getBoundingClientRect();\n        if(rect.right > window.innerWidth)\n            div.classList.add('overflow-right');\n        if(rect.bottom > window.innerHeight)\n            div.classList.add('overflow-bottom');\n        // console.log(rect.right, window.innerWidth, rect.bottom, window.innerHeight)\n    }\n}\n\n// class DropDownContextWrapper extends React.Component {\n//     static contextType = DropDownContext;\n//\n//     render() {\n//         return <DropDownContext.Provider value={this}>\n//             <DropDownContainer\n//                 parentDropDown={this.context}\n//                 {...this.props}\n//                 />\n//         </DropDownContext.Provider>;\n//     }\n// }\n\nexport default ASUIDropDownContainer;\n\n// function reactMapRecursive(children, fn) {\n//     return React.Children.map(children, child => {\n//         if (!React.isValidElement(child)) {\n//             return child;\n//         }\n//\n//         if (child.props.children) {\n//             child = React.cloneElement(child, {\n//                 children: reactMapRecursive(child.props.children, fn)\n//             });\n//         }\n//\n//         return fn(child);\n//     });\n// }\n","import {ASUIMenuAction, ASUIMenuBreak, ASUIMenuDropDown} from \"../../components/menu\";\nimport React from \"react\";\nimport ProgramLoader from \"../../common/program/ProgramLoader\";\n\nclass Library {\n\n    getTitle() {\n        return this.constructor.name;\n    }\n\n    getLibraries() {\n        return [];\n    }\n\n\n    getPresets() {\n        return [];\n    }\n\n\n    /** Shortcuts **/\n\n\n    supportsProgram(programClassName) {\n        const presets = this.getPresets();\n        for(let i=0; i<presets.length; i++) {\n            const [className] = presets[i];\n            if(className === programClassName)\n                return true;\n        }\n        return false;\n    }\n\n    /** Menu **/\n\n\n    renderMenuProgramAll(onSelectPreset, programClass=null) {\n        return (<>\n            <ASUIMenuDropDown options={() => this.renderMenuProgramNew(onSelectPreset, programClass)}>New Program</ASUIMenuDropDown>\n            <ASUIMenuBreak />\n            <ASUIMenuDropDown options={() => this.renderMenuProgramAllPresets(onSelectPreset, programClass, true)}>Using Preset</ASUIMenuDropDown>\n        </>);\n    }\n\n    renderMenuProgramNew(onSelectPreset) {\n        return (<>\n            {ProgramLoader.getRegisteredPrograms().map((config, i) =>\n                <ASUIMenuAction key={i} onAction={e => onSelectPreset(config.className)}>{config.title || 'Untitled Preset #' + i}</ASUIMenuAction>\n            )}\n        </>);\n    }\n\n    renderMenuProgramAllPresets(onSelectPreset, programClass=null, includeRecent=true) {\n        return (<>\n            {includeRecent && false ? <ASUIMenuDropDown\n                disabled={true}\n                options={() => this.renderMenuProgramRecentPresets(onSelectPreset, programClass)}>\n                Recent Presets\n            </ASUIMenuDropDown> : null}\n            {includeRecent && Library.lastSelectedLibrary ? <ASUIMenuDropDown\n                disabled={Library.lastSelectedLibrary.getPresets().length === 0}\n                options={() => Library.lastSelectedLibrary.renderMenuProgramPresets(onSelectPreset, programClass)}>\n                Current Library\n            </ASUIMenuDropDown> : null }\n            <ASUIMenuDropDown\n                disabled={this.getPresets().length === 0}\n                options={() => this.renderMenuProgramPresets(onSelectPreset, programClass)}>\n                Presets\n            </ASUIMenuDropDown>\n            <ASUIMenuDropDown\n                disabled={this.getLibraries().length === 0}\n                options={() => this.renderMenuLibraryOptions(library =>\n                    library.renderMenuProgramAllPresets(onSelectPreset, programClass, false)\n                    , programClass)}>\n                Other Libraries\n            </ASUIMenuDropDown>\n        </>);\n    }\n\n\n    renderMenuProgramRecentPresets(onSelectPreset, programClass=null) {\n        // let recentLibrary = Library.lastSelectedLibrary; // TODO: move to state?\n        return (<>\n            <ASUIMenuAction onAction={()=>{}} disabled>{this.getTitle()}</ASUIMenuAction>\n            <ASUIMenuBreak />\n            {this.getPresets().map(([className, presetConfig], i) => {\n                return programClass === null || programClass === className\n                    ? <ASUIMenuAction key={i} onAction={e => onSelectPreset(className, presetConfig)}>{presetConfig.title || 'Untitled Preset #' + i}</ASUIMenuAction>\n                    : null;\n            })}\n        </>);\n    }\n\n\n    renderMenuProgramPresets(onSelectPreset, programClass=null) {\n        return (<>\n            <ASUIMenuAction onAction={()=>{}} disabled>{this.getTitle()}</ASUIMenuAction>\n            <ASUIMenuBreak />\n            {this.getPresets().map(([className, presetConfig], i) => {\n                return programClass === null || programClass === className\n                    ? <ASUIMenuAction key={i} onAction={e => onSelectPreset(className, presetConfig)}>{presetConfig.title || 'Untitled Preset #' + i}</ASUIMenuAction>\n                    : null;\n            })}\n        </>);\n    }\n\n    renderMenuLibraryOptions(onSelectLibraryOptions, programClass=null) {\n        return this.getLibraries().map((library, i) => {\n            // if (programClass !== null && !library.supportsProgram(programClass))\n            //     return null;\n            return (\n                <ASUIMenuDropDown key={i++}\n                                  options={() => {\n                                  Library.lastSelectedLibrary = library;\n                                  return onSelectLibraryOptions(library);\n                              }}>\n                    {library.getTitle()}\n                </ASUIMenuDropDown>\n            );\n        });\n    }\n\n    // renderMenuProgramLibraryPresets(onSelectPreset, programClass=null) {\n    //     return this.renderMenuLibraryOptions(programClass, library =>\n    //         library.renderSubMenuProgramPresets(onSelectPreset, programClass)\n    //     );\n    // }\n\n    // constructor(title=null) {\n    // this.title = title || this.constructor.name;\n    // this.baseURL = baseURL || document.location;\n    // ['libraries', 'samples', 'presets']\n    //     .forEach(key => {\n    //         if(!this.data[key])\n    //             this.data[key] = []\n    //     });\n    // if(!this.data.url)\n    //     this.data.url = document.location.toString();\n    // this.data.url = null;\n    // this.data.urlPrefix = '';\n    // this.name = \"Loading...\";\n    // this.libraries = [];\n    // this.programs = {};\n    // this.presets = [];\n    // this.samples = [];\n    // Object.assign(this, data);\n    // }\n\n    // load(data) {\n    //     Object.assign(this, data);\n    // }\n\n    // getPrograms() { return this.data.programs || []; }\n\n\n    // getPresetConfig(presetName, presetConfig={}) {\n    //     let presetData = this.getPresets().find(p => p.name = presetName)\n    //         || (()=>{ throw new Error(\"Could not find preset config for: \" + presetName);})();\n    //\n    //     const samples = presetData.samples || [];\n    //     for(let i=0; i<samples.length; i++) {\n    //         samples[i] = this.getSampleConfig(samples[i]);\n    //     }\n    //     presetConfig.presetName = presetName;\n    //     presetConfig.samples = samples;\n    //\n    //     return presetConfig;\n    // }\n\n    /** @var Library **/\n    static lastSelectedLibrary = null;\n\n    static historicLibraryCount() {\n        return Object.values(Library.cache).length;\n    };\n\n    static eachHistoricLibrary(callback) {\n        const results = [];\n        for (let cacheURL in Library.cache) {\n            if (Library.cache.hasOwnProperty(cacheURL)) {\n                let libraryConfig = Library.cache[cacheURL];\n                if (libraryConfig instanceof Promise)\n                    continue;\n                // libraryConfig = await libraryConfig;\n                libraryConfig.name = libraryConfig.name || libraryConfig.url.split('/').pop();\n                const result = callback(libraryConfig);\n                if (result === false)\n                    break;\n                if (result !== null)\n                    results.push(result);\n            }\n        }\n        return results;\n    }\n\n    static loadDefault() {\n        const defaultLibrary = require(\"../../default.library.js\").default;\n        return new defaultLibrary();\n    };\n\n    /**\n     * @param url\n     * @returns {Promise<Library>}\n     */\n    static async loadFromURL(url) {\n        if (!url)\n            throw new Error(\"Invalid url\");\n        const response = await fetch(url);\n        const libraryData = await response.json();\n        if (typeof libraryData.url === \"undefined\")\n            libraryData.url = url.toString();\n        console.log('library', libraryData);\n        return new Library(libraryData);\n    }\n\n    static async loadFromURL2(url) {\n        if (!url)\n            throw new Error(\"Invalid url\");\n        url = new URL((url.toString()).split('#')[0], document.location).toString();\n\n        let libraryData;\n        if (!Library.cache[url]) {\n            Library.cache[url] = new Promise((resolve, reject) => {\n                const xhr = new XMLHttpRequest();\n                xhr.open('GET', url.toString(), true);\n                xhr.responseType = 'json';\n                xhr.onload = () => {\n                    if (xhr.status !== 200)\n                        return reject(\"Sample library not found: \" + url);\n\n                    const libraryData = xhr.response;\n                    libraryData.url = url.toString();\n\n                    Object.keys(Library.cache).forEach(cacheURL => {\n                        if (Object.values(Library.cache) > 5)\n                            delete Library.cache[cacheURL];\n                    });\n                    Library.cache[url] = libraryData;\n\n                    console.info(\"Sample Library Loaded: \", url, Library.cache);\n                    resolve(libraryData);\n                };\n                xhr.send();\n            });\n        }\n        libraryData = Library.cache[url];\n        if (libraryData instanceof Promise)\n            libraryData = await libraryData;\n        return new Library(libraryData);\n    }\n\n}\n\n\n// /** @returns {Promise<Library>} */\n// Library.loadDefaultLibrary = async function() {\n//     return await Library.loadFromURL(Library.defaultLibraryURL);\n// };\nLibrary.cache = {};\nexport default Library;\n","import TrackInstruction from \"../instruction/TrackInstruction\";\nimport CommandInstruction from \"../instruction/CommandInstruction\";\nimport {InstructionIterator} from \"../instruction\";\n\n\nexport default class TrackIterator {\n    constructor(tracks, startingTrackName, startingBeatsPerMinute, startingTimeDivision, onEvent=null) {\n        this.tracks = tracks;\n        if (!this.tracks[startingTrackName])\n            throw new Error(\"Invalid instruction track: \" + startingTrackName);\n\n        this.onEvent = onEvent || function() {};\n\n        // this.onEvent = onEvent;\n        this.positionSeconds = 0;\n        // this.seekLength = 10;\n        this.activeTracks = [];\n        // this.currentTrackID = -1;\n\n        this.startingBeatsPerMinute = startingBeatsPerMinute;\n        this.startingTimeDivision = startingTimeDivision;\n\n        const startingStats = {\n            // program: trackStats.program,            // Current program which all notes route through\n            // destination: trackStats.destination,    // Current destination sent to all playFrequency calls\n            startPosition: 0,\n            trackName: startingTrackName,\n            // beatsPerMinute: beatsPerMinute,\n            // startingTimeDivision: song.data.startingTimeDivision, // Time division is not passed to sub-groups\n        };\n        this.startTrackIteration(startingStats);\n    }\n\n    instructionGetIterator(trackName, timeDivision=null, beatsPerMinute=null) {\n        if(!this.tracks[trackName])\n            throw new Error(\"Invalid instruction track: \" + trackName);\n        const instructionList = this.tracks[trackName];\n\n        return new InstructionIterator(\n            instructionList,\n            timeDivision || this.startingTimeDivision,\n            beatsPerMinute || this.startingBeatsPerMinute,\n        );\n    }\n\n\n    startTrackIteration(trackStats) {\n        trackStats.iterator = this.instructionGetIterator(trackStats.trackName, trackStats.timeDivision, trackStats.beatsPerMinute);\n        this.activeTracks.push(trackStats);\n        return trackStats;\n    }\n\n    /** @deprecated **/\n    getPositionInSeconds() {\n        let totalPositionSeconds = 0;\n        for(let i=0; i<this.activeTracks.length; i++) {\n            const {iterator, startPosition} = this.activeTracks[i];\n            const positionSeconds = startPosition + iterator.positionSeconds;\n            if (positionSeconds > totalPositionSeconds)\n                totalPositionSeconds = positionSeconds;\n        }\n        return totalPositionSeconds;\n    }\n\n    getEndPositionInSeconds() {\n        let totalEndPositionSeconds = 0;\n        for(let i=0; i<this.activeTracks.length; i++) {\n            const {iterator, startPosition} = this.activeTracks[i];\n            const endPositionSeconds = startPosition + iterator.endPositionSeconds;\n            if (endPositionSeconds > totalEndPositionSeconds)\n                totalEndPositionSeconds = endPositionSeconds;\n        }\n        return totalEndPositionSeconds;\n    }\n\n    // incrementTrack() {\n    //     this.currentTrackID++;\n    //     if(this.currentTrackID >= this.activeTracks.length)\n    //         this.currentTrackID = 0;\n    //     return this.currentTrackID;\n    // }\n\n    hasReachedEnd() {\n        for(let i=0; i<this.activeTracks.length; i++) {\n            const {iterator} = this.activeTracks[i];\n            if(iterator.hasReachedEnd())\n                return true;\n        }\n        return false;\n    }\n\n\n    /**\n     * @param {TrackInstruction} instruction\n     * @param trackStats\n     */\n    processTrackInstruction(instruction, trackStats) {\n        // if (instruction.getTrackName() === iterator.trackName) { // TODO track stack\n\n        const subTrackStats = {\n            // program: trackStats.program,            // Current program which all notes route through\n            // destination: trackStats.destination,    // Current destination sent to all playFrequency calls\n            // parentStats: trackStats,\n            startPosition: trackStats.iterator.positionSeconds,\n            trackName: instruction.getTrackName(),\n            beatsPerMinute: trackStats.beatsPerMinute,\n            // timeDivision: trackStats.timeDivision, // Time division is not passed to sub-groups\n        };\n        if(typeof trackStats.program !== \"undefined\" && trackStats.program)\n            subTrackStats.program = trackStats.program;\n        if(typeof trackStats.destination !== \"undefined\" && trackStats.destination)\n            subTrackStats.destination = trackStats.destination;\n        // TODO: process track instruction parameters\n        this.startTrackIteration(subTrackStats);\n    }\n\n    /**\n     * @param {CommandInstruction} instruction\n     * @param trackStats\n     */\n    processCommandInstruction(instruction, trackStats) {\n\n    }\n\n    processInstruction(instruction, trackStats, callback=null) {\n        if(instruction instanceof CommandInstruction)\n            this.processCommandInstruction(instruction, trackStats);\n        else if(instruction instanceof TrackInstruction)\n            this.processTrackInstruction(instruction, trackStats);\n        callback && callback(instruction, trackStats);\n        // console.log(\"Note Playback: \", instruction, callback);\n    }\n\n\n    /** Seeking **/\n\n\n    seekToEnd(callback=null, seekLength=1) {\n        let seekPosition=0, finished = false;\n        while(!finished) {\n            seekPosition += seekLength; // Seek before\n            finished = this.seekToPosition(seekPosition, callback);\n        }\n        // return this;\n    }\n\n    seekToPosition(positionSeconds, callback=null) {\n        let finished = true;\n        for(let i=0; i<this.activeTracks.length; i++) {\n            const trackStats = this.activeTracks[i];\n            const {iterator, startPosition} = trackStats;\n            positionSeconds -= startPosition;\n            if(!iterator.hasReachedEnd()) {\n                iterator.seekToPosition(positionSeconds, (instruction) => {\n                    this.processInstruction(instruction, trackStats, callback);\n                });\n                if (!iterator.hasReachedEnd())\n                    finished = false;\n            }\n        }\n        return finished;\n    }\n\n    seekToStartingTrackIndex(index, callback=null) {\n        const trackStats = this.activeTracks[0];\n        const iterator = this.instructionGetIterator(trackStats.trackName, trackStats.timeDivision, trackStats.beatsPerMinute);\n        iterator.seekToIndex(index, callback);\n        const startPosition = iterator.positionSeconds;\n        this.seekToPosition(startPosition, callback);\n    }\n\n    // seekToPositionTicks(positionTicks, callback=null) {\n    //     while (this.positionTicks < positionTicks)\n    //         this.nextTrackInstruction(callback);\n    //     return this;\n    // }\n}\n","import React from \"react\";\nimport {Text, TouchableHighlight, View} from \"react-native\";\n\nimport ASUIMenuContext from \"../menu/ASUIMenuContext\";\n\nexport default class ASUIClickableBase extends React.Component {\n    /** Context **/\n    static contextType = ASUIMenuContext;\n\n    constructor(props) {\n        super(props);\n        this.cb = {\n            onMouseInput: e => this.onMouseInput(e),\n            onKeyDown: e => this.onKeyDown(e),\n        };\n    }\n\n\n    render() {\n\n        return (\n            <TouchableHighlight\n                onPress={this.cb.onMouseInput}\n                onLongPress={this.cb.onMouseInput}\n            >\n                <View\n                    children={this.renderChildren()}\n                    />\n            </TouchableHighlight>\n        );\n    }\n\n    renderChildren(textProps={}) {\n        let children = this.props.children;\n        if(typeof children !== 'object')\n            children = <Text children={children} {...textProps}></Text>;\n        return children;\n    }\n\n    /** User Input **/\n\n    onMouseInput(e) {\n        if(e.defaultPrevented)\n            return;\n        e.preventDefault();\n        this.doAction(e);\n    }\n\n\n    onKeyDown(e) {\n        if(e.isDefaultPrevented())\n            return;\n        switch(e.key) {\n            case ' ':\n            case 'Enter':\n                this.doAction(e);\n                break;\n\n            default:\n                console.info(\"Unhandled key: \", e.key);\n                break;\n        }\n    }\n\n    /** Actions **/\n\n    doAction(e) {\n        throw new Error(\"Not implemented\");\n    }\n\n    /** Overlay Context **/\n\n    getOverlay() { return this.context.overlay; }\n\n    closeAllDropDownMenus() {\n        if(this.getOverlay())\n            this.getOverlay().closeAllMenus();\n    }\n\n}\n","import TrackIterator from \"./TrackIterator\";\nimport {Instruction, NoteInstruction} from \"../instruction\";\n\n\nexport default class TrackPlayback extends TrackIterator {\n    constructor(song, startingTrackName = null, onEvent=null) {\n        super(song.data.tracks,\n            startingTrackName || song.getStartTrackName(),\n            song.data.beatsPerMinute,\n            song.data.timeDivision,\n            onEvent)\n\n        this.song = song;\n        this.seekLength = 10;\n        this.active = true;\n\n        this.endPromise = new Promise((resolve, reject) => {\n            this.endResolve = resolve;\n        });\n\n        this.playInstructionCallback = this.playInstruction.bind(this);\n\n    }\n\n    startTrackIteration(trackStats) {\n        super.startTrackIteration(trackStats)\n        if(!trackStats.playingIndices)\n            trackStats.playingIndices = [];\n        this.onEvent({\n            type: 'track:start',\n            playback: this,\n            trackStats\n        });\n    }\n\n    addInstructionFilter(filterCallback) {\n        const oldCallback = this.playInstructionCallback;\n        this.playInstructionCallback = function(instruction, trackStats) {\n            instruction = filterCallback(instruction, trackStats);\n            if(!instruction)\n                return;\n            if(!instruction instanceof Instruction)\n                throw new Error(\"Invalid Instruction\");\n            oldCallback(instruction, trackStats);\n        }\n    }\n\n    play(destination, startPosition=null) {\n        if (!destination || !destination.context)\n            throw new Error(\"Invalid destination\");\n        this.audioContext = destination.context;\n        this.destination = destination;\n\n        this.startTime = this.audioContext.currentTime; // this.audioContext.currentTime\n\n        this.seekInterval = setInterval(() => this.renderPlayback(), this.seekLength / 10);\n\n        if(startPosition !== null) {\n            this.seekToPosition(startPosition);\n            this.startTime -= startPosition;\n        }\n        this.renderPlayback();\n    }\n\n\n    playAtStartingTrackIndex(destination, index, callback=null) {\n        const trackStats = this.activeTracks[0];\n        const iterator = this.instructionGetIterator(trackStats.trackName, trackStats.timeDivision, trackStats.beatsPerMinute);\n        iterator.seekToIndex(index, callback);\n        const startPosition = iterator.positionSeconds;\n        this.play(destination, startPosition);\n        // console.log('playAtStartingTrackIndex', index, startPosition);\n        // this.seekToPosition(startPosition, callback);\n    }\n\n    getPlaybackPosition() {\n        return this.audioContext.currentTime - this.startTime;\n\n    }\n\n    // getPositionInSeconds() {\n    //     return this.startTime;\n    // }\n\n    async awaitPlaybackReachedEnd() {\n        return await this.endPromise;\n    }\n\n    renderPlayback() {\n        const currentPositionSeconds = this.getPlaybackPosition();\n\n        if(!this.active || this.hasReachedEnd()) {\n            clearInterval(this.seekInterval);\n            const endPositionSeconds = this.getEndPositionInSeconds();\n            const timeTillFinished = endPositionSeconds - currentPositionSeconds;\n            console.log(`Song is ending in ${timeTillFinished} seconds`);\n            if(timeTillFinished > 0)\n                setTimeout(() => this.stopPlayback(), timeTillFinished * 1000);\n            else\n                this.stopPlayback();\n        } else {\n            this.seekToPosition(currentPositionSeconds + this.seekLength, this.playInstructionCallback);\n        }\n    }\n\n    stopPlayback() {\n        if(this.active) {\n            this.active = false;\n            this.endResolve();\n        }\n        // this.endPromise = true;\n    }\n\n    playInstruction(instruction, trackStats) {\n        if(instruction instanceof NoteInstruction) {\n            if(typeof trackStats.program === \"undefined\")\n                return console.error(`Track '${trackStats.trackName}' has no program set`);\n            const destination = trackStats.destination || this.destination;\n            const noteStartTime = this.startTime + trackStats.startPosition + trackStats.iterator.positionSeconds; // ASCTrack start time equals current track's start + playback times\n            if(noteStartTime > 0) {\n                const noteIndex = trackStats.iterator.currentIndex;\n                const playingIndices = trackStats.playingIndices;\n                const onEvent = this.onEvent;\n                this.song.playInstruction(destination, instruction, trackStats.program, noteStartTime,\n                    () => {\n                        if(playingIndices.indexOf(noteIndex) === -1) {\n                            playingIndices.push(noteIndex);\n                            // console.log('playingIndices.push', playingIndices);\n\n                            onEvent({\n                                type: 'instruction:play',\n                                playback: this,\n                                playingIndices,\n                                trackStats\n                            });\n                        }\n                    },\n                    () => {\n                        playingIndices.splice(playingIndices.indexOf(noteIndex), 1);\n                        // console.log('playingIndices.splice', playingIndices);\n                        onEvent({\n                            type: 'instruction:stop',\n                            playback: this,\n                            playingIndices,\n                            trackStats\n                        });\n\n\n                    });\n            }\n        }\n    }\n\n    /**\n     * @param {CommandInstruction} instruction\n     * @param trackStats\n     */\n    processCommandInstruction(instruction, trackStats) {\n        instruction.processCommandInstruction(this.song, trackStats);\n    }\n\n}\n","import Values from \"../../common/values/Values\";\n\nclass SongValues {\n    constructor(song) {\n        this.song = song;\n    }\n\n\n    getSongPrograms(callback = (id, name) => [id, name]) {\n        const song = this.song;\n        const results = [];\n        if (song && song.data.programs) {\n            const programList = song.data.programs;\n            for (let programID = 0; programID < programList.length; programID++) {\n                const [programClass, programInfo] = programList[programID]; //  || {title: \"No Program Loaded\"};\n                // const programs = this.renderer.getProgram(programID);\n                const result = callback(programID, programClass, programInfo);\n                if(!addResult(results, result)) return results;\n            }\n        }\n        return results;\n    }\n\n    getAllSongGroups(callback = (trackName) => trackName) {\n        const song = this.song;\n        const results = [];\n        const instructionList = song.data.tracks;\n        Object.keys(instructionList).forEach(function (key, i) {\n            const result = callback(key);\n            if(!addResult(results, result)) return results;\n        });\n        return results;\n    }\n\n\n    getAllNamedFrequencies(callback = (alias, aliasValue, programID) => [alias, aliasValue, programID]) {\n        return 'TODO';\n        // const song = this.song;\n        // const results = [];\n        // const programList = song.data.programs;\n        // for (let programID = 0; programID < programList.length; programID++) {\n        //     if (song.hasProgram(programID)) {\n        //         const instance = song.getProgram(programID);\n        //         if (instance.getFrequencyAliases) {\n        //             const aliases = instance.getFrequencyAliases();\n        //             for (const alias in aliases) {\n        //                 if (aliases.hasOwnProperty(alias)) {\n        //                     const aliasValue = aliases[alias];\n        //                     const result = callback(alias, aliasValue, programID);\n        //                     if(!addResult(results, result)) return results;\n        //                 }\n        //             }\n        //         }\n        //     }\n        // }\n        // return results;\n    }\n\n\n\n\n    formatSongDuration(input) {\n        return Values.formatDuration(input, this.song.data.timeDivision);\n    }\n\n\n    /** Duration **/\n\n    parseDurationAsTicks(durationString) {\n        return Values.parseDurationAsTicks(durationString, this.song.data.timeDivision);\n    }\n\n    formatDuration(input) {\n        return Values.formatDuration(input, this.song.data.timeDivision);\n    }\n\n\n    getNoteDurations(callback = (duration, durationString) => [duration, durationString]) {\n        return Values.getNoteDurations(callback, this.song.data.timeDivision);\n    }\n\n}\n\nfunction addResult (results, result) {\n    if (result !== null && typeof result !== \"undefined\")\n        results.push(result);\n    return result === false ? result : true;\n}\n\n\n\nexport default SongValues;\n","import ASUIClickableBase from \"../button/ASUIClickableBase.native\";\n\nimport './assets/ASUIMenu.css';\n\nclass ASUIMenuAction extends ASUIClickableBase {\n    getClassName() { return 'asui-menu-item'; }\n}\n\nexport default ASUIMenuAction;\n\n","import React from \"react\";\n\nimport './assets/ASUIMenu.css';\n\nclass ASUIMenuBreak extends React.Component {\n    render() {\n        return (\n            <hr className=\"asui-menu-break\"/>\n        );\n    }\n}\n\nexport default ASUIMenuBreak;\n","import ProgramLoader from \"./ProgramLoader\";\n\nexport {\n    ProgramLoader\n}\n","import React from \"react\";\nimport ASUIMenuContext from \"../ASUIMenuContext\";\n\nexport default class ASUIMenuOverlayContainerBase extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            open: false,\n            openOverlay: false\n        };\n        this.cb = {\n            closeAllMenus: () => this.closeAllMenus(),\n        };\n        this.openMenus =  [];\n        this.updateOverlayTimeout = null;\n    }\n    // componentDidMount() {\n    //     MenuDropDown.addGlobalSubMenuHandler(this.openMenuHandler)\n    // }\n    //\n    // componentWillUnmount() {\n    //     MenuDropDown.removeGlobalSubMenuHandler(this.openMenuHandler)\n    // }\n\n    renderContent() {\n        throw new Error(\"Not implemented\");\n    }\n\n\n    render() {\n        return <ASUIMenuContext.Provider\n            value={{overlay:this, parentDropDown:null}}>\n            {this.renderContent()}\n        </ASUIMenuContext.Provider>;\n    }\n\n\n    // getActiveMenuCount() {\n    //     return this.openMenus.length;\n    // }\n\n    updateOverlay() {\n        const openOverlay = this.state.open || this.openMenus.length > 0;\n//             console.log('updateOverlay', openOverlay);\n        if(this.state.openOverlay !== openOverlay)\n            this.setState({openOverlay})\n    }\n\n    isHoverEnabled() {\n        return !this.props.isActive && (this.state.openOverlay || this.openMenus.length > 0);\n    }\n\n    addCloseMenuCallback(menuItem, closeMenuCallback) {\n        const i = this.openMenus.findIndex(openMenu => openMenu[0] === menuItem);\n        if(i === -1)\n            this.openMenus.push([menuItem, closeMenuCallback]);\n        // console.log('this.openMenus', this.openMenus);\n        this.updateOverlay();\n    }\n\n    removeCloseMenuCallback(menuItem) {\n        const i = this.openMenus.findIndex(openMenu => openMenu[0] === menuItem);\n        if(i !== -1)\n            this.openMenus.splice(i, 1);\n        // this.updateOverlay();\n    }\n\n\n    closeMenus(butThese=[], stayOpenOnStick=true) {\n        // console.log('closeMenus', butThese, stayOpenOnStick);\n        // this.overlayContext.openMenuItems = [];\n        this.openMenus.forEach(openMenu => {\n            const [menuItem, closeMenuCallback] = openMenu;\n            if(butThese.indexOf(menuItem) !== -1)\n                return;\n            closeMenuCallback(stayOpenOnStick);\n        });\n        // this.updateOverlay();\n    }\n\n\n    closeAllMenus(e) {\n        this.closeMenus(e, []);\n        this.setState({\n            open: false,\n            openOverlay: false,\n            options: null\n        });\n    }\n\n    async openMenu(options) {\n        if(!this.props.isActive)\n            return false;\n\n        if(typeof options === \"function\")\n            options = options(this);\n        if(options instanceof Promise)\n            options = await options;\n\n        this.setState({\n            open: true,\n            openOverlay: true,\n            options\n        });\n        return true;\n    }\n\n    // openOverlay() {\n    //     this.setState({\n    //         openOverlay: true,\n    //     });\n    //     return true;\n    // }\n    //\n    // closeOverlay() {\n    //     this.setState({\n    //         openOverlay: false,\n    //     });\n    //     return true;\n    // }\n}\n","import React from \"react\";\n// import Div from \"../div/Div\";\n\nimport \"../assets/ASUIMenuOverlayContainer.css\";\nimport ASUIMenuBreak from \"../ASUIMenuBreak\";\nimport ASUIMenuAction from \"../ASUIMenuAction\";\nimport ASUIMenuOverlayContainerBase from \"./ASUIMenuOverlayContainerBase\";\n\nexport default class ASUIMenuOverlayContainer extends ASUIMenuOverlayContainerBase {\n\n    render() {\n        if(!this.state.openOverlay && !this.state.open)\n            return this.props.children;\n\n        return (<>\n                {this.state.openOverlay ? <div className=\"asui-menu-overlay-container\"\n                    onClick={this.cb.closeAllMenus}\n                    /> : null}\n\n                {this.state.open ? <div className=\"asui-menu-overlay-dropdown\">\n                    {this.state.options}\n                    <ASUIMenuBreak/>\n                    <ASUIMenuAction onAction={this.cb.closeAllMenus}>- Close Menu -</ASUIMenuAction>\n                </div> : null}\n                {this.props.children}\n            </>);\n    }\n}\n\n","import Instruction from \"./Instruction\";\n\nclass NoteInstruction extends Instruction {\n\n\n    get durationTicks() {\n        return typeof this.data[2] !== \"undefined\" ? this.data[2] : undefined;\n    }\n\n    set durationTicks(newDuration) {\n        newDuration = parseFloat(newDuration);\n        if (Number.isNaN(newDuration))\n            throw new Error(\"Invalid Duration\");\n        this.data[2] = newDuration;\n    }\n\n    get velocity() {\n        return typeof this.data[3] !== \"undefined\" ? this.data[3] : undefined;\n    }\n\n    set velocity(newVelocity) {\n        newVelocity = parseFloat(newVelocity);\n        if (Number.isNaN(newVelocity))\n            throw new Error(\"Invalid Velocity\");\n        this.data[3] = newVelocity;\n    }\n\n\n    clone() {\n        return new NoteInstruction(this.data.slice());\n    }\n}\n\nexport default NoteInstruction;\n","import Instruction from \"./Instruction\";\nimport ProgramLoader from \"../../common/program/ProgramLoader\";\n\nclass CommandInstruction extends Instruction {\n\n    getCommandName() {\n        return typeof this.data[1] === \"string\" ? this.data[1].substr(1) : undefined;\n    }\n\n    setCommandName(newCommandName) {\n        this.data[1] = `!${newCommandName}`;\n    }\n\n    getParams() {\n        return this.data.slice(2);\n    }\n\n    get durationTicks() {\n        return undefined;\n    }\n\n    get velocity() {\n        return undefined;\n    }\n\n\n    /**\n     * @param {CommandInstruction} song\n     * @param trackStats\n     */\n    processCommandInstruction(song, trackStats) {\n        const command = this.getCommandName().toLowerCase();\n        switch(command) {\n            case 'program':      // Set Program (can be changed many times per track)\n            case 'p':\n                const oldProgram = trackStats.program;\n                const oldDestination = trackStats.destination;\n                let programInstance = this.loadProgramFromParams(song);\n                trackStats.program = programInstance;\n\n                // useDestination allows for audio processing (i.e. effects)\n                if(typeof programInstance.useDestination === 'function')\n                    trackStats.destination = programInstance.useDestination(oldDestination);\n\n                // useProgram allows for both note processing and audio processing effects\n                if(typeof programInstance.useProgram === 'function')\n                    programInstance.useProgram(oldProgram);\n\n                break;\n\n            // case 'destination':     // Append destination (does not handle note processing)\n            // case 'd':\n            //     // if(!trackStats.originalDestination)\n            //     //     trackStats.originalDestination = trackStats.destination;\n            //     trackStats.destination = instruction.loadDestinationFromParams(trackStats.destination, this.song);\n            //\n            //     // this.song.programLoadInstance()\n            //     break;\n\n            default:\n                return console.error(\"Unknown command instruction: \" + command);\n        }\n    }\n\n\n    loadProgramFromParams(song) {\n        const params = this.getParams();\n        let program;\n        if(typeof params[0] === \"string\") {\n            program = ProgramLoader.loadInstance(params[0], params[1]);\n        } else {\n            program = song.programLoadInstanceFromID(params[0]);\n        }\n        return program;\n    }\n\n\n    clone() {\n        return new CommandInstruction(this.data.slice());\n    }\n}\n\nexport default CommandInstruction;\n","import Instruction from \"./Instruction\";\n\nclass MIDIInstruction extends Instruction {\n\n    get instruction() {\n        return this.data[2];\n    }\n\n    set instruction(newCommand) {\n        this.data[2] = newCommand;\n    }\n\n    get durationTicks() {\n        return null;\n    }\n\n    set durationTicks(newDuration) {\n        throw new Error(\"Unable to set duration on MIDI instruction\");\n    }\n\n}\n\nexport default MIDIInstruction;\n","import React from \"react\";\n// import {ASUIDiv as Div} from \"../../components/\";\n\n// import Icon from \"../../components/asui-icon\";\n// import Menu from \"../../components/asui-menu\";\n\nimport \"./assets/ASPPlaylist.css\";\n\nclass ASPPlaylistEntry extends React.Component {\n    constructor(props = {}) {\n        super(props, {});\n        if(!this.props.data)\n            throw new Error(\"Invalid Entry data\");\n        if(!this.props.playlist)\n            throw new Error(\"Invalid Entry playlist\");\n        // if(!this.state.name)\n        //     this.state.name = state.url.split('/').pop();\n        // this.props.position = null;\n        // this.props.selected = null;\n        // props.isPlaylist = entryData.url.toString().toLowerCase().endsWith('.pl.json');\n    }\n\n    render() {\n        let id = typeof this.props.id !== \"undefined\" ? this.props.id : '-';\n        if(Number.isInteger(id) && id <= 9)\n            if (id <= 9) id = '0' + id;\n\n        const [length, fade] = (this.props.data.length || 0).toString().split(':');\n        const formattedLength = (() => {\n            try { return new Date(length * 1000).toISOString().substr(14, 5); }\n            catch { return \"N/A\"; }\n        })();\n\n\n        return <div className=\"asp-playlist-entry\" onClick={e => this.onInput(e)}>\n            <div className=\"id\">{id+\":\"}</div>\n            <div className=\"name\">{this.props.data.name}</div>\n            <div className=\"length\">{formattedLength}{fade ? `[${fade}]` : ''}</div>\n        </div>\n    }\n\n    onInput(e) {\n        switch(e.type) {\n            case 'click':\n                console.log(e);\n                this.props.onAction && this.props.onAction(e);\n                break;\n\n            default:\n                console.log(\"Unknown input: \", e.type);\n                break;\n        }\n    }\n\n}\n\n\n\n/** Export this script **/\nexport default ASPPlaylistEntry;\n","import React from \"react\";\n// import {ASUIDiv as Div} from \"../../components/\";\nimport ASPPlaylistEntry from \"./ASPPlaylistEntry\";\n\nimport \"./assets/ASPPlaylist.css\";\n\nclass ASPPlaylist extends React.Component {\n    constructor(props = {}) {\n        super(props, {});\n        if(!this.props.player)\n            throw new Error(\"Invalid player\");\n\n        this.state = this.props.player.state.playlist;\n        this.state.position = this.state.position || 0;\n        this.state.entries = this.state.entries || [];\n        this.state.selectedPositions = this.state.selectedPositions || [];\n    }\n\n    // get player() { return this.props.player; }\n    // get position() { return this.state.position; }\n    // get entries() { return this.state.entries; }\n\n    render() {\n        return (\n            <div className=\"asp-playlist\">\n                <div className=\"header\">\n                    <div className=\"id\">ID</div>\n                    <div className=\"name\">Name</div>\n                    <div className=\"length\">Length</div>\n                </div>\n                <div className=\"container\">\n                    {this.state.entries.length > 0\n                    ? this.props.player.eachEntry((entryData, position, depth) => {\n                            // const props = {\n                            //     key: position,\n                            //     data:entryData,\n                            //     playlist: this,\n                            //     depth,\n                            //     onPress: (e) => player.toggleEntryAtPosition(position)\n                            // };\n                            // const classes = [];\n                            // if(this.state.position === position)\n                            //     classes.push('position');\n                            // if(this.state.selectedPositions.indexOf(position) !== -1)\n                            //     classes.push('selected');\n                            // if(entryData.loading)\n                            //     classes.push('loading');\n                            // if(classes.length > 0)\n                            //     props.class = classes.join(' ');\n                            return <ASPPlaylistEntry\n                                id={position}\n                                key={position}\n                                data={entryData}\n                                playlist={this}\n                                depth={depth}\n                                onAction={(e) => this.props.player.toggleEntryAtPosition(position)}\n                            />\n                        })\n                    :<div className=\"empty-playlist\">Empty Playlist</div>\n                    }\n                </div>\n            </div>\n        )\n    }\n\n    // onInput(e) {\n    //     switch(e.type) {\n    //         case 'click':\n    //\n    //     }\n    //     console.log(e);\n    // }\n\n    // render2() {\n    //     // TODO: move to entry - this.addEventHandler('click', e => this.onClick(e));\n    //     // await this.updateEntries();\n    //     const player = this.props.player;\n    //     return [\n    //         Div.createElement('header', [\n    //             Div.createElement('id', 'ID'),\n    //             Div.createElement('name', 'Name'),\n    //             // Div.createElement('url', 'URL'),\n    //             Div.createElement('length', 'Length'),\n    //         ], {key: 'asp-playlist-header'}),\n    //         Div.createElement('asp-playlist-container', [\n    //             this.state.entries.length > 0\n    //             ? player.eachEntry((entryData, position, depth) => {\n    //                 const props = {\n    //                     key: position,\n    //                     data:entryData,\n    //                     playlist: this,\n    //                     depth,\n    //                     onPress: (e) => player.toggleEntryAtPosition(position)\n    //                 };\n    //                 const classes = [];\n    //                 if(this.state.position === position)\n    //                     classes.push('position');\n    //                     if(this.state.selectedPositions.indexOf(position) !== -1)\n    //                         classes.push('selected');\n    //                     if(entryData.loading)\n    //                         classes.push('loading');\n    //                 if(classes.length > 0)\n    //                     props.class = classes.join(' ');\n    //                 return ASPPlaylistEntry.createElement(props)\n    //             })\n    //             : Div.createElement('empty-playlist', \"Empty ASPPlaylist\")\n    //         ], {'style': `max-height:${Math.round(window.innerHeight / 2)}px;`}),\n    //     ];\n    // }\n\n    async onClick(e) {\n        const entryElm = e.target.closest('aspp-entry,div.asp-playlist-entry');\n        if(entryElm) {\n            // entryElm.toggleSelect();\n            if(entryElm.isPlaylist) {\n                await entryElm.togglePlaylist();\n            } else {\n                await this.props.player.playlistMoveToEntry(entryElm);\n                await this.props.player.playlistPlay();\n            }\n            //     await songPlay();\n        } else {\n            console.error(e, this);\n        }\n    }\n\n    clear() {\n        this.setState({entries: []})\n    }\n\n\n}\n// if(isBrowser)\n    // customElements.define('asp-playlist', ASPPlaylist);\n\n\n/** Export this script **/\nexport default ASPPlaylist;\n","import React from \"react\";\n\n\nimport \"./assets/ASPlayer.css\";\n\nclass ASPlayerStyle extends React.Component {\n\n}\n\nexport default ASPlayerStyle;\n","import React from \"react\";\nimport {ASUIMenuDropDown} from \"../../components/menu\";\nimport {ASUIIcon} from \"../../components\";\n\nexport class ASPlayerHeader extends React.Component {\n    render() {\n        if (this.props.portrait)\n            return [\n                <div key=\"title\" className=\"asp-title-text\">{this.props.title}</div>,\n                <ASUIMenuDropDown\n                    key=\"menu-button\"\n                    arrow={false}\n                    className=\"asp-menu-button-toggle\"\n                    options={this.props.menuContent}\n                >\n                    <ASUIIcon source=\"menu\"/>\n                </ASUIMenuDropDown>\n            ];\n\n        let menuContent = this.props.menuContent;\n        if(typeof menuContent === \"function\")\n            menuContent = menuContent();\n\n        return [\n            <div key=\"title\" className=\"asp-title-text\">{this.props.title}</div>,\n            <div className=\"asp-menu-container\">\n                {menuContent}\n            </div>\n        ];\n    }\n}\n","import Song from \"../song/Song\";\nimport Storage from \"../common/storage/Storage\";\nimport ASPlayerMenu from \"./ASPlayerMenu\";\n// import Div from \"../components/div/Div\";\nimport React from \"react\";\n\n\nclass ASPlayerActions extends ASPlayerMenu {\n    constructor(props={}) {\n        super(props);\n        this.onSongEventCallback = (e) => this.onSongEvent(e);\n\n        // this.activeSong = null;\n        // this.nextPlaylistSong = null;\n    }\n\n\n    // getDefaultProgramURL() {\n    //     return findThisScript()[0].basePath + 'programs/audio-source-synthesizer.js';\n    // }\n\n\n\n    /** Song rendering **/\n\n    setCurrentSong(song) {\n        if(this.song) {\n            this.setStatus(\"Unloading song: \" + this.song.data.title);\n            if(this.song.isPlaying) {\n                this.song.stopPlayback();\n            }\n            this.song.removeEventListener('*', this.onSongEventCallback);\n            // this.song.removeDispatchElement(this);\n            // TODO: unload song?\n        }\n        this.song = song;\n        this.song.addEventListener('*', this.onSongEventCallback);\n        this.state.songLength = song.getSongLengthInSeconds();\n        // this.song.setVolume(this.state.volume);\n        // this.song.addDispatchElement(this);\n        song.playlistPosition = this.getCurrentEntryPosition();\n        const currentEntry = this.getCurrentEntry();\n        currentEntry.name = song.data.title;\n        currentEntry.length = song.getSongLengthInSeconds();\n        this.forceUpdate();\n        this.setStatus(\"Initializing song: \" + song.data.title);\n        this.song.connect(this.getAudioContext());\n        this.setStatus(\"Loaded song: \" + song.data.title);\n    }\n\n    // handleError(err) {\n    //     this.setStatus(`<span style=\"error\">${err}</span>`);\n    //     console.error(err);\n    //     // if(this.webSocket)\n    // }\n\n    setStatus(newStatus) {\n        console.info.apply(null, arguments); // (newStatus);\n        this.setState({status: newStatus});\n    }\n\n    setError(newStatus) {\n        this.setStatus(<div className=\"error\">{newStatus}</div>);\n    }\n\n    setVersion(versionString) {\n        this.setState({version: versionString});\n    }\n\n\n    // closeAllMenus() {\n    //     this.menuFile.closeAllMenus();\n    // }\n\n\n    /** Song loading **/\n\n    saveSongToFile() {\n        const songData = this.song.data;\n        // const songHistory = this.song.history;\n        const storage = new Storage();\n        storage.saveSongToFile(songData);\n        this.setStatus(\"Saved song to file\");\n    }\n\n\n    /** Song commands **/\n\n\n\n    /** Playback **/\n\n    getAudioContext()               {\n        if (this.audioContext)\n            return this.audioContext;\n\n        const audioContext = new (window.AudioContext || window.webkitAudioContext)();\n        this.audioContext = audioContext;\n        return audioContext;\n    }\n\n    getVolumeGain()                 {\n        if (!this.volumeGain) {\n            const context = this.getAudioContext();\n            let gain = context.createGain();\n            gain.gain.value = this.state.volume; // Song.DEFAULT_VOLUME;\n            gain.connect(context.destination);\n            this.volumeGain = gain;\n        }\n        return this.volumeGain; }\n\n    getVolume () {\n        return this.state.volume;\n        // if(this.volumeGain) {\n        //     return this.volumeGain.gain.value;\n        // }\n        // return ASPlayer.DEFAULT_VOLUME;\n    }\n    setVolume (volume) {\n        console.info(\"Setting volume: \", volume);\n        if(this.song)\n            this.song.setVolume(volume);\n\n        // const gain = this.getVolumeGain();\n        // if(gain.gain.value !== volume) {\n        //     gain.gain.value = volume;\n        // }\n        // this.state.volume = volume;\n        // this.fieldSongVolume.value = volume * 100;\n    }\n\n\n    async updateSongPositionMaxLength(maxSongLength) {\n        await this.fieldSongPosition.setState({max: Math.ceil(maxSongLength)});\n    }\n\n    updateSongPositionValue(playbackPositionInSeconds) {\n        const roundedSeconds = Math.round(playbackPositionInSeconds);\n        this.fieldSongTiming.value = this.values.formatPlaybackPosition(playbackPositionInSeconds);\n        if (this.fieldSongPosition.value !== roundedSeconds)\n            this.fieldSongPosition.value = roundedSeconds;\n    }\n\n\n//         async loadSongFromMemory(songUUID) {\n//             await this.song.loadSongFromMemory(songUUID);\n//             // this.render();\n//             this.setStatus(\"Song loaded from memory: \" + songUUID, this.song);\n// //         console.info(songData);\n//         }\n//\n//         async loadSongFromFileInput(file=null) {\n//             if(file === null)\n//                 file = this.fieldSongFileLoad.inputElm.files[0];\n//             if (!file)\n//                 throw new Error(\"Invalid file input\");\n//             await this.song.loadSongFromFileInput(file);\n//             this.addSongFileToPlaylist(file, this.song.data.title, this.song.getSongLengthInSeconds());\n//             // this.render();\n//         }\n\n\n    // async loadSongFromPlaylistEntry(playlistPosition) {\n    //     // this.setStatus(\"Loading from playlist: \" + url);\n    //     await this.playlist.loadSongFromURL(playlistPosition);\n    // }\n\n    /** Song ASPPlaylist **/\n\n    // async loadPlaylistFromURL(playlistURL) {\n    //     await this.playlist.loadSongFromURL(playlistURL);\n    //     this.setStatus(\"Loaded playlist from url: \" + playlistURL);\n    // }\n\n    /** Entries **/\n\n\n    getCurrentEntryPosition() { return this.state.playlist.position || 0; }\n    getCurrentEntry(throwException=true) {\n        if(this.state.playlist.entries.length === 0)\n            throw new Error(\"Empty playlist\");\n        return this.getEntry(this.getCurrentEntryPosition(), throwException);\n    }\n\n    getEntry(position, throwException=true) {\n        let foundEntry=null;\n        this.eachEntry((entry, i) => {\n            // console.log('entry', i, position);\n            if(i === position)\n                foundEntry = entry;\n            if(foundEntry)\n                return false;\n        });\n        if(!foundEntry && throwException)\n            throw new Error(\"Invalid playlist position: \" + position);\n        // console.log('found', foundEntry.state.id, position);\n        return foundEntry;\n    }\n\n\n    eachEntry(callback) {\n        const results = [];\n        let offset=0;\n        each(this.state.playlist.entries, 0);\n        return results;\n\n        function each(playlist, depth) {\n            for (let i = 0; i < playlist.length; i++) {\n                const entry = playlist[i];\n                const ret = callback(entry, offset, depth);\n                if (ret === false) return false;\n                if (ret !== null) results.push(ret);\n                offset++;\n                if(entry.playlist && entry.open === true) {\n                    const ret = each(entry.playlist.entries, depth+1);\n                    if (ret === false)\n                        return false;\n                }\n            }\n            return true;\n        }\n    }\n\n    async toggleEntryAtPosition(entryPosition) {\n        const entryData = this.getEntry(entryPosition);\n        if(this.isPlaylist(entryData.url)) {\n            await this.togglePlaylistEntry(entryData);\n        } else {\n            if(this.state.playlist.position !== entryPosition) {\n                this.state.playlist.position = entryPosition;\n                this.playlistPlay();\n            } else {\n                console.warn('no action');\n            }\n\n        }\n    }\n\n    async togglePlaylistEntry(entryData) {\n        if(!this.isPlaylist(entryData.url))\n            throw new Error(\"Invalid playlist entry\");\n        entryData.open = !entryData.open;\n        if(entryData.open === true) {\n            if(!entryData.playlist) {\n                entryData.loading = true;\n                this.playlist && this.playlist.forceUpdate(); // TODO: optimize\n                entryData.playlist = await this.loadPlaylistDataFromURL(entryData.url);\n                delete entryData.loading;\n            }\n\n        }\n        this.playlist && this.playlist.forceUpdate(); // TODO: optimize\n    }\n\n    playEntry(entryData) {\n\n    }\n\n    /** Loading **/\n\n//     /** @deprecated **/\n//     async loadSongFromURL(url) {\n//         const song = this.song;\n//         if(this.isPlaylist(url)) {\n//             const playlistEntry = new PlaylistPlaylistEntry({url});\n//             this.addEntry(playlistEntry);\n//             this.forceUpdate();\n//             // await this.loadPlaylistFromURL(url);\n//             // const entry = this.getCurrentEntry();\n//             // if(entry.url && !this.isPlaylist(entry.url))\n//             //     await this.loadSongFromPlaylistEntry(this.position);\n//         } else {\n//             await song.loadSongFromURL(url);\n//             this.setStatus(\"Loaded from url: \" + url);\n// //                 this.addSongURLToPlaylist(url, song.data.title, song.getSongLengthInSeconds());\n//         }\n//         // this.render();\n//     }\n\n\n    /** @deprecated **/\n    async loadURLAsPlaylist(playlistURL) {\n        this.addEntryToPlaylist(playlistURL);\n        this.toggleEntryAtPosition(0);\n        // this.state.playlist = await this.loadPlaylistDataFromURL(playlistURL);\n        // this.forceUpdate();\n    }\n\n    async loadSongFromPlaylistEntry() {\n        const currentEntry = await this.getCurrentEntry();\n\n        let song;\n        if(this.isPlaylist(currentEntry.url))\n            throw new Error(\"Invalid song (playlist): \" + currentEntry.url);\n\n        if(currentEntry.file) {\n            this.setStatus(\"Loading playlist song from file: \" + currentEntry.file.name);\n            song = await Song.loadSongFromFileInput(currentEntry.file);\n        } else if(currentEntry.url) {\n            this.setStatus(\"Loading playlist song from url: \" + currentEntry.url);\n            song = await Song.loadSongFromURL(currentEntry.url);\n        } else {\n            throw new Error(\"Invalid song entry: \" + JSON.stringify(currentEntry));\n        }\n        return song;\n        // this.setPositionEntry(currentEntry);\n\n        // song.playlistPosition = this.position;\n        // this.render();\n    }\n\n    async loadPlaylistDataFromURL(playlistURL) {\n        console.log(\"Loading playlist: \", playlistURL);\n        playlistURL = new URL(playlistURL, document.location);\n\n        const playlistData = await new Promise((resolve, reject) => {\n            const xhr = new XMLHttpRequest();\n            xhr.open('GET', playlistURL.toString(), true);\n            xhr.responseType = 'json';\n            xhr.onload = () => resolve(xhr.response);\n            xhr.onerror = reject;\n            xhr.send();\n        });\n\n        if(!playlistData.entries)\n            throw new Error(\"No playlist entries: \" + playlistURL);\n        if(!Array.isArray(playlistData.entries))\n            throw new Error(\"Invalid playlist entries: \" + playlistURL);\n\n        let urlPrefix = playlistData.urlPrefix;\n        if(!urlPrefix || urlPrefix[0] !== '/')\n            urlPrefix = playlistURL.pathname.split(\"/\").slice(0,-1).join(\"/\") + '/' + (urlPrefix||'');\n        for(let id=0; id<playlistData.entries.length; id++) {\n            let entry = playlistData.entries[id];\n            if(typeof entry === \"object\")   entry.url = urlPrefix + entry.url;\n            else                            entry = urlPrefix + entry;\n\n            entry = this.parseEntryData(entry);\n            playlistData.entries[id] = entry;\n        }\n\n        console.log(\"Loaded playlist: \", playlistURL, playlistData);\n        return playlistData;\n    }\n\n    addEntryToPlaylist(entryData, insertAtPosition=null) {\n        entryData = this.parseEntryData(entryData);\n        const playlist = this.state.playlist;\n        if(!playlist.entries)\n            playlist.entries = [];\n        const entries = playlist.entries;\n        if(insertAtPosition === null) {\n            insertAtPosition = entries.length;\n            entries.push(entryData);\n        } else {\n            entries.splice(insertAtPosition, 0, entryData);\n        }\n    }\n\n    async openSongFromFileDialog(e, accept=null) {\n        const file = await this.openFileDialog(accept);\n        this.addInputFileToPlaylist(file);\n    }\n\n    addInputFileToPlaylist(file) {\n        const entryData = {\n            file,\n            name: 'file://' + file.name,\n            url: 'file://' + file.name\n        };\n        this.addEntryToPlaylist(entryData);\n        this.playlist.forceUpdate();\n    }\n\n    // addSongURLToPlaylist(url, name=null, length=null) {\n    //     this.addEntryToPlaylist({url, name, length});\n    //     if(this.playlist)\n    //         this.playlist.forceUpdate();\n    //     this.setStatus(\"Added URL to playlist: \" + url);\n    // }\n    // addSongFileToPlaylist(file, name=null, length=null) {\n    //     const entryData = {\n    //         url: 'file://' + file.name,\n    //         name: name || file.name.split('/').pop(),\n    //         length\n    //     };\n    //     this.addEntryToPlaylist(entryData);\n    //     this.forceUpdate();\n    //     this.setStatus(\"Added file to playlist: \" + file.name);\n    // }\n\n    scrollToEntry(entryPosition) {\n        console.log('TODO scrollToEntry', entryPosition)\n        // (currentEntry.scrollIntoViewIfNeeded || currentEntry.scrollIntoView).apply(currentEntry);\n    }\n\n    /** Playback **/\n\n    async playlistPlay() {\n        // this.playlistStop();\n        let position = this.getCurrentEntryPosition();\n        if(this.song && this.song.playlistPosition === position) {\n            if(this.song.isPaused)\n                return this.song.resume();\n            if(this.song.isPlaying)\n                throw new Error(\"Song is already playing\");\n            await this.setCurrentSong(this.song);\n            this.setStatus(\"Playing: \" + this.song.data.title);\n            return await this.song.play(this.getAudioContext());\n        }\n        // let entry = await this.playlist.getCurrentEntry();\n        // if(entry instanceof PlaylistPlaylistEntry)\n        //     entry = await this.playlistMoveToNextSongEntry();\n\n        this.setState({playing: true});\n        let currentEntry = await this.getCurrentEntry();\n        if(this.isPlaylist(currentEntry.url))\n            await this.playlistMoveToNextSongEntry();\n        while(this.state.playing) {\n            this.scrollToEntry(this.getCurrentEntryPosition());\n            const currentSong = await this.loadSongFromPlaylistEntry();\n            await this.setCurrentSong(currentSong);\n            this.setStatus(\"Playing: \" + currentSong.data.title);\n            await currentSong.play(this.getAudioContext());\n            if(!this.state.playing)\n                break;\n            // currentEntry = await this.playlistMoveToNextSongEntry();\n        }\n        this.setState({playing: false});\n    }\n\n    /** @deprecated **/\n    async playlistStop() {\n        this.isPlaylistActive = false;\n        if(this.song && this.song.isPlaying) {\n            this.setStatus(\"Stopping: \" + this.song.data.title);\n            this.song.stopPlayback();\n            this.song.setPlaybackPositionInTicks(0);\n            this.setStatus(\"Stopped: \" + this.song.data.title);\n        }\n    }\n\n    /** @deprecated **/\n    async playlistNext() {\n        this.playlistStop();\n        await this.playlistMoveToNextSongEntry();\n        await this.playlistPlay();\n    }\n\n    async playlistMovePosition(position) {\n        let nextEntry = await this.getEntry(position,false);\n        if(!nextEntry) position = 0;\n        return await this.setPlaylistPosition(position);\n    }\n\n    /** @deprecated **/\n    async playlistMoveToEntry(nextEntry) {\n        const position = await this.getEntryPosition(nextEntry);\n        return await this.playlistMovePosition(position);\n    }\n\n    async playlistMoveToNextSongEntry() {\n        let position = this.getCurrentEntryPosition();\n        const currentEntry = await this.getEntry(position);\n        if(this.isPlaylist(currentEntry.url) && currentEntry.open !== true) {\n            await this.togglePlaylistEntry(currentEntry);\n            // this.playlist.forceUpdate();\n            // await currentEntry.togglePlaylist(true);\n        }\n        let totalCount = await this.getPlaylistCount();\n        for(let i=0; i<totalCount; i++) {\n            position++;\n\n            const currentEntry = await this.getEntry(position);\n            if(this.isPlaylist(currentEntry.url)) {\n                await this.togglePlaylistEntry(currentEntry);\n                // this.playlist.forceUpdate();\n                totalCount = await this.getPlaylistCount();\n            } else {\n                if(position >= totalCount)\n                    position = 0;\n                await this.setPlaylistPosition(position);\n                return; // Done\n                // return currentEntry;\n            }\n        }\n        throw new Error(\"Song entry not found\");\n    }\n\n    async getPlaylistCount() {\n        let count=0;\n        await this.eachEntry((entry, i) => count = i+1);\n        return count;\n    }\n\n    async setPlaylistPosition(position) {\n        if(position !== this.state.playlist.position) {\n            this.state.playlist.position = position;\n            this.playlist.forceUpdate();\n            // const nextEntry = await this.getEntry(position);\n            // await currentEntry.removePosition();\n            // await nextEntry.setPosition();\n        }\n        // this.setState({position});\n        // return nextEntry;\n    }\n    async setPositionEntry(entry) {\n        const position = await this.findEntryPosition(entry);\n        await this.setPlaylistPosition(position);\n    }\n\n\n    /** Utilities **/\n\n    isPlaylist(entryUrl) {\n        return entryUrl && (entryUrl.toString().toLowerCase().endsWith('.pl.json'));\n    }\n\n    parseEntryData(entryData) {\n        if(typeof entryData === \"string\") {\n            const split = entryData.split(';');\n            entryData = {url: split[0]};\n            if(split[1]) entryData.name = split[1];\n            if(split[2]) entryData.length = split[2];\n        }\n        if(!entryData.url)\n            throw new Error(\"Invalid ASPPlaylist Entry URL\");\n        if(!entryData.name)\n            entryData.name = '../' + entryData.url.split('/').pop();\n        return entryData;\n    }\n\n    // async updateEntries() {\n    //     console.time('updateEntries');\n    //     for(let i=0; i<this.playlist.length; i++) {\n    //         const entry = this.playlist[i];\n    //         await entry.updateID(i);\n    //     }\n    //     console.timeEnd('updateEntries');\n    // }\n\n    // toggleSelect(position) {\n    //     const selected = this.state.selected;\n    //     const i = selected.indexOf(position);\n    //     if(i === -1) {\n    //         selected.push(position);\n    //         selected.sort();\n    //     } else {\n    //         selected.splice(i, 1);\n    //     }\n    //     this.getEntry(position)\n    //         .updatePlaylist(this);\n    // }\n\n\n    // async eachEntry(callback) {\n    //     let offset=0;\n    //     return await this.eachEntry(async (entry, i) => {\n    //         if(entry instanceof PlaylistPlaylistEntry)\n    //             return null;\n    //         return await callback(entry, offset++);\n    //     })\n    // }\n    //\n    // async eachPlaylistEntry(callback) {\n    //     let offset=0;\n    //     return await this.eachEntry(async (entry, i) => {\n    //         if(!entry instanceof PlaylistPlaylistEntry)\n    //             return null;\n    //         return await callback(entry, offset++);\n    //     })\n    // }\n\n    // getCurrentEntry() {\n    //     if(this.state.playlist.length === 0)\n    //         throw new Error(\"Empty playlist\");\n    //     return this.getEntry(this.state.playlist.position);\n    // }\n\n    // async addEntry(entry, insertAtPosition=null, skipDuplicate=true) {\n    //     if(!entry instanceof ASPPlaylistEntry)\n    //         throw new Error(\"Invalid ASPPlaylistEntry\");\n    //     if(skipDuplicate && this.entries.find(e => e.url === entry.url)) {\n    //         return false;\n    //     }\n    //     if(insertAtPosition === null) {\n    //         insertAtPosition = this.entries.length;\n    //         this.entries.push(entry);\n    //     } else {\n    //         this.entries.splice(insertAtPosition, 0, entry);\n    //     }\n    //     await entry.updateID(insertAtPosition);\n    //     // this.forceUpdate();\n    //     return true;\n    // }\n\n\n    // async updateNextPosition() {\n    //     let position = this.state.playlist.position;\n    //     const currentEntry = await this.getEntry(position);\n    //     await currentEntry.removePosition();\n    //     position++;\n    //     let nextEntry = await this.getEntry(position,false);\n    //     if(!nextEntry) position = 0;\n    //     return await this.setPlaylistPosition(position);\n    // }\n\n\n    // getPlaylistPosition() { return this.state.playlist.position; }\n\n\n    // async updatePosition(position) {\n    //     if(!this.playlist[position])\n    //         throw new Error(\"Invalid playlist position: \" + position);\n    //     this.state.playlist.position = position;\n    //     // await this.updateEntries();\n    // }\n\n\n\n\n    /** Song Playback **/\n\n    // async songPlay() {\n    //     if(this.playlistActive)\n    //         throw new Error(\"Playback is already active\");\n    //     this.playlistActive = true;\n    //     await this.song.play();\n    //     await this.songNext(); // TODO: prevent async playback\n    // }\n    //\n    // async songNext() {\n    //     this.playlistActive = true;\n    //     while(this.playlistActive) {\n    //         const entry = await this.playlistMovePosition();\n    //         (entry.scrollIntoViewIfNeeded || entry.scrollIntoView).apply(entry);\n    //         const nextSong = await this.playlist.loadSongFromPlaylistEntry();\n    //         this.setCurrentSong(nextSong);\n    //         await this.song.play();\n    //     }\n    // }\n    //\n    // async songPause() {\n    //     this.song.stopPlayback();\n    // }\n\n    // songStopIfPlaying() {\n    //     if(this.playlistActive)\n    //         this.songStop();\n    // }\n\n\n    setSongPositionPercentage(playbackPercentage) {\n        const playbackPosition = (playbackPercentage / 100) * this.state.songLength;\n        return this.setSongPosition(playbackPosition);\n    }\n    setSongPosition(playbackPosition) {\n        // const wasPlaying = !!this.song.playback;\n        // if (wasPlaying)\n        //     this.song.stopPlayback();\n        if(!this.song)\n            throw new Error(\"No song loaded\");\n        const song = this.song;\n        song.setPlaybackPosition(playbackPosition);\n        // if (wasPlaying)\n        //     this.song.play();\n    }\n\n    // async clearPlaylist() {\n    //     this.playlist.clear();\n    // }\n\n    /** @deprecated **/\n    async playlistPlayTest() {\n        let entry = await this.playlist.getCurrentEntry();\n        while(entry) {\n            (entry.scrollIntoViewIfNeeded || entry.scrollIntoView).apply(entry);\n            await new Promise((resolve, reject) => {\n                setTimeout(resolve, 1000);\n            });\n            entry = await this.playlistMoveToNextSongEntry();\n        }\n    }\n\n    /** Toggle Panels **/\n\n    togglePanelPlaylist(e) {\n        this.classList.toggle('hide-panel-playlist');\n    }\n\n    togglePanelSong(e) {\n        this.classList.toggle('hide-panel-song');\n    }\n    toggleFullscreen(e) {\n        const setFullScreen = !this.classList.contains('fullscreen');\n        // this.containerElm.classList.toggle('fullscreen', setFullScreen);\n        this.classList.toggle('fullscreen', setFullScreen);\n\n        if (setFullScreen) {\n\n        }\n    }\n\n\n\n\n    /** Prompt **/\n\n    async openFileDialog(accept=null) {\n        return await new Promise((resolve, reject) => {\n            const input = document.createElement('input');\n            input.setAttribute('type', 'file');\n            if(accept)\n                input.setAttribute('accept', accept);\n            input.addEventListener('change', () => {\n                const file = input.files[0];\n                if(file)\n                    resolve(file);\n                else\n                    reject();\n            });\n            input.click();\n        })\n    }\n\n\n\n    // get playlist() { return this.state.playlist; }\n\n    // createStyleSheetLink(stylePath, scriptElm=null) {\n    //     // const AudioSourceLoader = customElements.get('audio-source-loader');\n    //     const linkHRef = new URL(stylePath, (scriptElm || thisModule).src);\n    //     const link = document.createElement('link');\n    //     link.setAttribute('rel', 'stylesheet');\n    //     link.href = linkHRef;\n    //     return link;\n    // }\n\n    // restart() {\n    //     const RNRestart = require('react-native-restart').default;\n    //     RNRestart.Restart();\n    // }\n\n    // openMenu(menuKey) {\n    //     this.state.menuKey = menuKey;\n    //     // if(this.props.onUpdateMenu)\n    //         this.props.onUpdateMenu();\n    //     // setTimeout(e => this.toggleMenu(), 10);\n    // }\n    //\n    // toggleMenu(menuKey=null) {\n    //     if(this.props.onToggleMenu)\n    //         this.props.onToggleMenu();\n    // }\n\n}\n\nexport default ASPlayerActions;\n","import React from \"react\";\n\nimport {ASUIMenuAction, ASUIMenuDropDown} from \"../components\";\n\nimport Storage from \"../common/storage/Storage\";\n\nimport ASPlayerRenderer from \"./ASPlayerRenderer\";\n\n\nclass ASPlayerMenu extends ASPlayerRenderer {\n\n    openMenu(e, options) {\n        // console.log('openMenu', e);\n        if(!this.state.portrait) {\n            if(typeof e.openMenu !== \"function\") {\n                console.warn(\"Menu.openMenu was triggered from a non-Menu element class\");\n            } else {\n                e.openMenu(e, options);\n                return;\n            }\n        }\n\n        console.log(this.header);\n        this.header.current.openMenu(e, options);\n    }\n\n    renderRootMenu() {\n        const props = {\n            vertical: !this.state.portrait,\n            // openOnHover: false,\n            // openOnHover: !this.state.portrait,\n        };\n        if(!this.state.portrait)\n            props.arrow = false;\n        return (<>\n            <ASUIMenuDropDown {...props} options={p => this.renderFileMenu(p)}      >File</ASUIMenuDropDown>\n            <ASUIMenuDropDown {...props} options={p => this.renderPlaylistMenu(p)}  >Playlist</ASUIMenuDropDown>\n            <ASUIMenuDropDown {...props} options={p => this.renderViewMenu(p)}      >View</ASUIMenuDropDown>\n        </>);\n    }\n\n    renderFileMenu() {\n        return (<>\n            <ASUIMenuDropDown options={p => this.renderFileMemoryMenu(p)}      >Load from Memory</ASUIMenuDropDown>\n            <ASUIMenuAction onAction={e => this.openSongFromFileDialog(e)} >Load from File</ASUIMenuAction>\n            <ASUIMenuAction onAction={e=>{}} disabled>Load from URL</ASUIMenuAction>\n            <ASUIMenuAction onAction={e=>{}} disabled>Load from Library</ASUIMenuAction>\n        </>);\n    }\n\n    async renderFileMemoryMenu() {\n        const storage = new Storage();\n        const songRecentUUIDs = await storage.getRecentSongList() ;\n        return songRecentUUIDs.length > 0\n            ? songRecentUUIDs.map((entry, i) =>\n                <ASUIMenuAction\n                    key={i}\n                    onAction={e => this.loadSongFromMemory(entry.uuid)}\n                >{entry.name || entry.uuid}</ASUIMenuAction>)\n            :<ASUIMenuAction\n                key=\"no-recent\"\n                disabled\n                onAction={e=>{}}\n            >No Songs Available</ASUIMenuAction>\n        ;\n    }\n\n    renderPlaylistMenu() {\n        return (<>\n            <ASUIMenuAction key=\"next\" onAction={e => this.playlistNext(e)}>Load from Memory</ASUIMenuAction>\n            <ASUIMenuAction key=\"clear\" onAction={e => this.clearPlaylist(e)} >Load from File</ASUIMenuAction>\n        </>);\n    }\n\n    renderViewMenu() {\n        return (<>\n            <ASUIMenuAction key=\"fullscreen\" onAction={e => this.toggleFullscreen(e)}>{this.state.fullscreen ? 'Disable' : 'Enable'} Fullscreen</ASUIMenuAction>\n            <ASUIMenuAction key=\"hide-panel-song\" onAction={e => this.togglePanelSong(e)} >{this.state.showPanelSong ? 'Show' : 'Hide'} Song Forms</ASUIMenuAction>\n            <ASUIMenuAction key=\"hide-panel-playlist\" onAction={e => this.togglePanelPlaylist(e)} >{this.state.showPanelPlaylist ? 'Show' : 'Hide'} Playlist</ASUIMenuAction>\n        </>);\n    }\n\n\n}\n\nexport default ASPlayerMenu;\n","import React from \"react\";\n\nimport {\n    ASUIButton,\n    ASUIDiv,\n    ASUIForm,\n    ASUIIcon,\n    ASUIInputRange,\n    ASUIMenuOverlayContainer,\n    ASUIPanel\n} from \"../components\";\n\n\nimport ASPPlaylist from \"./playlist/ASPPlaylist\";\nimport ASPlayerStyle from \"./ASPlayerStyle\";\nimport {ASPlayerHeader} from \"./header/ASPlayerHeader\";\n\nclass ASPlayerRenderer extends ASPlayerStyle {\n    constructor(props={}) {\n        super(props);\n        this.state = {\n            title: \"Audio Source Player\",\n            status: \"[No Song Loaded]\",\n            version: require('../package.json').version,\n            menuKey: 'root',\n            fullscreen: false,\n            portrait: true,\n            showPanelSong: true,\n            showPanelPlaylist: true,\n        };\n        this.playlist = null; // playlist ref;\n        this.footerVersionText = React.createRef();\n    }\n\n    render() {\n        return (\n            <ASUIDiv className={[\"asp-container\", this.state.portrait ? 'portrait' : 'landscape'].join(' ')}>\n                <ASUIMenuOverlayContainer\n                    isActive={this.state.portrait}\n                >\n                    <ASUIDiv key=\"header\" className=\"asp-title-container\">\n                        <ASPlayerHeader\n                            title={this.state.title}\n                            portrait={this.state.portrait}\n                            menuContent={() => this.renderRootMenu()}\n                            />\n                    </ASUIDiv>\n                    <ASUIDiv className=\"asp-forms-container\">\n                        <ASUIPanel className=\"song\" header=\"Song\">\n                            <ASUIForm className=\"playback\" header=\"Playback\">\n                                <ASUIButton\n                                    className=\"song-play\"\n                                    onAction={e => this.playlistPlay(e)}\n                                >\n                                    <ASUIIcon source=\"play\"/>\n                                </ASUIButton>\n                                <ASUIButton\n                                    className=\"song-pause\"\n                                    onAction={e => this.playlistPause(e)}\n                                >\n                                    <ASUIIcon source=\"pause\"/>\n                                </ASUIButton>\n                                <ASUIButton\n                                    className=\"song-stop\"\n                                    onAction={e => this.playlistStop(e)}\n                                >\n                                    <ASUIIcon source=\"stop\"/>\n                                </ASUIButton>\n                                <ASUIButton\n                                    className=\"song-next\"\n                                    onAction={e => this.playlistNext(e)}\n                                >\n                                    <ASUIIcon source=\"next\"/>\n                                </ASUIButton>\n                            </ASUIForm>\n\n                            <ASUIForm className=\"file\" header=\"File\">\n                                <ASUIButton\n                                    className=\"file-load\"\n                                    onAction={(e) => this.loadSongFromFileInput(e)}\n                                    accept=\".json,.mid,.midi\"\n                                    ref={ref => this.fieldSongFileLoad = ref}\n                                    title=\"Load Song from File\"\n                                >\n                                    <ASUIIcon source=\"file-load\"/>\n                                </ASUIButton>\n                                <ASUIButton\n                                    className=\"file-save\"\n                                    onAction={e => this.saveSongToFile(e)}\n                                    title=\"Save Song to File\"\n                                >\n                                    <ASUIIcon source=\"file-save\"/>\n                                </ASUIButton>\n                            </ASUIForm>\n\n                            <ASUIForm className=\"volume\" header=\"Volume\">\n                                <ASUIInputRange\n                                    className=\"volume\"\n                                    onChange={(e, newVolume) => this.setVolume(newVolume / 100)}\n                                    value={this.state.volume}\n                                    min={1}\n                                    max={100}\n                                    ref={ref => this.fieldSongVolume = ref}\n                                    title=\"Song Volume\"\n                                />\n                            </ASUIForm>\n\n                            <ASUIForm className=\"position\" header=\"Position\">\n                                <ASUIInputRange\n                                    className=\"position\"\n                                    onChange={(e, pos) => this.setSongPosition(pos)}\n                                    value={0}\n                                    min={0}\n                                    max={Math.ceil(this.state.songLength) || 1}\n                                    ref={ref => this.fieldSongPosition = ref}\n                                    title=\"Song Position\"\n                                />\n                            </ASUIForm>\n\n                            <ASUIForm className=\"timing\" header=\"Timing\">\n                                <ASUIButton\n                                    className=\"timing\"\n                                    onAction={(e) => this.setSongPositionPrompt()}\n                                    ref={ref => this.fieldSongTiming = ref}\n                                    title=\"Song Timing\"\n                                    children=\"00:00:000\"\n                                />\n                            </ASUIForm>\n\n                            <ASUIForm className=\"name\" header=\"Name\">\n                                <ASUIButton\n                                    className=\"name\"\n                                    onAction={(e) => this.setSongNamePrompt()}\n                                    title=\"Song Name\"\n                                    children={this.song ? this.song.data.title : \"no song loaded\"}\n                                />\n                            </ASUIForm>\n\n                            <ASUIForm className=\"version\" header=\"Version\">\n                                <ASUIButton\n                                    className=\"version\"\n                                    onAction={(e) => this.setSongVersionPrompt()}\n                                    ref={ref => this.fieldSongVersion = ref}\n                                    title=\"Song Version\"\n                                    children={this.song ? this.song.data.version : \"0.0.0\"}\n                                />\n                            </ASUIForm>\n\n                            <ASUIForm className=\"source\" header=\"Source\">\n                                <ASUIButton\n                                    className=\"source\"\n                                    onAction={(e, newSongVersion) => this.openSongSource(e, newSongVersion)}\n                                    title=\"Song Source\"\n                                >\n                                    <ASUIIcon source=\"source\"/>\n                                </ASUIButton>\n                            </ASUIForm>\n                        </ASUIPanel>\n                        <ASUIPanel className=\"playlist\" header=\"Playlist\" styleContainer={{}}>\n                            <ASPPlaylist\n                                player={this}\n                                ref={ref => this.playlist = ref}\n                                />\n                        </ASUIPanel>\n                    </ASUIDiv>\n                    <ASUIDiv key=\"footer\" className=\"asp-footer-container\">\n                        <ASUIDiv className=\"asp-status-text\">{this.state.status}</ASUIDiv>\n                        <ASUIDiv className=\"asp-version-text\"\n                             ref={this.footerVersionText}\n                        >{this.state.version}</ASUIDiv>\n                    </ASUIDiv>\n                </ASUIMenuOverlayContainer>\n            </ASUIDiv>\n        )\n    }\n\n}\n\nexport default ASPlayerRenderer;\n","import ASPlayerActions from \"./ASPlayerActions\";\n\nimport {Song, SongValues}          from \"../song\";\nimport Storage       from \"../common/storage/Storage\";\n\n/**\n * ASPlayer requires a modern browser\n */\n\n// const fs = new AudioSourceFileService();\n// setTimeout(async e => {\n//     const torrentID = \"005ff6b3e47f34ad254b301481561d3145187467\";\n//     const torrent = await fs.getTorrent(torrentID);\n//     console.log(torrent.files);\n//     torrent.files[50].getBuffer(async function(err, buffer) {\n//         if(err) throw new Error(err);\n//         const files = await fs.decompress7ZipArchive(buffer);\n//         console.log(files);\n//     });\n// }, 1000);\n\nclass ASPlayer extends ASPlayerActions {\n    constructor(props=null) {\n        super(props);\n        this.state.playlist = {\n            entries: [],\n            position: 0\n        };\n        this.state.volume = Song.DEFAULT_VOLUME;\n        this.state.songLength = 0;\n        this.state.playlistActive = false;\n        this.state.playing = false;\n        this.state.paused = false;\n        // this.state.position = 0;\n\n        this.audioContext = null;\n        this.volumeGain = null;\n        this.song = null;\n        // this.shadowDOM = null;\n        // this.props.playlistActive = false;\n        // this.props.playing = false;\n        // this.props.paused = false;\n\n        this.onResizeCallback = e => this.onResize(e);\n    }\n\n    // static getDefaultProps() {\n    //     return {\n    //         onPress: e => this.onInput(e),\n    //         onPressIn: e => this.onInput(e),\n    //         onPressOut: e => this.onInput(e)\n    //     };\n    // }\n\n    // get isPlaylistActive()      { return this.state.playlistActive; }\n    // set isPlaylistActive(value) { this.setStatus({playlistActive: value}); }\n    // get isPlaying()             { return this.state.playing; }\n    // set isPlaying(value)        { this.setStatus({playing: value}); }\n    // get isPaused()              { return this.state.paused; }\n    // set isPaused(value)         { this.setStatus({paused: value}); }\n\n    get values() { return new SongValues(this.song); }\n\n    componentDidMount(e) {\n        const url = this.props.src || this.props.url;\n        if(url)\n            this.loadURLAsPlaylist(url);\n        else\n            this.loadState();\n\n        if(window)\n            window.addEventListener('resize', this.onResizeCallback);\n        // this.onResize(e);\n        // this.loadPackageInfo()\n        //     .then(packageInfo => this.setVersion(packageInfo.version));\n    }\n\n    componentWillUnmount() {\n\n        if(window)\n            window.removeEventListener('resize', this.onResizeCallback);\n        this.saveState();\n    }\n\n    /** Portrait Mode **/\n\n    onResize() {\n        const aspectRatio = window.innerWidth / window.innerHeight;\n        const portrait = aspectRatio < 14/16;\n        if(!this.state.portrait === portrait) {\n            console.log(\"Setting portrait mode to \", portrait, \". Aspect ratio: \", aspectRatio);\n            this.setState({portrait});\n        }\n    }\n\n    disconnectedCallback() {\n        super.disconnectedCallback();\n        // if(isBrowser)\n            this.saveState();\n            // window.addEventListener('unload', e => this.saveState(e));\n    }\n\n    async loadState() {\n\n        const storage = new Storage();\n        const state = await storage.loadState('audio-source-player-state');\n        console.log('loadState', state);\n\n\n        if (state) {\n            this.setState(state);\n        }\n    }\n\n\n    async saveState() {\n        // await this.saveSongToMemory(e);\n        const state = this.state;\n        const storage = new Storage();\n        await storage.saveState(state, 'audio-source-player-state');\n        console.log('saveState', state);\n    }\n\n\n\n    /** Package Info **/\n\n    // async loadPackageInfo(force=false) {\n    //     const url = new URL('files/package.json', document.location); // , thisModule.src);\n    //\n    //     let packageInfo = this.packageInfo;\n    //     if (!force && packageInfo)\n    //         return packageInfo;\n    //\n    //     const response = await fetch(url);\n    //     packageInfo = await response.json();\n    //     if(!packageInfo.version)\n    //         throw new Error(\"Invalid package version: \" + url);\n    //\n    //     console.log(\"Package Version: \", packageInfo.version, packageInfo);\n    //     this.packageInfo = packageInfo;\n    //     return packageInfo;\n    // }\n\n\n    // Rendering\n    // get statusElm() { return this.shadowDOM.querySelector(`asui-div[key=asp-status-container] asui-div[key=status-text]`); }\n    // get versionElm() { return this.shadowDOM.querySelector(`asui-div[key=asp-status-container] asui-div[key=version-text]`); }\n\n\n    toggleFullscreen(e) {\n        const setFullScreen = !this.classList.contains('fullscreen');\n        this.containerElm.classList.toggle('fullscreen', setFullScreen);\n        this.classList.toggle('fullscreen', setFullScreen);\n    }\n\n    async onSongEvent(e) {\n        // console.log(e.type, e);\n        switch(e.type) {\n            case 'log':\n                this.setStatus(e.detail);\n                break;\n\n            case 'song:seek':\n                this.updateSongPositionValue(e.detail.position);\n\n                break;\n\n            case 'song:volume':\n                this.fieldSongVolume.value = e.detail.volume;\n                break;\n\n            case 'song:play':\n                this.containerElm.classList.add('playing');\n                if(e.playback) {\n                    await e.playback.waitForPlaybackToEnd();\n                    this.containerElm.classList.remove('playing');\n                }\n\n                this.setState({playing: true, paused: false});\n                // this.fieldSongPlaybackPause.disabled = false;\n                this.updateSongPositionMaxLength(this.song.getSongLengthInSeconds());\n                const updateSongPositionInterval = setInterval(e => {\n                    if (!this.song.isPlaying) {\n                        clearInterval(updateSongPositionInterval);\n                        // this.fieldSongPlaybackPause.disabled = true;\n                        this.setState({playing: false, paused: false});\n                        // this.containerElm.classList.remove('playing');\n                        // this.classList.remove('playing');\n                    }\n                    this.updateSongPositionValue(this.song.getSongPlaybackPosition());\n                }, 10);\n                break;\n\n            case 'song:pause':\n                this.setState({paused: true});\n                // this.containerElm.classList.remove('playing');\n                break;\n            case 'song:end':\n                this.setState({playing: false, paused: false});\n                // this.containerElm.classList.remove('playing');\n                break;\n\n            default:\n                console.log(\"Unknown song event: \", e.type);\n                break;\n        }\n    }\n\n\n    // Input\n\n    onInput(e) {\n        if(e.defaultPrevented)\n            return;\n        switch(e.type) {\n            case 'click':\n                break;\n            case 'dragover':\n                e.stopPropagation();\n                e.preventDefault();\n                e.dataTransfer.dropEffect = 'copy';\n                break;\n            case 'drop':\n                e.stopPropagation();\n                e.preventDefault();\n                var files = e.dataTransfer.files; // Array of all files\n                this.loadSongFromFileInput(files[0]);\n                console.log(files);\n                break;\n\n            default:\n                console.log(\"Unknown input event: \", e.type);\n                break;\n        }\n    }\n\n}\nASPlayer.DEFAULT_VOLUME = 0.3;\n\n\nexport default ASPlayer;\n","export default class ActiveTrackState {\n    static DEFAULT_ROW_LENGTH = 16;\n    static DEFAULT_BEATS_PER_SEGMENT = 16;\n    static DEFAULT_BEATS_PER_MEASURE = 4;\n\n    constructor(composer, trackName=null) {\n        if(trackName === null)\n            trackName = composer.state.selectedTrack;\n        if(!composer.state.activeTracks.hasOwnProperty(trackName))\n            throw new Error(`Invalid track: ${trackName}`)\n\n        this.composer = composer;\n        this.trackName = trackName;\n        this.state = composer.state.activeTracks[trackName];\n    }\n\n    get timeDivision() { return this.state.timeDivision || this.composer.song.data.timeDivision; }\n    get quantizationTicks() { return this.state.quantizationTicks || this.timeDivision; }\n\n    get beatsPerMinute() { return this.state.beatsPerMinute || this.composer.song.data.beatsPerMinute; }\n    get beatsPerMeasure() { return this.state.beatsPerMeasure || this.composer.song.data.beatsPerMeasure || ActiveTrackState.DEFAULT_BEATS_PER_MEASURE; }\n\n    get programID() { return this.state.programID; }\n\n    get selectedIndices() { return this.state.selectedIndices || []; }\n    get cursorOffset() { return this.state.cursorOffset || 0; }\n    get playingIndices() { return this.state.playingIndices || []; }\n\n    get currentCommand() { return this.state.currentCommand || 'C4'; }\n    get currentDuration() { return this.state.currentDuration || '1B'; }\n    get currentVelocity() { return this.state.currentVelocity || null; }\n\n    get destinationList() { return this.state.destinationList || []; }\n    get rowLength() { return this.state.rowLength || ActiveTrackState.DEFAULT_ROW_LENGTH; }\n    get rowOffset() { return this.state.rowOffset || 0; }\n\n    get trackLengthTicks() { return this.state.trackLengthTicks || null; }\n    get segmentLengthTicks() { return this.state.segmentLengthTicks || (this.timeDivision * ActiveTrackState.DEFAULT_BEATS_PER_SEGMENT); }\n    get segmentPositions() { return this.state.segmentPositions || [0]; }\n\n    get startPosition() { return this.state.startPosition || 0; }\n\n    async update(newState) {\n        await this.composer.updateState(state => {\n            if(typeof newState === \"function\")\n                newState(state.activeTracks[this.trackName]);\n\n            // state.activeTracks[this.trackName] = newState;\n            return state;\n        })\n    }\n}\n","import * as React from \"react\";\nimport PropTypes from 'prop-types';\n\nimport {ASUIDropDownContainer} from \"../../../../components/menu/\";\n\nimport \"./ASCTrackParam.css\";\n\n\nclass ASCTrackInstructionParameter extends React.Component {\n    /** Default Properties **/\n    static defaultProps = {\n        vertical: true\n    };\n\n    /** Property validation **/\n    static propTypes = {\n        options: PropTypes.any.isRequired,\n        trackerInstruction: PropTypes.any.isRequired,\n    };\n\n    constructor(props) {\n        super(props);\n        this.dropdown = React.createRef();\n        this.cb = {\n            onContextMenu: (e) => this.onContextMenu(e),\n            onKeyDown: (e) => this.onKeyDown(e),\n            // onMouseInput: e => this.onMouseInput(e),\n        };\n    }\n\n    render() {\n        let className = \"asct-parameter\";\n        if(this.props.className)\n            className += ' ' + this.props.className;\n\n        return <div\n            // onClick={this.cb.onMouseInput}\n            onKeyDown={this.cb.onKeyDown}\n            onContextMenu={this.cb.onContextMenu}\n            className={className}\n            title={this.props.title}\n            // tabIndex={0}\n        >\n            {this.props.children}\n            <ASUIDropDownContainer\n                ref={this.dropdown}\n                options={this.props.options}\n                vertical={this.props.vertical}\n                />\n        </div>;\n    }\n\n    toggleMenu()    { return this.dropdown.current.toggleMenu(); }\n\n\n    /** User Input **/\n\n\n    onKeyDown(e) {\n        if(e.isDefaultPrevented())\n            return;\n        switch(e.key) {\n            case 'ContextMenu':\n                e.preventDefault();\n                this.toggleMenu();\n                break;\n\n            default:\n                console.info(\"Unhandled key: \", e.key);\n                break;\n        }\n    }\n\n    // onMouseInput(e) {\n    //     console.log(e.type);\n    //     if(e.defaultPrevented)\n    //         return;\n    //     e.preventDefault();\n    //\n    //     switch(e.type) {\n    //         case 'click':\n    //             if(e.button === 0)\n    //                 this.selectInstruction();\n    //             else if(e.button === 1)\n    //                 throw new Error(\"Unimplemented middle button\");\n    //             else if(e.button === 2)\n    //                 this.toggleMenu();\n    //             else\n    //                 throw new Error(\"Unknown mouse button\");\n    //\n    //             break;\n    //         default:\n    //             throw new Error(\"Unknown Mouse event: \" + e.type);\n    //     }\n    // }\n\n    onContextMenu(e) {\n        if(e.defaultPrevented || e.shiftKey)\n            return;\n        e.preventDefault();\n        this.toggleMenu();\n    }\n\n\n    onMouseEnter(e) {\n        this.toggleMenu();\n    }\n\n    selectInstruction() {\n        this.props.trackerInstruction.selectInstruction();\n    }\n\n}\n\nexport default ASCTrackInstructionParameter;\n\n","import * as React from \"react\";\nimport PropTypes from \"prop-types\";\nimport ASCTrackInstructionParameter from \"../instruction/param/ASCTrackInstructionParameter\";\nimport TrackInstruction from \"../../../song/instruction/TrackInstruction\";\n\nexport default class ASCTrackInstructionBase extends React.Component {\n    /** Default Properties **/\n    static defaultProps = {\n    };\n\n    /** Property validation **/\n    static propTypes = {\n        index: PropTypes.number.isRequired,\n        instruction: PropTypes.any.isRequired,\n        tracker: PropTypes.any.isRequired,\n        cursorPosition: PropTypes.number.isRequired,\n        selected: PropTypes.bool.isRequired,\n        cursor: PropTypes.bool.isRequired\n    };\n\n    // play() {\n    //     const composer = this.props.composer;\n    //     composer.song.playInstructionAtIndex(destination, this.state.track.currentGroup, this.index, composer.song.getAudioContext().currentTime);\n    //     return this;\n    getTracker() { return this.props.tracker; }\n    getComposer() { return this.getTracker().props.composer; }\n    getSong() { return this.getComposer().getSong(); }\n    /** @returns Instruction **/\n    getInstruction() { return this.props.instruction; }\n    getInstructionIndex() { return this.props.index; }\n\n    render() {\n        // throw new Error(\"Unimplemented\");\n        return null;\n    }\n\n    renderParameters() {\n        const instruction = this.props.instruction;\n        const open = this.props.cursor || this.props.selected;\n\n        const parameters = [];\n\n        parameters.push(<ASCTrackInstructionParameter\n            key=\"command\"\n            title={`Command: ${instruction.command}`}\n            trackerInstruction={this}\n            className=\"command\"\n            options={() => this.renderMenuSelectCommand()}\n            ref={this.commandParam}\n        >{instruction.command}</ASCTrackInstructionParameter>);\n\n        // console.log('instruction', this.props, className);\n        if(open) {\n            const durationString = instruction.durationTicks === null ? 'N/A'\n                : this.getComposer().values.formatSongDuration(instruction.durationTicks);\n\n            if(typeof instruction.velocity !== \"undefined\")\n                parameters.push(<ASCTrackInstructionParameter\n                    key=\"velocity\"\n                    title={`Velocity: ${instruction.velocity}`}\n                    trackerInstruction={this}\n                    className=\"velocity\"\n                    options={() => this.renderMenuSelectVelocity(instruction.velocity)}\n                >{instruction.velocity}</ASCTrackInstructionParameter>);\n            if(typeof instruction.durationTicks !== \"undefined\")\n                parameters.push(<ASCTrackInstructionParameter\n                    key=\"duration\"\n                    title={`Duration: ${durationString}`}\n                    trackerInstruction={this}\n                    className=\"duration\"\n                    options={() => this.renderMenuSelectDuration(instruction.durationTicks)}\n                >{durationString||'-'}</ASCTrackInstructionParameter>);\n        }\n        return parameters;\n    }\n\n    /** Actions **/\n\n    playInstruction(destination=null) {\n        this.getTracker().getTrackInfo().updateCurrentInstruction(); // Hack\n        return this.getTracker().playInstructions(this.getInstructionIndex(), destination);\n    }\n\n    async selectInstruction(clearSelection=true, toggleValue = null) {\n        // const trackName = this.getTracker().getTrackName();\n        const selectedIndices = clearSelection ? [] : this.getTracker().getTrackState().selectedIndices;\n        // const instruction = this.getInstruction();\n        const i = selectedIndices.indexOf(this.props.index);\n        if(toggleValue === true || i === -1) {\n            if(i === -1)\n                selectedIndices.push(this.props.index);\n        } else {\n            if(i !== -1)\n                selectedIndices.splice(i, 1);\n        }\n        // this.getComposer().trackerSelectIndices(trackName, selectedIndices, this.props.cursorPosition)\n        // this.getTracker().selectIndices(selectedIndices); // , this.props.cursorPosition);\n        await this.getTracker().setCursorOffset(this.props.cursorPosition, selectedIndices);\n        return selectedIndices;\n    }\n\n    async selectInstructionWithAction(clearSelection=true, toggleValue = null) {\n        const selectedIndices = await this.selectInstruction(clearSelection, toggleValue);\n        const instruction = this.getInstruction();\n        if(instruction instanceof TrackInstruction) {\n            this.getComposer().trackerToggleTrack(\n                instruction.getTrackName(),\n                null,\n                {\n                    destinationList: this.getTracker().getTrackState().destinationList.concat(this.getTracker().getTrackName())\n                }\n            );\n        } else {\n            this.getTracker().playInstructions(selectedIndices);\n        }\n\n    }\n\n\n    /** User Input **/\n\n    onMouseInput(e) {\n        if(e.defaultPrevented)\n            return;\n        e.preventDefault();\n\n        switch(e.type) {\n            case 'mousedown':\n            case 'click':\n                if(e.button === 0)\n                    this.selectInstructionWithAction(!e.ctrlKey);\n                // TODO: e.shiftKey for selecting a range of notes\n                else if(e.button === 1)\n                    throw new Error(\"Unimplemented middle button\");\n                else if(e.button === 2)\n                    throw new Error(\"Unimplemented right button\");\n                else\n                    throw new Error(\"Unknown mouse button\");\n\n                break;\n            default:\n                throw new Error(\"Unknown Mouse event: \" + e.type);\n        }\n    }\n\n    /** Menus **/\n\n    // }\n    renderMenuSelectCommand(e) {\n        return this.getComposer().renderMenuSelectCommand((command) => {\n            this.instructionReplaceCommand(command);\n        });\n    }\n\n\n    renderMenuSelectVelocity(currentVelocity=null) {\n        return this.getComposer().renderMenuSelectVelocity(velocity => {\n            this.instructionReplaceVelocity(velocity);\n        }, currentVelocity);\n    }\n\n    renderMenuSelectDuration(currentDuration=null) {\n        return this.getComposer().renderMenuSelectDuration(duration => {\n            this.instructionReplaceDuration(duration);\n        }, currentDuration);\n    }\n\n\n    instructionReplaceCommand(command) {\n        this.getComposer().instructionReplaceCommandSelected(\n            command,\n            this.getComposer().state.selectedTrack,\n            this.props.index,\n        )\n    }\n\n    // instructionReplaceProgram(programID) {\n    //     this.getSong().instructionReplaceProgram(\n    //         this.getComposer().state.selectedTrack,\n    //         this.props.index,\n    //         programID);\n    //     this.forceUpdate();\n    //\n    // }\n\n    instructionReplaceVelocity(velocity) {\n        this.getSong().instructionReplaceVelocity(\n            this.getComposer().state.selectedTrack,\n            this.props.index,\n            velocity);\n        this.playInstruction();\n    }\n\n    instructionReplaceDuration(duration) {\n        this.getSong().instructionReplaceDuration(\n            this.getComposer().state.selectedTrack,\n            this.props.index,\n            duration);\n        this.playInstruction();\n    }\n}\n","import * as React from \"react\";\nimport ASCTrackInstructionBase from \"./ASCTrackInstructionBase\";\n\nimport \"./ASCTrackInstruction.css\";\n\nexport default class ASCTrackInstruction extends ASCTrackInstructionBase {\n    constructor(props) {\n        super(props);\n\n        this.cb = {\n            // onContextMenu: (e) => this.onContextMenu(e),\n            // onKeyDown: (e) => this.onKeyDown(e),\n            onMouseInput: e => this.onMouseInput(e),\n        };\n        this.commandParam = React.createRef();\n    }\n\n    render() {\n        let className = \"asct-instruction\";\n        // if(this.props.className)\n        //     className += ' ' + this.props.className;\n        if(this.props.cursor)\n            className += ' cursor';\n        if(this.props.selected)\n            className += ' selected';\n        if(this.props.playing)\n            className += ' playing';\n\n        const parameters = this.renderParameters();\n        return <div\n            ref={input => this.props.cursor && this.getTracker().props.selected && input && input.focus()}\n            tabIndex={0}\n            className={className}\n            onKeyDown={this.cb.onKeyDown}\n            // onClick={this.cb.onMouseInput}\n            onMouseDown={this.cb.onMouseInput}\n            >\n            {parameters}\n        </div>;\n    }\n\n}\n","import * as React from \"react\";\n\nimport \"./ASCTrackPosition.css\";\n\nclass ASCTrackPosition extends React.Component {\n    render() {\n        return <div className=\"asct-position\">{this.props.positionTicks}</div>;\n    }\n}\n\nexport default ASCTrackPosition;\n","import * as React from \"react\";\n// import Div from \"../../components/div/Div\";\n// import ASCTrackDelta from \"./ASCTrackDelta\";\n\nclass ASCTrackInstructionAdd extends React.Component {\n    // setCursor(isCursor = true) {\n    //     this.setProps({cursor: isCursor});\n    // }\n\n    render() {\n        return <div className=\"asct-instruction-add\">+</div>;\n    }\n\n}\n\nexport default ASCTrackInstructionAdd;\n","import * as React from \"react\";\n\nimport \"./ASCTrackDelta.css\";\n\nclass ASCTrackDelta extends React.Component {\n    render() {\n        return <div className=\"asct-delta\">{this.props.duration}</div>;\n    }\n}\n\nexport default ASCTrackDelta;\n","import * as React from \"react\";\nimport PropTypes from \"prop-types\";\nimport ASCTrackPosition from \"../position/ASCTrackPosition\";\nimport ASCTrackInstructionAdd from \"../instruction/ASCTrackInstructionAdd\";\nimport ASCTrackDelta from \"../delta/ASCTrackDelta\";\nimport ASUIDropDownContainer from \"../../../components/menu/dropdown/ASUIDropDownContainer\";\nimport \"./ASCTrackRow.css\";\n\nclass ASCTrackRow extends React.Component {\n    constructor(props) {\n        super(props);\n        this.dropdown = React.createRef();\n        this.cb = {\n            onContextMenu: (e) => this.onContextMenu(e),\n            onKeyDown: (e) => this.onKeyDown(e),\n            onMouseInput: e => this.onMouseInput(e),\n        };\n    }\n\n    /** Default Properties **/\n    static defaultProps = {\n        // cursor: true\n    };\n\n    /** Property validation **/\n    static propTypes = {\n        positionTicks: PropTypes.number.isRequired,\n        deltaDuration: PropTypes.number.isRequired,\n        tracker: PropTypes.any.isRequired,\n        cursor: PropTypes.bool.isRequired,\n        cursorPosition: PropTypes.number.isRequired // TODO: inefficient?\n    };\n\n    getTracker() {\n        return this.props.tracker;\n    }\n\n    getComposer() {\n        return this.getTracker().getComposer();\n    }\n\n    render() {\n        let className = \"asct-row\";\n        if (this.props.highlight)\n            className += ` ${this.props.highlight}`; // ' highlight';\n        const composer = this.props.tracker.getComposer();\n        const rowDeltaDuration = composer.values.formatSongDuration(this.props.deltaDuration);\n        return (\n            <div\n                ref={input => this.props.cursor && this.getTracker().props.selected && input && input.focus()}\n                tabIndex={0}\n                className={className}\n                // onClick={this.cb.onMouseInput}\n                onMouseDown={this.cb.onMouseInput}\n                onKeyDown={this.cb.onKeyDown}\n            >\n                <ASCTrackPosition positionTicks={this.props.positionTicks}/>\n                {this.props.children}\n                {this.props.cursor ? <ASCTrackInstructionAdd\n                    cursorPosition={this.props.cursorPosition}\n                /> : null}\n                <ASCTrackDelta duration={rowDeltaDuration}/>\n                <ASUIDropDownContainer\n                    ref={this.dropdown}\n                    options={this.props.options}\n                    vertical={this.props.vertical}\n                />\n            </div>\n        )\n    }\n\n    toggleMenu() {\n        return this.dropdown.current.toggleMenu();\n    }\n\n    async selectRow(clearSelection = true) {\n        // const selectedIndices = clearSelection ? [] : null;\n        await this.getTracker().setCursorOffset(this.props.cursorPosition, clearSelection ? [] : null);\n    }\n\n\n    /** User Input **/\n\n    onMouseInput(e) {\n        if (e.defaultPrevented)\n            return;\n        e.preventDefault();\n        // console.log(e.type, e.button);\n\n        switch (e.type) {\n            case 'mousedown':\n            case 'click':\n                if (e.button === 0)\n                    this.selectRow(!e.ctrlKey);\n                else if (e.button === 1)\n                    throw new Error(\"Unimplemented middle button\");\n                else if (e.button === 2)\n                    this.toggleMenu();\n                else\n                    throw new Error(\"Unknown mouse button\");\n\n                break;\n            default:\n                throw new Error(\"Unknown Mouse event: \" + e.type);\n        }\n    }\n\n    onContextMenu(e) {\n        if (e.defaultPrevented || e.shiftKey)\n            return;\n        e.preventDefault();\n        this.toggleMenu();\n    }\n\n    onKeyDown(e) {\n        if (e.isDefaultPrevented())\n            return;\n        switch (e.key) {\n            case 'ContextMenu':\n                e.preventDefault();\n                this.toggleMenu();\n                break;\n\n            default:\n                break;\n        }\n    }\n\n}\n\nexport default ASCTrackRow;\n","import * as React from \"react\";\nimport PropTypes from 'prop-types';\n\nimport ASCTrackInstruction from \"./instruction/ASCTrackInstruction\";\nimport ASCTrackRow from \"./row/ASCTrackRow\";\nimport {ASUIButton, ASUIButtonDropDown} from \"../../components/\";\nimport ActiveTrackState from \"./state/ActiveTrackState\";\n\nexport default class ASCTrackBase extends React.Component {\n    /** Default Properties **/\n    static defaultProps = {\n        // cursorOffset: 0,\n        // selectedIndices: [],\n        // rowOffset: 0,\n        // rowLength: 16,\n        // quantizationTicks: null,\n        // destinationList: []\n    };\n\n    /** Property validation **/\n    static propTypes = {\n        composer: PropTypes.object.isRequired,\n        trackName: PropTypes.string.isRequired,\n        trackState: PropTypes.object.isRequired\n    };\n\n    static DEFAULT_MAX_SEGMENTS = 8;\n    static DEFAULT_MIN_SEGMENTS = 3;\n\n    constructor(props) {\n        super(props);\n\n        if(!props.composer)\n            throw new Error(\"Invalid composer\");\n\n        this.cb = {\n            onKeyDown: (e) => this.onKeyDown(e),\n            onWheel: e => this.onWheel(e)\n        };\n        this.destination = null;\n        // this.cursorInstruction = React.createRef();\n        // this.trackerGetCursorInfo();\n    }\n\n    // getTrackInfo() {\n    //     return new TrackInfo(this.props.trackName, this.props.composer);\n    // }\n\n    /** TODO: calculate correct destination **/\n    getDestination()            {\n        if(this.destination)\n            return this.destination;\n        console.warn('TODO: calculate correct destination');\n        return this.destination = this.getComposer().getAudioContext();\n    }\n    getComposer()               { return this.props.composer; }\n    getSong()                   { return this.props.composer.song; }\n\n    getTrackName()              { return this.props.trackName; }\n    getTrackState()             { return new ActiveTrackState(this.props.composer, this.props.trackName); }\n    // getDestinationList()        { return this.getTrackState().destinationList; }\n    // getSelectedIndices()        { return this.getTrackState().selectedIndices; }\n    // getCursorOffset()           { return this.getTrackState().cursorOffset; }\n    // getRowLength()              { return this.getTrackState().rowLength; }\n    // getRowOffset()              { return this.getTrackState().rowOffset; }\n    // getSegmentCount()           { return this.getTrackState().segmentCount; }\n    // getStartPosition()          { return this.getTrackState().startPosition; }\n\n\n    trackerGetCursorInfo(cursorOffset=null) {\n        return this.getComposer().trackerGetCursorInfo(this.getTrackName(), cursorOffset);\n    }\n\n    instructionGetQuantizedIterator() {\n        const trackState = this.getTrackState();\n        return this.getSong().instructionGetQuantizedIterator(\n            this.getTrackName(),\n            trackState.quantizationTicks,\n            trackState.timeDivision, // || this.getSong().data.timeDivision,\n            trackState.beatsPerMinute //  || this.getSong().data.beatsPerMinute\n        )\n    }\n\n    // getQuantizationInTicks() {\n    //     return this.props.quantizationTicks || this.props.composer.song.data.timeDivision;\n    // }\n\n    getSegmentInfo() {\n    }\n\n\n    /** Actions **/\n\n    setCursorOffset(cursorOffset, selectedIndices=null, rowOffset=null) {\n        if(selectedIndices === null) {\n            const {cursorIndex} = this.trackerGetCursorInfo(cursorOffset);\n            selectedIndices = [];\n            if(cursorIndex !== null)\n                selectedIndices = [cursorIndex];\n        }\n        // if(selectedIndices === null)\n        //     selectedIndices = [];\n        return this.selectIndices(selectedIndices, cursorOffset, rowOffset);\n\n        // const selectedIndex = this.findInstructionIndexFromCursorOffset(cursorOffset);\n        // console.log('setCursorOffset', cursorOffset, selectedIndex);\n        // this.playSelectedInstructions();\n    }\n\n    selectIndices(selectedIndices, cursorOffset=null, rowOffset=null) {\n        return this.getComposer().trackerSelectIndices(this.getTrackName(), selectedIndices, cursorOffset, rowOffset);\n        // TODO: get song position by this.props.index\n    }\n\n\n    /** Render Content **/\n\n    renderRowContent() {\n        const trackState = this.getTrackState();\n        const songPosition = this.getComposer().state.songPosition;\n        const trackSongPosition = songPosition - trackState.startPosition;\n        let trackSongPositionFound = false;\n        // const quantizationTicks = trackState.quantizationTicks || this.getSong().data.timeDivision;\n\n        // console.time('ASCTrack.renderRowContent()');\n        const selectedIndices = trackState.selectedIndices;\n        const playingIndices = trackState.playingIndices;\n        const beatsPerMeasureTicks = trackState.beatsPerMeasure * trackState.timeDivision;\n        const quantizationTicks = trackState.quantizationTicks;\n        // const segmentLengthTicks = trackState.segmentLengthTicks;\n        // console.log('beatsPerMeasureTicks', beatsPerMeasureTicks);\n\n\n        // Get Iterator\n        const iterator = this.getSong().instructionGetQuantizedIterator(\n            this.getTrackName(),\n            quantizationTicks,\n            trackState.timeDivision, // || this.getSong().data.timeDivision,\n            trackState.beatsPerMinute //  || this.getSong().data.beatsPerMinute\n        )\n\n        const rowContent = [];\n        let rowInstructionElms = [];\n        while(iterator.nextQuantizedInstructionRow(() => {\n            let highlight = false;\n            if(iterator.positionTicks % beatsPerMeasureTicks === 0)\n                highlight = 'measure-start';\n            if(!trackSongPositionFound && trackSongPosition <= iterator.positionSeconds) {\n                trackSongPositionFound = true;\n                highlight = 'position';\n            }\n\n            if(iterator.rowCount < trackState.rowOffset)\n                return;\n\n            let nextRowPositionTicks = iterator.getNextRowPositionTicks();\n            let rowDeltaDuration = nextRowPositionTicks - iterator.positionTicks;\n            if (rowDeltaDuration <= 0 || rowDeltaDuration > quantizationTicks) {\n                console.warn(\"rowDeltaDuration is \", rowDeltaDuration);\n            }\n\n            const newRowElm = <ASCTrackRow\n                key={iterator.rowCount}\n                tracker={this}\n                positionTicks={iterator.positionTicks}\n                positionSeconds={iterator.positionSeconds}\n                deltaDuration={rowDeltaDuration}\n                cursorPosition={iterator.cursorPosition}\n                cursor={iterator.cursorPosition === trackState.cursorOffset}\n                highlight={highlight}\n\n            >{rowInstructionElms}</ASCTrackRow>;\n            rowContent.push(newRowElm);\n            rowInstructionElms = [];\n\n        }, (instruction) => {\n            if(iterator.rowCount < trackState.rowOffset)\n                return;\n            const index = iterator.currentIndex;\n            rowInstructionElms.push(<ASCTrackInstruction\n                key={index}\n                index={index}\n                instruction={instruction}\n                tracker={this}\n                cursorPosition={iterator.cursorPosition}\n                cursor={iterator.cursorPosition === trackState.cursorOffset}\n                selected={selectedIndices.indexOf(index) !== -1}\n                playing={playingIndices.indexOf(index) !== -1}\n            />)\n\n        })) {\n            if (rowContent.length >= trackState.rowLength)\n                break;\n        }\n\n\n        // console.timeEnd('ASCTrack.renderRowContent()');\n        return rowContent;\n    }\n\n\n    renderRowSegments() {\n        const composer = this.props.composer;\n        const trackState = this.getTrackState();\n        const rowOffset = trackState.rowOffset;\n        const rowLength = trackState.rowLength;\n\n        // TODO: add next position segment\n\n        let buttons = [], selectedSegmentID = null;\n        const segmentPositions = trackState.segmentPositions;\n        for(let segmentID=0; segmentID<segmentPositions.length; segmentID++) {\n            if(segmentID > ASCTrackBase.DEFAULT_MAX_SEGMENTS)\n                break;\n            const segmentPosition = segmentPositions[segmentID];\n            const props = {\n                onAction: e => composer.trackerSetRowOffset(this.props.trackName, segmentPosition),\n                children: segmentID\n            }\n            if(selectedSegmentID === null && rowOffset - rowLength < segmentPosition) {\n                selectedSegmentID = segmentID;\n                props.selected = true;\n            }\n            buttons.push(<ASUIButton\n                key={segmentID}\n                {...props}\n            />);\n        }\n\n        const rowDeltaDuration = composer.values.formatSongDuration(trackState.quantizationTicks);\n        buttons.push(<ASUIButtonDropDown\n            className=\"row-quantization\"\n            title={`Quantization (Duration = ${rowDeltaDuration})`}\n            arrow=\"▼\"\n            key=\"row-quantization\"\n            options={() => this.getComposer().renderMenuTrackerSetQuantization(this.getTrackName())}\n            children={rowDeltaDuration}\n        />);\n\n        return buttons;\n    }\n\n    renderRowOptions() {\n        // const composer = this.props.composer;\n\n        const buttons = [];\n\n        const rowLength = this.getTrackState().rowLength;\n        buttons.push(<ASUIButtonDropDown\n            className=\"row-length\"\n            title={`Segment Length (${rowLength} Rows)`}\n            arrow=\"▼\"\n            key=\"row-length\"\n            options={() => this.getComposer().renderMenuTrackerSetSegmentLength(this.getTrackName())}\n            children={`${rowLength} Rows`}\n        />);\n\n\n        return buttons;\n    }\n\n    /** Playback **/\n\n    playSelectedInstructions() {\n        return this.playInstructions(this.getTrackState().selectedIndices);\n    }\n\n    playInstructions(selectedIndices, stopPlayback=true) {\n        // console.log(\"ASCTrack.playInstructions\", selectedIndices);\n        this.getComposer().trackerPlay(this.getTrackName(), selectedIndices, stopPlayback)\n    }\n\n\n\n\n    /** User Input **/\n\n    onWheel(e) {\n        e.preventDefault();\n        let newRowOffset = this.getTrackState().rowOffset;\n        newRowOffset += e.deltaY > 0 ? 1 : -1;\n        if(newRowOffset < 0)\n            newRowOffset = 0; // return console.log(\"Unable to scroll past beginning\");\n        this.getComposer().trackerSetRowOffset(this.getTrackName(), newRowOffset)\n        // this.getComposer().trackerUpdateSegmentInfo(this.getTrackName());\n        // this.getTrackInfo().changeRowOffset(this.getTrackName(), newRowOffset);\n    }\n\n    async onKeyDown(e) {\n        // console.log(e.type);\n        if(e.isDefaultPrevented())\n            return;\n        let selectedIndices;\n        switch(e.key) {\n            case 'Delete':\n                this.getComposer().instructionDeleteSelected();\n                break;\n            //\n            // case 'Escape':\n            // case 'Backspace':\n            //     break;\n            //\n            case 'Enter':\n                this.getComposer().instructionInsert();\n                break;\n            //\n            case ' ':\n            case 'Play':\n                this.getComposer().songPlay(); // TODO: play track?\n                break;\n\n            case 'ArrowRight':\n                const {nextOffset} = this.trackerGetCursorInfo();\n                e.preventDefault();\n                selectedIndices = this.setCursorOffset(nextOffset);\n                this.playInstructions(selectedIndices);\n                break;\n\n            case 'ArrowLeft':\n                e.preventDefault();\n                const {previousOffset} = this.trackerGetCursorInfo();\n                if(previousOffset >= 0) {\n                    selectedIndices = this.setCursorOffset(previousOffset);\n                    this.playInstructions(selectedIndices);\n                }\n                break;\n\n            case 'ArrowUp':\n                e.preventDefault();\n                const {previousRowOffset} = this.trackerGetCursorInfo();\n                if(previousRowOffset >= 0) {\n                    selectedIndices = this.setCursorOffset(previousRowOffset);\n                    this.playInstructions(selectedIndices);\n                }\n                break;\n\n            case 'ArrowDown':\n                e.preventDefault();\n                const {nextRowOffset} = this.trackerGetCursorInfo();\n                selectedIndices = this.setCursorOffset(nextRowOffset);\n                this.playInstructions(selectedIndices);\n                break;\n            //\n            // case ' ':\n            //     break;\n            //\n            // case 'PlayFrequency':\n            //     break;\n\n            case 'ContextMenu':\n                e.preventDefault();\n                this.cursorInstruction.current.toggleMenu();\n                break;\n\n            default:\n                const keyboardCommand = this.getComposer().keyboard.getKeyboardCommand(e.key, this.getComposer().state.keyboardOctave);\n                if(keyboardCommand) {\n                    const selectedIndices = this.getTrackState().selectedIndices;\n                    // const cursorOffset = this.getCursorOffset();\n                    if(selectedIndices.length > 0) {\n                        await this.getComposer().instructionReplaceCommandSelected(keyboardCommand);\n\n                    } else {\n                        await this.getComposer().instructionInsert(keyboardCommand);\n                    }\n                    // console.log('TODO: keyboardCommand', keyboardCommand, selectedIndices, cursorOffset);\n                    return;\n                }\n                // this.instructionInsert\n                console.info(\"Unhandled key: \", e.key);\n                break;\n        }\n    }\n\n}\n\n","/* eslint-disable no-loop-func */\nimport * as React from \"react\";\nimport {ASUIPanel} from \"../../components/\";\n\nimport \"./ASCTrack.css\";\nimport ASCTrackBase from \"./ASCTrackBase\";\n\nexport default class ASCTrack extends ASCTrackBase {\n    constructor(props) {\n        super(props);\n        this.container = React.createRef();\n    }\n\n    componentDidMount() {\n        this.container.current.addEventListener('wheel', this.cb.onWheel, { passive: false });\n    }\n\n    componentWillUnmount() {\n        this.container.current.removeEventListener('wheel', this.cb.onWheel);\n    }\n\n\n    /** Render **/\n\n    render() {\n        // console.log('ASCTrack.render');\n        let className = \"asc-track\";\n        // if(this.props.className)\n        //     className += ' ' + this.props.className;\n        if(this.props.selected)\n            className += ' selected';\n        return (\n            <ASUIPanel\n                className={className}\n                header={this.getTrackName()}\n                title={`Track: ${this.getTrackName()}`}\n                >\n                <div\n                    className=\"asct-segments\"\n                    children={this.renderRowSegments()}\n                    />\n                <div\n                    className=\"asct-container\"\n                    ref={this.container}\n                    tabIndex={0}\n                    onKeyDown={this.cb.onKeyDown}\n                    // onWheel={this.cb.onWheel}\n                    >\n                    {this.renderRowContent()}\n                </div>\n                <div\n                    className=\"asct-options\"\n                    children={this.renderRowOptions()}\n                />\n            </ASUIPanel>\n        );\n    }\n\n}\n\n","import React from \"react\";\nimport {\n    ASUIDiv,\n    ASUIIcon,\n    ASUIButtonDropDown,\n    ASUIButton,\n} from \"../../components\";\n\nimport \"./assets/ASCProgramRenderer.css\";\nimport ASCProgramRendererBase from \"./ASCProgramRendererBase\";\n\nexport default class ASCProgramRenderer extends ASCProgramRendererBase {\n    render() {\n        const song = this.getSong();\n        const programID = this.props.programID;\n        const programConfig = song.programGetData(programID);\n        const programIDHTML = (programID < 10 ? \"0\" : \"\") + (programID);\n\n\n        // let contentClass = 'error';\n        let titleHTML = '';\n        if (song.hasProgram(programID)) {\n            titleHTML = programConfig.title || \"No Title\"\n\n        } else {\n            titleHTML = `Empty`;\n        }\n        return (\n            <ASUIDiv className=\"asc-instrument-renderer-empty\">\n                <ASUIDiv className=\"header\">\n                    <ASUIButton\n                        className=\"toggle-container\"\n                        onAction={e => this.toggleContainer()}\n                    >{programIDHTML}: {titleHTML}</ASUIButton>\n                    <ASUIButtonDropDown\n                        arrow={false}\n                        className=\"program-config\"\n                        options={() => this.renderMenuRoot()}\n                    >\n                        <ASUIIcon source=\"config\"/>\n                    </ASUIButtonDropDown>\n                </ASUIDiv>\n                {this.state.open ? <ASUIDiv className=\"content\">\n                    {this.renderProgramContent()}\n                </ASUIDiv> : null}\n            </ASUIDiv>\n        );\n\n        // return content;\n    }\n\n}\n","import React from \"react\";\nimport {\n    ASUIMenuAction,\n    ASUIMenuDropDown, ASUIMenuBreak,\n} from \"../../components\";\nimport {Library} from \"../../song\";\n\n\nexport default class ASCProgramRendererBase extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            open: true\n        }\n    }\n\n    getComposer() { return this.props.composer; }\n    getSong() { return this.getComposer().getSong(); }\n\n\n    renderProgramContent() {\n        try {\n            return this.getSong().programLoadRenderer(this.props.programID);\n\n        } catch (e) {\n            return e.message;\n        }\n    }\n\n    /** Actions **/\n\n\n    toggleContainer() {\n        this.setState({open: !this.state.open});\n    }\n\n    loadPreset(presetClassName, presetConfig) {\n        console.log(\"Loading preset: \", presetClassName, presetConfig);\n        const song = this.getSong();\n        const programID = this.props.programID;\n        song.programReplace(programID, presetClassName, presetConfig);\n    }\n\n    /** Menu **/\n\n\n\n\n    renderMenuRoot() {\n        return (<>\n            <ASUIMenuDropDown options={() => this.renderMenuChangePreset()}>Change Preset</ASUIMenuDropDown>\n            <ASUIMenuBreak />\n            <ASUIMenuDropDown options={() => this.renderMenuChangeProgram()}>Change Program</ASUIMenuDropDown>\n            <ASUIMenuAction onAction={e => this.programRename()}>Rename Program</ASUIMenuAction>\n            <ASUIMenuAction onAction={e => this.programRemove()}>Remove Program</ASUIMenuAction>\n        </>);\n    }\n\n    renderMenuChangeProgram() {\n        const library = Library.loadDefault();\n        return library.renderMenuProgramAll(([className, presetConfig]) => {\n            this.loadPreset(className, presetConfig);\n        });\n\n    }\n\n    renderMenuChangePreset() {\n        const library = Library.loadDefault();\n        const programID = this.props.programID;\n        const programClassName = this.getSong().programGetClassName(programID);\n        return library.renderMenuProgramAllPresets((className, presetConfig) => {\n            this.loadPreset(className, presetConfig);\n        }, programClassName);\n    }\n\n\n    programReplace(e, programClassName, programConfig={}) {\n        const programID = this.props.programID;\n        // programConfig = ProgramLoader.createProgramConfig(programClassName, programConfig);\n        this.getSong().programReplace(programID, programClassName, programConfig);\n    }\n    programRename() {\n        const programID = this.props.programID;\n        this.getComposer().programRename(programID);\n    }\n    programRemove() {\n        const programID = this.props.programID;\n        this.getSong().programRemove(programID);\n    }\n}\n","import React from \"react\";\nimport {ASUIMenuDropDown} from \"../../components/menu\";\nimport {ASUIIcon} from \"../../components\";\nimport PropTypes from 'prop-types';\nimport ASUIMenuOverlayContainer from \"../../components/menu/overlay/ASUIMenuOverlayContainer\";\n\nexport class ASComposerContainer extends React.Component {\n    /** Property validation **/\n    static propTypes = {\n        children: PropTypes.any.isRequired,\n        portrait: PropTypes.bool.isRequired\n    };\n\n\n    render() {\n        const state = this.props.composer.state;\n        return (\n            <div className={[\"asc-container\", state.portrait ? 'portrait' : 'landscape'].join(' ')}>\n                <ASUIMenuOverlayContainer\n                    isActive={this.props.portrait}\n                >\n                    {this.renderHeader()}\n                    {this.props.children}\n                    {this.renderFooter()}\n                </ASUIMenuOverlayContainer>\n            </div>\n        );\n    }\n\n    renderHeader() {\n        if (this.props.portrait)\n            return [\n                <div key=\"title\" className=\"asp-title-text\">{this.props.title}</div>,\n                <ASUIMenuDropDown\n                    key=\"menu-button\"\n                    arrow={false}\n                    className=\"asp-menu-button-toggle\"\n                    options={this.props.menuContent}\n                >\n                    <ASUIIcon source=\"menu\"/>\n                </ASUIMenuDropDown>,\n                this.props.children\n            ];\n\n        let menuContent = this.props.menuContent;\n        if(typeof menuContent === \"function\")\n            menuContent = menuContent();\n\n        return [\n            <div key=\"title\" className=\"asp-title-text\">{this.props.title}</div>,\n            <div className=\"asp-menu-container\">\n                {menuContent}\n            </div>\n        ];\n    }\n\n    renderFooter() {\n        const state = this.props.composer.state;\n        return (\n            <div key=\"footer\" className=\"asp-footer-container\">\n                <div className=\"asp-status-text\">{state.status}</div>\n                <div className=\"asp-version-text\"\n                     ref={this.footerVersionText}\n                >{state.version}</div>\n            </div>\n        );\n    }\n}\n","import {\n    Song,\n    SongValues,\n    Keyboard,\n    Library}          from \"../song\";\nimport ActiveTrackState from \"./track/state/ActiveTrackState\";\nimport ASComposerInput from \"./ASComposerInput.native\";\n\nexport default class ASComposer extends ASComposerInput {\n    constructor(props) {\n        super(props);\n        this.state = {\n            title: \"Audio Source Composer\",\n            status: \"[No Song Loaded]\",\n            version: require('../package.json').version,\n            menuKey: 'root',\n\n\n            portrait: true,\n            fullscreen: false,\n            showPanelSong: true,\n            showPanelPlaylist: true,\n\n            // Playback\n            volume: Song.DEFAULT_VOLUME,\n            playing: false,\n            paused: false,\n\n            // Song Information\n            songUUID: null,\n            // songLengthTicks: 0,\n            songLength: 0,\n            songPosition: 0,\n\n            // Trackers\n            selectedTrack: 'root',\n            activeTracks: {\n                root:{\n                    // destination: null,\n                    currentCommand: 'C4',\n                    currentVelocity: null,\n                    currentDuration: '1B',\n                }\n            },\n\n\n            /** UI **/\n\n            // Keyboard\n            keyboardOctave: 4,\n\n\n        };\n\n        this.timeouts = {\n            saveSongToMemory: null,\n            renderPrograms: null\n        };\n        this.autoSaveTimeout = 4000;\n\n        this.keyboard = new Keyboard();\n\n        this.library = Library.loadDefault();\n        console.log('library', this.library);\n\n        this.song = new Song();\n        this.audioContext = null;\n        this.lastVolumeGain = null;\n        // this.onSongEvent = (e) => this.onSongEvent(e);\n\n        this.onSongEventCallback = (e) => this.onSongEvent(e);\n    }\n\n\n    get values() { return new SongValues(this.song); }\n\n    // async connectedCallback() {\n    //     this.shadowDOM = this.attachShadow({mode: 'closed'});\n    //\n    //     super.connectedCallback(false);\n    //\n    //     this.focus();\n    //\n    //     this.forceUpdate();\n    //     this.loadState();\n    //\n    //     this.loadMIDIInterface(e => this.onInput(e));        // TODO: wait for user input\n    //\n    // }\n\n    componentDidMount() {\n        super.componentDidMount();\n        this.loadState();\n        // TODO: get default library url from composer?\n    }\n\n\n    /** Song Events **/\n\n    async onSongEvent(e) {\n        // console.log(\"Song Event: \", e.type);\n        switch (e.type) {\n            case 'log':\n                this.setStatus(e.detail);\n                break;\n\n            case 'track:start':\n            case 'track:end':\n                break;\n\n            case 'instruction:play':\n            case 'instruction:stop':\n                // console.log(e.type, e.playingIndices);\n                const trackState = new ActiveTrackState(this, e.trackStats.trackName);\n                await trackState.update(state => {\n                    state.playingIndices = e.playingIndices;\n                })\n                // this.forceUpdate();\n                break;\n\n            case 'song:seek':\n                this.updateSongPositionValue(e.position);\n                break;\n\n            case 'song:volume':\n                this.fieldSongVolume.value = e.detail.volume;\n                break;\n\n            case 'song:loaded':\n                // this.trackerElm.renderDuration = this.song.data.timeDivision;\n                break;\n\n            case 'song:play':\n                this.setState({playing: true});\n                // this.fieldSongPlaybackPause.disabled = false;\n                const updateSongPositionInterval = setInterval(e => {\n                    if (!this.song.isPlaying()) {\n                        clearInterval(updateSongPositionInterval);\n                        // this.fieldSongPlaybackPause.disabled = true;\n                        this.setState({playing: false, paused: false});\n                    }\n                    this.updateSongPositionValue(this.song.getSongPlaybackPosition());\n                }, 10);\n                break;\n\n            case 'song:pause':\n                this.setState({paused: true});\n                break;\n\n            case 'song:end':\n                this.setState({playing: false, paused: false});\n                break;\n\n            case 'programs:instance':\n            case 'programs:added':\n            case 'programs:removed':\n                this.panelPrograms && this.panelPrograms.forceUpdate();\n                break;\n\n            case 'programs:modified':\n                this.panelPrograms && this.panelPrograms.forceUpdate();\n                // this.renderProgram(e.detail.programID);\n\n                clearTimeout(this.timeouts.saveSongToMemory);\n                this.timeouts.saveSongToMemory = setTimeout(e => this.saveSongToMemory(e), this.autoSaveTimeout);\n                break;\n\n            case 'song:modified':\n                // console.log(e.type);\n                this.forceUpdate();  // TODO: might be inefficient\n                // TODO: auto save toggle\n                clearTimeout(this.timeouts.saveSongToMemory);\n                this.timeouts.saveSongToMemory = setTimeout(e => this.saveSongToMemory(e), this.autoSaveTimeout);\n                break;\n\n            case 'programs:library':\n//                 console.log(e.type);\n                // TODO: this.programs.render();\n                // this.renderPrograms();\n                this.updateForms();\n                break;\n\n            default:\n                console.warn(\"Unknown song event: \", e.type);\n\n                //             case 'group:seek':\n// //                 console.log(e.type, e.detail);\n//                 if (e.detail.trackName === this.getTrackName())\n//                     this.setPlaybackPositionInTicks(e.detail.positionInTicks);\n//\n//                 break;\n//\n//             case 'group:play':\n//                 break;\n//\n//             case 'note:start':\n//                 if (e.detail.trackName === this.getTrackName()) {\n//                     let instructionElm = this.findInstructionElement(e.detail.instruction.index);\n//                     if (instructionElm) {\n//                         instructionElm.classList.add('playing');\n//                     }\n//                 }\n//                 break;\n//             case 'note:end':\n//                 if (e.detail.trackName === this.getTrackName()) {\n//                     let instructionElm = this.findInstructionElement(e.detail.instruction.index);\n//                     if (instructionElm) {\n//                         instructionElm.classList.remove('playing');\n//                     }\n//                 }\n//                 break;\n//\n//             default:\n//                 console.warn(\"Unknown song event: \", e.type);\n//         }\n        }\n    }\n\n\n}\n","import ASComposerPlayback from \"./ASComposerPlayback\";\n\nexport default class ASComposerInput extends ASComposerPlayback {\n    constructor(props) {\n        super(props);\n        this.onResizeCallback = e => this.onResize(e);\n        this.onUnloadCallback = e => this.saveState(e);\n    }\n\n    componentDidMount() {\n        // window.addEventListener('unload', this.onUnloadCallback);\n        // window.addEventListener('resize', this.onResizeCallback);\n    }\n\n    componentWillUnmount() {\n        // window.removeEventListener('unload', this.onUnloadCallback);\n        // window.removeEventListener('resize', this.onResizeCallback);\n    }\n\n\n\n    /** Input **/\n\n    onInput(e) {\n        // console.log(e.type);\n        if (e.defaultPrevented)\n            return;\n\n        switch (e.type) {\n            case 'focus':\n                break;\n\n            // case 'click':\n            //     this.closeAllMenus(true);\n            //     break;\n\n            case 'dragover':\n                e.stopPropagation();\n                e.preventDefault();\n                e.dataTransfer.dropEffect = 'copy';\n                break;\n\n            case 'drop':\n                e.stopPropagation();\n                e.preventDefault();\n                let files = e.dataTransfer.files; // Array of all files\n                this.loadSongFromFileInput(files[0]);\n                break;\n\n            case 'midimessage':\n                // console.log(\"MIDI\", e.data, e);\n                switch (e.data[0]) {\n                    case 144:   // Note On\n                        // TODO: refactor\n                        e.preventDefault();\n                        throw new Error(\"TODO: Implement\");\n                        // const midiImport = new MIDIImport();\n                        // let newMIDICommand = midiImport.getCommandFromMIDINote(e.data[1]);\n                        // let newMIDIVelocity = Math.round((e.data[2] / 128) * 100);\n                        // console.log(\"MIDI \", newMIDICommand, newMIDIVelocity);\n\n                        // this.instructionInsertOrUpdate(e, newMIDICommand);\n                        // this.playSelectedInstructions(e);\n                        // this.focus();\n                    case 128:   // Note Off\n                        // TODO: turn off playing note, optionally set duration of note\n                        break;\n\n                    default:\n                        break;\n                }\n                break;\n\n            default:\n                throw new Error(\"Unhandled type: \" + e.type);\n        }\n\n    }\n\n\n}\n","import {Song} from \"../song\";\nimport ASComposerActions from \"./ASComposerActions\";\n\n// import {TrackInfo} from \"./track/\";\n\nexport default class ASComposerPlayback extends ASComposerActions {\n\n    loadMIDIInterface(callback) {\n        // TODO: wait for user input\n        if (navigator.requestMIDIAccess) {\n            navigator.requestMIDIAccess().then(\n                (MIDI) => {\n                    console.info(\"MIDI initialized\", MIDI);\n                    const inputDevices = [];\n                    MIDI.inputs.forEach(\n                        (inputDevice) => {\n                            inputDevices.push(inputDevice);\n                            inputDevice.addEventListener('midimessage', callback);\n                        }\n                    );\n                    console.log(\"MIDI input devices detected: \" + inputDevices.map(d => d.name).join(', '));\n                },\n                (err) => {\n                    throw new Error(\"error initializing MIDI: \" + err);\n                }\n            );\n        }\n    }\n\n\n    /** Song Proxy **/\n    /**\n     * Sets current composer song\n     * @param song\n     */\n    setCurrentSong(song) {\n        if(!song instanceof Song)\n            throw new Error(\"Invalid Song object\");\n        return super.setCurrentSong(song);\n    }\n\n    getVolumeGain(destination) {\n        if(!destination || !destination.context)\n            throw new Error(\"Invalid destination\");\n        // if (this.volume !== null) {\n        const context = destination.context;\n        let gain = context.createGain();\n        gain.gain.value = this.volume === null ? 1 : this.volume;\n        gain.connect(destination);\n        this.lastVolumeGain = gain;\n        return gain;\n        // }\n        // return destination;\n    }\n\n\n    /** Playback **/\n\n\n    getAudioDestination() {\n        return this.getAudioContext().destination;\n    }\n\n    getAudioContext() {\n        if (this.audioContext)\n            return this.audioContext;\n\n        const audioContext = new (window.AudioContext)();\n        this.audioContext = audioContext;\n        return audioContext;\n    }\n\n\n}\n\n","import React from \"react\";\n\nimport {Instruction, NoteInstruction, ProgramLoader, Song, Storage} from \"../song\";\nimport {ASUIDiv} from \"../components\";\nimport {ASCTrack} from \"./track\";\nimport Values from \"../common/values/Values\";\nimport ActiveTrackState from \"./track/state/ActiveTrackState\";\nimport PromptManager from \"../common/prompt/PromptManager\";\nimport ASComposerMenu from \"./ASComposerMenu\";\n\n// import {TrackInfo} from \"./track/\";\n\nclass ASComposerActions extends ASComposerMenu {\n    // constructor(props) {\n    //     super(props);\n    // }\n\n    setStatus(newStatus) {\n        console.info.apply(null, arguments); // (newStatus);\n        this.setState({status: newStatus});\n    }\n\n    setError(newStatus) {\n        this.setStatus(<ASUIDiv className=\"error\">{newStatus}</ASUIDiv>);\n    }\n\n    setVersion(versionString) {\n        this.setState({version: versionString});\n    }\n\n    /** Song rendering **/\n    getSong() { return this.song; }\n\n    /**\n     * Sets current composer song\n     * @param song\n     */\n    setCurrentSong(song) {\n        if(!song instanceof Song)\n            throw new Error(\"Invalid current song\");\n        if(this.song) {\n            this.setStatus(\"Unloading song: \" + this.song.data.title);\n            if(this.song.isPlaying()) {\n                this.song.stopPlayback();\n            }\n            this.song.removeEventListener('*', this.onSongEventCallback);\n            this.song.unloadAll();\n        }\n        this.song = song;\n        // console.log(\"Current Song: \", song);\n\n        const activeTracks = {\n            'root': {\n                // destination: this.getAudioContext()\n            },\n        };\n\n        this.song.addEventListener('*', this.onSongEventCallback);\n        // this.setStatus(\"Initializing song: \" + song.data.title);\n        // this.song.connect(this.getAudioContext());\n        // this.setStatus(\"Loaded song: \" + song.data.title);\n        this.setState({\n            status: \"Loaded song: \" + song.data.title,\n            title: song.data.title,\n            songUUID: song.data.uuid,\n            songLength: song.getSongLengthInSeconds(),\n            selectedTrack: song.getStartTrackName() || 'root',\n            activeTracks\n        });\n        this.trackerToggleTrack('track0', true);\n        this.trackerToggleTrack('track1', true);\n    }\n\n    updateCurrentSong() {\n        this.setState({\n            songLength: this.song.getSongLengthInSeconds(),\n        });\n    }\n\n\n\n    /** Portrait Mode **/\n\n    onResize() {\n        const aspectRatio = window.innerWidth / window.innerHeight;\n        const portrait = aspectRatio < 14/16;\n        if(!this.state.portrait === portrait) {\n            console.log(\"Setting portrait mode to \", portrait, \". Aspect ratio: \", aspectRatio);\n            this.setState({portrait});\n        }\n    }\n\n\n    /** State **/\n\n    async loadState() {\n        const storage = new Storage();\n        const state = await storage.loadState('audio-source-composer-state');\n        console.log('Loading State: ', state);\n\n\n        if (state) {\n            if (typeof state.volume !== \"undefined\")\n                this.setVolume(state.volume);\n            delete state.volume;\n            // if(state.songUUID)\n            this.loadDefaultSong(state.songUUID);\n            delete state.songUUID;\n            this.setState(state);\n            this.updateCurrentSong();\n            // this.setCurrentSong(this.song); // Hack: resetting current song after setting state, bad idea\n\n        } else {\n            this.loadDefaultSong();\n        }\n    }\n\n\n    saveState(e) {\n        const storage = new Storage();\n        storage.saveState(this.state, 'audio-source-composer-state');\n        console.log('Saving State: ', this.state);\n    }\n\n\n\n    /** Volume **/\n\n\n    getVolume () {\n        return this.state.volume;\n    }\n\n    setVolume (volume) {\n        console.info(\"Setting volume: \", volume);\n        this.setState({volume});\n        if(this.lastVolumeGain)\n            this.lastVolumeGain.gain.value = volume;\n    }\n\n    /** Song actions **/\n\n\n    async setSongNamePrompt(newSongTitle) {\n        newSongTitle = await PromptManager.openPromptDialog(\"Enter a new song name\", this.song.data.title);\n        this.setSongName(newSongTitle);\n    }\n    setSongName(newSongTitle=null) {\n        if(typeof newSongTitle !== \"string\")\n            throw new Error(\"Invalid song title: \" + newSongTitle);\n        this.song.data.title = newSongTitle;\n        this.setStatus(`Song title updated: ${newSongTitle}`);\n    }\n\n    async setSongVersionPrompt(newSongVersion) {\n        newSongVersion = await PromptManager.openPromptDialog(\"Enter a new song version\", this.song.data.version);\n        this.setSongVersion(newSongVersion);\n    }\n    setSongVersion(newSongVersion) {\n        if(typeof newSongVersion !== \"string\")\n            throw new Error(\"Invalid song version: \" + newSongVersion);\n        this.song.data.version = newSongVersion;\n        this.setStatus(`Song version updated: ${newSongVersion}`);\n    }\n\n    songChangeStartingBeatsPerMinute(newSongBeatsPerMinute) {\n        this.song.data.beatsPerMinute = newSongBeatsPerMinute; // songChangeStartingBeatsPerMinute(newSongBeatsPerMinute);\n        this.setStatus(`Song beats per minute updated: ${newSongBeatsPerMinute}`);\n    }\n\n\n\n    async openSongFromFileDialog(e, accept=null) {\n        const file = await this.openFileDialog(accept);\n        this.loadSongFromFileInput(e, file);\n    }\n\n    async loadSongFromFileInput(e, file=null, accept=null) {\n        if(file === null)\n            file = await this.openFileDialog(accept);\n        if (!file)\n            throw new Error(\"Invalid file input\");\n        const song = await Song.loadSongFromFileInput(file);\n        this.setCurrentSong(song);\n        // await this.song.loadSongFromFileInput(file);\n        // this.render();\n    }\n\n\n    /** Song Loading **/\n\n    loadDefaultSong(recentSongUUID = null) {\n        const src = this.props.src || this.props.url;\n        if (src) {\n            this.loadSongFromURL(src);\n            return true;\n        }\n\n\n        if (recentSongUUID) {\n            try {\n                this.loadSongFromMemory(recentSongUUID);\n                return;\n            } catch (e) {\n                console.error(e);\n                this.setError(\"Error: \" + e.message)\n            }\n        }\n\n        this.loadNewSongData();\n\n        return false;\n    }\n\n    loadNewSongData() {\n        // const storage = new Storage();\n        // const defaultProgramURL = this.getDefaultProgramClass() + '';\n        // let songData = storage.generateDefaultSong(defaultProgramURL);\n        // const song = Song.loadSongFromData(songData);\n        const song = new Song(this.audioContext);\n        this.setCurrentSong(song);\n        // this.forceUpdate();\n        this.setStatus(\"Loaded new song\", song.getProxiedData());\n    }\n\n\n    async loadRecentSongData() {\n        const storage = new Storage();\n        let songRecentUUIDs = await storage.getRecentSongList();\n        if (songRecentUUIDs[0] && songRecentUUIDs[0].uuid) {\n            this.setStatus(\"Loading recent song: \" + songRecentUUIDs[0].uuid);\n            this.loadSongFromMemory(songRecentUUIDs[0].uuid);\n            return true;\n        }\n        return false;\n    }\n\n\n    loadSongFromMemory(songUUID) {\n        const song = Song.loadSongFromMemory(this.audioContext, songUUID);\n        this.setCurrentSong(song);\n        this.setStatus(\"Song loaded from memory: \" + songUUID, this.song, this.state);\n//         console.info(songData);\n    }\n\n    loadSongFromURL(url) {\n        const song = Song.loadSongFromURL(this.audioContext, url);\n        this.setCurrentSong(song);\n        this.setStatus(\"Loaded from url: \" + url);\n    }\n\n    saveSongToMemory() {\n        const song = this.song;\n        const songData = song.data;\n        const songHistory = song.history;\n        const storage = new Storage();\n        this.setStatus(\"Saving song to memory...\");\n        storage.saveSongToMemory(songData, songHistory);\n        this.setStatus(\"Saved song to memory: \" + songData.uuid);\n    }\n\n    saveSongToFile() {\n        const songData = this.song.data;\n        // const songHistory = this.song.history;\n        const storage = new Storage();\n        this.setStatus(\"Saving song to file\");\n        storage.saveSongToFile(songData);\n    }\n\n    /** Song Playback **/\n\n    setSongPositionPercentage(playbackPercentage) {\n        const playbackPosition = (playbackPercentage / 100) * this.state.songLength;\n        return this.setSongPosition(playbackPosition);\n    }\n\n    setSongPosition(songPosition) {\n        // TODO: parse % percentage\n        if(typeof songPosition === 'string')\n            songPosition = Values.parsePlaybackPosition(songPosition);\n        if(isNaN(songPosition))\n            throw new Error(\"Invalid song position: \" + songPosition);\n        this.setState({songPosition})\n    }\n\n    async setSongPositionPrompt() {\n        let songPosition = Values.formatPlaybackPosition(this.state.songPosition || 0);\n        songPosition = await PromptManager.openPromptDialog(\"Set playback position:\", songPosition);\n        this.setSongPosition(songPosition);\n    }\n\n    updateSongPositionValue(playbackPositionInSeconds) {\n        this.setState({songPosition:playbackPositionInSeconds})\n    }\n\n    /** Instruction Modification **/\n\n    async instructionInsertPrompt(newCommand = null, trackName = null, promptUser = false) {\n        const trackState = new ActiveTrackState(this, trackName);\n        if (newCommand === null)\n            newCommand = trackState.currentCommand;\n        newCommand = await PromptManager.openPromptDialog(\"Set custom command:\", newCommand || '');\n        return this.instructionInsert(newCommand);\n    }\n\n    instructionInsert(newCommand = null, trackName = null) {\n        // const activeTracks = {...this.state.activeTracks};\n        trackName = trackName || this.state.selectedTrack;\n        const trackState = new ActiveTrackState(this, trackName);\n        // if (programID !== null)\n        //     newInstruction.program = programID;\n\n        //: TODO: check for recursive group\n        const song = this.song;\n        // let selectedIndices = this.getSelectedIndices();\n\n        // if(selectedIndices.length === 0)\n        //     throw new Error(\"No selection\");\n        if (newCommand === null)\n            newCommand = trackState.currentCommand;\n        if (!newCommand)\n            throw new Error(\"Invalid Instruction command\");\n\n        const newInstruction = Instruction.parseInstruction([0, newCommand]);\n        trackState.update(state => state.currentCommand = newInstruction.command).then();\n        if(trackState.currentDuration)\n            newInstruction.durationTicks = song.values.parseDurationAsTicks(trackState.currentDuration);\n        if(trackState.currentVelocity)\n            newInstruction.velocity = trackState.currentVelocity;\n        // this.setState({activeTracks});\n\n        const songPositionTicks = trackState.cursorPositionTicks; // Using cursorPositionTicks is more accurate for insert\n        let insertIndex = song.instructionInsertAtPosition(trackName, songPositionTicks, newInstruction);\n        this.trackerSelectIndices(trackName, [insertIndex]);\n\n        this.trackerPlay(trackName, [insertIndex]);\n    }\n\n    async instructionReplaceCommandSelectedPrompt(newCommand = null, trackName=null) {\n        if (newCommand === null)\n            newCommand = this.state.activeTracks[this.state.selectedTrack].currentCommand;\n        newCommand = await PromptManager.openPromptDialog(\"Set custom command:\", newCommand || '');\n        return this.instructionReplaceCommandSelected(newCommand, trackName);\n    }\n\n    instructionReplaceCommandSelected(newCommand, trackName=null, selectedIndices=null) {\n        const song = this.song;\n        trackName = trackName || this.state.selectedTrack;\n        const trackState = new ActiveTrackState(this, trackName);\n        if(selectedIndices === null)\n            selectedIndices = trackState.selectedIndices; // .getSelectedIndices();\n\n        if (selectedIndices.length === 0)\n            throw new Error(\"No selection\");\n        // if (newCommand === null)\n        //     newCommand = trackInfo.track.currentCommand;\n        if (!newCommand)\n            throw new Error(\"Invalid Instruction command\");\n\n        // this.setState({currentTrackerCommand: newCommand});\n        for (let i = 0; i < selectedIndices.length; i++) {\n            song.instructionReplaceCommand(trackName, selectedIndices[i], newCommand);\n        }\n\n        this.trackerPlay(trackName, selectedIndices);\n        // trackInfo.updateCurrentInstruction();\n    }\n    // }\n\n    async instructionReplaceDurationSelected(duration = null, trackName = null, selectedIndices = null, promptUser = false) {\n        const song = this.song;\n        trackName = trackName || this.state.selectedTrack;\n        const trackState = new ActiveTrackState(this, trackName);\n        if(selectedIndices === null)\n            selectedIndices = trackState.selectedIndices; // .getSelectedIndices();\n\n        if (duration === null && promptUser)\n            duration = parseInt(await PromptManager.openPromptDialog(\"Set custom duration in ticks:\", duration), 10);\n\n        if (typeof duration === 'string')\n            duration = Values.parseDurationAsTicks(duration, this.song.data.timeDivision);\n        else duration = parseInt(duration)\n\n        if (isNaN(duration))\n            throw new Error(\"Invalid duration: \" + typeof duration);\n        for (let i = 0; i < selectedIndices.length; i++) {\n            song.instructionReplaceDuration(trackName, selectedIndices[i], duration);\n        }\n        this.trackerPlay(trackName, selectedIndices);\n        this.setState(state => {\n            state.activeTracks[trackName].currentDuration = duration;\n        })\n        // trackState.updateCurrentInstruction();\n    }\n\n    async instructionReplaceVelocityPrompt(velocity = null, trackName = null, selectedIndices = null) {\n        trackName = trackName || this.state.selectedTrack;\n        const trackState = new ActiveTrackState(this, trackName);\n        velocity = parseInt(await PromptManager.openPromptDialog(\"Set custom velocity (0-127):\", trackState.currentVelocity));\n        return this.instructionReplaceVelocitySelected(velocity, trackName, selectedIndices);\n    }\n\n    instructionReplaceVelocitySelected(velocity = null, trackName = null, selectedIndices = null) {\n        const song = this.song;\n        trackName = trackName || this.state.selectedTrack;\n        const trackState = new ActiveTrackState(this, trackName);\n        if(selectedIndices === null)\n            selectedIndices = trackState.selectedIndices || []; // .getSelectedIndices();\n\n        velocity = parseFloat(velocity);\n        if (velocity === null || isNaN(velocity))\n            throw new Error(\"Invalid velocity: \" + typeof velocity);\n        for (let i = 0; i < selectedIndices.length; i++) {\n            song.instructionReplaceVelocity(trackName, selectedIndices[i], velocity);\n        }\n        this.trackerPlay(trackName, selectedIndices);\n        this.setState(state => {\n            state.activeTracks[trackName].currentVelocity = velocity;\n            return state;\n        })\n        // trackInfo.updateCurrentInstruction();\n    }\n\n    instructionDeleteSelected(trackName=null, selectedIndices=null) {\n        trackName = trackName || this.state.selectedTrack;\n        const trackState = new ActiveTrackState(this, trackName);\n        if(selectedIndices === null)\n            selectedIndices = trackState.selectedIndices || []; // .getSelectedIndices();\n\n        for (let i = 0; i < selectedIndices.length; i++)\n            this.song.instructionDeleteAtIndex(trackName, selectedIndices[i]);\n\n    }\n\n    /** Keyboard Commands **/\n\n    keyboardChangeOctave(keyboardOctave = null) {\n        if (!Number.isInteger(keyboardOctave))\n            throw new Error(\"Invalid segment ID\");\n        this.setState({keyboardOctave});\n    }\n\n    /** ASComposer State **/\n\n    async updateState(newState) {\n        new Promise(resolve => {\n            this.setState(state => {\n                if(typeof newState === \"function\")\n                    newState = newState(state) || state;\n                return newState;\n            }, resolve)\n        })\n    }\n\n\n    // /** @deprecated **/\n    // trackerGetTrackInfo(trackName) {\n    //     return new TrackInfo(trackName, this);\n    // }\n    // trackerGetSelectedTrackInfo() {\n    //     const trackName = this.state.selectedTrack;\n    //     return new TrackInfo(trackName, this);\n    // }\n\n\n\n    /** Song Playback **/\n\n    getDestination() {\n        const audioContext = this.getAudioContext();\n        return this.getVolumeGain(audioContext.destination);        // TODO: get track destination\n    }\n\n    songPlay(songPosition=null, onended=null) {\n        this.song.play(this.getDestination(),\n            songPosition === null ? this.state.songPosition : songPosition,\n            onended);\n    }\n\n    songPause() {\n        this.song.stopPlayback();\n    }\n\n    songStop() {\n        if (this.song.playback)\n            this.song.stopPlayback();\n        this.song.setPlaybackPositionInTicks(0);\n    }\n\n    /** Track Playback **/\n\n\n    trackerPlaySelected(trackName=null, stopPlayback=true) {\n        const trackState = new ActiveTrackState(this, trackName);\n        return this.trackerPlay(trackName, trackState.selectedIndices, stopPlayback);\n    }\n\n    trackerPlay(trackName, selectedIndices, stopPlayback=true) {\n        // const trackState = new ActiveTrackState(this, trackName);\n\n\n        const song = this.getSong();\n        if(stopPlayback && song.isPlaying())\n            song.stopPlayback();\n\n        let destination = this.getDestination();\n        // let destination = audioContext.destination;\n\n\n        // destination = destination || this.getDestination();\n        if(!Array.isArray(selectedIndices))\n            selectedIndices = [selectedIndices];\n        // console.log('playInstructions', selectedIndices);\n        // const programID = typeof trackState.programID !== \"undefined\" ? trackState.programID : 0;\n\n        // if(stopPlayback)\n        //     song.programLoader.stopAllPlayback();\n\n        song.playSelectedInstructions(destination, trackName, selectedIndices);\n    }\n\n\n    /** ASCTrack Commands **/\n\n    async trackAdd(newTrackName = null, promptUser = true) {\n        const song = this.song;\n\n        newTrackName = newTrackName || song.generateInstructionTrackName();\n        if(promptUser)\n            newTrackName = await PromptManager.openPromptDialog(\"Create new instruction group?\", newTrackName);\n        if (newTrackName) {\n            song.trackAdd(newTrackName, []);\n            await this.trackerToggleTrack(newTrackName, true);\n        } else {\n            this.setStatus(\"<span class='error'>Create instruction group canceled</span>\");\n        }\n    }\n\n    async trackRename(oldTrackName, newTrackName = null, promptUser = true) {\n        const song = this.song;\n\n        if(promptUser)\n            newTrackName = await PromptManager.openPromptDialog(`Rename instruction group (${oldTrackName})?`, oldTrackName);\n        if (newTrackName !== oldTrackName) {\n            song.trackRename(oldTrackName, newTrackName);\n            await this.trackerToggleTrack(newTrackName, true);\n            await this.trackerToggleTrack(oldTrackName, false);\n        } else {\n            this.setStatus(\"<span class='error'>Rename instruction group canceled</span>\");\n        }\n    }\n\n    async trackRemove(trackName, promptUser = true) {\n        const song = this.song;\n\n        const result = promptUser ? await PromptManager.openPromptDialog(`Remove instruction group (${trackName})?`) : true;\n        if (result) {\n            song.trackRemove(trackName);\n            await this.trackerToggleTrack(trackName, true);\n        } else {\n            this.setStatus(\"<span class='error'>Remove instruction group canceled</span>\");\n        }\n\n    }\n\n    async trackerToggleTrack(trackName = null, toggleValue=null, trackData={}) {\n        // const trackState = this.trackGetState(trackName);\n        // const activeTracks = {...this.state.activeTracks};\n        let selectedTrack = trackName;\n        if(toggleValue === true || typeof this.state.activeTracks[trackName] === \"undefined\") {\n            // const currentTrackData = activeTracks[this.state.selectedTrack];\n            // activeTracks[trackName] = trackData; //Object.assign({}, currentTrackData, trackData);\n            await this.updateState(state => {\n                state.selectedTrack = selectedTrack;\n                state.activeTracks[trackName] = trackData\n            })\n            await this.trackerUpdateSegmentInfo(trackName);\n\n        } else {\n            trackData = this.state.activeTracks[trackName];\n            if(trackData.destinationList)\n                selectedTrack = trackData.destinationList.slice(-1)[0]; // Select last track\n            else\n                selectedTrack = this.getSong().getStartTrackName();\n            await this.updateState(state => {\n                state.selectedTrack = selectedTrack;\n                delete state.activeTracks[trackName];\n            })\n        }\n    }\n\n    async trackerChangeQuantization(trackName, trackerQuantizationTicks) {\n        if (!trackerQuantizationTicks || !Number.isInteger(trackerQuantizationTicks))\n            throw new Error(\"Invalid quantization value\");\n        await this.updateState(state => {\n            state.selectedTrack = trackName;\n            state.activeTracks[trackName].quantizationTicks = trackerQuantizationTicks;\n        });\n        await this.trackerUpdateSegmentInfo(trackName);\n    }\n\n    async trackerChangeQuantizationPrompt(trackName) {\n        const trackerQuantizationTicks = await PromptManager.openPromptDialog(`Enter custom tracker quantization in ticks:`, this.track.quantizationTicks);\n        await this.trackerChangeQuantization(trackName, trackerQuantizationTicks)\n    }\n\n\n    trackerChangeSegmentLength(trackName, trackerSegmentLengthInRows = null) {\n        if (!trackerSegmentLengthInRows || !Number.isInteger(trackerSegmentLengthInRows))\n            throw new Error(\"Invalid track row length value\");\n        this.setState(state => {\n            state.activeTracks[trackName].rowLength = trackerSegmentLengthInRows;\n            return state;\n        });\n    }\n\n    async trackerChangeSegmentLengthPrompt(trackName) {\n        const trackerSegmentLengthInRows = parseInt(await PromptManager.openPromptDialog(`Enter custom tracker segment length in rows:`, this.track.rowLength));\n        this.trackerChangeSegmentLength(trackName, trackerSegmentLengthInRows);\n    }\n\n    /**\n     * Used when track has been modified\n     * @param trackName\n     * @returns {Promise<void>}\n     */\n    async trackerUpdateSegmentInfo(trackName) {\n        trackName = trackName || this.state.selectedTrack;\n        const trackState = new ActiveTrackState(this, trackName);\n        const iterator = this.trackerGetIterator(trackName);\n        iterator.seekToEnd();\n        const trackLengthTicks = iterator.positionTicks;\n\n        const qIterator = this.trackerGetQuantizedIterator(trackName);\n        const segmentLengthTicks = trackState.segmentLengthTicks;\n        const segmentPositions = [];\n        let lastSegmentPositionTicks = 0;\n        while ( qIterator.positionTicks < trackLengthTicks\n                || segmentPositions.length < ASCTrack.DEFAULT_MIN_SEGMENTS) {\n            if(lastSegmentPositionTicks <= qIterator.positionTicks) {\n                // Found end of segment\n                segmentPositions.push(qIterator.rowCount);\n                lastSegmentPositionTicks += segmentLengthTicks;\n            }\n            qIterator.nextQuantizedInstructionRow();\n        }\n\n        // qIterator.seekToPosition()\n\n        // if (!trackState.trackLengthTicks || trackLengthTicks > trackState.trackLengthTicks) {\n            await trackState.update(state => {\n                state.trackLengthTicks = trackLengthTicks;\n                state.segmentPositions = segmentPositions;\n                // console.log('trackLengthTicks', {segmentPositions, trackLengthTicks, qIterator});\n            });\n        // }\n    }\n\n    /** Selection **/\n\n    trackerGetIterator(trackName=null) {\n        const trackState = new ActiveTrackState(this, trackName);\n        return this.getSong().instructionGetIterator(\n            trackName,\n            trackState.timeDivision, // || this.getSong().data.timeDivision,\n            trackState.beatsPerMinute //  || this.getSong().data.beatsPerMinute\n        );\n    }\n\n    trackerGetQuantizedIterator(trackName=null) {\n        const trackState = new ActiveTrackState(this, trackName);\n        return this.getSong().instructionGetQuantizedIterator(\n            trackName,\n            trackState.quantizationTicks,\n            trackState.timeDivision, // || this.getSong().data.timeDivision,\n            trackState.beatsPerMinute //  || this.getSong().data.beatsPerMinute\n        );\n    }\n\n    /**\n     * Used when selecting\n     * @param trackName\n     * @param cursorOffset\n     * @returns {{positionTicks: PositionTickInfo[] | number, cursorRow, positionSeconds, previousOffset: number, nextRowOffset, cursorIndex: null, adjustedCursorRow, nextOffset: *, previousRowOffset}}\n     */\n    trackerGetCursorInfo(trackName=null, cursorOffset=null) {\n        trackName = trackName || this.state.selectedTrack;\n        const trackState = new ActiveTrackState(this, trackName);\n        cursorOffset = cursorOffset === null ? trackState.cursorOffset : cursorOffset;\n        const iterator = this.trackerGetQuantizedIterator(trackName);\n        let cursorIndex = null;\n        let currentRowStartPosition=0, lastRowStartPosition=0\n        // let indexFound = null;\n        while(iterator.cursorPosition <= cursorOffset) {\n            lastRowStartPosition = currentRowStartPosition;\n            currentRowStartPosition = iterator.cursorPosition;\n            // eslint-disable-next-line no-loop-func\n            iterator.nextQuantizedInstructionRow(null, function() {\n                if(iterator.cursorPosition === cursorOffset) {\n                    cursorIndex = iterator.currentIndex;\n                }\n            });\n\n        }\n        const column = cursorOffset - currentRowStartPosition;\n\n        const cursorRow = iterator.rowCount;\n        const currentRowOffset = trackState.rowOffset || 0;\n        const rowLength = trackState.rowLength || 16;\n        let adjustedCursorRow = null;\n        if(currentRowOffset + rowLength <= cursorRow)\n            adjustedCursorRow = cursorRow - rowLength; //  - Math.floor(currentRowLength * 0.8);\n        if(currentRowOffset >= cursorRow)\n            adjustedCursorRow = cursorRow - 1; // - Math.ceil(currentRowLength * 0.2);\n\n\n\n        const nextRowOffset = iterator.cursorPosition + column;\n        const previousRowOffset = lastRowStartPosition + column;\n        // console.log({p: iterator.cursorPosition, cursorOffset, column, previousRowOffset, nextRowOffset});\n        const ret = {\n            positionTicks: iterator.positionTicks,\n            positionSeconds: iterator.positionSeconds,\n            cursorIndex,\n            cursorRow,\n            adjustedCursorRow,\n            previousOffset: cursorOffset > 0 ? cursorOffset - 1 : 0,\n            nextOffset: cursorOffset + 1,\n            previousRowOffset,\n            nextRowOffset\n        };\n        // console.log(ret);\n        return ret;\n    }\n\n    // trackerFindRowOffsetFromPosition(trackName, trackPositionTicks) {\n    //     // const trackState = new ActiveTrackState(this, trackName);\n    //     const iterator = this.trackerGetQuantizedIterator(trackName);\n    //     iterator.seekToPositionTicks(trackPositionTicks);\n    //     const rowOffset = iterator.rowCount;\n    //     console.log('trackerFindRowOffsetFromPosition', trackPositionTicks, rowOffset, iterator);\n    //     return rowOffset;\n    // }\n\n    async trackerSelectIndicesPrompt(trackName=null) {\n        if(trackName === null)\n            trackName = this.state.selectedTrack;\n        const trackState = new ActiveTrackState(this, trackName);\n        let selectedIndices = (trackState.selectedIndices || []).join(', ');\n        selectedIndices = await PromptManager.openPromptDialog(`Select indices for track ${trackName}: `, selectedIndices);\n        this.trackerSelectIndices(trackName, selectedIndices);\n    }\n\n    trackerSelectIndices(trackName, selectedIndices, cursorOffset=null) {\n        // console.log('trackerSelectIndices', {trackName, selectedIndices, cursorOffset, rowOffset});\n        // TODO: get song position by this.props.index\n        // let selectedIndices = await PromptManager.openPromptDialog(\"Enter selection: \", oldSelectedIndices.join(','));\n        if (typeof selectedIndices === \"string\") {\n            switch (selectedIndices) {\n                case 'all':\n                    selectedIndices = [];\n                    const maxLength = this.song.instructionFindGroupLength(this.trackName);\n                    for (let i = 0; i < maxLength; i++)\n                        selectedIndices.push(i);\n                    break;\n                case 'segment':\n                    selectedIndices = [].map.call(this.querySelectorAll('asct-instruction'), (elm => elm.index));\n                    break;\n                case 'row':\n                    throw new Error('TODO');\n                case 'none':\n                    selectedIndices = [];\n                    break;\n                default:\n                    selectedIndices = selectedIndices.split(/[^0-9]/).map(index => parseInt(index));\n                    // throw new Error(\"Invalid selection: \" + selectedIndices);\n            }\n        }\n\n        if (typeof selectedIndices === 'number')\n            selectedIndices = [selectedIndices];\n        if (!Array.isArray(selectedIndices))\n            throw new Error(\"Invalid selection: \" + selectedIndices);\n\n        selectedIndices.forEach((index, i) => {\n            if(typeof index !== \"number\")\n                throw new Error(`Invalid selection index (${i}): ${index}`);\n        });\n\n        // Filter unique indices\n        selectedIndices = selectedIndices.filter((v, i, a) => a.indexOf(v) === i && v !== null);\n        // Sort indices\n        selectedIndices.sort((a, b) => a - b);\n        // console.info('ASComposerActions.trackerSelectIndices', trackName, selectedIndices);\n\n\n        this.setState(state => {\n            state.selectedTrack = trackName;\n            const trackState = state.activeTracks[trackName];\n            trackState.selectedIndices = selectedIndices;\n            if(cursorOffset !== null) {\n                const cursorInfo = this.trackerGetCursorInfo(trackName, cursorOffset);\n                trackState.cursorOffset = cursorOffset;\n                // TODO: rowOffset = this.trackerGetCursorInfo(cursorOffset).adjustedCursorRow;\n                // if (rowOffset !== null)\n                if(cursorInfo.adjustedCursorRow !== null)\n                    trackState.rowOffset = cursorInfo.adjustedCursorRow;\n                trackState.cursorPositionTicks = cursorInfo.positionTicks;\n                state.songPosition = cursorInfo.positionSeconds + (trackState.startPosition || 0);\n            }\n            // If selected, update default instruction params\n            if(selectedIndices.length > 0) {\n                const firstSelectedInstruction = this.getSong().instructionGetByIndex(trackName, selectedIndices[0]);\n                trackState.currentCommand = firstSelectedInstruction.command;\n                if(firstSelectedInstruction instanceof NoteInstruction) {\n                    if(typeof firstSelectedInstruction.durationTicks !== \"undefined\")\n                        trackState.currentDuration = firstSelectedInstruction.getDurationString(trackState.timeDivision || this.getSong().data.timeDivision);\n                    if(typeof firstSelectedInstruction.velocity !== \"undefined\")\n                        trackState.currentVelocity = firstSelectedInstruction.velocity;\n                }\n            }\n            return state;\n        });\n        return selectedIndices;\n    }\n\n\n\n    trackerSetCursorOffset(trackName, newCursorOffset, selectedIndices=[]) {\n        if (!Number.isInteger(newCursorOffset))\n            throw new Error(\"Invalid cursor offset\");\n        if(newCursorOffset < 0)\n            throw new Error(\"Cursor offset must be >= 0\");\n        return this.trackerSelectIndices(trackName, selectedIndices, newCursorOffset);\n    }\n\n    trackerSetScrollPosition(trackName, newScrollPositionTicks) {\n        if (!Number.isInteger(newScrollPositionTicks))\n            throw new Error(\"Invalid row offset\");\n        this.setState(state => {\n            state.activeTracks[trackName].scrollPositionTicks = newScrollPositionTicks;\n            return state;\n        });\n    }\n\n    // trackerSetRowOffset\n\n    // trackerSetRowOffsetFromPositionTicks(trackName, trackPositionTicks) {\n    //     const rowOffset = this.trackerFindRowOffsetFromPosition(trackName, trackPositionTicks);\n    //     this.trackerSetRowOffset(trackName, rowOffset);\n    // }\n\n    trackerSetRowOffset(trackName, newRowOffset) {\n        if (!Number.isInteger(newRowOffset))\n            throw new Error(\"Invalid row offset\");\n        // console.log('trackerSetRowOffset', {trackName, newRowOffset});\n        this.setState(state => {\n            state.selectedTrack = trackName;\n            state.activeTracks[trackName].rowOffset = newRowOffset;\n            return state;\n        });\n    }\n\n\n    // trackerUpdateCurrentInstruction(trackName) {\n    //     this.setState(state => {\n    //         const track = state.activeTracks[trackName];\n    //         const selectedIndices = track.selectedIndices;\n    //         if(selectedIndices.length > 0) {\n    //             const firstSelectedInstruction = this.getSong().instructionGetByIndex(this.getTrackName(), selectedIndices[0]);\n    //             track.currentCommand = firstSelectedInstruction.command;\n    //             if(firstSelectedInstruction instanceof NoteInstruction) {\n    //                 if(typeof firstSelectedInstruction.durationTicks !== \"undefined\")\n    //                     track.currentDuration = firstSelectedInstruction.getDurationString(this.getStartingTimeDivision());\n    //                 if(typeof firstSelectedInstruction.velocity !== \"undefined\")\n    //                     track.currentVelocity = firstSelectedInstruction.velocity;\n    //             }\n    //         }\n    //         return state;\n    //     });\n    //\n    // }\n\n    /** @deprecated **/\n    trackerCalculateRowOffset(trackName, cursorOffset=null) {\n        return this.trackerGetTrackInfo(trackName).calculateRowOffset(trackName, cursorOffset);\n    }\n\n    /** @deprecated **/\n    trackerFindCursorRow(trackName, cursorOffset=null) {\n        return this.trackerGetTrackInfo(trackName).findCursorRow(trackName, cursorOffset);\n    }\n\n\n\n\n\n    /** Context menu **/\n    // async openContextMenu(e) {\n    //     const contextMenu = this.menuContext;\n    //     await contextMenu.openContextMenu(e);\n    // }\n\n    /** Programs **/\n\n\n    async programAdd(programClassName, programConfig = {}, promptUser=false) {\n        if (!programClassName)\n            throw new Error(`Invalid program class`);\n        const {title} = ProgramLoader.getProgramClassInfo(programClassName);\n        // programConfig = ProgramLoader.createProgramConfig(programClassName, programConfig);\n        // programConfig.libraryURL = this.defaultLibraryURL;\n        // programConfig.name = programConfig.name || programURL.split('/').pop();\n\n//         e.target.form.elements['programURL'].value = '';\n        if (promptUser === false || await this.openConfirmDialog(`Add '${title}' to Song?`)) {\n            const programID = this.song.programAdd(programConfig);\n            this.setStatus(`New program class '${programClassName}' added to song at position ${programID}`);\n            // this.forceUpdate();\n            // this.fieldInstructionProgram.setValue(programID);\n            // await this.panelPrograms.forceUpdate();\n\n        } else {\n            this.setError(`New program canceled: ${programClassName}`);\n        }\n    }\n\n    async programReplace(programID, programClassName, programConfig = {}) {\n        if (!Number.isInteger(programID))\n            throw new Error(`Invalid Program ID: Not an integer`);\n        if (!programClassName)\n            throw new Error(`Invalid Program class`);\n\n        if (await PromptManager.openPromptDialog(`Change Program (${programID}) to ${programClassName}`)) {\n            await this.song.programReplace(programID, programClassName, programConfig);\n            this.setStatus(`Program (${programID}) changed to: ${programClassName}`);\n\n        } else {\n            this.setError(`Change program canceled: ${programClassName}`);\n        }\n    }\n\n    async programRename(programID, newProgramTitle = null) {\n        console.log(this.song.programGetConfig(programID).title, programID);\n        const oldProgramTitle = this.song.programGetConfig(programID).title;\n        if (!newProgramTitle)\n            newProgramTitle = await PromptManager.openPromptDialog(`Change name for programs ${programID}: `, oldProgramTitle);\n        if (!newProgramTitle)\n            return console.error(\"Program name change canceled\");\n        this.song.programRename(programID, newProgramTitle);\n        this.setStatus(`Program title updated: ${newProgramTitle}`);\n    }\n\n    async programRemove(programRemoveID = null) {\n        if (await this.openConfirmDialog(`Remove Program ID: ${programRemoveID}`)) {\n            this.song.programRemove(programRemoveID);\n            this.setStatus(`Program (${programRemoveID}) removed`);\n\n        } else {\n            this.setError(`Remove program canceled`);\n        }\n    }\n\n\n    /** Toggle Panels **/\n\n    // togglePanelPrograms() {\n    //     this.classList.toggle('hide-panel-programs');\n    // }\n    //\n    // togglePanelTracker() {\n    //     this.classList.toggle('hide-panel-track');\n    // }\n    //\n    // togglePanelSong() {\n    //     this.classList.toggle('hide-panel-song');\n    // }\n    //\n    // toggleFullscreen() {\n    //     const setFullScreen = !this.classList.contains('fullscreen');\n    //     this.classList.toggle('fullscreen', setFullScreen);\n    // }\n\n    /** Tools **/\n\n\n\n    async batchSelect(e, searchCallbackString = null, promptUser = false) {\n        if (promptUser || !searchCallbackString)\n            searchCallbackString = await PromptManager.openPromptDialog(\"Run custom search:\", searchCallbackString ||\n                `/** Example Search **/ i.command === \"C3\"   &&   i.program === 0`);\n        if (!searchCallbackString)\n            throw new Error(\"Batch command canceled: Invalid search\");\n\n        const storage = new Storage();\n        storage.addBatchRecentSearches(searchCallbackString);\n\n        throw new Error(\"TODO Implement\");\n        // const track = this.track;\n        // this.clearselectedIndices();\n        // const trackName = track.getTrackName();\n        // try {\n        //     const stats = {count: 0};\n        //     const iterator = this.song.instructionGetIterator(trackName);\n        //     let instruction;\n        //     while (instruction = iterator.nextConditionalInstruction((instruction) => {\n        //         const i = instruction;\n        //         const window = null, document = null;\n        //         return eval(searchCallbackString);\n        //     })) {\n        //         stats.count++;\n        //         track.selectIndicies(e, iterator.currentIndex);\n        //     }\n        //     this.setStatus(\"Batch Search Completed: \" + JSON.stringify(stats), stats);\n        // } catch (err) {\n        //     this.setStatus(\"Batch Search Failed: \" + err.message, err);\n        // }\n    }\n\n    async batchRunCommand(e, commandCallbackString = null, searchCallbackString = null, promptUser = false) {\n        const storage = new Storage();\n\n        if (promptUser || !searchCallbackString)\n            searchCallbackString = await PromptManager.openPromptDialog(\"Run custom search:\", searchCallbackString ||\n                `/** Example Search **/ i.command === \"C3\"   &&   i.program === 0`);\n        if (!searchCallbackString)\n            throw new Error(\"Batch command canceled: Invalid search\");\n        storage.addBatchRecentSearches(searchCallbackString);\n\n\n        if (promptUser || !commandCallbackString)\n            commandCallbackString = await PromptManager.openPromptDialog(`Run custom command:`, commandCallbackString ||\n                `/** Example Command **/ i.command='C4';`);\n        if (!commandCallbackString)\n            throw new Error(\"Batch command canceled: Invalid command\");\n        storage.addBatchRecentCommands(commandCallbackString);\n\n        throw new Error(\"TODO Implement\");\n        // const instructionList = [];\n        // const track = this.track;\n        // const trackName = track.getTrackName(), g = trackName;\n        // try {\n        //     const stats = {count: 0, modified: 0};\n        //     const iterator = this.song.instructionGetIterator(trackName);\n        //     let instruction;\n        //     const window = null, document = null;\n        //     while (instruction = iterator.nextConditionalInstruction((instruction) => {\n        //         const i = instruction;\n        //         return eval(searchCallbackString);\n        //     })) {\n        //         const instructionString = JSON.stringify(instruction.data);\n        //         const i = instruction;\n        //         eval(commandCallbackString);\n        //         if (instructionString !== JSON.stringify(instruction.data))\n        //             stats.modified++;\n        //\n        //         stats.count++;\n        //         track.selectIndex(e, iterator.currentIndex);\n        //     }\n        //     this.setStatus(\"Batch Command Completed: \" + JSON.stringify(stats), stats);\n        //     return instructionList;\n        // } catch (err) {\n        //     this.setStatus(\"Batch Command Failed: \" + err.message, err);\n        //     return [];\n        // }\n    }\n\n\n    /** Prompt **/\n\n    openPromptDialog(message, defaultValue='') {\n        return window.prompt(message, defaultValue);\n    }\n\n    async openFileDialog(accept=null) {\n        return await new Promise((resolve, reject) => {\n            const input = document.createElement('input');\n            input.setAttribute('type', 'file');\n            if(accept)\n                input.setAttribute('accept', accept);\n            input.addEventListener('change', () => {\n                const file = input.files[0];\n                if(file)\n                    resolve(file);\n                else\n                    reject();\n            });\n            input.click();\n        })\n    }\n\n}\n\n\nexport default ASComposerActions;\n","import React from \"react\";\nimport {ASUIMenuAction, ASUIMenuDropDown, ASUIMenuBreak} from \"../components\";\nimport Values from \"../common/values/Values\";\nimport {Storage, ProgramLoader} from \"../song\";\nimport ASComposerRenderer from \"./ASComposerRenderer\";\n\nclass ASComposerMenu extends ASComposerRenderer {\n\n\n    renderRootMenu() {\n        const props = {\n            vertical: !this.state.portrait,\n            openOnHover: false,\n        };\n        if(!this.state.portrait)\n            props.arrow = false;\n        return (<>\n            <ASUIMenuDropDown {...props} options={() => this.renderMenuFile()}          >File</ASUIMenuDropDown>\n            <ASUIMenuDropDown {...props} options={() => this.renderMenuEdit()}          >Edit</ASUIMenuDropDown>\n            <ASUIMenuDropDown {...props} options={() => this.renderMenuTrack()}         >Track</ASUIMenuDropDown>\n            <ASUIMenuDropDown {...props} options={() => this.renderMenuProgram()}    >Program</ASUIMenuDropDown>\n            <ASUIMenuDropDown {...props} options={() => this.renderMenuView()}          >View</ASUIMenuDropDown>\n        </>);\n    }\n\n    renderMenuFile() {\n        return (<>\n            <ASUIMenuAction onAction={e => this.loadNewSongData(e)}             >New song</ASUIMenuAction>\n            <ASUIMenuDropDown options={() => this.renderMenuFileOpen()}           >Open song</ASUIMenuDropDown>\n            <ASUIMenuDropDown options={() => this.renderMenuFileSave()}           >Save song</ASUIMenuDropDown>\n            <ASUIMenuDropDown options={() => this.renderMenuFileImport()}         >Import song</ASUIMenuDropDown>\n            <ASUIMenuDropDown options={() => this.renderMenuFileExport()}         >Export song</ASUIMenuDropDown>\n        </>);\n    }\n\n\n    renderMenuFileOpen() {\n        return (<>\n            <ASUIMenuDropDown options={() => this.renderMenuFileOpenMemory()}     >from Memory</ASUIMenuDropDown>\n            <ASUIMenuAction onAction={e => this.openSongFromFileDialog(e)}      >from File</ASUIMenuAction>\n            <ASUIMenuAction onAction={e => this.loadSongFromURL(e)}             >from URL</ASUIMenuAction>\n        </>);\n    }\n\n    renderMenuFileSave() {\n        return (<>\n            <ASUIMenuAction onAction={e => this.saveSongToMemory(e)}                        >to Memory</ASUIMenuAction>\n            <ASUIMenuAction onAction={e => this.saveSongToFile(e)}                          >to File</ASUIMenuAction>\n        </>);\n\n    }\n\n    renderMenuFileImport() {\n        return (<>\n            <ASUIMenuAction onAction={e => this.openSongFromFileDialog('.mid,.midi')}          >from MIDI File</ASUIMenuAction>\n        </>);\n        // this.loadSongFromFileInput(this.fieldSongFileLoad.inputElm);\n        // renderMenuFileImportSongFromMIDI.action = (e) => this.onAction('song:load-from-midi-file');\n        // renderMenuFileImportSongFromMIDI.disabled = true;\n\n    }\n\n    renderMenuFileExport() {\n        return (<>\n            <ASUIMenuAction onAction={()=>{}} disabled>to MIDI File</ASUIMenuAction>\n        </>);\n\n    }\n\n    async renderMenuFileOpenMemory() {\n        const storage = new Storage();\n        const songRecentUUIDs = await storage.getRecentSongList() ;\n        console.log('songRecentUUIDs', songRecentUUIDs);\n        return songRecentUUIDs.length > 0\n            ? songRecentUUIDs.map((entry, i) =>\n                <ASUIMenuAction\n                    key={i}\n                    onAction={(e) => this.loadSongFromMemory(entry.uuid)}\n                >{entry.title || entry.uuid}</ASUIMenuAction>)\n            :<ASUIMenuAction\n                key=\"no-recent\"\n                disabled\n            >No Songs Available</ASUIMenuAction>\n        ;\n    }\n\n\n    /** Deep selection menus **/\n\n\n\n    /** Deep selection menus **/\n\n\n    renderMenuSelectCommand(onSelectValue) {\n        return Values.renderMenuSelectCommand(onSelectValue, this.state.keyboardOctave);\n    }\n\n\n    // renderMenuSelectCommandByCurrentOctave(onSelectValue, octave=null) {\n    //     octave = octave !== null ? octave : this.state.keyboardOctave;\n    //     return this.values.getNoteFrequencies((noteName) =>\n    //         <MenuAction key={noteName} onAction={e => onSelectValue(`${noteName}${octave}`)}     >{noteName}{octave}</MenuAction>\n    //     );\n    // }\n\n\n    renderMenuSelectCommandByFrequency(onSelectValue) {\n        return Values.renderMenuSelectCommandByFrequency(onSelectValue, this.state.keyboardOctave);\n    }\n\n    // renderMenuSelectCommandByFrequencyOctave(onSelectValue, noteName) {\n    //     return Values.renderMenuSelectCommandByFrequencyOctave(onSelectValue, noteName);\n    // }\n\n    renderMenuSelectCommandByOctave(onSelectValue) {\n        return Values.renderMenuSelectCommandByOctave(onSelectValue, this.state.keyboardOctave);\n    }\n\n    // renderMenuSelectCommandByOctaveFrequency(onSelectValue, octave) {\n    //     return Values.renderMenuSelectCommandByOctaveFrequency(onSelectValue, octave);\n    // }\n\n\n\n\n    renderMenuSelectSongProgram(onSelectValue) {\n        return this.values.getSongPrograms((programID, programClass, programInfo) =>\n            <ASUIMenuAction key={programID} onAction={() => onSelectValue(programID)}  >{programID}: {programInfo.title || programClass}</ASUIMenuAction>\n        );\n    }\n\n    renderMenuSelectDuration(onSelectValue, currentDuration, timeDivision=null) {\n        return Values.renderMenuSelectDuration(onSelectValue, currentDuration, timeDivision || this.song.data.timeDivision);\n    }\n\n    renderMenuSelectVelocity(onSelectValue, currentVelocity=null) {\n        return Values.renderMenuSelectVelocity(onSelectValue, currentVelocity);\n    }\n\n\n    renderMenuSelectAvailableProgram(onSelectValue, menuTitle=null) {\n        return Values.renderMenuSelectAvailableProgram(onSelectValue, menuTitle);\n    }\n\n\n\n    renderMenuEdit() {\n        const trackState = this.trackGetState();\n        const selectedIndices = trackState.selectedIndices || [];\n\n        // const populateGroupCommands = (renderMenuTrack, action) => {\n        //     renderMenuTrack.populate = () => {\n        //         const MENU = e.menuElement;\n        //         this.values.getValues('song-groups', (trackName, groupTitle) => {\n        //             const renderMenuEditSetCommandGroup = MENU.getOrCreateMenu(trackName, `${groupTitle}`);\n        //             renderMenuEditSetCommandGroup.action = action;\n        //         });\n        //         const menuCustom = MENU.getOrCreateMenu('new', `Create New Group`);\n        //         menuCustom.action = e => this.trackAdd();\n        //         menuCustom.hasBreak = true;\n        //     };\n        // };\n\n        // renderMenuEditInsertCommand.disabled = selectedIndices.length > 0; // !this.cursorCell;\n        // renderMenuEditInsertCommand.action = handleAction('song:new');\n        return (<>\n            <ASUIMenuDropDown\n                options={() => this.renderMenuEditInsert()}\n                children=\"Insert Command\"\n                />\n\n\n            <ASUIMenuDropDown\n                disabled={selectedIndices.length === 0}\n                options={() => this.renderMenuEditSetCommand()}\n                hasBreak\n                children=\"Set Command\"\n                />\n            <ASUIMenuDropDown\n                disabled={selectedIndices.length === 0}\n                options={() => this.renderMenuEditSetDuration()}\n                hasBreak\n                children=\"Set Duration\"\n                />\n            <ASUIMenuDropDown\n                disabled={selectedIndices.length === 0}\n                options={() => this.renderMenuEditSetVelocity()}\n                hasBreak\n                children=\"Set Velocity\"\n                />\n\n            <ASUIMenuBreak />\n            <ASUIMenuDropDown options={() => this.renderMenuEditSelect()} hasBreak   >Select</ASUIMenuDropDown>\n\n            <ASUIMenuBreak />\n            <ASUIMenuDropDown options={() => this.renderMenuEditBatch()} hasBreak   >Batch</ASUIMenuDropDown>\n        </>);\n        // const renderMenuEditGroup = MENU.getOrCreateMenu('group', 'Group ►');\n        // renderMenuEditGroup.hasBreak = true;\n        // renderMenuEditGroup.disabled = true;\n    }\n\n\n    renderMenuEditInsert() {\n        return Values.renderMenuSelectCommand(async newCommand => {\n            if(newCommand === null)\n                await this.instructionInsertPrompt();\n            else\n                this.instructionInsert(newCommand);\n        }, this.state.keyboardOctave);\n    }\n\n\n    renderMenuEditInsertCommandFrequency() {\n        return this.renderMenuSelectCommandByFrequency(noteNameOctave => this.instructionInsert(noteNameOctave, false));\n    }\n\n\n    renderMenuEditInsertCommandOctave() {\n        return this.renderMenuSelectCommandByOctave(noteNameOctave => this.instructionInsert(noteNameOctave, false));\n    }\n\n    // renderMenuEditInsertCommandCurrentOctave(octave=null) {\n    //     return this.renderMenuSelectCommandByCurrentOctave((noteNameOctave) => this.instructionInsert(noteNameOctave, false), octave);\n    // }\n\n\n\n    renderMenuEditSetCommand() {\n        return Values.renderMenuSelectCommand(async newCommand => {\n            if(newCommand === null)\n                await this.instructionReplaceCommandSelectedPrompt();\n            else\n                this.instructionReplaceCommandSelected(newCommand);\n        }, this.state.keyboardOctave);\n    }\n\n    // renderMenuEditSetProgram() {\n    //     return this.values.getSongPrograms((programID, programClass, programInfo) =>\n    //         <MenuAction key={programID} onAction={e => this.instructionReplaceProgram(programID)}  >\n    //             {programID}: {programInfo.title || programClass}\n    //         </MenuAction>\n    //     );\n    // }\n\n    renderMenuEditSetDuration() {\n        return this.renderMenuSelectDuration(durationTicks => {\n            this.instructionReplaceDuration(durationTicks)\n        });\n    }\n\n    renderMenuEditSetVelocity() {\n        return (<>\n            {Values.getNoteVelocities((velocity) =>\n                <ASUIMenuAction key={velocity} onAction={e => this.instructionReplaceVelocity(velocity)}  >{velocity}</ASUIMenuAction>)}\n            <ASUIMenuAction onAction={e => this.instructionReplaceVelocity(null, true)} hasBreak >Custom Velocity</ASUIMenuAction>\n        </>);\n    }\n\n    renderMenuEditSetCommandFrequency() {\n        return this.renderMenuSelectCommandByFrequency(noteNameOctave => this.instructionReplaceCommandSelected(noteNameOctave));\n    }\n\n    // renderMenuEditSetCommandCurrentOctave(octave=null) {\n    //     return this.renderMenuSelectCommandByCurrentOctave((noteNameOctave) => this.trackerReplaceSelectedInstructions(noteNameOctave, false), octave);\n    // }\n\n    renderMenuEditSetCommandOctave() {\n        return this.renderMenuSelectCommandByOctave(noteNameOctave => this.instructionReplaceCommandSelected(noteNameOctave));\n    }\n\n    renderMenuEditSelect() {\n        return (<>\n            <ASUIMenuAction onAction={e => this.trackerSelectIndices('segment')}      >Select Segment Instructions</ASUIMenuAction>\n            <ASUIMenuAction onAction={e => this.trackerSelectIndices('all')}       >Select All Song Instructions</ASUIMenuAction>\n            <ASUIMenuAction onAction={e => this.trackerSelectIndices('none')}       >Select No Instructions</ASUIMenuAction>\n            <ASUIMenuBreak />\n            <ASUIMenuDropDown options={() => this.renderMenuEditSelectBatch()} hasBreak                        >Batch Select</ASUIMenuDropDown>\n        </>);\n\n    }\n\n    renderMenuEditSelectBatch() {\n        return (<>\n            {(new Storage()).getBatchRecentSearches().map((recentBatchSearch, i) =>\n                <ASUIMenuAction onAction={e => this.batchSelect(recentBatchSearch, true)}      >New Selection Command</ASUIMenuAction>\n            )}\n            <ASUIMenuAction onAction={e => this.batchSelect(e)} hasBreak      >New Selection Command</ASUIMenuAction>\n        </>);\n    }\n\n    renderMenuEditBatch() {\n        return (<>\n            {(new Storage()).getBatchRecentCommands().map((recentBatchCommand, i) =>\n                <ASUIMenuDropDown options={() => this.renderMenuEditBatchRecent(recentBatchCommand)}                          >{recentBatchCommand}</ASUIMenuDropDown>\n            )}\n            <ASUIMenuAction onAction={e => this.batchRunCommand(e)} hasBreak      >New Batch Command</ASUIMenuAction>\n        </>);\n    }\n\n    renderMenuEditBatchRecent(recentBatchCommand) {\n        return (<>\n            <ASUIMenuAction onAction={e => this.batchRunCommand(recentBatchCommand, true)}                   >Execute on Group</ASUIMenuAction>\n            <ASUIMenuDropDown options={() => this.renderMenuEditBatchRecentExecuteSearch(recentBatchCommand)}    >Execute using Search</ASUIMenuDropDown>\n        </>);\n    }\n\n    renderMenuEditBatchRecentExecuteSearch(recentBatchCommand) {\n        return (<>\n            <ASUIMenuAction onAction={e => this.batchRunCommand(recentBatchCommand, null, true)}                   >New Search</ASUIMenuAction>\n            {(new Storage()).getBatchRecentSearches().map((recentBatchSearch, i) =>\n                <ASUIMenuAction onAction={e => this.batchRunCommand(recentBatchCommand, recentBatchSearch)}                   >{recentBatchSearch}</ASUIMenuAction>\n            )}\n        </>);\n\n    }\n\n\n    /** ASCTrack Menu **/\n\n    renderMenuTrackerSetQuantization(trackName) {\n        return (<>\n            {this.renderMenuSelectDuration(durationTicks => {\n                this.trackerChangeQuantization(trackName, durationTicks);\n            })}\n            <ASUIMenuAction onAction={(e) => this.trackerChangeQuantization(trackName)} hasBreak >Custom Quantization</ASUIMenuAction>\n        </>);\n    }\n\n\n\n    renderMenuTrackerSetSegmentLength(trackName) {\n        return (<>\n            {Values.getTrackerSegmentLengthInRows((length, title) =>\n                <ASUIMenuAction key={length} onAction={(e) => this.trackerChangeSegmentLength(trackName, length)}>{title}</ASUIMenuAction>\n            )}\n            <ASUIMenuAction onAction={(e) => this.trackerChangeSegmentLength(trackName)} hasBreak >Custom Length</ASUIMenuAction>\n        </>);\n    }\n\n    // renderMenuTrackerSetProgramFilter() {\n    //     return this.renderMenuSelectSongProgram(programID => this.trackerChangeProgramFilter(programID));\n    // }\n\n    renderMenuKeyboardSetOctave() {\n        return Values.getNoteOctaves(octave =>\n            <ASUIMenuAction key={octave} onAction={(e) => this.keyboardChangeOctave(octave)}>{octave}</ASUIMenuAction>\n        );\n    }\n\n    /** View Menu **/\n    renderMenuView() {\n        return (<>\n            <ASUIMenuAction onAction={e => this.toggleFullscreen(e)}       >{this.props.fullscreen ? 'Disable' : 'Enable'} Fullscreen</ASUIMenuAction>\n            <ASUIMenuAction onAction={e => this.togglePanelSong(e)}       >{this.props.hidePanelSongs ? 'Disable' : 'Enable'} Song Forms</ASUIMenuAction>\n            <ASUIMenuAction onAction={e => this.togglePanelTracker(e)}       >{this.props.hidePanelTracker ? 'Disable' : 'Enable'} Tracker Forms</ASUIMenuAction>\n            <ASUIMenuAction onAction={e => this.togglePanelPrograms(e)}       >{this.props.hidePanelProgram ? 'Disable' : 'Enable'} Program Forms</ASUIMenuAction>\n        </>);\n\n    }\n\n    renderMenuProgram() {\n        return (<>\n            <ASUIMenuDropDown key=\"add\" options={() => this.renderMenuProgramAdd()}    >Add program to song</ASUIMenuDropDown>\n            <ASUIMenuBreak />\n            {this.values.getSongPrograms((programID, programClass, programInfo) =>\n                <ASUIMenuDropDown key={programID} options={() => this.renderMenuProgramEdit(programID)}       >\n                    {programID}: {programInfo.title || programClass}\n                </ASUIMenuDropDown>)}\n        </>);\n    }\n\n    renderMenuProgramAdd() {\n        return ProgramLoader.getRegisteredPrograms().map((config, i) =>\n            <ASUIMenuAction key={i} onAction={e => this.programAdd(config.className)}       >{config.title}</ASUIMenuAction>\n        );\n    }\n\n    renderMenuProgramEdit(programID) {\n        return (<>\n            <ASUIMenuDropDown key=\"replace\" options={() => this.renderMenuProgramEditReplace(programID)}    >Replace</ASUIMenuDropDown>\n            <ASUIMenuAction\n                key=\"remove\"\n                onAction={e => this.programRemove(programID)}\n                disabled={!this.song.hasProgram(programID)}\n            >Remove from song</ASUIMenuAction>\n        </>);\n    }\n\n    renderMenuProgramEditReplace(programID) {\n        return ProgramLoader.getRegisteredPrograms().map((config, i) =>\n            <ASUIMenuAction key={i} onAction={e => this.programReplace(programID, config.className)}       >{config.name}</ASUIMenuAction>\n        );\n    }\n\n    renderMenuTrack() {\n        return (<>\n            <ASUIMenuAction onAction={e => this.trackAdd(e)} hasBreak     >Add new group</ASUIMenuAction>\n            <ASUIMenuBreak />\n            {this.values.getAllSongGroups((trackName) =>\n                <ASUIMenuDropDown\n                    key={trackName}\n                    // disabled={trackName === this.state.selectedTrack}\n                    options={() => this.renderMenuTrackEdit(trackName)}\n                >{trackName}</ASUIMenuDropDown>)}\n        </>);\n    }\n\n    renderMenuTrackEdit(trackName) {\n\n        // const trackName = menuParam;\n        return (<>\n            <ASUIMenuAction onAction={e => this.trackRename(trackName)} hasBreak     >Rename group {trackName}</ASUIMenuAction>\n            <ASUIMenuAction onAction={e => this.trackRemove(trackName)} hasBreak     >Delete group {trackName}</ASUIMenuAction>\n        </>);\n    }\n\n}\n\n\nexport default ASComposerMenu;\n","import React from \"react\";\n\nimport {ASUIIcon, ASUIForm, ASUIPanel, ASUIInputRange, ASUIButton, ASUIButtonDropDown, ASUIMenuDropDown} from \"../components\";\nimport ASCProgramRenderer from \"./program/ASCProgramRenderer\";\nimport ASCTrack from \"./track/ASCTrack\";\nimport Values from \"../common/values/Values\";\n// import \"./assets/ASComposer.css\";\n// import style from \"./ASComposerRenderer.style\";\nimport {ASComposerContainer} from \"./container/ASComposerContainer\";\n\nclass ASComposerRenderer extends React.Component {\n\n    render() {\n        const selectedTrackName = this.state.selectedTrack;\n        const trackState = this.state.activeTracks[selectedTrackName];\n        // console.log('trackState', trackState);\n        const selectedIndices = trackState.selectedIndices || [];\n        return <ASComposerContainer\n                    composer={this}\n                    >\n                    <ASUIPanel className=\"song\" header=\"Song\">\n                        <ASUIForm className=\"playback\" header=\"Playback\">\n                            <ASUIButton\n                                className=\"song-play\"\n                                onAction={e => this.songPlay()}\n                            >\n                                <ASUIIcon source=\"play\"/>\n                            </ASUIButton>\n                            <ASUIButton\n                                className=\"song-pause\"\n                                onAction={e => this.songPause()}\n                            >\n                                <ASUIIcon source=\"pause\"/>\n                            </ASUIButton>\n                            <ASUIButton\n                                className=\"song-stop\"\n                                onAction={e => this.songStop()}\n                            >\n                                <ASUIIcon source=\"stop\"/>\n                            </ASUIButton>\n                        </ASUIForm>\n\n                        {this.state.portrait ? null : <ASUIForm className=\"file\" header=\"File\">\n                            <ASUIButton\n                                className=\"file-load\"\n                                onAction={(e) => this.loadSongFromFileInput(e)}\n                                accept=\".json,.mid,.midi\"\n                                ref={ref => this.fieldSongFileLoad = ref}\n                                title=\"Load Song from File\"\n                            >\n                                <ASUIIcon source=\"file-load\"/>\n                            </ASUIButton>\n                            <ASUIButton\n                                className=\"file-save\"\n                                onAction={e => this.saveSongToFile(e)}\n                                title=\"Save Song to File\"\n                            >\n                                <ASUIIcon source=\"file-save\"/>\n                            </ASUIButton>\n                        </ASUIForm>}\n\n                        <ASUIForm className=\"volume\" header=\"Volume\">\n                            <ASUIInputRange\n                                className=\"volume\"\n                                onChange={(e, newVolume) => this.setVolume(newVolume)}\n                                value={this.state.volume}\n                                min={0}\n                                max={1}\n                                step={0.02}\n                                title=\"Song Volume\"\n                            />\n                        </ASUIForm>\n\n                        <ASUIForm className=\"position\" header=\"Position\">\n                            <ASUIInputRange\n                                className=\"position\"\n                                onChange={(e, pos) => this.setSongPositionPercentage(pos)}\n                                value={Math.floor(this.state.songPosition / (this.state.songLength || 1) * 100)}\n                                min={0}\n                                max={100}\n                                // ref={ref => this.fieldSongPosition = ref}\n                                title=\"Song Position\"\n                            />\n                        </ASUIForm>\n\n                        <ASUIForm className=\"timing\" header=\"Timing\">\n                            <ASUIButton\n                                className=\"timing\"\n                                onAction={(e, timingString) => this.setSongPositionPrompt(timingString)}\n                                title=\"Song Timing\"\n                                children={Values.formatPlaybackPosition(this.state.songPosition)}\n                            />\n                        </ASUIForm>\n\n                        {this.state.portrait ? null : <ASUIForm className=\"name\" header=\"Name\">\n                            <ASUIButton\n                                className=\"name\"\n                                onAction={(e) => this.setSongNamePrompt()}\n                                title=\"Song Name\"\n                                children={this.song ? this.song.data.title : \"no song loaded\"}\n                            />\n                        </ASUIForm>}\n\n                        <ASUIForm className=\"version\" header=\"Version\">\n                            <ASUIButton\n                                className=\"version\"\n                                onAction={(e) => this.setSongVersionPrompt()}\n                                title=\"Song Version\"\n                                children={this.song ? this.song.data.version : \"0.0.0\"}\n                            />\n                        </ASUIForm>\n                    </ASUIPanel>\n\n\n                    <ASUIPanel className=\"programs\" header=\"Programs\">\n                       {this.song.programEach((programID, programClass, programConfig) =>\n                           <ASCProgramRenderer\n                               key={programID}\n                               composer={this}\n                               // openMenu={(e, options) => this.renderMenu(e, options)}\n                               // programClass={programClass}\n                               // programConfig={programConfig}\n                               programID={programID}\n                           />\n                       )}\n                       <ASUIForm className=\"program-add\" header=\"Add Program\">\n                           <ASUIMenuDropDown\n                               arrow={'▼'}\n                               className=\"program-add\"\n                               options={() => this.renderMenuSelectAvailableProgram(programClass =>\n                                       this.programAdd(programClass)\n                                   , 'Add New Program')}\n                               title=\"Add Program\"\n                           >Select...</ASUIMenuDropDown>\n                       </ASUIForm>\n                    </ASUIPanel>\n\n                    <ASUIPanel\n                        className=\"instructions\"\n                        header={`Instruction${selectedIndices.length !== 1 ? 's' : ''}`}>\n                        <ASUIForm className=\"instruction-command\" header=\"Command\">\n                            <ASUIButtonDropDown\n                                arrow={'▼'}\n                                // className=\"command\"\n                                options={() => selectedIndices.length > 0 ? this.renderMenuEditSetCommand() : this.renderMenuEditInsert()}\n                            >{trackState.currentCommand}</ASUIButtonDropDown>\n                        </ASUIForm>\n                        <ASUIForm className=\"instruction-insert\" header=\"Add\">\n                            <ASUIButton\n                                // className=\"instruction-insert\"\n                                onAction={e => this.instructionInsert()}\n                                title=\"Insert Instruction\"\n                                disabled={selectedIndices.length > 0}\n                            >\n                                <ASUIIcon source=\"insert\"/>\n                            </ASUIButton>\n                        </ASUIForm>\n                        <ASUIForm className=\"instruction-delete\" header=\"Rem\">\n                            <ASUIButton\n                                // className=\"instruction-delete\"\n                                onAction={e => this.instructionDeleteSelected(e)}\n                                title=\"Delete Instruction\"\n                                disabled={selectedIndices.length === 0}\n                            >\n                                <ASUIIcon source=\"remove\"/>\n                            </ASUIButton>\n                        </ASUIForm>\n\n                        {/*<Form className=\"instruction-program\" header=\"Program\">*/}\n                        {/*    <ButtonDropDown*/}\n                        {/*        arrow={'▼'}*/}\n                        {/*        // className=\"programs-programs\"*/}\n                        {/*        options={() => this.renderMenuEditSetProgram()}*/}\n                        {/*        header=\"Song Programs\"*/}\n                        {/*    >Select</ButtonDropDown>*/}\n                        {/*</Form>*/}\n\n                        <ASUIForm className=\"instruction-velocity\" header=\"Velocity\">\n                            <ASUIInputRange\n                                // className=\"velocity\"\n                                onChange={(e, newVelocity) => this.instructionReplaceVelocity(newVelocity)}\n                                value={trackState.currentVelocity || 0}\n                                min={1}\n                                max={127}\n                                // ref={ref => this.fieldProgramVelocity = ref}\n                                title=\"Program Velocity\"\n                                disabled={selectedIndices.length === 0}\n                                />\n                        </ASUIForm>\n\n\n                        <ASUIForm className=\"instruction-duration\" header=\"Duration\">\n                            <ASUIButtonDropDown\n                                arrow={'▼'}\n                                // className=\"instruction-duration\"\n                                options={() => this.renderMenuEditSetDuration()}\n                                title=\"Program Duration\"\n                                disabled={selectedIndices.length === 0}\n                            >{trackState.currentDuration}</ASUIButtonDropDown>\n                        </ASUIForm>\n\n                        <ASUIForm className=\"tracker-selection\" header=\"Selection\">\n                            <ASUIButton\n                                // className=\"track-selection\"\n                                onAction={(e) => this.trackerSelectIndicesPrompt()}\n                                title=\"Tracker Note Selection\"\n                                children={selectedIndices.length > 0 ? selectedIndices.join(',') : \"None\"}\n                            />\n                        </ASUIForm>\n\n                        <ASUIForm className=\"keyboard-octave\" header=\"Octave\">\n                            <ASUIButtonDropDown\n                                arrow={'▼'}\n                                className=\"keyboard-octave\"\n                                options={() => this.renderMenuKeyboardSetOctave()}\n                                title=\"Change Keyboard Octave\"\n                            >{this.state.keyboardOctave}</ASUIButtonDropDown>\n                        </ASUIForm>\n\n                        {/*<Form className=\"track-octave\" header=\"Octave\">*/}\n                        {/*    <Button*/}\n                        {/*        arrow={'▼'}*/}\n                        {/*        className=\"track-selection\"*/}\n                        {/*        onAction={e => this.renderMenuKeyboardSetOctave(e)}*/}\n                        {/*        title=\"ASCTrack Change Octave\"*/}\n                        {/*    >4</Button>*/}\n                        {/*</Form>*/}\n                    </ASUIPanel>\n\n                    {/*<TrackerGroupsPane -w\n                    l composer={this} />*/}\n                    {/*<TrackerRowSegmentsPanel composer={this} />*/}\n\n                    {/*<ASUIPanel className=\"track\" header=\"ASCTrack\">*/}\n                    {/*    <Form className=\"track-row-length\" title=\"Row &#120491;\">*/}\n                    {/*        <Button*/}\n                    {/*            arrow={'▼'}*/}\n                    {/*            // className=\"track-row-length\"*/}\n                    {/*            onAction={e => this.renderMenuTrackerSetQuantization(e)}*/}\n                    {/*        >1B</Button>*/}\n                    {/*    </Form>*/}\n\n                    {/*    <Form className=\"track-segment-length\" header=\"Seg &#120491;\">*/}\n                    {/*        <Button*/}\n                    {/*            arrow={'▼'}*/}\n                    {/*            // className=\"track-segment-length\"*/}\n                    {/*            onAction={e => this.renderMenuTrackerSetSegmentLength(e)}*/}\n                    {/*            title=\"Select ASCTrack Segment Length\"*/}\n                    {/*        >16B</Button>*/}\n                    {/*    </Form>*/}\n\n                    {/*    /!*<Form className=\"track-program\" header=\"Program\">*!/*/}\n                    {/*    /!*    <Button*!/*/}\n                    {/*    /!*        arrow={'▼'}*!/*/}\n                    {/*    /!*        // className=\"track-programs\"*!/*/}\n                    {/*    /!*        onAction={e => this.renderMenuTrackerSetProgramFilter(e)}*!/*/}\n                    {/*    /!*        title=\"Filter by ASCTrack Program\"*!/*/}\n                    {/*    /!*    >Any</Button>*!/*/}\n                    {/*    /!*</Form>*!/*/}\n                    {/*</ASUIPanel>*/}\n\n\n                    {Object.keys(this.state.activeTracks).map(trackName => (\n                        <ASCTrack\n                            key={trackName}\n                            trackName={trackName}\n                            trackState={this.state.activeTracks[trackName]}\n                            selected={trackName === selectedTrackName}\n                            // TODO bad idea? {...this.state.activeTracks[trackName]}\n                            // destination={this.getAudioContext()}\n                            composer={this}\n                        />\n                    ))}\n                    {this.renderWebViewProxy()}\n                </ASComposerContainer>;\n    }\n\n\n    /** Render WebView Proxy **/\n    renderWebViewProxy() {\n        return null;\n    }\n\n}\n\n\nexport default ASComposerRenderer\n","import React from \"react\";\nimport {View} from \"react-native\";\nimport Song from \"../Song\";\n\nexport default class SongProxyWebViewClient extends React.Component {\n    constructor(props) {\n        super(props);\n        this.song = null;\n        this.webView = React.createRef();\n        this.cb = {\n            onMessage: data => this.onMessage(data)\n        }\n    }\n\n    componentDidMount() {\n\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        return false;\n    }\n\n    postMessage(args) {\n        if(typeof args !== \"string\")\n            args = JSON.stringify(args);\n\n        if(!window.ReactNativeWebView)\n            return console.warn('SongProxyWebViewClient.postMessage: window.ReactNativeWebView is ' + typeof window.ReactNativeWebView);\n\n        window.ReactNativeWebView.postMessage(args);\n    }\n\n    render() {\n        if(!this.song) {\n            // window._AUDIOSOURCE = {\n            //     SONGCLASSES: require('../')\n            // }\n            this.song = new Song();\n            document._SONG = this.song;\n            document.addEventListener('error', (...args) => this.postMessage(['error'].concat(args)))\n\n            document.addEventListener(\"message\", (event) => {\n                this.onMessage(event.data);\n            }, false);\n\n            this.postMessage(['song:load', this.song.data.title]);\n        }\n\n        return <View/>;\n    }\n\n    onMessage(data) {\n        if(data[0] === '[') {\n            data = JSON.parse(data);\n            this.handleCommand.apply(this, data);\n        } else {\n            console.warn(\"Unhandled message: \" + data);\n        }\n    }\n\n    handleCommand(command, ...args) {\n        switch(command) {\n            case 'song:load':\n                let songData = args[0];\n                songData = JSON.parse(songData);\n                this.song.loadSongData(songData);\n                console.log('song', this.song);\n                break;\n\n            case 'song':\n                const songMethod = args.shift();\n                switch(songMethod) {\n                    case 'play':\n                    case 'playSelectedInstructions':\n                        if(args[0] === null)\n                            args[0] = this.getAudioContext().destination;\n                        break;\n                    default:\n                        break;\n                }\n                console.log(`song.${songMethod}(`, ...args, `)`);\n                this.song[songMethod](...args);\n                break;\n\n            default:\n                console.error(\"Unknown command: \" + command);\n        }\n    }\n\n    getAudioContext()               {\n        if (this.audioContext)\n            return this.audioContext;\n\n        const audioContext = new (window.AudioContext || window.webkitAudioContext)();\n        this.audioContext = audioContext;\n        return audioContext;\n    }\n\n    // sendSongCommand(...args) {\n    //     args.unshift('song');\n    //     const argString = JSON.stringify(args);\n    //     const webView = this.webView.current;\n    //     webView.postMessage(argString);\n    //     console.log('postMessage', argString);\n    // }\n    //\n    // onMessage(data) {\n    //     console.log(\"Message: \", data.nativeEvent.data);\n    // }\n}\n","import React from 'react';\nimport {\n    Switch,\n    Route,\n    BrowserRouter\n} from \"react-router-dom\";\nimport './App.css';\n\nimport {ASPlayer} from './audio-source/player';\nimport {ASComposer} from \"./audio-source/composer/\";\nimport SongProxyWebViewClient from \"./audio-source/song/proxy/SongProxyWebViewClient\";\n// import MenuOverlayContainer from \"./audio-source/components/menu/MenuOverlayContainer\";\n\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            // menuOpen: true,\n            // menuOptions: null\n        };\n\n        // setTimeout(e => this.toggleMenu(), 200);\n    }\n\n    toggleMenu = () => {\n        this.setState({ menuOpen: !this.state.menuOpen });\n        if(!this.state.menuOpen)\n            this.playerElm.switchToMenu(null);\n    };\n\n    updateMenu = () => {\n        this.forceUpdate();\n    };\n\n    componentDidMount() {\n    }\n\n    renderDrawerContent() {\n        // let content = <Text>Close</Text>;\n        // if(this.playerElm)\n        //     content = this.playerElm.renderMenu();\n        // return (\n        //     <TouchableOpacity onPress={this.toggleMenu}>\n        //         <View style={styles.menuContainer}>{content}</View>\n        //     </TouchableOpacity>\n        // );\n    }\n\n    // render() {\n    //     return <SongProxyWebViewClient/>;\n    // }\n\n    render() {\n\n\n        return (\n            <BrowserRouter>\n                <Switch>\n                    <Route path={['/blank', '/proxy']}>\n                        <SongProxyWebViewClient/>\n                    </Route>\n                    <Route path={['/player', '/p']}>\n                        {this.renderPlayer()}\n                    </Route>\n                    <Route path={['/composer', '/c']}>\n                        {this.renderComposer()}\n                    </Route>\n                    <Route path={['/both', '/b']}>\n                        {this.renderComposer()}\n                        {this.renderPlayer()}\n                    </Route>\n                    <Route path=\"/\"\n                        render={(props) => {\n                            switch(props.location.search) {\n                                case '?blank':\n                                case '?proxy':\n                                    return <SongProxyWebViewClient/>;\n                                default:\n                                    return this.renderComposer();\n                            }\n                        }}\n                    >\n                    </Route>\n                </Switch>\n            </BrowserRouter>\n        );\n    }\n\n    renderPlayer() {\n        return (\n            <ASPlayer\n                src=\"files/test.pl.json\"\n                ref = {ref => this.playerElm = ref}\n                onToggleMenu={this.toggleMenu}\n                onUpdateMenu={this.updateMenu}\n            />\n        );\n    }\n\n    renderComposer() {\n        return (\n            <ASComposer\n                // src=\"files/demo.json\"\n                ref = {ref => this.composer = ref}\n                onToggleMenu={this.toggleMenu}\n                onRenderMenu={e => this.menu.onRenderMenu}\n            />\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that file SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","\r\nimport {Library} from \"../../song\";\r\n\r\nexport default class extends Library {\r\n  getTitle() { return \"Mohayonao Wave Library Index\"; }\r\n  getPresets() {\r\n    const library = require(\"./mohayonao.library.json\") || [];\r\n    return library.samples.map(preset => {\r\n      if(typeof preset !== \"object\")\r\n        preset = {url: preset, type:'custom'};\r\n      if(!preset.title)\r\n        preset.title = preset.url.split('/').pop();\r\n      if(library.baseURL)\r\n        preset.url = library.baseURL + preset.url;\r\n      return ['OscillatorInstrument', preset];\r\n    });\r\n  }\r\n}\r\n","import MohayonaoWaveLibrary from \"./wave/mohayonao.library.js\";\r\nimport {Library} from \"../song\";\r\n\r\nexport default class extends Library {\r\n  getTitle() { return \"Periodic Wave Library Index\"; }\r\n  getLibraries() {\r\n    return [\r\n      new MohayonaoWaveLibrary()\r\n    ];\r\n  }\r\n}\r\n","\nimport {Library} from \"../../../song\";\n\nexport default class extends Library {\n\tgetTitle() { return \"FreeWaveSamples.com\"; }\n}\n","import FWSLibrary from \"./gm/fws/fws.library.js\";\r\n\r\nimport {Library} from \"../song\";\r\n\r\nexport default class extends Library {\r\n  getTitle() { return \"Sample Library Index\"; }\r\n  getLibraries() {\r\n    return [\r\n        new FWSLibrary()\r\n    ];\r\n  }\r\n\r\n  getPlaylists() {\r\n    return [\r\n      \"assets/files/test.pl.json;Test Playlist\"\r\n    ]\r\n  }\r\n}\r\n","import WaveLibrary from \"./samples/wave.library.js\";\r\nimport SampleLibrary from \"./samples/sample.library\";\r\nimport MohayonaoWaveLibrary from \"./samples/wave/mohayonao.library.js\";\r\n\r\nimport {Library} from \"./song\";\r\n\r\nexport default class extends Library {\r\n  getTitle() { return \"Audio Source Index\"; }\r\n  getLibraries() {\r\n    return [\r\n      new SampleLibrary(),\r\n      new WaveLibrary(),\r\n      new MohayonaoWaveLibrary(),\r\n    ];\r\n  }\r\n\r\n  getPlaylists() {\r\n    return [\r\n      \"assets/files/test.pl.json;Test ASPPlaylist\"\r\n    ]\r\n  }\r\n}\r\n\r\n"],"sourceRoot":""}