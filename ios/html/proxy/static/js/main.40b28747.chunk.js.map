{"version":3,"sources":["audio-source/components/div/ASUIDiv.js","audio-source/components/icon/ASUIIcon.js","audio-source/components/button/ASUIButton.js","audio-source/components/button/ASUIButtonDropDown.js","audio-source/components/form/ASUIForm.js","audio-source/components/form/ASUIPanel.js","audio-source/components/input-range/ASUIInputRange.js","audio-source/components/index.js","audio-source/components/menu/dropdown/ASUIMenuDropDown.js","audio-source/components/menu/index.js","audio-source/common/keyboard/Keyboard.js","audio-source/song/index.js","audio-source/common/values/Values.js","audio-source/common/prompt/PromptManager.js","audio-source/common/program/ProgramLoader.js","audio-source/song/instruction/InstructionIterator.js","audio-source/song/instruction/QuantizedInstructionIterator.js","audio-source/song/instruction/index.js","audio-source/song/instruction/Instruction.js","audio-source/common/storage/LocalStorage.js","audio-source/common/storage/Storage.js","audio-source/components/menu/dropdown/ASUIDropDownContainer.js","audio-source/song/instruction/TrackInstruction.js","audio-source/3rdparty/chip-player-js-lib/src/players/Player.js","audio-source/3rdparty/chip-player-js-lib/src/effects/SubBass.js","audio-source/3rdparty/chip-player-js-lib/src/players/GMEPlayer.js","audio-source/3rdparty/chip-player-js-lib/src/chip-core.js","audio-source/3rdparty/chip-player-js-lib/src/players/XMPPlayer.js","audio-source/song/file/GMESongFile.js","audio-source/song/file/JSONSongFile.js","audio-source/song/config/ConfigListener.js","audio-source/programs/instrument/voice/AudioBufferInstrument.js","audio-source/programs/instrument/voice/render/AudioBufferInstrumentRenderer.js","audio-source/programs/instrument/voice/render/AudioBufferInstrumentRendererStyle.js","audio-source/programs/instrument/loader/PeriodicWaveLoader.js","audio-source/programs/instrument/voice/OscillatorInstrument.js","audio-source/programs/instrument/voice/render/OscillatorInstrumentRenderer.js","audio-source/programs/instrument/voice/render/OscillatorInstrumentRendererBase.js","audio-source/programs/instrument/poly/PolyphonyInstrument.js","audio-source/programs/instrument/poly/render/PolyphonyInstrumentRendererBase.js","audio-source/programs/instrument/poly/render/PolyphonyInstrumentRenderer.js","audio-source/programs/player/gme/GMEPlayerSynthesizer.js","audio-source/programs/player/gme/GMEPlayerSynthesizerRenderer.js","audio-source/programs/instrument/test/TestInstrument.js","audio-source/programs/index.js","audio-source/song/Song.js","audio-source/components/menu/ASUIMenuContext.js","audio-source/song/library/Library.js","audio-source/song/track/TrackIterator.js","audio-source/components/button/ASUIClickableBase.js","audio-source/song/track/TrackPlayback.js","audio-source/song/values/SongValues.js","audio-source/components/menu/ASUIMenuAction.js","audio-source/components/menu/ASUIMenuBreak.js","audio-source/common/program/index.js","audio-source/components/menu/overlay/ASUIMenuOverlayContainerBase.js","audio-source/components/menu/overlay/ASUIMenuOverlayContainer.js","audio-source/song/file/FileService.js","audio-source/song/instruction/NoteInstruction.js","audio-source/song/instruction/CommandInstruction.js","audio-source/song/instruction/MIDIInstruction.js","audio-source/player/playlist/ASPPlaylistEntry.js","audio-source/player/playlist/ASPPlaylist.js","audio-source/player/ASPlayerStyle.js","audio-source/player/header/ASPlayerHeader.js","audio-source/player/ASPlayerActions.js","audio-source/player/ASPlayerMenu.js","audio-source/player/ASPlayerRenderer.js","audio-source/player/ASPlayer.js","audio-source/composer/track/state/ActiveTrackState.js","audio-source/composer/track/instruction/param/ASCTrackInstructionParameter.js","audio-source/composer/track/instruction/ASCTrackInstructionBase.js","audio-source/composer/track/instruction/ASCTrackInstruction.js","audio-source/composer/track/position/ASCTrackPosition.js","audio-source/composer/track/instruction/ASCTrackInstructionAdd.js","audio-source/composer/track/delta/ASCTrackDelta.js","audio-source/composer/track/row/ASCTrackRow.js","audio-source/composer/track/ASCTrackBase.js","audio-source/composer/track/ASCTrack.js","audio-source/composer/program/ASCProgramRenderer.js","audio-source/composer/program/ASCProgramRendererBase.js","audio-source/composer/container/ASComposerContainer.js","audio-source/composer/track/container/ASCTracksContainerBase.js","audio-source/composer/track/container/ASCTracksContainer.js","audio-source/composer/ASComposerMenu.js","audio-source/composer/ASComposerRenderer.js","audio-source/composer/ASComposer.js","audio-source/composer/ASComposerInput.js","audio-source/composer/ASComposerPlayback.js","audio-source/composer/ASComposerActions.js","audio-source/song/proxy/SongProxyWebViewClient.js","App.js","serviceWorker.js","index.js","audio-source/samples/wave/mohayonao.library.js","audio-source/samples/wave.library.js","audio-source/samples/gm/fws/fws.library.js","audio-source/samples/sample.library.js","audio-source/default.library.js"],"names":["ASUIDiv","children","this","props","React","Component","ASUIIcon","className","source","ASUIButton","cb","onMouseInput","e","onKeyDown","context","overlay","disabled","console","warn","constructor","name","onAction","Error","closeAllDropDownMenus","ASUIClickableBase","defaultProps","propTypes","PropTypes","func","isRequired","bool","ASUIButtonDropDown","dropdown","createRef","arrow","vertical","key","ASUIDropDownContainer","ref","options","current","toggleMenu","hoverMenu","any","ASUIForm","header","ASUIPanel","ASUIInputRange","onChange","onClick","preventDefault","newValue","parseFloat","target","value","log","type","min","max","step","title","ASUIMenuDropDown","getClassName","selected","onMouseEnter","tabIndex","defaultPrevented","isDefaultPrevented","info","Keyboard","layoutName","octave","Number","isInteger","keyboardLayout","getKeyboardLayout","command","i","replace","Values","onSelectValue","keyboardOctave","renderMenuSelectCommandByFrequency","renderMenuSelectCommandByOctave","renderMenuSelectCommandByNamed","renderMenuSelectCommandByTrack","a","PromptManager","openPromptDialog","values","getAllNamedFrequencies","noteName","frequency","programID","onTrackAdd","getAllSongGroups","trackName","state","selectedTrack","hasBreak","getNoteFrequencies","renderMenuSelectCommandByFrequencyOctave","getNoteOctaves","renderMenuSelectCommandByOctaveFrequency","currentDuration","timeDivision","renderMenuSelect","results","push","currentVelocity","customAction","velocity","mixerValue","getNoteVelocities","menuTitle","ProgramLoader","getRegisteredPrograms","map","config","d","Date","getTime","performance","now","c","r","Math","random","floor","toString","callback","freq","noteList","j","length","noteFrequency","result","addResult","noteFrequencies","vi","beatsPerMeasure","beatsPerMeasureString","beatPerMeasure","beatsPerMinute","beatsPerMinuteString","beatPerMinute","lengthInTicks","lengthString","forEach","commandString","seconds","m","ms","round","padStart","formattedSeconds","parts","split","parseInt","note","noteQuarterToneList","noteScale","slice","isNaN","keyNumber","pow","durationString","units","substr","fraction","indexOf","fractionSplit","input","stringValue","getNoteDurations","duration","beatDivisor","toFixed","message","defaultValue","window","prompt","confirm","song","destination","loadInstanceFromID","data","programs","getData","getProgramClassInfo","classProgram","loadInstance","Renderer","classRenderer","registeredProgramClasses","stopPlayback","classes","stopProgramPlayback","unloadAll","classInfo","InstructionIterator","instructionList","instructions","currentIndex","positionTicks","endPositionTicks","positionSeconds","endPositionSeconds","lastInstructionPositionInTicks","lastInstructionPositionInSeconds","rowCount","cursorPosition","instruction","deltaDurationTicks","elapsedTime","durationTicks","trackEndPositionInTicks","trackPlaybackEndTime","index","instructionData","Instruction","getInstruction","hasReachedEnd","currentInstruction","incrementPositionByInstruction","rowCallback","instructionCallback","nextInstruction","QuantizedInstructionIterator","quantizationTicks","nextQuantizationBreakInTicks","nextPositionTicks","getNextInstructionPositionInTicks","doRow","row","updateNextQuantizationBreakInTicks","nextInstructionRow","nextQuantizedInstructionRow","formatDuration","newCommand","newDeltaDuration","newDuration","trackList","Object","keys","processInstructionTrack","Array","isArray","parseInstruction","unshift","require","LocalStorage","json","replacer","space","encodedString","JSON","stringify","compressedString","LZString","compress","decompress","parse","localStorage","setItem","getItem","Storage","decodeForStorage","encodeForStorage","songData","songHistory","uuid","generateUUID","songRecentUUIDs","error","filter","entry","encodedSongRecentUUIDs","encodedSongData","instructionsKey","jsonStringInstructions","tracks","jsonString","assign","dataStr","encodeURIComponent","downloadAnchorNode","document","createElement","setAttribute","fileName","body","appendChild","click","remove","songUUID","songDataString","songHistoryString","batchRecentCommands","batchCommand","getBatchRecentCommands","batchRecentSearches","getBatchRecentSearches","open","stick","divRef","prevProps","prevState","snapshot","getOverlay","addCloseMenuCallback","closeMenu","bind","removeCloseMenuCallback","updateScreenPosition","Provider","parentDropDown","isHoverEnabled","openMenu","stickMenu","setTimeout","closeMenus","getAncestorMenus","Promise","setState","menu","stayOpenOnStick","menus","parent","closeAllMenus","div","rect","getBoundingClientRect","right","innerWidth","classList","add","bottom","innerHeight","contextType","ASUIMenuContext","TrackInstruction","undefined","newTrackName","Player","audioCtx","destNode","chipCore","onPlayerStateUpdate","_outerAudioProcess","paused","fileExtensions","metadata","destinationNode","bufferSize","_innerAudioProcess","audioNode","createScriptProcessor","onaudioprocess","debug","location","search","timeCount","renderTime","perfLoggingInterval","fileExtension","toLowerCase","filename","startMs","author","connect","stopped","fn","event","start","end","cost","budget","sampleRate","audioprocess","outputBuffer","numberOfChannels","getChannelData","fill","filepath","meta","pop","system","shift","game","artist","SubBass","iirCalculator","CalcCascades","lowpass1Coeffs","lowpass","order","characteristic","Fs","Fc","gain","lowpass2Coeffs","highpassCoeffs","highpass","lowpass1","IirFilter","lowpass2","sCurr","sPrev","cycleCounter","dcAvg","dcWeight","exp","envAvg","envWeight","envelopeStep","sample","removeDcStep","abs","process","sBass","singleStep","env","sOctaves","emu","libgme","GMEPlayer","setParameter","getParameter","getParamDefs","subtune","tempo","params","subbass","buffer","allocate","ALLOC_NORMAL","emuPtr","subBass","setAudioProcess","gmeAudioProcess","channel","channels","getPositionMs","getDurationMs","fadingOut","setFadeout","_gme_track_ended","_gme_play","getValue","sub","_gme_track_count","playSubtune","suspend","_parseMetadata","_gme_start_track","filepathMeta","metadataFromFilepath","formatNeedsBass","match","ccall","stop","resume","metadataPtr","_gme_track_info","offset","readInt32","readString","raw","ptr","char","encoding","convert","to","intro_length","loop_length","play_length","copyright","comment","UTF8ToString","_gme_voice_name","_gme_voice_count","_gme_tell_scaled","id","label","isPaused","val","_gme_set_tempo","_gme_set_fade","voices","mask","isEnabled","_gme_mute_voices","positionMs","muteAudioDuringCall","_gme_seek_scaled","_gme_delete","CHIP_CORE","Module","moduleOverrides","hasOwnProperty","read_","readBinary","arguments_","thisProgram","scriptDirectory","currentScript","src","lastIndexOf","url","xhr","XMLHttpRequest","send","responseText","wasmBinary","wasmMemory","out","err","dynamicAlloc","size","ret","HEAP32","DYNAMICTOP_PTR","_emscripten_get_heap_size","abort","getNativeTypeSize","bits","assert","setValue","noSafe","charAt","HEAP8","HEAP16","tempI64","tempDouble","Math_abs","Math_min","Math_floor","Math_ceil","HEAPF32","HEAPF64","WebAssembly","wasmTable","Table","ABORT","condition","text","HEAPU8","UTF8Decoder","TextDecoder","UTF8ArrayToString","u8Array","idx","maxBytesToRead","endIdx","endPtr","subarray","decode","str","u0","u1","u2","String","fromCharCode","ch","stringToUTF8Array","outU8Array","outIdx","maxBytesToWrite","startIdx","u","charCodeAt","stringToUTF8","outPtr","lengthBytesUTF8","len","writeArrayToMemory","array","set","updateGlobalBufferAndViews","buf","Int8Array","Int16Array","Int32Array","Uint8Array","Uint16Array","Uint32Array","Float32Array","Float64Array","INITIAL_INITIAL_MEMORY","callRuntimeCallbacks","callbacks","arg","Memory","byteLength","__ATPRERUN__","__ATINIT__","__ATMAIN__","__ATPOSTRUN__","ceil","runDependencies","runDependencyWatcher","dependenciesFulfilled","addRunDependency","removeRunDependency","clearInterval","what","RuntimeError","isDataURI","prototype","startsWith","path","wasmBinaryFile","getBinary","ASM_CONSTS","161276","$0","161441","161499","stackTrace","js","stack","jsStackTrace","x","___wasm_call_ctors","___exception_infos","__ZSt18uncaught_exceptionv","uncaught_exceptions","___setErrNo","PATH","splitPath","exec","normalizeArray","allowAboveRoot","up","last","splice","normalize","isAbsolute","trailingSlash","p","join","dirname","root","dir","basename","lastSlash","extname","paths","call","arguments","join2","l","PATH_FS","resolve","resolvedPath","resolvedAbsolute","FS","cwd","TypeError","relative","from","trim","arr","fromParts","toParts","samePartsLength","outputParts","concat","TTY","ttys","init","shutdown","register","dev","ops","output","registerDevice","stream_ops","stream","tty","node","rdev","ErrnoError","seekable","close","flush","read","pos","get_char","bytesRead","timestamp","write","put_char","default_tty_ops","readline","intArrayFromString","default_tty1_ops","MEMFS","ops_table","mount","createNode","mode","isBlkdev","isFIFO","getattr","node_ops","setattr","lookup","mknod","rename","unlink","rmdir","readdir","symlink","llseek","file","mmap","msync","link","readlink","chrdev","chrdev_stream_ops","isDir","contents","isFile","usedBytes","isLink","isChrdev","getFileDataAsRegularArray","getFileDataAsTypedArray","expandFileStorage","newCapacity","prevCapacity","oldContents","resizeFileStorage","newSize","attr","ino","nlink","uid","gid","atime","mtime","ctime","blksize","blocks","genericErrors","old_node","new_dir","new_name","new_node","lookupNode","entries","newname","oldpath","position","canOwn","whence","prot","flags","allocated","fromHeap","_malloc","byteOffset","mmapFlags","mounts","devices","streams","nextInode","nameTable","currentPath","initialized","ignorePermissions","trackingDelegate","tracking","openFlags","READ","WRITE","filesystems","syncFSRequests","handleFSError","errno","lookupPath","opts","defaults","follow_mount","recurse_count","current_path","islast","isMountpoint","mounted","follow","count","getPath","isRoot","mountpoint","hashName","parentid","hash","hashAddNode","name_next","hashRemoveNode","errCode","mayLookup","nodeName","FSNode","destroyNode","isSocket","flagModes","modeStringToFlags","flagsToPermissionString","flag","perms","nodePermissions","mayCreate","mayDelete","isdir","mayOpen","MAX_OPEN_FDS","nextfd","fd_start","fd_end","fd","getStream","createStream","FSStream","object","get","isRead","isWrite","isAppend","newStream","closeStream","device","getDevice","major","minor","makedev","ma","mi","getMounts","check","apply","syncfs","populate","completed","doCallback","done","errored","pseudo","mountRoot","unmount","next","create","mkdir","mkdirTree","dirs","mkdev","newpath","old_path","new_path","old_dir","old_dirname","new_dirname","old_name","stat","dontFollow","lstat","chmod","lchmod","fchmod","chown","lchown","fchown","truncate","ftruncate","utime","created","ungotten","readFiles","trackingFlags","isClosed","getdents","seeking","bytesWritten","munmap","ioctl","cmd","readFile","writeFile","actualNumBytes","ArrayBuffer","isView","chdir","createDefaultDirectories","createDefaultDevices","random_device","crypto","randomBuffer","getRandomValues","createDevice","createSpecialDirectories","createStandardStreams","ensureErrnoError","setErrno","code","staticInit","quit","fflush","getMode","canRead","canWrite","joinPath","forceRelative","absolutePath","base","standardizePath","findObject","dontResolveLastLink","analyzePath","exists","parentExists","parentPath","parentObject","createFolder","createPath","reverse","part","createFile","properties","createDataFile","createLink","forceLoadFile","obj","isDevice","isFolder","success","createLazyFile","LazyUint8Array","lengthKnown","chunks","chunkOffset","chunkSize","chunkNum","getter","setDataGetter","cacheLength","status","datalength","getResponseHeader","hasByteServing","usesGzip","lazyArray","setRequestHeader","responseType","overrideMimeType","response","doXHR","_length","_chunkSize","defineProperties","createPreloadedFile","onload","onerror","dontCreateFile","preFinish","Browser","fullname","processData","byteArray","finish","handled","plugin","asyncLoad","indexedDB","mozIndexedDB","webkitIndexedDB","msIndexedDB","DB_NAME","pathname","DB_VERSION","DB_STORE_NAME","saveFilesToDB","openRequest","onupgradeneeded","createObjectStore","onsuccess","transaction","files","objectStore","ok","fail","total","putRequest","put","loadFilesFromDB","db","getRequest","SYSCALLS","mappings","DEFAULT_POLLMASK","umask","calculateAt","dirfd","dirstream","doStat","doMsync","addr","doMkdir","doMknod","doReadlink","bufsize","endChar","doAccess","amode","doDup","suggestFD","suggest","doReadv","iov","iovcnt","curr","doWritev","varargs","getStr","getStreamFromFD","get64","low","high","_abs","emscripten_realloc_buffer","grow","ENV","_emscripten_get_environ","strings","navigator","languages","__isLeapYear","year","__arraySum","sum","__MONTH_DAYS_LEAP","__MONTH_DAYS_REGULAR","__addDays","date","days","newDate","leap","getFullYear","currentMonth","getMonth","daysInCurrentMonth","getDate","setDate","setMonth","setFullYear","readAsmConstArgs","sigPtr","args","stringy","dontAddNull","u8array","numBytesWritten","asmLibraryArg","line","destructor","adjusted","refcount","caught","rethrown","op","argp","_free","malloc","syscallMunmap","argbuf","dest","num","copyWithin","requestedSize","oldSize","multiple","cutDown","overGrownHeapSize","__environ","environ_buf","bufSize","string","writeAsciiToMemory","penviron_count","penviron_buf_size","pnum","offset_low","offset_high","newOffset","s","maxsize","format","tm","tm_zone","tm_sec","tm_min","tm_hour","tm_mday","tm_mon","tm_year","tm_wday","tm_yday","tm_isdst","tm_gmtoff","pattern","EXPANSION_RULES_1","rule","RegExp","WEEKDAYS","MONTHS","leadingSomething","digits","character","leadingNulls","compareByDay","date1","date2","sgn","compare","getFirstWeekStartDate","janFourth","getDay","getWeekBasedYear","thisDate","janFourthThisYear","janFourthNextYear","firstWeekStartThisYear","firstWeekStartNextYear","EXPANSION_RULES_2","substring","twelveHour","janFirst","firstSunday","endDate","februaryFirstUntilEndMonth","daysDifference","firstMonday","off","ahead","bytes","_strftime","asm","receiveInstance","instance","module","exports","receiveInstantiatedSource","instantiateArrayBuffer","receiver","fetch","reject","credentials","then","catch","binary","instantiate","reason","instantiateStreaming","instantiateAsync","createWasm","calledRun","stackSave","stackAlloc","stackRestore","run","doRun","postRun","preRun","ident","returnType","argTypes","toC","getCFunc","cArgs","converter","Boolean","convertReturnValue","slab","types","allocator","zeroinit","singleType","typeSize","previousType","old","runCaller","GMESongFile","ChipCore","locateFile","prefix","endsWith","onRuntimeInitialized","audioContext","uint8Array","player","loadData","numVoices","getNumVoices","setTempo","setVoices","AudioContext","loadPlayerFromBuffer","loadSongDataFromPlayer","version","rootGroup","fileURL","arrayBuffer","JSONSongFile","reader","FileReader","readAsText","fileResult","TARGET","Symbol","LISTENER","ConfigListener","updateTimeout","changeListeners","prop","v","b","number","deleteCount","newValues","Proxy","queueChange","action","queueHistoryAction","proxyObject","listener","addChangeListener","AudioBufferInstrument","audioBuffer","loadAudioBuffer","decodeAudioData","frequencyValue","startTime","onended","velocityGain","createGain","createBufferSource","loop","playbackRate","getCommandFrequency","detune","AudioBufferInstrumentRenderer","sampleID","instrumentID","sampleData","getSampleData","sampleName","toggleOpen","mixer","openMenuChangeMixer","openOnHover","openMenuChangeDetune","openMenuChangeKeyRoot","alias","openMenuChangeKeyAlias","range","openMenuChangeKeyRange","changeLoop","openMenuRoot","openMenuChangeLoop","openMenuChangeSample","renderMenu","changeMixer","detuneValue","changeDetune","getSong","changeRoot","changeAlias","menuKey","changeRange","newMixerValue","samples","getSampleID","newDetuneValue","newRootValue","newAliasValue","newLoopValue","PeriodicWaveLoader","waveURLCache","waveData","real","imag","createPeriodicWave","OscillatorInstrument","oldDestination","waveLoader","osc","createOscillator","isPeriodicWaveAvailable","setPeriodicWave","getCachedPeriodicWaveFromURL","loadPeriodicWaveFromURL","periodicWave","playingOSCs","OscillatorInstrumentRenderer","getTitle","renderParameters","renderMenuRoot","library","Library","loadDefault","renderMenuChangeMixer","renderMenuChangeDetune","renderMenuChangeKeyRoot","renderMenuChangeKeyAlias","renderMenuChangeKeyRange","newType","preset","renderMenuChangeOscillator","renderMenuChangeLoop","onRemove","renderMenuChangeOscillatorStandard","renderMenuProgramAllPresets","presetConfig","loadPreset","changeOscillator","renderMenuSelectCommand","noteNameOctave","PolyphonyInstrument","voiceID","voiceClassName","voiceConfig","voiceClass","voice","loadVoice","playFrequency","PolyphonyInstrumentRendererBase","removeVoice","addVoice","instrumentClassName","promptUser","instrumentConfig","openConfirmDialog","newVoiceID","setStatus","setError","newTitle","songLengthAllPresets","PolyphonyInstrumentRenderer","voiceData","renderMenuAddVoice","libGMESupport","GMEPlayerSynthesizer","fileBuffer","service","FileService","loadBufferFromURL","spcBuffer","loadBuffer","namedFrequency","loadGMEPlayer","spcPlayer","spcPlayers","currentTime","waitTime","seekPos","seekPlaybackPosition","play","pause","aliasName","getCommandKeyNumber","noteCommands","GMEPlayerSynthesizerRenderer","TestInstrument","addProgramClass","ProgramList","Song","eventListeners","programLoader","volume","lastVolumeGain","playback","generateTitle","startTrack","track0","track1","getProxiedData","history","SongValues","loadSongData","programLoadAll","dispatchEventCallback","dispatchEvent","eventName","listenerCallback","eventName2","listenerCallback2","unloadAllPrograms","playbackPosition","processInstructionTracks","currentTrackName","program","noteStartTime","noteDuration","noteVelocity","onstart","parseFrequencyString","getClass","getConfig","programList","programLoadInstanceFromID","programLoadRenderer","programClassName","programConfig","oldConfig","programGetConfig","isLastProgram","resolveProxiedObject","instructionGetList","insertPositionInTicks","insertInstructionData","parseDurationAsTicks","insertInstruction","iterator","instructionGetIterator","currentPositionInTicks","splitDuration","modifyIndex","instructionReplaceDeltaDuration","instructionInsertAtIndex","lastInsertIndex","lastPauseIndex","insertIndex","deleteIndex","deleteInstruction","instructionGetByIndex","replaceIndex","newDelta","newVelocity","removeTrackName","oldTrackName","removedGroupData","TrackIterator","getStartTrackName","seekToEnd","getEndPositionInSeconds","songPositionInTicks","getGroupPositionFromTicks","groupPositionInTicks","currentPosition","elapsedTicks","ticksToSeconds","positionInSeconds","getSongPlaybackPosition","getGroupPositionInTicks","secondsToTicks","newVolume","getSongPositionFromTicks","setPlaybackPosition","songPosition","startPosition","TrackPlayback","awaitPlaybackReachedEnd","getPositionInSeconds","stopAllPlayback","selectedIndices","addInstructionFilter","trackStats","playAtStartingTrackIndex","noteDurationTicks","playProgram","pathList","oldData","historyAction","applyHistoryAction","lastPath","replaceValue","oldValue","filePath","fileExt","toJSON","DEFAULT_VOLUME","unimplemented","createContext","removeDropDownMenu","openMenuItem","addDropDownMenu","presets","getPresets","onSelectPreset","programClass","renderMenuProgramNew","includeRecent","lastSelectedLibrary","renderMenuProgramPresets","getLibraries","renderMenuLibraryOptions","onSelectLibraryOptions","cache","cacheURL","libraryConfig","defaultLibrary","default","libraryData","URL","startingTrackName","startingBeatsPerMinute","startingTimeDivision","onEvent","activeTracks","startingStats","startTrackIteration","totalPositionSeconds","totalEndPositionSeconds","subTrackStats","getTrackName","CommandInstruction","processCommandInstruction","processTrackInstruction","seekLength","seekPosition","finished","seekToPosition","processInstruction","seekToIndex","renderChildren","doAction","active","endPromise","endResolve","playInstructionCallback","playInstruction","playingIndices","filterCallback","oldCallback","seekInterval","setInterval","renderPlayback","currentPositionSeconds","getPlaybackPosition","timeTillFinished","NoteInstruction","noteIndex","programInfo","ASUIMenuAction","ASUIMenuBreak","ASUIMenuOverlayContainerBase","openOverlay","openMenus","updateOverlayTimeout","renderContent","isActive","menuItem","closeMenuCallback","findIndex","updateOverlay","butThese","ASUIMenuOverlayContainer","renderOverlay","renderDropDown","archiveBuffers","torrentCache","trackerURLS","time","getFileBufferFromTorrent","timeEnd","torrentID","t","torrentURL","getBuffer","parsedURL","hostname","getTorrent","torrent","archiveFilePath","archiveBuffer","getFileBufferFromArchive","decompress7ZipArchive","requireWebTorrent","WebTorrent","magnetURL","getMagnetURL","client","infoHash","DataStorage","INTERRUPT","fda","filedata","rootdata","worker7z","Worker","onmessage","terminate","fda0","postMessage","totalMemory","FilesDataArray","AudioSourceLoader","customElements","relativeScriptPath","scriptElm","findScript","promises","head","newCommandName","getCommandName","oldProgram","programInstance","loadProgramFromParams","useDestination","useProgram","getParams","MIDIInstruction","ASPPlaylistEntry","playlist","fade","formattedLength","toISOString","onInput","ASPPlaylist","selectedPositions","eachEntry","entryData","depth","toggleEntryAtPosition","entryElm","closest","isPlaylist","togglePlaylist","playlistMoveToEntry","playlistPlay","ASPlayerStyle","ASPlayerHeader","portrait","menuContent","ASPlayerActions","onSongEventCallback","onSongEvent","isPlaying","removeEventListener","addEventListener","songLength","getSongLengthInSeconds","playlistPosition","getCurrentEntryPosition","currentEntry","getCurrentEntry","forceUpdate","getAudioContext","newStatus","versionString","saveSongToFile","webkitAudioContext","volumeGain","setVolume","maxSongLength","fieldSongPosition","playbackPositionInSeconds","roundedSeconds","fieldSongTiming","formatPlaybackPosition","throwException","getEntry","foundEntry","each","entryPosition","togglePlaylistEntry","loading","loadPlaylistDataFromURL","playlistURL","addEntryToPlaylist","loadSongFromFileInput","loadSongFromURL","playlistData","urlPrefix","parseEntryData","insertAtPosition","accept","openFileDialog","addInputFileToPlaylist","setCurrentSong","playing","playlistMoveToNextSongEntry","scrollToEntry","loadSongFromPlaylistEntry","currentSong","isPlaylistActive","setPlaybackPositionInTicks","playlistStop","setPlaylistPosition","nextEntry","getEntryPosition","playlistMovePosition","getPlaylistCount","totalCount","findEntryPosition","entryUrl","playbackPercentage","setSongPosition","scrollIntoViewIfNeeded","scrollIntoView","toggle","setFullScreen","contains","renderFileMenu","renderPlaylistMenu","renderViewMenu","renderFileMemoryMenu","openSongFromFileDialog","storage","getRecentSongList","loadSongFromMemory","playlistNext","clearPlaylist","toggleFullscreen","fullscreen","togglePanelSong","showPanelSong","togglePanelPlaylist","showPanelPlaylist","footerVersionText","renderRootMenu","playlistPause","fieldSongFileLoad","fieldSongVolume","setSongPositionPrompt","setSongNamePrompt","setSongVersionPrompt","fieldSongVersion","newSongVersion","openSongSource","styleContainer","ASPlayer","playlistActive","onResizeCallback","onResize","loadURLAsPlaylist","loadState","saveState","aspectRatio","containerElm","detail","updateSongPositionValue","waitForPlaybackToEnd","updateSongPositionMaxLength","updateSongPositionInterval","stopPropagation","dataTransfer","dropEffect","ActiveTrackState","composer","newState","updateState","DEFAULT_BEATS_PER_MEASURE","cursorOffset","cursorPositionTicks","currentCommand","destinationList","rowLength","DEFAULT_ROW_LENGTH","rowOffset","trackLengthTicks","segmentLengthTicks","DEFAULT_BEATS_PER_SEGMENT","segmentPositions","ASCTrackInstructionParameter","onContextMenu","shiftKey","trackerInstruction","selectInstruction","ASCTrackInstructionBase","tracker","getTracker","getComposer","cursor","parameters","commandParam","formatSongDuration","renderMenuSelectVelocity","renderMenuSelectDuration","getTrackInfo","updateCurrentInstruction","playInstructions","getInstructionIndex","clearSelection","toggleValue","getTrackState","setCursorOffset","trackerToggleTrack","button","selectInstructionWithAction","ctrlKey","instructionReplaceCommand","instructionReplaceVelocity","instructionReplaceDuration","instructionReplaceCommandSelected","ASCTrackInstruction","focus","onMouseDown","ASCTrackPosition","ASCTrackInstructionAdd","ASCTrackDelta","ASCTrackRow","highlight","rowDeltaDuration","deltaDuration","selectRow","ASCTrackBase","onWheel","trackerGetCursorInfo","trackState","instructionGetQuantizedIterator","cursorIndex","selectIndices","trackerSelectIndices","trackSongPosition","trackSongPositionFound","beatsPerMeasureTicks","rowContent","rowInstructionElms","getNextRowPositionTicks","newRowElm","buttons","selectedSegmentID","segmentID","DEFAULT_MAX_SEGMENTS","segmentPosition","trackerSetRowOffset","renderMenuTrackerSetQuantization","renderMenuTrackerSetSegmentLength","trackerPlay","newRowOffset","deltaY","instructionDeleteSelected","instructionInsert","songPlay","nextOffset","previousOffset","previousRowOffset","nextRowOffset","cursorInstruction","keyboardCommand","keyboard","getKeyboardCommand","DEFAULT_MIN_SEGMENTS","ASCTrack","container","passive","renderRowSegments","renderRowContent","renderRowOptions","ASCProgramRenderer","programGetData","programIDHTML","titleHTML","hasProgram","toggleContainer","renderProgramContent","presetClassName","programReplace","renderMenuChangePreset","renderMenuChangeProgram","programRename","programRemove","renderMenuProgramAll","programGetClassName","ASComposerContainer","renderHeader","renderFooter","ASCTracksContainerBase","renderTracks","selectedTrackName","selectedTrackID","ASCTracksContainer","ASComposerMenu","renderMenuFile","renderMenuEdit","renderMenuTrack","renderMenuProgram","renderMenuView","loadNewSongData","renderMenuFileOpen","renderMenuFileSave","renderMenuFileImport","renderMenuFileExport","renderMenuFileOpenMemory","saveSongToMemory","getSongPrograms","renderMenuSelectAvailableProgram","trackGetState","renderMenuEditInsert","renderMenuEditSetCommand","renderMenuEditSetDuration","renderMenuEditSetVelocity","renderMenuEditSelect","renderMenuEditBatch","instructionInsertPrompt","instructionReplaceCommandSelectedPrompt","instructionReplaceDurationSelected","renderMenuEditSelectBatch","recentBatchSearch","batchSelect","recentBatchCommand","renderMenuEditBatchRecent","batchRunCommand","renderMenuEditBatchRecentExecuteSearch","trackerChangeQuantization","getTrackerSegmentLengthInRows","trackerChangeSegmentLength","keyboardChangeOctave","hidePanelSongs","togglePanelTracker","hidePanelTracker","togglePanelPrograms","hidePanelProgram","renderMenuProgramAdd","renderMenuProgramEdit","programAdd","renderMenuProgramEditReplace","trackAdd","renderMenuTrackEdit","trackRename","trackRemove","songPause","songStop","setSongPositionPercentage","timingString","programEach","instructionReplaceVelocitySelected","trackerSelectIndicesPrompt","renderMenuKeyboardSetOctave","renderWebViewProxy","ASComposer","timeouts","renderPrograms","autoSaveTimeout","update","panelPrograms","clearTimeout","saveAll","updateForms","onUnloadCallback","requestMIDIAccess","MIDI","inputDevices","inputs","inputDevice","loadDefaultSong","updateCurrentSong","newSongTitle","setSongName","setSongVersion","newSongBeatsPerMinute","recentSongUUID","getFileSupportModule","loadSongDataFromBuffer","fileService","loadSongDataFromFileInput","loadBufferFromFileInput","readAsArrayBuffer","loadSongHistoryFromMemory","loadSongHistory","parsePlaybackPosition","newInstruction","songPositionTicks","instructionInsertAtPosition","instructionDeleteAtIndex","getVolumeGain","getDestination","playSelectedInstructions","generateInstructionTrackName","trackData","trackerUpdateSegmentInfo","trackerQuantizationTicks","track","trackerSegmentLengthInRows","trackerGetIterator","qIterator","trackerGetQuantizedIterator","lastSegmentPositionTicks","currentRowStartPosition","lastRowStartPosition","column","cursorRow","currentRowOffset","adjustedCursorRow","maxLength","instructionFindGroupLength","querySelectorAll","elm","sort","cursorInfo","firstSelectedInstruction","getDurationString","newCursorOffset","newScrollPositionTicks","scrollPositionTicks","trackerGetTrackInfo","calculateRowOffset","findCursorRow","newProgramTitle","oldProgramTitle","programRemoveID","searchCallbackString","addBatchRecentSearches","commandCallbackString","addBatchRecentCommands","SongProxyWebViewClient","webView","onMessage","nextProps","nextState","ReactNativeWebView","_SONG","View","handleCommand","songMethod","App","menuOpen","playerElm","switchToMenu","updateMenu","renderPlayer","renderComposer","render","onToggleMenu","onUpdateMenu","onRenderMenu","ReactDOM","getElementById","serviceWorker","ready","registration","unregister","baseURL","MohayonaoWaveLibrary","FWSLibrary","SampleLibrary","WaveLibrary"],"mappings":"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","file":"static/js/main.40b28747.chunk.js","sourcesContent":["import React from 'react';\n\n/** Div **/\nexport default class ASUIDiv extends React.Component {\n\n    render() {\n        let children = this.props.children;\n        if(typeof children === \"function\")\n            children = children(this);\n        return <div {...this.props}>{children}</div>;\n    }\n}\n\n","import React from 'react';\nimport PropTypes from \"prop-types\";\n\nimport \"./assets/ASUIIcon.css\";\n\n/** Icon **/\nclass ASUIIcon extends React.Component {\n\n    /** Property validation **/\n    static propTypes = {\n        source: PropTypes.any.isRequired,\n    };\n\n    constructor(props = {}) {\n        super(props, {});\n    }\n\n    render() {\n        let className = \"asui-icon\";\n        if(this.props.source) {\n            className += ' ' + this.props.source;\n        }\n        return <div className={className}/>;\n    }\n\n}\n\nexport default ASUIIcon;\n","import PropTypes from 'prop-types';\n\nimport ASUIClickableBase from \"./ASUIClickableBase\";\n\nexport default class ASUIButton extends ASUIClickableBase {\n\n    /** Default Properties **/\n    static defaultProps = {\n    };\n\n    /** Property validation **/\n    static propTypes = {\n        onAction: PropTypes.func.isRequired,\n        disabled: PropTypes.bool,\n    };\n\n\n    constructor(props) {\n        super(props);\n        this.cb = {\n            onMouseInput: e => this.onMouseInput(e),\n            onKeyDown: e => this.onKeyDown(e),\n        };\n    }\n\n    getOverlay() { return this.context.overlay; }\n\n    getClassName() { return 'asui-button'; }\n\n\n    /** Actions **/\n\n    async doAction(e) {\n        if(this.props.disabled) {\n            console.warn(this.constructor.name + \" is disabled.\", this);\n            return;\n        }\n\n        if(!this.props.onAction)\n            throw new Error(\"Button does not contain props 'onAction'\");\n        const result = await this.props.onAction(e, this);\n        if (result !== false)\n            this.closeAllDropDownMenus();\n    }\n\n\n}\n\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport ASUIDropDownContainer from \"../menu/dropdown/ASUIDropDownContainer\";\nimport ASUIClickableBase from \"./ASUIClickableBase\";\n\nimport \"./assets/ASUIButton.css\"\n\nexport default class ASUIButtonDropDown extends ASUIClickableBase {\n    // Default Properties\n    static defaultProps = {\n        arrow:          true,\n        vertical:       true,\n    };\n\n    // Property validation\n    static propTypes = {\n        options: PropTypes.any.isRequired,\n    };\n\n    constructor(props) {\n        super(props);\n        this.dropdown = React.createRef();\n    }\n\n    getClassName() { return 'asui-button'; }\n\n\n    renderChildren(props = {}) {\n        let arrow = this.props.arrow === true ? (this.props.vertical ? '▼' : '►') : this.props.arrow;\n        return [\n            super.renderChildren(props),\n            arrow ? <div className=\"arrow\" key=\"arrow\">{arrow}</div> : null,\n            <ASUIDropDownContainer\n                key=\"dropdown\"\n                ref={this.dropdown}\n                disabled={this.props.disabled}\n                options={this.props.options}\n                vertical={this.props.vertical}\n            />\n        ];\n    }\n\n\n    toggleMenu()    { return this.dropdown.current.toggleMenu(); }\n    hoverMenu()     { return this.dropdown.current.hoverMenu(); }\n\n    doAction(e) {\n        this.toggleMenu();\n    }\n}\n","import React from \"react\";\nimport \"./assets/ASUIForm.css\"\nimport PropTypes from \"prop-types\";\n\nclass ASUIForm extends React.Component {\n    /** Default Properties **/\n    static defaultProps = {\n    };\n\n    /** Property validation **/\n    static propTypes = {\n        className: PropTypes.string,\n        header: PropTypes.any,\n    };\n\n    render() {\n        let className = 'asui-form';\n        if(this.props.className)\n            className += ' ' + this.props.className;\n\n        let children = this.props.children;\n        if(typeof children === \"function\")\n            children = children(this);\n\n        return (\n            <div className={className}>\n                {this.props.header ? <div className=\"header\">{this.props.header}</div> : null}\n                <div className=\"container\">\n                    {children}\n                </div>\n            </div>\n        )\n    }\n}\n\n/** Export this script **/\nexport default ASUIForm;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./assets/ASUIPanel.css\"\n\nclass ASUIPanel extends React.Component {\n    /** Default Properties **/\n    static defaultProps = {\n    };\n\n    /** Property validation **/\n    static propTypes = {\n        className: PropTypes.string,\n        header: PropTypes.any,\n    };\n\n    render() {\n        let className = 'asui-panel';\n        if(this.props.className)\n            className += ' ' + this.props.className;\n\n        let children = this.props.children;\n        if(typeof children === \"function\")\n            children = children(this);\n\n        return (\n            <div\n                {...this.props}\n                className={className}\n                >\n                {this.props.header ? <div className=\"header\">{this.props.header}</div> : null}\n                {children}\n            </div>\n        )\n    }\n}\n/** Export this script **/\nexport default ASUIPanel;\n","import React from \"react\";\nimport \"./assets/ASUIInputRange.scss\";\nimport PropTypes from \"prop-types\";\n\nclass ASUIInputRange extends React.Component {\n    /** Default Properties **/\n    static defaultProps = {\n    };\n\n    /** Property validation **/\n    static propTypes = {\n        onChange: PropTypes.func.isRequired,\n    };\n\n\n\n    constructor(props = {}) {\n        super(props);\n        this.cb = {\n            onChange: e => this.onChange(e),\n            onClick: e => this.onClick(e),\n        };\n    }\n\n    onClick(e) {\n        e.preventDefault();\n        const newValue = parseFloat(e.target.value);\n        this.props.onChange(newValue)\n        // e.preventDefault();\n    }\n\n    onChange(e) {\n        console.log(e);\n        e.preventDefault();\n        const newValue = parseFloat(e.target.value);\n        this.props.onChange(newValue)\n        // this.setState({value: newValue});\n    }\n\n    render() {\n        let className = \"asui-input-range\";\n        if(this.props.className)\n            className += ' ' + this.props.className;\n        return (\n            <input\n                className={className}\n                type=\"range\"\n                value={this.props.value}\n                onChange={this.cb.onChange}\n                onClick={this.cb.onClick}\n                min={this.props.min}\n                max={this.props.max}\n                step={this.props.step}\n                name={this.props.name}\n                title={this.props.title}\n                />\n        )\n    }\n\n}\n\n\n/** Export this script **/\nexport default ASUIInputRange;\n","\nimport ASUIDiv from \"./div/ASUIDiv\";\nimport ASUIIcon from \"./icon/ASUIIcon\";\nimport {\n    ASUIButton,\n    ASUIButtonDropDown\n} from \"./button/\";\n\nimport {\n    ASUIMenuAction,\n    ASUIMenuDropDown,\n    ASUIMenuBreak,\n    ASUIMenuOverlayContainer\n} from \"./menu/\";\n\nimport ASUIForm from \"./form/ASUIForm\";\nimport ASUIPanel from \"./form/ASUIPanel\";\n\nimport ASUIInputRange from \"./input-range/ASUIInputRange\";\n\nexport {\n    ASUIDiv,\n    ASUIIcon,\n    ASUIForm,\n    ASUIPanel,\n\n    ASUIButton,\n    ASUIButtonDropDown,\n\n    ASUIMenuAction,\n    ASUIMenuBreak,\n    ASUIMenuDropDown,\n    ASUIMenuOverlayContainer,\n\n    ASUIInputRange,\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport \"../assets/ASUIMenu.css\";\nimport ASUIDropDownContainer from \"./ASUIDropDownContainer\";\n\nexport default class ASUIMenuDropDown extends React.Component {\n    // Default Properties\n    static defaultProps = {\n        arrow:          true,\n        vertical:       false,\n    };\n\n    // Property validation\n    static propTypes = {\n        options: PropTypes.any.isRequired,\n    };\n\n\n    constructor(props) {\n        super(props);\n\n        this.cb = {\n            onKeyDown: (e) => this.onKeyDown(e),\n            onMouseInput: e => this.onMouseInput(e),\n        };\n        this.dropdown = React.createRef();\n    }\n\n\n    getClassName() { return 'asui-menu-item'; }\n\n    render() {\n        let className = this.getClassName(); // 'asui-menu-item';\n        if(this.props.className)\n            className += ' ' + this.props.className;\n        if(this.props.disabled)\n            className += ' disabled';\n        if(this.props.selected)\n            className += ' selected';\n\n        let arrow = this.props.arrow === true ? (this.props.vertical ? '▼' : '►') : this.props.arrow;\n        return (\n            <div\n                title={this.props.title}\n                className={className}\n                onMouseEnter={this.cb.onMouseInput}\n                onClick={this.cb.onMouseInput}\n                onKeyDown={this.cb.onKeyDown}\n                tabIndex={0}\n                >\n                {this.props.children}\n                {arrow ? <div className=\"arrow\">{arrow}</div> : null}\n                <ASUIDropDownContainer\n                    ref={this.dropdown}\n                    disabled={this.props.disabled}\n                    options={this.props.options}\n                    vertical={this.props.vertical}\n                    />\n            </div>\n        )\n    }\n\n    toggleMenu()    { return this.dropdown.current.toggleMenu(); }\n    hoverMenu()     { return this.dropdown.current.hoverMenu(); }\n\n    onMouseInput(e) {\n        if(e.defaultPrevented)\n            return;\n        e.preventDefault();\n        switch(e.type) {\n            case 'click':\n                // Try onClick handler first to avoid causing a state change within a render\n                if(this.props.onClick)\n                    if(this.props.onClick(e) === false)\n                        return;\n                this.toggleMenu();\n                break;\n\n            case 'mouseenter':\n            case 'mouseover':\n                this.hoverMenu();\n                break;\n\n            default:\n                throw new Error(\"Unknown Mouse event: \" + e.type);\n        }\n    }\n\n\n\n    onKeyDown(e) {\n        if(e.isDefaultPrevented())\n            return;\n        switch(e.key) {\n            case ' ':\n            case 'Enter':\n                this.toggleMenu();\n                break;\n\n            default:\n                console.info(\"Unhandled key: \", e.key);\n                break;\n        }\n    }\n    onMouseEnter(e) {\n        this.toggleMenu();\n    }\n\n}\n","import ASUIMenuAction from \"./ASUIMenuAction\";\nimport ASUIMenuDropDown from \"./dropdown/ASUIMenuDropDown\";\nimport ASUIDropDownContainer from \"./dropdown/ASUIDropDownContainer\";\nimport ASUIMenuBreak from \"./ASUIMenuBreak\";\nimport ASUIMenuOverlayContainer from \"./overlay/ASUIMenuOverlayContainer\";\n\nexport {\n    ASUIMenuAction,\n    ASUIMenuBreak,\n    ASUIMenuDropDown,\n    ASUIDropDownContainer,\n    ASUIMenuOverlayContainer\n}\n","class Keyboard {\n\n    getKeyboardLayout(layoutName=null) {\n        switch(layoutName) {\n            default:\n            case '2octave':\n                return {\n                    '@':'C#4',  '#':'D#4',  '%':'F#4', '^':'G#4',   '&':'A#4',  '*':'C#3',  ')':'D#3',\n                    'Q':'C4',   'W':'D4',   'E':'E4',   'R':'F4',   'T':'G4',   'Y':'A4',   'U':'B4',   'I':'C3',   'O':'D3',   'P':'E3',\n                    'S':'C#3',  'D':'D#3',  'G':'F#3',  'H':'G#3',  'J':'A#3',  'L':'C#4',  ':':'D#4',\n                    'Z':'C3',   'X':'D3',   'C':'E3',   'V':'F3',   'B':'G3',   'N':'A3',   'M':'B3', '<':'C4', '>':'D4', '?':'E4',\n\n                    '2':'C#2', '3':'D#2', '5':'F#2', '6':'G#2', '7':'A#2', '9':'C#3', '0':'D#3',\n                    'q':'C2', 'w':'D2', 'e':'E2', 'r':'F2', 't':'G2', 'y':'A2', 'u':'B2', 'i':'C3', 'o':'D3', 'p':'E3',\n                    's':'C#1', 'd':'D#1', 'g':'F#1', 'h':'G#1', 'j':'A#1', 'l':'C#2', ';':'D#2',\n                    'z':'C1', 'x':'D1', 'c':'E1', 'v':'F1', 'b':'G1', 'n':'A1', 'm':'B1', ',':'C2', '.':'D2', '/':'E2',\n                };\n\n            case '4octave':\n                return {\n                    // '1':'C4', '2':'C#4', '3':'D4', '4':'D#4', '5':'E4', '6':'F4', '7':'F#4', '8': 'G4', '9':'G#4', '0':'A4', \"-\":'A#4', \"=\":'B4', // TODO special commands?\n                    'Q':'C6', 'W':'C#6', 'E':'D6', 'R':'D#6', 'T':'E6', 'Y':'F6', 'U':'F#6', 'I': 'G6', 'O':'G#6', 'P':'A6', \"{\":'A#6', \"}\":'B6',\n                    'A':'C5', 'S':'C#5', 'D':'D5', 'F':'D#5', 'G':'E5', 'H':'F5', 'J':'F#5', 'K': 'G5', 'L':'G#5', ':':'A5', '\"': 'A#5',\n                    'Z':'C4', 'X':'C#4', 'C':'D4', 'V':'D#4', 'B':'E4', 'N':'F4', 'M':'F#4', '<': 'G4', '>':'G#4', '?':'A4',\n\n\n                    'q':'C3', 'w':'C#3', 'e':'D3', 'r':'D#3', 't':'E3', 'y':'F3', 'u':'F#3', 'i': 'G3', 'o':'G#3', 'p':'A3', \"[\":'A#3', \"]\":'B3',\n                    'a':'C2', 's':'C#2', 'd':'D2', 'f':'D#2', 'g':'E2', 'h':'F2', 'j':'F#2', 'k': 'G2', 'l':'G#2', ';':'A2', \"'\":'A#2',\n                    'z':'C1', 'x':'C#1', 'c':'D1', 'v':'D#1', 'b':'E1', 'n':'F1', 'm':'F#1', ',': 'G1', '.':'G#1', '/':'A1',\n                };\n        }\n    }\n\n    getKeyboardCommand(key, octave = 3, layoutName = null) {\n        if (!Number.isInteger(octave))\n            throw new Error(\"Octave value must be an integer\");\n        const keyboardLayout = this.getKeyboardLayout(layoutName);\n        if (typeof keyboardLayout[key] === 'undefined')\n            return null;\n        // const octave = parseInt(this.editor.track.fieldTrackerOctave.value) || 1;\n        let command = keyboardLayout[key];\n        for (let i = 6; i >= 1; i--)\n            command = command.replace(i, octave + i - 1);\n        return command;\n    }\n\n}\n\n\nexport default Keyboard;\n","\nimport Song from \"./Song\";\nimport Storage from \"../common/storage/Storage\";\nimport Keyboard from \"../common/keyboard/Keyboard\"\nimport {ProgramLoader} from \"../common/program\";\nimport {Instruction, NoteInstruction, TrackInstruction, InstructionIterator} from \"./instruction\";\nimport SongValues from \"./values/SongValues\";\nimport {TrackIterator, TrackPlayback} from \"./track\";\nimport Library from \"./library/Library\";\nexport {\n    Song,\n    Library,\n    ProgramLoader,\n\n    Instruction,\n    NoteInstruction,\n    TrackInstruction,\n    InstructionIterator,\n\n    TrackIterator,\n    TrackPlayback,\n\n    Storage,\n\n    Keyboard,\n\n    SongValues,\n}\n","import {ASUIMenuAction, ASUIMenuBreak, ASUIMenuDropDown} from \"../../components/menu\";\nimport {ASUIInputRange} from \"../../components\";\nimport ProgramLoader from \"../program/ProgramLoader\";\nimport React from \"react\";\nimport PromptManager from \"../prompt/PromptManager\";\n\nclass Values {\n\n    /** Menus **/\n\n    // TODO: move copy to SongValues\n    static renderMenuSelectCommand(onSelectValue, keyboardOctave=null) {\n        return (<>\n            <ASUIMenuDropDown options={() => this.renderMenuSelectCommandByFrequency(onSelectValue, keyboardOctave)}           >By Frequency</ASUIMenuDropDown>\n            <ASUIMenuDropDown options={() => this.renderMenuSelectCommandByOctave(onSelectValue, keyboardOctave)}              >By Octave</ASUIMenuDropDown>\n            <ASUIMenuBreak />\n            <ASUIMenuDropDown disabled options={() => this.renderMenuSelectCommandByNamed(onSelectValue)}               >By Alias</ASUIMenuDropDown>\n            <ASUIMenuDropDown disabled options={() => this.renderMenuSelectCommandByTrack(onSelectValue)}               >By Group</ASUIMenuDropDown>\n            <ASUIMenuAction onAction={async e => onSelectValue(await PromptManager.openPromptDialog(\"Insert custom command\"))}      >Custom Command</ASUIMenuAction>\n        </>);\n\n    }\n\n\n    // TODO: move copy to SongValues\n    static renderMenuSelectCommandByNamed(onSelectValue) {\n        return this.values.getAllNamedFrequencies((noteName, frequency, programID) =>\n            <ASUIMenuAction\n                key={noteName}\n                onAction={e => onSelectValue(noteName)}\n                children={noteName}\n            />\n        );\n    }\n\n    // TODO: move copy to SongValues\n    static renderMenuSelectCommandByTrack(onSelectValue, onTrackAdd=null) {\n        return (<>\n            {this.getAllSongGroups((trackName) =>\n                trackName === this.trackName ? null :\n                    <ASUIMenuAction\n                        key={trackName}\n                        disabled={trackName === this.state.selectedTrack}\n                        onAction={e => onSelectValue('@' + trackName)}\n                    >{trackName}</ASUIMenuAction>\n            )}\n            <ASUIMenuAction onAction={onTrackAdd} hasBreak  >Create New Track</ASUIMenuAction>\n        </>);\n    }\n\n\n    // renderMenuSelectCommandByCurrentOctave(onSelectValue, octave=null) {\n    //     octave = octave !== null ? octave : this.state.keyboardOctave;\n    //     return Values.getNoteFrequencies((noteName) =>\n    //         <MenuAction key={noteName} onAction={e => onSelectValue(`${noteName}${octave}`)}     >{noteName}{octave}</MenuAction>\n    //     );\n    // }\n\n\n    static renderMenuSelectCommandByFrequency(onSelectValue, keyboardOctave=null) {\n        return this.getNoteFrequencies((noteName) =>\n            <ASUIMenuDropDown key={noteName} options={() => this.renderMenuSelectCommandByFrequencyOctave(onSelectValue, noteName, keyboardOctave)}>\n                {noteName}\n            </ASUIMenuDropDown>\n        );\n    }\n\n    // TODO: move into lower menu?\n    static renderMenuSelectCommandByFrequencyOctave(onSelectValue, noteName, keyboardOctave=null) {\n        return (<>\n            {keyboardOctave !== null ? <ASUIMenuAction onAction={() => onSelectValue(noteName+''+keyboardOctave)}>{noteName+''+keyboardOctave} (Current)</ASUIMenuAction> : null}\n            {this.getNoteOctaves((octave) =>\n                <ASUIMenuAction key={octave} onAction={() => onSelectValue(noteName+''+octave)}>\n                    {noteName+''+octave}\n                </ASUIMenuAction>\n            )}\n        </>)\n    }\n\n    static renderMenuSelectCommandByOctave(onSelectValue, keyboardOctave=null) {\n        return (<>\n            {keyboardOctave !== null ? <ASUIMenuDropDown key={keyboardOctave} options={() => this.renderMenuSelectCommandByOctaveFrequency(onSelectValue, keyboardOctave)}>\n                {keyboardOctave} (Current)\n            </ASUIMenuDropDown> : null}\n            {this.getNoteOctaves((octave) =>\n                <ASUIMenuDropDown key={octave} options={() => this.renderMenuSelectCommandByOctaveFrequency(onSelectValue, octave)}>\n                    {octave}\n                </ASUIMenuDropDown>\n            )}\n        </>)\n    }\n\n    static renderMenuSelectCommandByOctaveFrequency(onSelectValue, octave) {\n        return this.getNoteFrequencies((noteName) =>\n            <ASUIMenuAction key={noteName} onAction={() => onSelectValue(noteName+''+octave)}     >{noteName+''+octave}</ASUIMenuAction>\n        );\n    }\n\n\n    static renderMenuSelectDuration(onSelectValue, currentDuration, timeDivision) {\n        return (<>\n            <ASUIMenuDropDown disabled options={() => renderMenuSelect('recent')}    >Recent</ASUIMenuDropDown>\n            <ASUIMenuBreak />\n            <ASUIMenuDropDown options={() => renderMenuSelect('fraction')}  >Fraction</ASUIMenuDropDown>\n            <ASUIMenuDropDown options={() => renderMenuSelect('triplet')}   >Triplet</ASUIMenuDropDown>\n            <ASUIMenuDropDown options={() => renderMenuSelect('dotted')}    >Dotted</ASUIMenuDropDown>\n            <ASUIMenuBreak />\n            <ASUIMenuDropDown disabled options={() => renderMenuSelect('custom')}    >Custom</ASUIMenuDropDown>\n        </>);\n\n        function renderMenuSelect(key) {\n            let results = [];\n            switch(key) {\n                case 'fraction':\n                    for (let i = 64; i > 1; i /= 2)\n                        results.push(\n                            <ASUIMenuAction key={`${i}a`} onAction={() => onSelectValue(1 / i * timeDivision, `1/${i}B`)}  >{`1/${i}B`}</ASUIMenuAction>\n                        );\n                    for (let i = 1; i <= 16; i++)\n                        results.push(\n                            <ASUIMenuAction key={`${i}b`} onAction={() => onSelectValue(i * timeDivision, i + 'B')}  >{i + 'B'}</ASUIMenuAction>\n                        );\n                    break;\n\n                case 'triplet':\n                    for (let i = 64; i > 1; i /= 2)\n                        results.push(\n                            <ASUIMenuAction key={`${i}a`} onAction={() => onSelectValue(1 / (i / 1.5) * timeDivision, `1/${i}T`)}  >{`1/${i}T`}</ASUIMenuAction>\n                        );\n                    for (let i = 1; i <= 16; i++)\n                        results.push(\n                            <ASUIMenuAction key={`${i}b`} onAction={() => onSelectValue((i / 1.5) * timeDivision, i + 'T')}  >{i + 'T'}</ASUIMenuAction>\n                        );\n                    break;\n\n                case 'dotted':\n                    for (let i = 64; i > 1; i /= 2)\n                        results.push(\n                            <ASUIMenuAction key={`${i}a`} onAction={() => onSelectValue(1 / (i * 1.5) * timeDivision, `1/${i}D`)}  >{`1/${i}D`}</ASUIMenuAction>\n                        );\n                    for (let i = 1; i <= 16; i++)\n                        results.push(\n                            <ASUIMenuAction key={`${i}b`} onAction={() => onSelectValue((i * 1.5) * timeDivision, i + 'D')}  >{i + 'D'}</ASUIMenuAction>\n                        );\n                    break;\n\n                default:\n                    throw new Error(\"Unknown key\");\n            }\n            return results;\n        }\n    }\n\n    static renderMenuSelectVelocity(onSelectValue, currentVelocity=null) {\n        const customAction = async () => {\n            const velocity = await PromptManager.openPromptDialog(\"Enter custom velocity (1-127)\", 127);\n            onSelectValue(velocity);\n        };\n        return (<>\n            <ASUIMenuAction onAction={()=>{}} disabled>Set Velocity</ASUIMenuAction>\n            <ASUIInputRange\n                min={0}\n                max={127}\n                value={currentVelocity}\n                onChange={(mixerValue) => onSelectValue(mixerValue)}\n            />\n            <ASUIMenuBreak/>\n            {this.getNoteVelocities((velocity) =>\n                <ASUIMenuAction key={velocity} onAction={() => onSelectValue(velocity)}  >{velocity}</ASUIMenuAction>)}\n            <ASUIMenuAction onAction={customAction} hasBreak >Custom</ASUIMenuAction>\n        </>);\n    }\n\n    /** @deprecated moved to Library **/\n    static renderMenuSelectAvailableProgram(onSelectValue, menuTitle=null) {\n        return (<>\n            {menuTitle ? <><ASUIMenuAction disabled onAction={() => {}}>{menuTitle}</ASUIMenuAction><ASUIMenuBreak/></> : null}\n            {ProgramLoader.getRegisteredPrograms().map((config, i) =>\n                <ASUIMenuAction key={i} onAction={() => onSelectValue(config.className)}       >{config.title}</ASUIMenuAction>\n            )}\n        </>);\n    }\n\n\n    /** UUID **/\n    static generateUUID() {\n        var d = new Date().getTime();\n        if (typeof performance !== 'undefined' && typeof performance.now === 'function') {\n            d += performance.now(); //use high-precision timer if available\n        }\n        return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n            var r = (d + Math.random() * 16) % 16 | 0;\n            d = Math.floor(d / 16);\n            // eslint-disable-next-line no-mixed-operators\n            return (c === 'x' ? r : (r & 0x3 | 0x8)).toString(16);\n        });\n    }\n\n    /** Values **/\n\n    static getNoteFrequencies(callback = (freq) => freq) {\n        const results = [];\n        const noteList = this.noteList();\n        for (let j = 0; j < noteList.length; j++) {\n            const noteFrequency = noteList[j];\n            const result = callback(noteFrequency);\n            if(!addResult(results, result)) return results;\n        }\n        return results;\n    }\n\n    static getNoteOctaves(callback = (octave) => octave) {\n        const results = [];\n        for (let i = 1; i <= 8; i++) {\n            const result = callback(i);\n            if(!addResult(results, result)) return results;\n        }\n        return results;\n    }\n\n\n    static getOctaveNoteFrequencies(callback = (freq) => freq) {\n        const results = [];\n        const noteFrequencies = this.noteList();\n        for (let i = 1; i <= 8; i++) {\n            for (let j = 0; j < noteFrequencies.length; j++) {\n                const noteFrequency = noteFrequencies[j] + i;\n                const result = callback(noteFrequency);\n                if(!addResult(results, result)) return results;\n            }\n        }\n        return results;\n    }\n\n\n    static getNoteVelocities(callback = (velocity) => velocity) {\n        const results = [];\n        for (let vi = 100; vi >= 0; vi -= 10) {\n            const result = callback(vi);\n            if(!addResult(results, result)) return results;\n        }\n        return results;\n    }\n\n\n\n    static getBeatsPerMeasure(callback = (beatsPerMeasure, beatsPerMeasureString) => [beatsPerMeasure, beatsPerMeasureString]) {\n        const results = [];\n        for (let beatPerMeasure = 1; beatPerMeasure <= 12; beatPerMeasure++) {\n            const result = callback(beatPerMeasure, beatPerMeasure + ` beat${beatPerMeasure > 1 ? 's' : ''} per measure`);\n            if(!addResult(results, result)) return results;\n        }\n        return results;\n    }\n\n    static getBeatsPerMinute(callback = (beatsPerMinute, beatsPerMinuteString) => [beatsPerMinute, beatsPerMinuteString]) {\n        const results = [];\n        for (let beatPerMinute = 40; beatPerMinute <= 300; beatPerMinute += 10) {\n            const result = callback(beatPerMinute, beatPerMinute + ` beat${beatPerMinute > 1 ? 's' : ''} per minute`);\n            if(!addResult(results, result)) return results;\n        }\n        return results;\n    }\n\n    static getTrackerSegmentLengthInRows(callback = (lengthInTicks, lengthString) => [lengthInTicks, lengthString]) {\n        const results = [];\n        [4, 5, 6, 7, 8, 10, 12, 16, 24, 32, 48, 64, 96, 128]\n            .forEach(i => {\n                const result = callback(i, i + ' Rows');\n                if(!addResult(results, result)) return results;\n            });\n        return results;\n    }\n\n    static formatVelocity(velocity) {\n        if (typeof velocity !== 'number')\n            return 'N/A'; // throw new Error(\"Invalid Program\");\n        return velocity === 100 ? \"Max\" : velocity + '';\n    }\n\n\n\n    static formatProgramID(programID) {\n        if (typeof programID !== 'number')\n            return 'N/A'; // throw new Error(\"Invalid Program\");\n        return programID < 10 ? \"0\" + programID : \"\" + programID;\n    }\n\n    static formatCommand(commandString) {\n        return commandString;\n    }\n\n    static formatPlaybackPosition(seconds) {\n        let m = Math.floor(seconds / 60);\n        seconds = seconds % 60;\n        let ms = Math.round((seconds - Math.floor(seconds)) * 1000);\n        seconds = Math.floor(seconds);\n\n        m = (m + '').padStart(2, '0');\n        seconds = (seconds + '').padStart(2, '0');\n        ms = (ms + '').padStart(3, '0'); // TODO: ticks?\n        return `${m}:${seconds}:${ms}`;\n    }\n\n    static parsePlaybackPosition(formattedSeconds) {\n        const parts = formattedSeconds.toString().split(':');\n        return (parseInt(parts[0], 10) * 60)\n            + (parseInt(parts[1], 10))\n            + (parseInt(parts[2], 10) / 1000);\n    }\n\n    static parseFrequencyString(note) {\n        if (typeof note !== \"string\")\n            throw new Error(\"Frequency is not a string\");\n        if (!note)\n            throw new Error(\"Frequency is null\");\n\n        const noteQuarterToneList = this.noteQuarterToneList();\n        const noteScale = note.slice(0, -1);\n        const octave = parseInt(note.slice(-1));\n        if(isNaN(octave))\n            throw new Error(\"Invalid octave value: \" + note);\n        if(typeof noteQuarterToneList[noteScale] === \"undefined\")\n            throw new Error(\"Unrecognized Note: \" + noteScale);\n        let keyNumber = noteQuarterToneList[noteScale];\n\n        if (keyNumber < 6)\n            keyNumber = keyNumber + 24 + ((octave - 1) * 24) + 2;\n        else\n            keyNumber = keyNumber + ((octave - 1) * 24) + 2;\n\n        return 440 * Math.pow(2, (keyNumber - 98) / 24);\n    }\n\n\n    /** Duration **/\n    static parseDurationAsTicks(durationString, timeDivision) {\n        if(!timeDivision)\n            throw new Error(\"Invalid timeDivision\");\n        if (typeof durationString !== 'string')\n            return durationString;\n        const units = durationString.substr(durationString.length - 1);\n        let fraction = durationString.substr(0, durationString.length - 1);\n        if(fraction.indexOf('/') !== -1) {\n            const fractionSplit = fraction.split('/');\n            fraction = parseInt(fractionSplit[0], 10) / parseInt(fractionSplit[1], 10);\n        }\n        switch (units) {\n            case 't':\n                return parseInt(fraction);\n            case 'B':\n                return timeDivision * parseFloat(fraction);\n            case 'D':\n                return timeDivision * 1.5 * parseFloat(fraction);\n            case 'T':\n                return timeDivision / 1.5 * parseFloat(fraction);\n            default:\n                throw new Error(\"Invalid Duration: \" + durationString);\n        }\n    }\n\n    static formatDuration(input, timeDivision) {\n        let stringValue;\n        this.getNoteDurations((duration, durationString) => {\n            if (input === duration || input === durationString) {\n                stringValue = durationString;\n                return false;\n            }\n        }, timeDivision);\n\n        if (stringValue)\n            return stringValue;\n        const beatDivisor = input / timeDivision;\n        if(beatDivisor === Math.round(beatDivisor))\n            return beatDivisor + 'B';\n\n        input = parseFloat(input).toFixed(2);\n        return input.replace('.00', 't');\n    }\n\n\n    static getNoteDurations(callback = (duration, durationString) => [duration, durationString], timeDivision) {\n        const results = [];\n        for (let i = 64; i > 1; i /= 2) {\n            let result = callback(1 / i * timeDivision, `1/${i}B`);            // Full Beats\n            if(!addResult(results, result)) return results;\n        }\n        for (let i = 64; i > 1; i /= 2) {\n            let result = callback((1 / i) / 1.5 * timeDivision, `1/${i}T`); // Triplet\n            if(!addResult(results, result)) return results;\n        }\n        for (let i = 64; i > 1; i /= 2) {\n            let result = callback(1 / i * 1.5 * timeDivision, `1/${i}D`);      // Dotted\n            if(!addResult(results, result)) return results;\n        }\n\n        for (let i = 1; i <= 16; i++) {\n            let result = callback(i * timeDivision, `${i}B`);            // Full Beats\n            if(!addResult(results, result)) return results;\n        }\n\n        for (let i = 1; i <= 16; i++) {\n            let result = callback(i / 1.5 * timeDivision, `${i}T`); // Triplet\n            if(!addResult(results, result)) return results;\n        }\n\n        for (let i = 1; i <= 16; i++) {\n            let result = callback(i * 1.5 * timeDivision, `${i}D`);      // Dotted\n            if(!addResult(results, result)) return results;\n        }\n        return results;\n    }\n\n    // get noteFrequencies() {\n    //     return this.renderer.noteFrequencies; // ['C', 'C#', 'D', 'D#', 'E', 'F', 'F#', 'G', 'G#', 'A', 'A#', 'B'];\n    // }\n\n\n    /** Frequency **/\n    // const noteCommands = ['A', 'A#', 'B', 'C', 'C#', 'D', 'D#', 'E', 'F', 'F#', 'G', 'G#'];\n    // Uses quarter tones\n    static noteList() {\n        return [\n            'A',\n            'A#',\n            'Bb',\n            'B',\n            'C',\n            'C#',\n            'Db',\n            'D',\n            'D#',\n            'Eb',\n            'E',\n            'E#',\n            'F',\n            'F#',\n            'Gb',\n            'G',\n            'G#',\n            'Ab',\n        ]\n    }\n\n    static noteQuarterToneList() {\n        return {\n            'A': 0,\n            'Aq': 1,\n            'A#': 2,\n            'A#q': 3,\n            'Bb': 2,\n            'Bbq': 3,\n            'B': 4,\n            'Bq': 5,\n            'C': 6,\n            'Cq': 7,\n            'C#': 8,\n            'C#q': 9,\n            'Db': 8,\n            'Dbq': 9,\n            'D': 10,\n            'Dq': 11,\n            'D#': 12,\n            'D#q': 13,\n            'Eb': 12,\n            'Ebq': 13,\n            'E': 14,\n            'Eq': 15,\n            'E#': 16,\n            'E#q': 17,\n            'F': 16,\n            'Fq': 17,\n            'F#': 18,\n            'F#q': 19,\n            'Gb': 18,\n            'Gbq': 19,\n            'G': 20,\n            'Gq': 21,\n            'G#': 22,\n            'G#q': 23,\n            'Ab': 22,\n            'Abq': 23,\n        }\n    }\n}\n\nfunction addResult (results, result) {\n    if (result !== null && typeof result !== \"undefined\")\n        results.push(result);\n    return result === false ? result : true;\n}\n\n\n\nexport default Values;\n\n\n","\nexport default class PromptManager {\n\n    /** Prompt **/\n\n    static async openPromptDialog(message, defaultValue='') {\n        return window.prompt(message, defaultValue);\n    }\n\n    static async openConfirmDialog(message) {\n        return window.confirm(message);\n    }\n}\n","import React from \"react\";\n\nclass ProgramLoader {\n    constructor(song) {\n        this.song = song;\n        // this.audioContext = audioContext;\n        // this.destinations = new WeakMap();\n    }\n\n\n    loadInstanceFromDestination(programID, destination) {\n        return this.loadInstanceFromID(programID);\n        // let programs = this.destinations.get(destination);\n        // if(!programs) {\n        //     programs = {};\n        //     this.destinations.set(destination, programs);\n        // }\n        // if(typeof programs[programID] === \"undefined\")\n        //     programs[programID] = this.programLoadInstance(programID);\n\n        // return programs[programID];\n    }\n\n    getData(programID) {\n        if (!this.song.data.programs[programID])\n            throw new Error(\"Invalid program ID: \" + programID);\n        return this.song.data.programs[programID];\n    }\n\n\n    getClassName(programID) {\n        const [className] = this.getData(programID);\n        return className;\n    }\n    getConfig(programID) {\n        const [, config] = this.getData(programID);\n        return config;\n    }\n    getClass(programID) {\n        const className = this.getClassName(programID);\n        const {classProgram} = ProgramLoader.getProgramClassInfo(className);\n        return classProgram;\n    }\n\n    loadInstanceFromID(programID) {\n        const [className, config] = this.getData(programID);\n        return ProgramLoader.loadInstance(className, config);\n    }\n\n\n    programLoadRenderer(programID) {\n        const [className, config] = this.getData(programID);\n        const {classRenderer: Renderer} = ProgramLoader.getProgramClassInfo(className);\n        return <Renderer\n            programID={programID}\n            config={config}\n        />;\n    }\n\n\n    /** Actions **/\n\n    stopProgramPlayback(programID) {\n        const classes = ProgramLoader.registeredProgramClasses;\n        const {classProgram} = classes[programID];\n        if(!classProgram.stopPlayback) {\n            // console.warn(classProgram.name + \" has no static stopPlayback method\");\n        } else {\n            classProgram.stopPlayback();\n        }\n    }\n\n    stopAllPlayback() {\n        const classes = ProgramLoader.registeredProgramClasses;\n        for(let i=0; i<classes.length; i++) {\n            this.stopProgramPlayback(i);\n        }\n    }\n\n    unloadAllPrograms() {\n        const classes = ProgramLoader.registeredProgramClasses;\n        for(let i=0; i<classes.length; i++) {\n            const {classProgram} = classes[i];\n            if(!classProgram.unloadAll) {\n                // TODO: use instance, not static\n                // console.warn(classProgram.name + \" has no static unloadAll method\");\n                continue;\n            }\n            classProgram.unloadAll();\n        }\n\n    }\n\n    /** Menu **/\n\n\n\n    /** Static **/\n\n    static loadInstance(className, config={}) {\n        const {classProgram} = this.getProgramClassInfo(className);\n        return new classProgram(config);\n    }\n\n    static getProgramClassInfo(className) {\n        const classes = ProgramLoader.registeredProgramClasses;\n        for(let i=0; i<classes.length; i++) {\n            const classInfo = classes[i];\n            if(classInfo.className === className)\n                return classInfo;\n        }\n        throw new Error(`Program class ${className} was not found`);\n    }\n\n\n\n    static addProgramClass(className, classProgram, classRenderer=null, title=null) {\n        // const className = classProgram.name;\n        const classes = ProgramLoader.registeredProgramClasses;\n        title = title || classProgram.name;\n        classes.push({classProgram, classRenderer, className, title})\n    }\n\n    static getRegisteredPrograms() { return ProgramLoader.registeredProgramClasses; }\n        // const classes = ProgramLoader.registeredProgramClasses;\n        // const results = [];\n        // for(let i=0; i<classes.length; i++) {\n        //     const classInfo = classes[i];\n        //     const {classObject, name, config} = classInfo;\n        //     const result = callback(classObject, name, config);\n        //     if(result !== null) results.push(result);\n        //     if(result === false) break;\n        // }\n        // return results;\n    // }\n    static registeredProgramClasses = []\n}\n\nexport default ProgramLoader;\n\n","import Instruction from \"./Instruction\";\n\nclass InstructionIterator {\n    constructor(instructionList, timeDivision, beatsPerMinute) {\n        this.instructions = instructionList;\n        this.beatsPerMinute = beatsPerMinute;\n        this.timeDivision = timeDivision;\n\n        this.currentIndex = -1; // TODO: rename to index?\n        this.positionTicks = 0;\n        this.endPositionTicks = 0;\n        this.positionSeconds = 0;\n        this.endPositionSeconds = 0;\n        this.lastInstructionPositionInTicks = 0;\n        this.lastInstructionPositionInSeconds = 0;\n        this.rowCount = 0;\n        this.cursorPosition = 0;\n\n        // this.nextQuantizationBreakInTicks = null;\n        // this.stats = stats || {};\n\n    }\n\n    hasReachedEnd() {\n        return this.currentIndex >= this.instructions.length - 1;\n    }\n\n    incrementPositionByInstruction(instruction, callback=null) {\n        const deltaDurationTicks = instruction.deltaDurationTicks;\n        this.positionTicks = this.lastInstructionPositionInTicks + deltaDurationTicks;\n        this.lastInstructionPositionInTicks = this.positionTicks;\n\n        const elapsedTime = (deltaDurationTicks / this.timeDivision) / (this.beatsPerMinute / 60);\n        this.positionSeconds = this.lastInstructionPositionInSeconds + elapsedTime;\n        this.lastInstructionPositionInSeconds = this.positionSeconds;\n\n        const durationTicks = instruction.durationTicks || 0;\n        if(durationTicks) {\n\n            const trackEndPositionInTicks = this.positionTicks + durationTicks;\n            if (trackEndPositionInTicks > this.endPositionTicks)\n                this.endPositionTicks = trackEndPositionInTicks;\n            const trackPlaybackEndTime = this.positionSeconds + (durationTicks / this.timeDivision) / (this.beatsPerMinute / 60);\n            if (trackPlaybackEndTime > this.endPositionSeconds)\n                this.endPositionSeconds = trackPlaybackEndTime;\n\n        }\n        if(callback)\n            callback(instruction);\n        this.cursorPosition++;\n\n        // TODO: calculate bpm changes\n    }\n\n    getInstruction(index) {\n        const instructionData = this.instructions[index];\n        return Instruction.getInstruction(instructionData);\n    }\n\n\n    currentInstruction() {\n        if (this.currentIndex === -1)\n            throw new Error(\"Iterator has not been started\");\n        return this.getInstruction(this.currentIndex);\n    }\n\n    nextInstruction(callback=null) {\n        if (this.hasReachedEnd())\n            return null;\n\n        this.currentIndex++;\n        let currentInstruction = this.currentInstruction(); // new SongInstruction(this.instructionList[this.trackIndex]);\n        this.incrementPositionByInstruction(currentInstruction, callback); // , currentInstruction.duration);\n        return currentInstruction;\n    }\n\n    nextInstructionRow(rowCallback=null, instructionCallback=null) {\n        if(this.hasReachedEnd())\n            return null;\n\n        const instructionList = [];\n        while(true) {\n            const instruction = this.nextInstruction(instructionCallback);\n            // Add instruction to the list\n            instructionList.push(instruction);\n\n            if(this.hasReachedEnd())\n                break;\n\n            // Check next instruction\n            const nextInstruction = this.getInstruction(this.currentIndex + 1);\n\n            // If the next instruction has a delta, then the current row ends\n            if (nextInstruction.deltaDurationTicks > 0) {\n                // Finish last row\n                break;\n            }\n\n            // Get next instruction\n            // instruction = this.nextInstruction(instructionCallback);\n        }\n\n        if(rowCallback)\n            rowCallback(instructionList);\n        this.rowCount++;\n        this.cursorPosition++;\n        return instructionList;\n    }\n\n\n    /** Seeking **/\n\n    seekToIndex(index, callback=null) {\n        if (!Number.isInteger(index))\n            throw new Error(\"Invalid seek index\");\n        while (!this.hasReachedEnd()) {\n            if (index <= this.currentIndex)\n                break;\n            if (!this.nextInstruction(callback))\n                break;\n        }\n    }\n\n    seekToEnd(callback=null) {\n        while (!this.hasReachedEnd())\n            this.nextInstruction(callback);\n    }\n\n    seekToPosition(positionSeconds, callback=null) {\n        while (!this.hasReachedEnd()) {\n            const nextInstruction = this.getInstruction(this.currentIndex + 1);\n            const elapsedTime = (nextInstruction.deltaDurationTicks / this.timeDivision) / (this.beatsPerMinute / 60);\n            if(this.positionSeconds + elapsedTime >= positionSeconds) {\n                break;\n            }\n            this.nextInstruction(callback);\n        }\n    }\n\n    seekToPositionTicks(positionTicks, callback=null) {\n        while (!this.hasReachedEnd() && this.positionTicks <= positionTicks) {\n            const nextInstruction = this.getInstruction(this.currentIndex + 1);\n            if(this.positionTicks + nextInstruction.deltaDurationTicks > positionTicks) {\n                break;\n            }\n            this.nextInstruction(callback);\n        }\n    }\n}\n\nexport default InstructionIterator;\n\n\n","import InstructionIterator from \"./InstructionIterator\";\n\n// TODO: make own class\nexport default class QuantizedInstructionIterator extends InstructionIterator {\n    constructor(instructionList, quantizationTicks, timeDivision, beatsPerMinute) {\n        super(instructionList, timeDivision, beatsPerMinute);\n        if(!quantizationTicks)\n            throw new Error(\"Invalid quantizationTicks\");\n        this.quantizationTicks = quantizationTicks;\n        // Initiate quantization breaks\n        this.nextQuantizationBreakInTicks = 0;\n    }\n\n    getNextInstructionPositionInTicks() {\n        if(this.hasReachedEnd())\n            return null;\n        let instruction = this.getInstruction(this.currentIndex + 1);\n        return instruction.deltaDurationTicks + this.lastInstructionPositionInTicks;\n    }\n\n    // getNextQuantizationBreaksInTicks() {\n    //     // Catch up the quantization breaks\n    //     const nextPositionTicks = this.getNextInstructionPositionInTicks();\n    //     while(this.nextQuantizationBreakInTicks <= this.positionTicks)\n    //         this.nextQuantizationBreakInTicks += this.quantizationTicks;\n    //\n    //     return this.nextQuantizationBreakInTicks;\n    // }\n\n    updateNextQuantizationBreakInTicks() {\n        let nextPositionTicks = this.getNextInstructionPositionInTicks();\n        if(nextPositionTicks < this.positionTicks)\n            nextPositionTicks = this.positionTicks;\n        while(this.nextQuantizationBreakInTicks <= nextPositionTicks)\n            this.nextQuantizationBreakInTicks += this.quantizationTicks;\n    }\n\n    getNextRowPositionTicks() {\n        const nextQuantizationBreakInTicks = this.nextQuantizationBreakInTicks;\n        // const nextQuantizationBreakInTicks = this.getNextQuantizationBreaksInTicks();\n        if(this.hasReachedEnd())\n            return nextQuantizationBreakInTicks;\n        // If there is a next instruction\n        let instruction = this.getInstruction(this.currentIndex + 1);\n        const nextPositionTicks = instruction.deltaDurationTicks + this.lastInstructionPositionInTicks;\n\n        if(nextPositionTicks < nextQuantizationBreakInTicks)\n            return nextPositionTicks;\n        return nextQuantizationBreakInTicks;\n    }\n\n\n    nextQuantizedInstructionRow(rowCallback=null, instructionCallback=null) {\n        // if(toPositionTicks !== null && this.positionTicks >= toPositionTicks)\n        //     return null; // Reached the end\n\n        const nextQuantizationBreakInTicks = this.nextQuantizationBreakInTicks;\n        const doRow = () => {\n            const elapsedTime = ((nextQuantizationBreakInTicks - this.positionTicks) / this.timeDivision) / (this.beatsPerMinute / 60);\n            this.positionSeconds += elapsedTime;\n            this.positionTicks = nextQuantizationBreakInTicks;\n            this.nextQuantizationBreakInTicks += this.quantizationTicks;\n            // this.updateNextQuantizationBreakInTicks();\n            // this.nextQuantizationBreakInTicks += this.quantizationTicks;\n            const row = [];\n            if(rowCallback)\n                rowCallback(row);\n\n            this.rowCount++;\n            this.cursorPosition++;\n            return row;\n        };\n\n        if(!this.hasReachedEnd()) {\n            // If there is a next instruction\n            const nextPositionTicks = this.getNextInstructionPositionInTicks();\n            if (\n                nextQuantizationBreakInTicks < nextPositionTicks) {\n                // Next break comes before next instruction\n\n                return doRow();\n            }\n\n            this.updateNextQuantizationBreakInTicks();\n            // Return the next row\n            return this.nextInstructionRow(rowCallback, instructionCallback);\n        }\n\n        // Render the next quantized row\n        return doRow();\n    }\n\n\n    // nextQuantizedInstructionRow(quantizationTicks, toPositionTicks, rowCallback=null, instructionCallback=null) {\n    //     // let nextQuantizationBreakInTicks = quantizationTicks;\n    //     const instructionList = [];\n    //     if(instructionCallback === null)\n    //         instructionCallback = function(instruction) { return instruction };\n    //\n    //     // Scan ahead to next instruction\n    //     let nextPositionTicks = this.positionTicks;\n    //     if(!this.hasReachedEnd()) {\n    //         let instruction = this.getInstruction(this.currentIndex + 1);\n    //         nextPositionTicks += instruction.deltaDurationTicks;\n    //     }\n    //\n    //     if(this.hasReachedEnd()) {\n    //\n    //     } else if(nextPositionTicks < this.nextQuantizationBreakInTicks) {\n    //         // If next position is after next quantized break, return a blank row\n    //         this.scrollPositionTicks = this.nextQuantizationBreakInTicks;\n    //         this.nextQuantizationBreakInTicks += this.quantizationTicks;\n    //\n    //     } else {\n    //         // Increment instruction position\n    //         this.nextInstruction();\n    //\n    //\n    //         while (!this.hasReachedEnd()) {\n    //             // Scan ahead to next instruction\n    //             let instruction = this.getInstruction(this.currentIndex + 1);\n    //\n    //             // If the next instruction has a delta, then the current row ends\n    //             if (!instruction || instruction.deltaDurationTicks > 0) {\n    //                 // Finish rendering last row\n    //                 break;\n    //\n    //                 // Move next quantized row up to current position\n    //                 // while (this.nextQuantizationBreakInTicks <= currentRowPositionTicks)\n    //                 //     this.nextQuantizationBreakInTicks += quantizationTicks;\n    //\n    //\n    //             }\n    //\n    //             // Increment instruction position\n    //             instruction = this.nextInstruction();\n    //\n    //             // Increment instruction cursor offset\n    //             this.cursorOffset++;\n    //             const ret = instructionCallback(instruction);\n    //             if (ret !== null)\n    //                 instructionList.push(ret);\n    //         }\n    //         this.scrollPositionTicks = this.positionTicks;\n    //     }\n    //     this.rowCount++;\n    //     this.cursorOffset++;\n    //     return instructionList;\n    //\n    //\n    // }\n\n    /** Seeking **/\n    // TODO: hack overrides subclass\n    seekToIndex(index, callback=null) {\n        if (!Number.isInteger(index))\n            throw new Error(\"Invalid seek index\");\n        while (true) {\n            if (index === this.currentIndex)\n                break;\n            this.nextInstruction(callback);\n            if (!this.nextQuantizedInstructionRow(null, callback))\n                break;\n        }\n    }\n\n    seekToEnd(callback=null) {\n        while (!this.hasReachedEnd())\n            this.nextQuantizedInstructionRow(null, callback);\n    }\n\n    seekToPosition(positionSeconds, callback=null) {\n        while (this.positionSeconds < positionSeconds) {\n            this.nextQuantizedInstructionRow(null, callback);\n        }\n    }\n\n    seekToPositionTicks(positionTicks, callback=null) {\n        while (this.positionTicks < positionTicks) {\n            this.nextQuantizedInstructionRow(null, callback);\n        }\n    }\n}\n\n\n\n","import InstructionIterator from \"./InstructionIterator\";\nimport QuantizedInstructionIterator from \"./QuantizedInstructionIterator\";\n\nimport Instruction from \"./Instruction\";\nimport TrackInstruction from \"./TrackInstruction\";\nimport NoteInstruction from \"./NoteInstruction\";\nexport {\n    Instruction,\n    InstructionIterator,\n    QuantizedInstructionIterator,\n\n    TrackInstruction,\n    NoteInstruction\n}\n","import Values from \"../../common/values/Values\";\n\nclass Instruction {\n    constructor(instructionData = [0]) {\n        this.data = instructionData;\n    }\n\n    get command() {\n        return this.data[1];\n    }\n\n    set command(newCommand) {\n        this.data[1] = newCommand;\n    }\n\n\n    get deltaDurationTicks() {\n        return this.data[0];\n    }\n\n    set deltaDurationTicks(newDeltaDuration) {\n        this.data[0] = newDeltaDuration;\n    }\n\n    getDurationString(timeDivision) {\n        const durationTicks = this.durationTicks;\n        if(durationTicks === null)\n            return 'N/A';\n        return Values.formatDuration(durationTicks, timeDivision);\n    }\n    set durationTicks(newDuration)  { throw new Error(\"TODO: Implement for \" + this.constructor.name);}\n    get durationTicks()             { throw new Error(\"TODO: Implement for \" + this.constructor.name);}\n    get clone()          { throw new Error(\"TODO: Implement for \" + this.constructor.name);}\n\n    /** @deprecated **/\n    set velocity(velocity)  { throw new Error(\"TODO: Implement for \" + this.constructor.name);}\n    /** @deprecated **/\n    get velocity()          { throw new Error(\"TODO: Implement for \" + this.constructor.name);}\n\n\n\n    /** Static **/\n\n    static processInstructionTracks(trackList) {\n        Object.keys(trackList).forEach((trackName, i) =>\n            this.processInstructionTrack(trackList[trackName]));\n    }\n    static processInstructionTrack(instructionList) {\n        if(!Array.isArray(instructionList))\n            throw new Error(\"Invalid ASCTrack instruction array\");\n        for(let i=0; i<instructionList.length; i++) {\n            const instruction = this.parseInstruction(instructionList[i]);\n            instructionList[i] = instruction.data;\n        }\n    }\n\n    static parseInstruction(instructionData) {\n        if (instructionData instanceof Instruction)\n            return instructionData;\n        if(typeof instructionData === \"number\")\n            instructionData = [instructionData];\n        if(typeof instructionData === \"string\")\n            instructionData = [0, instructionData];\n        if(!Array.isArray(instructionData))\n            throw new Error(\"Invalid instruction data\");\n        if(typeof instructionData[0] === \"string\")\n            instructionData.unshift(0);\n        return this.getInstruction(instructionData);\n    }\n\n    static getInstruction(instructionData) {\n        if(!instructionData)\n            throw new Error(\"Invalid Instruction data\");\n        const commandString = instructionData[1];\n        if(typeof commandString === \"string\") {\n            switch(commandString[0]) {\n                case '@':\n                    return new (require(\"./TrackInstruction\").default)(instructionData);\n                case '!':\n                    return new (require(\"./CommandInstruction\").default)(instructionData);\n                default:\n                    return new (require(\"./NoteInstruction\").default)(instructionData);\n            }\n\n        } else if(typeof commandString === \"number\") {\n            return new (require(\"./MIDIInstruction\").default)(instructionData);\n        }\n        throw new Error(\"Unknown Instruction\");\n        // if(this.isMIDIInstruction(instructionData))\n    }\n\n\n    // static isTrackInstruction(instructionData) {\n    //     return typeof instructionData[1] === \"string\" && instructionData[1][0] === '@';\n    // }\n    //\n    // static isMIDIInstruction(instructionData) {\n    //     return typeof instructionData[1] === \"number\";\n    // }\n\n\n}\n\n\nexport default Instruction;\n\n\n\n","import LZString from \"lz-string\";\n\nexport default class LocalStorage {\n\n\n\n    /** Encoding / Decoding **/\n\n    static encodeForStorage(json, replacer = null, space = null) {\n        console.log(`Encoding: `, json);\n        let encodedString = JSON.stringify(json, replacer, space);\n        console.log(`Encoded: ${encodedString}`);\n        let compressedString = LZString.compress(encodedString);\n        console.log(`Compression: ${compressedString.length} / ${encodedString.length} = ${Math.round((compressedString.length / encodedString.length)*100)/100}`);\n        return compressedString;\n    }\n\n    static decodeForStorage(encodedString) {\n        if (!encodedString)\n            return null;\n        encodedString = LZString.decompress(encodedString) || encodedString;\n        return JSON.parse(encodedString);\n    }\n\n    /** Get and Set Items **/\n\n    static async setItem(key, value) {\n        return localStorage.setItem(key, value);\n    }\n\n    static async getItem(key) {\n        return localStorage.getItem(key);\n    }\n};\n","import LZString from 'lz-string';\nimport Values from \"../values/Values\";\n\nimport LocalStorage from \"./LocalStorage\";\n\nclass Storage {\n    /** Loading **/\n\n    async getRecentSongList() {\n        return this.decodeForStorage((await LocalStorage.getItem('song-recent-list')) || '[]');\n    }\n\n\n    /** Encoding / Decoding **/\n\n    encodeForStorage(json, replacer = null, space = null) {\n        return LocalStorage.encodeForStorage(json, replacer, space);\n    }\n\n    decodeForStorage(encodedString) {\n        return LocalStorage.decodeForStorage(encodedString);\n    }\n\n    /** Saving **/\n\n    async saveState(state, key='audio-source-state') {\n        await LocalStorage.setItem(key, JSON.stringify(state));\n    }\n\n    async loadState(key='audio-source-state') {\n        let state = await LocalStorage.getItem(key);\n        if (state)\n            state = JSON.parse(state);\n        return state;\n    }\n\n    async saveSongToMemory(songData, songHistory) {\n        // const song = this.data;\n        if (!songData.uuid)\n            songData.uuid = Values.generateUUID();\n        let songRecentUUIDs = [];\n        try {\n            songRecentUUIDs = this.decodeForStorage((await LocalStorage.getItem('song-recent-list')) || '[]');\n        } catch (e) {\n            console.error(e);\n        }\n        songRecentUUIDs = songRecentUUIDs.filter((entry) => entry.uuid !== songData.uuid);\n        songRecentUUIDs.unshift({uuid: songData.uuid, title: songData.title});\n        const encodedSongRecentUUIDs = this.encodeForStorage(songRecentUUIDs);\n        await LocalStorage.setItem('song-recent-list', encodedSongRecentUUIDs);\n\n\n        const encodedSongData = this.encodeForStorage(songData);\n        await LocalStorage.setItem('song:' + songData.uuid, encodedSongData);\n        // await LocalStorage.setItem('song-history:' + songData.uuid, this.encodeForStorage(songHistory)); // History stored separately due to memory limits\n        // this.querySelector('.song-menu').outerHTML = renderEditorMenuContent(this);\n        // console.info(\"Song saved to memory: \" + songData.uuid, songData);\n    }\n\n    saveSongToFile(songData, prompt = true) {\n        // const song = this.data;\n        const instructionsKey = \"/** INSTRUCTIONS-\" + Values.generateUUID() + ' **/';\n        let jsonStringInstructions = JSON.stringify(songData.tracks);\n        let jsonString = JSON.stringify(Object.assign({}, songData, {\n            tracks: instructionsKey\n        }), null, \"\\t\");\n        jsonString = jsonString.replace('\"' + instructionsKey + '\"', jsonStringInstructions);\n        const dataStr = \"data:text/json;charset=utf-8,\" + encodeURIComponent(jsonString);\n        const downloadAnchorNode = document.createElement('a');\n        downloadAnchorNode.setAttribute(\"href\", dataStr);\n\n        let fileName = (songData.title || \"untitled\")\n                .replace(/\\s+/g, '_')\n            + '.json';\n        if (prompt)\n            fileName = window.prompt(\"Download as file?\", fileName);\n        if (!fileName)\n            return console.warn(\"Download canceled\");\n        downloadAnchorNode.setAttribute(\"download\", fileName);\n        document.body.appendChild(downloadAnchorNode); // required for firefox\n        downloadAnchorNode.click();\n        downloadAnchorNode.remove();\n    }\n\n    /** Loading **/\n\n    async loadSongFromMemory(songUUID) {\n        let songDataString = await LocalStorage.getItem('song:' + songUUID);\n        if (!songDataString)\n            throw new Error(\"Song Data not found for uuid: \" + songUUID);\n        let songData = this.decodeForStorage(songDataString);\n        if (!songData)\n            throw new Error(\"Invalid Song Data: \" + songDataString);\n        return songData;\n        // console.info(\"Song loaded from memory: \" + songUUID, songData, this.songHistory);\n    }\n\n    async loadSongHistoryFromMemory(songUUID) {\n        let songHistoryString = await LocalStorage.getItem('song-history:' + songUUID);\n        if (!songHistoryString)\n            return null;\n        return this.decodeForStorage(songHistoryString);\n        // this.render();\n        //this.gridSelect(null, 0);\n        // console.info(\"Song loaded from memory: \" + songUUID, songData, this.songHistory);\n    }\n\n\n    /** Batch Commands **/\n\n    async getBatchRecentCommands() {\n        let batchRecentCommands = await LocalStorage.getItem('batch-recent-commands');\n        if (!batchRecentCommands)\n            return [];\n        batchRecentCommands = JSON.parse(batchRecentCommands);\n        return batchRecentCommands;\n    }\n\n    async addBatchRecentCommands(batchCommand) {\n        let batchRecentCommands = this.getBatchRecentCommands();\n        if (batchRecentCommands.indexOf(batchCommand) === -1) {\n            batchRecentCommands.unshift(batchCommand);\n        }\n        await LocalStorage.setItem('batch-recent-commands', JSON.stringify(batchRecentCommands));\n    }\n\n    /** Batch Searches **/\n\n    async getBatchRecentSearches() {\n        let batchRecentSearches = await LocalStorage.getItem('batch-recent-searches');\n        if (!batchRecentSearches)\n            return [];\n        batchRecentSearches = JSON.parse(batchRecentSearches);\n        return batchRecentSearches;\n    }\n\n    async addBatchRecentSearches(batchCommand) {\n        let batchRecentSearches = this.getBatchRecentSearches();\n        if (batchRecentSearches.indexOf(batchCommand) === -1) {\n            batchRecentSearches.unshift(batchCommand);\n        }\n        await LocalStorage.setItem('batch-recent-searches', JSON.stringify(batchRecentSearches));\n    }\n\n\n    //\n    // historyQueue(songHistory) {\n    //     if(!Array.isArray(songHistory))\n    //         songHistory = [];\n    //     for(let i=0; i<songHistory.length; i++) {\n    //         const historyAction = songHistory[i];\n    //         this.status.history.currentStep++;\n    //         historyAction.step = this.status.history.currentStep;\n    //     }\n    //     //\n    //     // this.status.history.undoList.push(historyAction);\n    //     // this.status.history.undoPosition = this.status.history.undoList.length-1;\n    //\n    //     if(this.webSocket && songHistory.length > 0) {\n    //         console.info(\"Sending history actions: \", songHistory);\n    //         this.webSocket\n    //             .send(this.encodeForStorage({\n    //                 type: 'history:entry',\n    //                 songHistory: songHistory,\n    //                 // uuid: this.uuid\n    //             }))\n    //     }\n    // }\n    //\n    // historyUndo() {\n    //\n    // }\n    //\n    // historyRedo() {\n    //\n    // }\n    // clearHistoryActions() {\n    //     const actions = this.songHistory;\n    //     this.songHistory = [];\n    //     return actions;\n    // }\n\n\n}\n\n\nexport default Storage;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport ASUIMenuContext from \"../ASUIMenuContext\";\n\nimport \"./ASUIDropDownContainer.css\";\n\nclass ASUIDropDownContainer extends React.Component {\n    static contextType = ASUIMenuContext;\n\n    // creating default props\n    static defaultProps = {\n        // arrow:          true,\n        vertical:       false,\n        // openOnHover:    null,\n        // disabled:       false,\n    };\n\n    // validating prop types\n    static propTypes = {\n        // closeCallback: PropTypes.func.isRequired,\n        vertical: PropTypes.bool,\n        disabled: PropTypes.bool,\n    };\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            open: false,\n            stick: false,\n        };\n        this.divRef = React.createRef();\n    }\n\n    getOverlay() { return this.context.overlay; }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n//         console.log('componentDidUpdate', this.state);\n        if(this.getOverlay()) {\n            if (this.state.open)\n                this.getOverlay().addCloseMenuCallback(this, this.closeMenu.bind(this));\n            else\n                this.getOverlay().removeCloseMenuCallback(this);\n        }\n        this.updateScreenPosition();\n    }\n\n    componentWillUnmount() {\n        if(this.getOverlay())\n            this.getOverlay().removeCloseMenuCallback(this);\n    }\n\n    render() {\n        if (!this.state.open)\n            return null;\n\n        let className = 'asui-menu-dropdown';\n        if (this.props.vertical)\n            className += ' vertical';\n        if (this.state.stick)\n            className += ' stick';\n        if(this.props.disabled)\n            return 'Disabled';\n\n        let options = this.state.options;\n\n        return <ASUIMenuContext.Provider\n            value={{overlay:this.getOverlay(), parentDropDown:this}}>\n            <div\n                className={className}\n                children={options}\n                ref={this.divRef}\n                />\n        </ASUIMenuContext.Provider>\n\n    }\n\n    hoverMenu() {\n        if(this.state.open === true || !this.getOverlay() || !this.getOverlay().isHoverEnabled())\n            return;\n        this.openMenu();\n    }\n\n    toggleMenu() {\n        if (!this.state.open)\n            this.openMenu();\n        else if (!this.state.stick)\n            this.stickMenu();\n        else\n            this.closeMenu();\n    }\n\n    async openMenu() {\n        if (this.props.disabled)\n            return console.error(\"Menu is disabled\");\n        if (this.state.open)\n            throw new Error(\"Menu was already open\");\n\n        // Try open menu handler\n        if(this.getOverlay()) {\n            const res = await this.getOverlay().openMenu(this.props.options);\n            if (res !== false) {\n//                 console.info(\"Sub-menu options were sent to menu handler: \", this.getOverlay().openMenu);\n                return;\n            }\n\n            setTimeout(() => {\n                this.getOverlay().closeMenus(this.getAncestorMenus());\n            }, 100);\n        }\n\n        let options = this.props.options;\n        if (typeof options === \"function\")\n            options = options(this);\n        if(options instanceof Promise)\n            options = await options;\n        if (!options)\n            console.warn(\"Empty options returned by \", this);\n\n        this.setState({\n            open: true,\n            options\n        });\n    }\n\n    stickMenu() {\n        if (!this.state.open)\n            throw new Error(\"Unable to stick. Menu was not yet open\");\n\n        this.getAncestorMenus().forEach(menu => {\n            menu.setState({\n                stick: true,\n            });\n        })\n    }\n\n    closeMenu(stayOpenOnStick = false) {\n        if (this.state.stick && stayOpenOnStick === true) {\n            // console.warn(\"Ignoring close due to stick\", this);\n            return;\n        }\n        this.setState({\n            open: false,\n            stick: false,\n            options: null\n        })\n    }\n\n    getAncestorMenus() {\n        let menus = [];\n        let parent = this;\n        while (parent) {\n            menus.push(parent);\n            parent = parent.context.parentDropDown;\n        }\n        return menus;\n    }\n\n\n    closeAllDropDownMenus() {\n        if(this.getOverlay())\n            this.getOverlay().closeAllMenus();\n    }\n\n    updateScreenPosition() {\n        if(!this.state.open || !this.divRef.current)\n            return;\n        const div = this.divRef.current;\n        const rect = div.getBoundingClientRect();\n        if(rect.right > window.innerWidth)\n            div.classList.add('overflow-right');\n        if(rect.bottom > window.innerHeight)\n            div.classList.add('overflow-bottom');\n        // console.log(rect.right, window.innerWidth, rect.bottom, window.innerHeight)\n    }\n}\n\n// class DropDownContextWrapper extends React.Component {\n//     static contextType = DropDownContext;\n//\n//     render() {\n//         return <DropDownContext.Provider value={this}>\n//             <DropDownContainer\n//                 parentDropDown={this.context}\n//                 {...this.props}\n//                 />\n//         </DropDownContext.Provider>;\n//     }\n// }\n\nexport default ASUIDropDownContainer;\n\n// function reactMapRecursive(children, fn) {\n//     return React.Children.map(children, child => {\n//         if (!React.isValidElement(child)) {\n//             return child;\n//         }\n//\n//         if (child.props.children) {\n//             child = React.cloneElement(child, {\n//                 children: reactMapRecursive(child.props.children, fn)\n//             });\n//         }\n//\n//         return fn(child);\n//     });\n// }\n","import Instruction from \"./Instruction\";\n\nclass TrackInstruction extends Instruction {\n\n\n    getTrackName() {\n        return typeof this.data[1] === \"string\" ? this.data[1].substr(1) : undefined;\n    }\n\n    setTrackName(newTrackName) {\n        this.data[1] = `@${newTrackName}`;\n    }\n\n    get instruction() {\n        return this.data[2];\n    }\n\n    set instruction(newCommand) {\n        this.data[2] = newCommand;\n    }\n\n    get durationTicks() {\n        return this.data[3] || undefined;\n    }\n\n    set durationTicks(newDuration) {\n        newDuration = parseFloat(newDuration);\n        if (Number.isNaN(newDuration))\n            throw new Error(\"Invalid Duration\");\n        this.data[3] = newDuration;\n    }\n\n    get velocity() {\n        return undefined;\n    }\n\n    clone() {\n        return new TrackInstruction(this.data.slice())\n    }\n}\n\nexport default TrackInstruction;\n","//\n// Player can be viewed as a state machine with\n// 3 states (playing, paused, stopped) and 5 transitions\n// (open, pause, unpause, seek, stop).\n// If the player has reached end of the song,\n// it is in the terminal \"stopped\" state and is\n// no longer playable:\n//                         ╭– (seek) –╮\n//                         ^          v\n//  ┌─ ─ ─ ─ ─┐         ┌─────────────────┐            ┌─────────┐\n//  │ stopped │–(open)–>│     playing     │––(stop)–––>│ stopped │\n//  └ ─ ─ ─ ─ ┘         └─────────────────┘            └─────────┘\n//                        | ┌────────┐ ^\n//                (pause) ╰>│ paused │–╯ (unpause)\n//                          └────────┘\n//\n// In the \"open\" transition, the audioNode is connected.\n// In the \"stop\" transition, it is disconnected.\n// \"stopped\" is synonymous with closed/empty.\n//\nexport default class Player {\n  constructor(audioCtx, destNode, chipCore, onPlayerStateUpdate) {\n    this._outerAudioProcess = this._outerAudioProcess.bind(this);\n\n    this.paused = true;\n    this.fileExtensions = [];\n    this.metadata = {};\n    this.audioCtx = audioCtx;\n    this.destinationNode = destNode;\n    this.onPlayerStateUpdate = onPlayerStateUpdate;\n    this.bufferSize = 2048;\n    this._innerAudioProcess = null;\n    this.audioNode = this.audioCtx.createScriptProcessor(this.bufferSize, 2, 2);\n    this.audioNode.onaudioprocess = this._outerAudioProcess;\n    this.debug = window.location.search.indexOf('debug=true') !== -1;\n    this.timeCount = 0;\n    this.renderTime = 0;\n    this.perfLoggingInterval = 100;\n  }\n\n  togglePause() {\n    this.paused = !this.paused;\n    return this.paused;\n  }\n\n  isPaused() {\n    return this.paused;\n  }\n\n  resume() {\n    this.paused = false;\n  }\n\n  canPlay(fileExtension) {\n    return this.fileExtensions.indexOf(fileExtension.toLowerCase()) !== -1;\n  }\n\n  loadData(data, filename) {\n    throw Error('Player.loadData() must be implemented.');\n  }\n\n  stop() {\n    throw Error('Player.stop() must be implemented.');\n  }\n\n  isPlaying() {\n    throw Error('Player.isPlaying() must be implemented.');\n  }\n\n  setTempo() {\n    console.warn('Player.setTempo() not implemented for this player.');\n  }\n\n  setVoices() {\n    console.warn('Player.setVoices() not implemented for this player.');\n  }\n\n  setFadeout(startMs) {\n    console.warn('Player.setFadeout() not implemented for this player.');\n  }\n\n  getVoiceName(index) {\n    console.warn('Player.getVoiceName() not implemented for this player.');\n  }\n\n  getNumVoices() {\n    return 0;\n  }\n\n  getNumSubtunes() {\n    return 1;\n  }\n\n  getSubtune() {\n    return 0;\n  }\n\n  getMetadata() {\n    return {\n      title: null,\n      author: null,\n    }\n  }\n\n  getParamDefs() {\n    return [];\n  }\n\n  connect() {\n    if (!this._innerAudioProcess) {\n      throw Error('Player.setAudioProcess has not been called.');\n    }\n    this.audioNode.connect(this.destinationNode);\n  }\n\n  suspend() {\n    this.stopped = true;\n    this.paused = true;\n  }\n\n  setOnPlayerStateUpdate(fn) {\n    this.onPlayerStateUpdate = fn;\n  }\n\n  setAudioProcess(fn) {\n    if (typeof fn !== 'function') {\n      throw Error('AudioProcess must be a function.');\n    }\n    this._innerAudioProcess = fn;\n  }\n\n  _outerAudioProcess(event) {\n    const start = performance.now();\n    this._innerAudioProcess(event);\n    const end = performance.now();\n\n    if (this.debug) {\n      this.renderTime += end - start;\n      this.timeCount++;\n      if (this.timeCount >= this.perfLoggingInterval) {\n        const cost = this.renderTime / this.timeCount;\n        const budget = 1000 * this.bufferSize / this.audioCtx.sampleRate;\n        console.log(\n          '[%s] %s ms to render %d frames (%s ms) (%s% utilization)',\n          this.constructor.name,\n          cost.toFixed(2),\n          this.bufferSize,\n          budget.toFixed(1),\n          (100 * cost / budget).toFixed(1),\n        );\n        this.renderTime = 0.0;\n        this.timeCount = 0;\n      }\n    }\n  }\n\n  muteAudioDuringCall(audioNode, fn) {\n    if (audioNode && audioNode.context.state === 'running' && this.paused === false) {\n      const audioprocess = audioNode.onaudioprocess;\n      // Workaround to eliminate stuttering:\n      // Temporarily swap the audio process callback, and do the\n      // expensive operation only after buffer is filled with silence\n      audioNode.onaudioprocess = function (e) {\n        for (let i = 0; i < e.outputBuffer.numberOfChannels; i++) {\n          e.outputBuffer.getChannelData(i).fill(0);\n        }\n        fn();\n        audioNode.onaudioprocess = audioprocess;\n      };\n    } else {\n      fn();\n    }\n  }\n\n  static metadataFromFilepath(filepath) {\n    // Guess metadata from path/filename for MIDI files.\n    // Assumes structure:  /Game MIDI/{game}/**/{title}\n    //             ...or:  /MIDI/{artist}/**/{title}\n    const parts = filepath.split('/');\n    const meta = {};\n    meta.title = parts.pop();\n    meta.system = parts.shift();\n    if (meta.system === 'Game MIDI') {\n      meta.game = parts.shift();\n    } else {\n      meta.artist = parts.shift();\n    }\n    return meta;\n  }\n}\n","import { CalcCascades, IirFilter } from 'fili';\n\nexport default class SubBass {\n  constructor(sampleRate) {\n    const iirCalculator = new CalcCascades();\n    const lowpass1Coeffs = iirCalculator.lowpass({\n      order: 5,\n      characteristic: 'butterworth',\n      Fs: sampleRate,\n      Fc: 200,\n      gain: 0,\n    });\n\n    const lowpass2Coeffs = iirCalculator.lowpass({\n      order: 3,\n      characteristic: 'butterworth',\n      Fs: sampleRate,\n      Fc: 120,\n      gain: 0,\n    });\n\n    const highpassCoeffs = iirCalculator.highpass({\n      order: 3,\n      characteristic: 'butterworth',\n      Fs: sampleRate,\n      Fc: 25,\n      gain: 0,\n    });\n\n    const lowpass1 = new IirFilter(lowpass1Coeffs);\n    const lowpass2 = new IirFilter(lowpass2Coeffs);\n    const highpass = new IirFilter(highpassCoeffs);\n    const numOctaves = 1;\n    const dcResponseTime = 0.16;\n    const envResponseTime = 0.016;\n\n    let sCurr = 0;\n    let sPrev = 0;\n    let cycleCounter = 0;\n    let dcAvg = 0;\n    let dcWeight = Math.exp(-1 / (sampleRate * dcResponseTime));\n    let envAvg = 0;\n    let envWeight = Math.exp(-1 / (sampleRate * envResponseTime));\n\n    function removeDcStep(sample) {\n      dcAvg = dcWeight * dcAvg + (1 - dcWeight) * sample;\n      return sample - dcAvg;\n    }\n\n    function envelopeStep(sample) {\n      sample = removeDcStep(sample);\n      envAvg = envWeight * envAvg + (1 - envWeight) * Math.abs(sample);\n      return envAvg * 1.414; // invert sine RMS\n    }\n\n    this.process = (sample) => {\n      const sBass = lowpass1.singleStep(sample);\n      const env = envelopeStep(sBass);\n\n      sPrev = sCurr;\n      sCurr = sBass;\n\n      // detect zero crossing (low to high)\n      if (sPrev < 0 && sCurr >= 0) {\n        cycleCounter = (cycleCounter + 1) % Math.pow(2, numOctaves);\n      }\n\n      let sOctaves = 0;\n      for (let i = 0; i < numOctaves; i++) {\n        const bit = cycleCounter & (1 << i);\n        sOctaves += bit ? 1 : -1;\n      }\n\n      const sSub = highpass.singleStep(lowpass2.singleStep(sOctaves));\n      return sSub * env;\n    }\n  }\n}","import Player from \"./Player.js\";\n// import App from \"../App\";\nimport SubBass from \"../effects/SubBass\";\nimport encoding from \"encoding-japanese\";\n\nlet emu = null;\nlet libgme = null;\nconst INT16_MAX = 65535;\nconst fileExtensions = [\n  'nsf',\n  'nsfe',\n  'spc',\n  'gym',\n  'vgm',\n  'vgz',\n  'ay',\n  'sgc',\n  'kss',\n];\n\nexport default class GMEPlayer extends Player {\n  constructor(audioCtx, destNode, chipCore, onPlayerStateUpdate) {\n    super(audioCtx, destNode, chipCore, onPlayerStateUpdate);\n    this.setParameter = this.setParameter.bind(this);\n    this.getParameter = this.getParameter.bind(this);\n    this.getParamDefs = this.getParamDefs.bind(this);\n\n    libgme = chipCore;\n    this.paused = false;\n    this.fileExtensions = fileExtensions;\n    this.subtune = 0;\n    this.tempo = 1.0;\n    this.params = { subbass: 1 };\n\n    this.buffer = libgme.allocate(this.bufferSize * 16, 'i16', libgme.ALLOC_NORMAL);\n    this.emuPtr = libgme.allocate(1, 'i32', libgme.ALLOC_NORMAL);\n\n    this.subBass = new SubBass(audioCtx.sampleRate);\n\n    this.setAudioProcess(this.gmeAudioProcess);\n  }\n\n  gmeAudioProcess(e) {\n    let i, channel;\n    const channels = [];\n    for (channel = 0; channel < e.outputBuffer.numberOfChannels; channel++) {\n      channels[channel] = e.outputBuffer.getChannelData(channel);\n    }\n\n    if (this.paused) {\n      for (channel = 0; channel < channels.length; channel++) {\n        channels[channel].fill(0);\n      }\n      return;\n    }\n\n    if (this.getPositionMs() >= this.getDurationMs() && this.fadingOut === false) {\n      console.log('Fading out at %d ms.', this.getPositionMs());\n      this.setFadeout(this.getPositionMs());\n      this.fadingOut = true;\n    }\n\n    if (libgme._gme_track_ended(emu) !== 1) {\n      libgme._gme_play(emu, this.bufferSize * 2, this.buffer);\n\n      for (channel = 0; channel < channels.length; channel++) {\n        for (i = 0; i < this.bufferSize; i++) {\n          channels[channel][i] = libgme.getValue(this.buffer +\n            // Interleaved channel format\n            i * 2 * 2 +             // frame offset   * bytes per sample * num channels +\n            channel * 2,            // channel offset * bytes per sample\n            'i16') / INT16_MAX;     // convert int16 to float\n        }\n      }\n\n      if (this.params.subbass > 0) {\n        for (i = 0; i < this.bufferSize; i++) {\n          const sub = this.subBass.process(channels[0][i]) * this.params.subbass;\n          channels[0][i] += sub;\n          channels[1][i] += sub;\n        }\n      }\n    } else {\n      this.subtune++;\n\n      if (this.subtune >= libgme._gme_track_count(emu) || this.playSubtune(this.subtune) !== 0) {\n        this.suspend();\n        console.debug(\n          'GMEPlayer.gmeAudioProcess(): _gme_track_ended == %s and subtune (%s) > _gme_track_count (%s).',\n          libgme._gme_track_ended(emu),\n          this.subtune,\n          libgme._gme_track_count(emu)\n        );\n        this.onPlayerStateUpdate(true);\n      }\n    }\n  }\n\n  playSubtune(subtune) {\n    this.fadingOut = false;\n    this.subtune = subtune;\n    this.metadata = this._parseMetadata(subtune);\n    console.debug('GMEPlayer.playSubtune(subtune=%s)', subtune);\n    this.onPlayerStateUpdate(false);\n    return libgme._gme_start_track(emu, subtune);\n  }\n\n  loadData(data, filepath) {\n    this.subtune = 0;\n    this.fadingOut = false;\n    this.filepathMeta = Player.metadataFromFilepath(filepath);\n    const formatNeedsBass = filepath.match(\n      /(\\.sgc$|\\.kss$|\\.nsfe?$|\\.ay$|Master System|Game Gear)/i\n    );\n    this.params.subbass = formatNeedsBass ? 1 : 0;\n\n    if (libgme.ccall(\n      \"gme_open_data\",\n      \"number\",\n      [\"array\", \"number\", \"number\", \"number\"],\n      [data, data.length, this.emuPtr, this.audioCtx.sampleRate]\n    ) !== 0) {\n      console.error(\"gme_open_data failed.\");\n      this.stop();\n      throw Error('Unable to load this file: ' + filepath);\n    }\n    emu = libgme.getValue(this.emuPtr, \"i32\");\n\n    this.connect();\n    this.resume();\n    if (this.playSubtune(this.subtune) !== 0) {\n      console.error(\"gme_start_track failed.\");\n      throw Error('Unable to play this subtune!');\n    }\n  }\n\n  _parseMetadata(subtune) {\n    const metadataPtr = libgme.allocate(1, \"i32\", libgme.ALLOC_NORMAL);\n    if (libgme._gme_track_info(emu, metadataPtr, subtune) !== 0)\n      console.error(\"could not load metadata\");\n    const ref = libgme.getValue(metadataPtr, \"*\");\n\n    let offset = 0;\n\n    const readInt32 = function () {\n      var value = libgme.getValue(ref + offset, \"i32\");\n      offset += 4;\n      return value;\n    };\n\n    const readString = function () {\n      const raw = [];\n      const ptr = libgme.getValue(ref + offset, 'i8*');\n      for (let i = 0; i < 255; i++) {\n        let char = libgme.getValue(ptr + i, 'i8');\n        if (char === 0) {\n          break;\n        }\n        raw.push(char & 0xFF);\n      }\n\n      offset += 4;\n      return encoding.convert(raw, {to: 'UNICODE', type: 'string'});\n    };\n\n    const meta = {};\n\n    meta.length = readInt32();\n    meta.intro_length = readInt32();\n    meta.loop_length = readInt32();\n    meta.play_length = readInt32();\n\n    offset += 4 * 12; // skip unused bytes\n\n    meta.system = readString();\n    meta.game = readString();\n    meta.title = readString() || meta.game || this.filepathMeta.title;\n    meta.artist = readString() || this.filepathMeta.artist;\n    meta.copyright = readString();\n    meta.comment = readString();\n\n    // meta.formatted = {\n    //   title: meta.game === meta.title ?\n    //     meta.title :\n    //     App.allOrNone(meta.game, ' - ') + meta.title,\n    //   subtitle: [meta.artist, meta.system].filter(x => x).join(' - ') +\n    //     App.allOrNone(' (', meta.copyright, ')'),\n    // };\n\n    return meta;\n  }\n\n  getVoiceName(index) {\n    if (emu) return libgme.UTF8ToString(libgme._gme_voice_name(emu, index));\n  }\n\n  getNumVoices() {\n    if (emu) return libgme._gme_voice_count(emu);\n  }\n\n  getNumSubtunes() {\n    if (emu) return libgme._gme_track_count(emu);\n  }\n\n  getSubtune() {\n    return this.subtune;\n  }\n\n  getPositionMs() {\n    if (emu) return libgme._gme_tell_scaled(emu);\n    return 0;\n  }\n\n  getDurationMs() {\n    if (emu) return this.metadata.play_length;\n    return 0;\n  }\n\n  getMetadata() {\n    return this.metadata;\n  }\n\n  getParameter(id) {\n    return this.params[id];\n  }\n\n  getParamDefs() {\n    return [\n      {\n        id: 'subbass',\n        label: 'Sub Bass',\n        type: 'number',\n        min: 0.0,\n        max: 2.0,\n        step: 0.01,\n        value: 1.0,\n      },\n    ];\n  }\n\n  setParameter(id, value) {\n    switch (id) {\n      case 'subbass':\n        this.params[id] = parseFloat(value);\n        break;\n      default:\n        console.warn('GMEPlayer has no parameter with id \"%s\".', id);\n    }\n  }\n\n  isPlaying() {\n    return !this.isPaused() && libgme._gme_track_ended(emu) !== 1;\n  }\n\n  setTempo(val) {\n    this.tempo = val;\n    if (emu) libgme._gme_set_tempo(emu, val);\n  }\n\n  setFadeout(startMs) {\n    if (emu) libgme._gme_set_fade(emu, startMs, 4000);\n  }\n\n  setVoices(voices) {\n    let mask = 0;\n    voices.forEach((isEnabled, i) => {\n      if (!isEnabled) {\n        mask += 1 << i;\n      }\n    });\n    if (emu) libgme._gme_mute_voices(emu, mask);\n  }\n\n  seekMs(positionMs) {\n    if (emu) {\n      this.muteAudioDuringCall(this.audioNode, () =>\n        libgme._gme_seek_scaled(emu, positionMs));\n    }\n  }\n\n  stop() {\n    this.suspend();\n    if (emu) libgme._gme_delete(emu);\n    emu = null;\n    console.debug('GMEPlayer.stop()');\n    this.onPlayerStateUpdate(true);\n  }\n}\n","/*eslint-disable*/\n\nvar CHIP_CORE = (function() {\n      var _scriptDir = '';\n\n      return (function(CHIP_CORE) {\n            CHIP_CORE = CHIP_CORE || {};\n\n            var Module = typeof CHIP_CORE !== \"undefined\" ? CHIP_CORE : {};\n            var moduleOverrides = {};\n            var key;\n            for (key in Module) {\n              if (Module.hasOwnProperty(key)) {\n                moduleOverrides[key] = Module[key]\n              }\n            }\n            var arguments_ = [];\n            var thisProgram = \"./this.program\";\n            var quit_ = function(status, toThrow) {\n              throw toThrow\n            };\n            var ENVIRONMENT_IS_WEB = true;\n            var ENVIRONMENT_IS_WORKER = false;\n            var scriptDirectory = \"\";\n            function locateFile(path) {\n              if (Module[\"locateFile\"]) {\n                return Module[\"locateFile\"](path, scriptDirectory)\n              }\n              return scriptDirectory + path\n            }\n            var read_, readAsync, readBinary, setWindowTitle;\n            if (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER) {\n              if (ENVIRONMENT_IS_WORKER) {\n                scriptDirectory = self.location.href\n              } else if (document.currentScript) {\n                scriptDirectory = document.currentScript.src\n              }\n              if (_scriptDir) {\n                scriptDirectory = _scriptDir\n              }\n              if (scriptDirectory.indexOf(\"blob:\") !== 0) {\n                scriptDirectory = scriptDirectory.substr(0, scriptDirectory.lastIndexOf(\"/\") + 1)\n              } else {\n                scriptDirectory = \"\"\n              }\n              {\n                read_ = function shell_read(url) {\n                  var xhr = new XMLHttpRequest;\n                  xhr.open(\"GET\", url, false);\n                  xhr.send(null);\n                  return xhr.responseText\n                }\n                ;\n                if (ENVIRONMENT_IS_WORKER) {\n                  readBinary = function readBinary(url) {\n                    var xhr = new XMLHttpRequest;\n                    xhr.open(\"GET\", url, false);\n                    xhr.responseType = \"arraybuffer\";\n                    xhr.send(null);\n                    return new Uint8Array(xhr.response)\n                  }\n                }\n                readAsync = function readAsync(url, onload, onerror) {\n                  var xhr = new XMLHttpRequest;\n                  xhr.open(\"GET\", url, true);\n                  xhr.responseType = \"arraybuffer\";\n                  xhr.onload = function xhr_onload() {\n                    if (xhr.status == 200 || xhr.status == 0 && xhr.response) {\n                      onload(xhr.response);\n                      return\n                    }\n                    onerror()\n                  }\n                  ;\n                  xhr.onerror = onerror;\n                  xhr.send(null)\n                }\n              }\n              setWindowTitle = function(title) {\n                document.title = title\n              }\n            } else {}\n            var out = Module[\"print\"] || console.log.bind(console);\n            var err = Module[\"printErr\"] || console.warn.bind(console);\n            for (key in moduleOverrides) {\n              if (moduleOverrides.hasOwnProperty(key)) {\n                Module[key] = moduleOverrides[key]\n              }\n            }\n            moduleOverrides = null;\n            if (Module[\"arguments\"])\n              arguments_ = Module[\"arguments\"];\n            if (Module[\"thisProgram\"])\n              thisProgram = Module[\"thisProgram\"];\n            if (Module[\"quit\"])\n              quit_ = Module[\"quit\"];\n            function dynamicAlloc(size) {\n              var ret = HEAP32[DYNAMICTOP_PTR >> 2];\n              var end = ret + size + 15 & -16;\n              if (end > _emscripten_get_heap_size()) {\n                abort()\n              }\n              HEAP32[DYNAMICTOP_PTR >> 2] = end;\n              return ret\n            }\n            function getNativeTypeSize(type) {\n              switch (type) {\n                case \"i1\":\n                case \"i8\":\n                  return 1;\n                case \"i16\":\n                  return 2;\n                case \"i32\":\n                  return 4;\n                case \"i64\":\n                  return 8;\n                case \"float\":\n                  return 4;\n                case \"double\":\n                  return 8;\n                default:\n                {\n                  if (type[type.length - 1] === \"*\") {\n                    return 4\n                  } else if (type[0] === \"i\") {\n                    var bits = Number(type.substr(1));\n                    assert(bits % 8 === 0, \"getNativeTypeSize invalid bits \" + bits + \", type \" + type);\n                    return bits / 8\n                  } else {\n                    return 0\n                  }\n                }\n              }\n            }\n            var wasmBinary;\n            if (Module[\"wasmBinary\"])\n              wasmBinary = Module[\"wasmBinary\"];\n            var noExitRuntime;\n            if (Module[\"noExitRuntime\"])\n              noExitRuntime = Module[\"noExitRuntime\"];\n            if (typeof WebAssembly !== \"object\") {\n              err(\"no native wasm support detected\")\n            }\n            function setValue(ptr, value, type, noSafe) {\n              type = type || \"i8\";\n              if (type.charAt(type.length - 1) === \"*\")\n                type = \"i32\";\n              switch (type) {\n                case \"i1\":\n                  HEAP8[ptr >> 0] = value;\n                  break;\n                case \"i8\":\n                  HEAP8[ptr >> 0] = value;\n                  break;\n                case \"i16\":\n                  HEAP16[ptr >> 1] = value;\n                  break;\n                case \"i32\":\n                  HEAP32[ptr >> 2] = value;\n                  break;\n                case \"i64\":\n                  tempI64 = [value >>> 0, (tempDouble = value,\n                      +Math_abs(tempDouble) >= 1 ? tempDouble > 0 ? (Math_min(+Math_floor(tempDouble / 4294967296), 4294967295) | 0) >>> 0 : ~~+Math_ceil((tempDouble - +(~~tempDouble >>> 0)) / 4294967296) >>> 0 : 0)],\n                      HEAP32[ptr >> 2] = tempI64[0],\n                      HEAP32[ptr + 4 >> 2] = tempI64[1];\n                  break;\n                case \"float\":\n                  HEAPF32[ptr >> 2] = value;\n                  break;\n                case \"double\":\n                  HEAPF64[ptr >> 3] = value;\n                  break;\n                default:\n                  abort(\"invalid type for setValue: \" + type)\n              }\n            }\n            function getValue(ptr, type, noSafe) {\n              type = type || \"i8\";\n              if (type.charAt(type.length - 1) === \"*\")\n                type = \"i32\";\n              switch (type) {\n                case \"i1\":\n                  return HEAP8[ptr >> 0];\n                case \"i8\":\n                  return HEAP8[ptr >> 0];\n                case \"i16\":\n                  return HEAP16[ptr >> 1];\n                case \"i32\":\n                  return HEAP32[ptr >> 2];\n                case \"i64\":\n                  return HEAP32[ptr >> 2];\n                case \"float\":\n                  return HEAPF32[ptr >> 2];\n                case \"double\":\n                  return HEAPF64[ptr >> 3];\n                default:\n                  abort(\"invalid type for getValue: \" + type)\n              }\n              return null\n            }\n            var wasmMemory;\n            var wasmTable = new WebAssembly.Table({\n              \"initial\": 915,\n              \"maximum\": 915 + 0,\n              \"element\": \"anyfunc\"\n            });\n            var ABORT = false;\n            var EXITSTATUS = 0;\n            function assert(condition, text) {\n              if (!condition) {\n                abort(\"Assertion failed: \" + text)\n              }\n            }\n            function getCFunc(ident) {\n              var func = Module[\"_\" + ident];\n              assert(func, \"Cannot call unknown function \" + ident + \", make sure it is exported\");\n              return func\n            }\n            function ccall(ident, returnType, argTypes, args, opts) {\n              var toC = {\n                \"string\": function(str) {\n                  var ret = 0;\n                  if (str !== null && str !== undefined && str !== 0) {\n                    var len = (str.length << 2) + 1;\n                    ret = stackAlloc(len);\n                    stringToUTF8(str, ret, len)\n                  }\n                  return ret\n                },\n                \"array\": function(arr) {\n                  var ret = stackAlloc(arr.length);\n                  writeArrayToMemory(arr, ret);\n                  return ret\n                }\n              };\n              function convertReturnValue(ret) {\n                if (returnType === \"string\")\n                  return UTF8ToString(ret);\n                if (returnType === \"boolean\")\n                  return Boolean(ret);\n                return ret\n              }\n              var func = getCFunc(ident);\n              var cArgs = [];\n              var stack = 0;\n              if (args) {\n                for (var i = 0; i < args.length; i++) {\n                  var converter = toC[argTypes[i]];\n                  if (converter) {\n                    if (stack === 0)\n                      stack = stackSave();\n                    cArgs[i] = converter(args[i])\n                  } else {\n                    cArgs[i] = args[i]\n                  }\n                }\n              }\n              var ret = func.apply(null, cArgs);\n              ret = convertReturnValue(ret);\n              if (stack !== 0)\n                stackRestore(stack);\n              return ret\n            }\n            var ALLOC_NORMAL = 0;\n            var ALLOC_NONE = 3;\n            function allocate(slab, types, allocator, ptr) {\n              var zeroinit, size;\n              if (typeof slab === \"number\") {\n                zeroinit = true;\n                size = slab\n              } else {\n                zeroinit = false;\n                size = slab.length\n              }\n              var singleType = typeof types === \"string\" ? types : null;\n              var ret;\n              if (allocator == ALLOC_NONE) {\n                ret = ptr\n              } else {\n                ret = [_malloc, stackAlloc, dynamicAlloc][allocator](Math.max(size, singleType ? 1 : types.length))\n              }\n              if (zeroinit) {\n                var stop;\n                ptr = ret;\n                assert((ret & 3) == 0);\n                stop = ret + (size & ~3);\n                for (; ptr < stop; ptr += 4) {\n                  HEAP32[ptr >> 2] = 0\n                }\n                stop = ret + size;\n                while (ptr < stop) {\n                  HEAP8[ptr++ >> 0] = 0\n                }\n                return ret\n              }\n              if (singleType === \"i8\") {\n                if (slab.subarray || slab.slice) {\n                  HEAPU8.set(slab, ret)\n                } else {\n                  HEAPU8.set(new Uint8Array(slab), ret)\n                }\n                return ret\n              }\n              var i = 0, type, typeSize, previousType;\n              while (i < size) {\n                var curr = slab[i];\n                type = singleType || types[i];\n                if (type === 0) {\n                  i++;\n                  continue\n                }\n                if (type == \"i64\")\n                  type = \"i32\";\n                setValue(ret + i, curr, type);\n                if (previousType !== type) {\n                  typeSize = getNativeTypeSize(type);\n                  previousType = type\n                }\n                i += typeSize\n              }\n              return ret\n            }\n            var UTF8Decoder = typeof TextDecoder !== \"undefined\" ? new TextDecoder(\"utf8\") : undefined;\n            function UTF8ArrayToString(u8Array, idx, maxBytesToRead) {\n              var endIdx = idx + maxBytesToRead;\n              var endPtr = idx;\n              while (u8Array[endPtr] && !(endPtr >= endIdx))\n                ++endPtr;\n              if (endPtr - idx > 16 && u8Array.subarray && UTF8Decoder) {\n                return UTF8Decoder.decode(u8Array.subarray(idx, endPtr))\n              } else {\n                var str = \"\";\n                while (idx < endPtr) {\n                  var u0 = u8Array[idx++];\n                  if (!(u0 & 128)) {\n                    str += String.fromCharCode(u0);\n                    continue\n                  }\n                  var u1 = u8Array[idx++] & 63;\n                  if ((u0 & 224) == 192) {\n                    str += String.fromCharCode((u0 & 31) << 6 | u1);\n                    continue\n                  }\n                  var u2 = u8Array[idx++] & 63;\n                  if ((u0 & 240) == 224) {\n                    u0 = (u0 & 15) << 12 | u1 << 6 | u2\n                  } else {\n                    u0 = (u0 & 7) << 18 | u1 << 12 | u2 << 6 | u8Array[idx++] & 63\n                  }\n                  if (u0 < 65536) {\n                    str += String.fromCharCode(u0)\n                  } else {\n                    var ch = u0 - 65536;\n                    str += String.fromCharCode(55296 | ch >> 10, 56320 | ch & 1023)\n                  }\n                }\n              }\n              return str\n            }\n            function UTF8ToString(ptr, maxBytesToRead) {\n              return ptr ? UTF8ArrayToString(HEAPU8, ptr, maxBytesToRead) : \"\"\n            }\n            function stringToUTF8Array(str, outU8Array, outIdx, maxBytesToWrite) {\n              if (!(maxBytesToWrite > 0))\n                return 0;\n              var startIdx = outIdx;\n              var endIdx = outIdx + maxBytesToWrite - 1;\n              for (var i = 0; i < str.length; ++i) {\n                var u = str.charCodeAt(i);\n                if (u >= 55296 && u <= 57343) {\n                  var u1 = str.charCodeAt(++i);\n                  u = 65536 + ((u & 1023) << 10) | u1 & 1023\n                }\n                if (u <= 127) {\n                  if (outIdx >= endIdx)\n                    break;\n                  outU8Array[outIdx++] = u\n                } else if (u <= 2047) {\n                  if (outIdx + 1 >= endIdx)\n                    break;\n                  outU8Array[outIdx++] = 192 | u >> 6;\n                  outU8Array[outIdx++] = 128 | u & 63\n                } else if (u <= 65535) {\n                  if (outIdx + 2 >= endIdx)\n                    break;\n                  outU8Array[outIdx++] = 224 | u >> 12;\n                  outU8Array[outIdx++] = 128 | u >> 6 & 63;\n                  outU8Array[outIdx++] = 128 | u & 63\n                } else {\n                  if (outIdx + 3 >= endIdx)\n                    break;\n                  outU8Array[outIdx++] = 240 | u >> 18;\n                  outU8Array[outIdx++] = 128 | u >> 12 & 63;\n                  outU8Array[outIdx++] = 128 | u >> 6 & 63;\n                  outU8Array[outIdx++] = 128 | u & 63\n                }\n              }\n              outU8Array[outIdx] = 0;\n              return outIdx - startIdx\n            }\n            function stringToUTF8(str, outPtr, maxBytesToWrite) {\n              return stringToUTF8Array(str, HEAPU8, outPtr, maxBytesToWrite)\n            }\n            function lengthBytesUTF8(str) {\n              var len = 0;\n              for (var i = 0; i < str.length; ++i) {\n                var u = str.charCodeAt(i);\n                if (u >= 55296 && u <= 57343)\n                  u = 65536 + ((u & 1023) << 10) | str.charCodeAt(++i) & 1023;\n                if (u <= 127)\n                  ++len;\n                else if (u <= 2047)\n                  len += 2;\n                else if (u <= 65535)\n                  len += 3;\n                else\n                  len += 4\n              }\n              return len\n            }\n            var UTF16Decoder = typeof TextDecoder !== \"undefined\" ? new TextDecoder(\"utf-16le\") : undefined;\n            function writeArrayToMemory(array, buffer) {\n              HEAP8.set(array, buffer)\n            }\n            function writeAsciiToMemory(str, buffer, dontAddNull) {\n              for (var i = 0; i < str.length; ++i) {\n                HEAP8[buffer++ >> 0] = str.charCodeAt(i)\n              }\n              if (!dontAddNull)\n                HEAP8[buffer >> 0] = 0\n            }\n            var WASM_PAGE_SIZE = 65536;\n            function alignUp(x, multiple) {\n              if (x % multiple > 0) {\n                x += multiple - x % multiple\n              }\n              return x\n            }\n            var buffer, HEAP8, HEAPU8, HEAP16, HEAPU16, HEAP32, HEAPU32, HEAPF32, HEAPF64;\n            function updateGlobalBufferAndViews(buf) {\n              buffer = buf;\n              Module[\"HEAP8\"] = HEAP8 = new Int8Array(buf);\n              Module[\"HEAP16\"] = HEAP16 = new Int16Array(buf);\n              Module[\"HEAP32\"] = HEAP32 = new Int32Array(buf);\n              Module[\"HEAPU8\"] = HEAPU8 = new Uint8Array(buf);\n              Module[\"HEAPU16\"] = HEAPU16 = new Uint16Array(buf);\n              Module[\"HEAPU32\"] = HEAPU32 = new Uint32Array(buf);\n              Module[\"HEAPF32\"] = HEAPF32 = new Float32Array(buf);\n              Module[\"HEAPF64\"] = HEAPF64 = new Float64Array(buf)\n            }\n            var DYNAMIC_BASE = 10925248\n                , DYNAMICTOP_PTR = 5682208;\n            var INITIAL_INITIAL_MEMORY = Module[\"INITIAL_MEMORY\"] || 16777216;\n            if (Module[\"wasmMemory\"]) {\n              wasmMemory = Module[\"wasmMemory\"]\n            } else {\n              wasmMemory = new WebAssembly.Memory({\n                \"initial\": INITIAL_INITIAL_MEMORY / WASM_PAGE_SIZE\n              })\n            }\n            if (wasmMemory) {\n              buffer = wasmMemory.buffer\n            }\n            INITIAL_INITIAL_MEMORY = buffer.byteLength;\n            updateGlobalBufferAndViews(buffer);\n            HEAP32[DYNAMICTOP_PTR >> 2] = DYNAMIC_BASE;\n            function callRuntimeCallbacks(callbacks) {\n              while (callbacks.length > 0) {\n                var callback = callbacks.shift();\n                if (typeof callback == \"function\") {\n                  callback();\n                  continue\n                }\n                var func = callback.func;\n                if (typeof func === \"number\") {\n                  if (callback.arg === undefined) {\n                    Module[\"dynCall_v\"](func)\n                  } else {\n                    Module[\"dynCall_vi\"](func, callback.arg)\n                  }\n                } else {\n                  func(callback.arg === undefined ? null : callback.arg)\n                }\n              }\n            }\n            var __ATPRERUN__ = [];\n            var __ATINIT__ = [];\n            var __ATMAIN__ = [];\n            var __ATPOSTRUN__ = [];\n            var runtimeInitialized = false;\n            function preRun() {\n              if (Module[\"preRun\"]) {\n                if (typeof Module[\"preRun\"] == \"function\")\n                  Module[\"preRun\"] = [Module[\"preRun\"]];\n                while (Module[\"preRun\"].length) {\n                  addOnPreRun(Module[\"preRun\"].shift())\n                }\n              }\n              callRuntimeCallbacks(__ATPRERUN__)\n            }\n            function initRuntime() {\n              runtimeInitialized = true;\n              if (!Module[\"noFSInit\"] && !FS.init.initialized)\n                FS.init();\n              TTY.init();\n              callRuntimeCallbacks(__ATINIT__)\n            }\n            function preMain() {\n              FS.ignorePermissions = false;\n              callRuntimeCallbacks(__ATMAIN__)\n            }\n            function postRun() {\n              if (Module[\"postRun\"]) {\n                if (typeof Module[\"postRun\"] == \"function\")\n                  Module[\"postRun\"] = [Module[\"postRun\"]];\n                while (Module[\"postRun\"].length) {\n                  addOnPostRun(Module[\"postRun\"].shift())\n                }\n              }\n              callRuntimeCallbacks(__ATPOSTRUN__)\n            }\n            function addOnPreRun(cb) {\n              __ATPRERUN__.unshift(cb)\n            }\n            function addOnPostRun(cb) {\n              __ATPOSTRUN__.unshift(cb)\n            }\n            var Math_abs = Math.abs;\n            var Math_ceil = Math.ceil;\n            var Math_floor = Math.floor;\n            var Math_min = Math.min;\n            var runDependencies = 0;\n            var runDependencyWatcher = null;\n            var dependenciesFulfilled = null;\n            function getUniqueRunDependency(id) {\n              return id\n            }\n            function addRunDependency(id) {\n              runDependencies++;\n              if (Module[\"monitorRunDependencies\"]) {\n                Module[\"monitorRunDependencies\"](runDependencies)\n              }\n            }\n            function removeRunDependency(id) {\n              runDependencies--;\n              if (Module[\"monitorRunDependencies\"]) {\n                Module[\"monitorRunDependencies\"](runDependencies)\n              }\n              if (runDependencies == 0) {\n                if (runDependencyWatcher !== null) {\n                  clearInterval(runDependencyWatcher);\n                  runDependencyWatcher = null\n                }\n                if (dependenciesFulfilled) {\n                  var callback = dependenciesFulfilled;\n                  dependenciesFulfilled = null;\n                  callback()\n                }\n              }\n            }\n            Module[\"preloadedImages\"] = {};\n            Module[\"preloadedAudios\"] = {};\n            function abort(what) {\n              if (Module[\"onAbort\"]) {\n                Module[\"onAbort\"](what)\n              }\n              what += \"\";\n              out(what);\n              err(what);\n              ABORT = true;\n              EXITSTATUS = 1;\n              what = \"abort(\" + what + \"). Build with -s ASSERTIONS=1 for more info.\";\n              throw new WebAssembly.RuntimeError(what)\n            }\n            var dataURIPrefix = \"data:application/octet-stream;base64,\";\n            function isDataURI(filename) {\n              return String.prototype.startsWith ? filename.startsWith(dataURIPrefix) : filename.indexOf(dataURIPrefix) === 0\n            }\n            var wasmBinaryFile = \"chip-core.wasm\";\n            if (!isDataURI(wasmBinaryFile)) {\n              wasmBinaryFile = locateFile(wasmBinaryFile)\n            }\n            function getBinary() {\n              try {\n                if (wasmBinary) {\n                  return new Uint8Array(wasmBinary)\n                }\n                if (readBinary) {\n                  return readBinary(wasmBinaryFile)\n                } else {\n                  throw \"both async and sync fetching of the wasm failed\"\n                }\n              } catch (err) {\n                abort(err)\n              }\n            }\n            function getBinaryPromise() {\n              if (!wasmBinary && (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER) && typeof fetch === \"function\") {\n                return fetch(wasmBinaryFile, {\n                  credentials: \"same-origin\"\n                }).then(function(response) {\n                  if (!response[\"ok\"]) {\n                    throw \"failed to load wasm binary file at '\" + wasmBinaryFile + \"'\"\n                  }\n                  return response[\"arrayBuffer\"]()\n                }).catch(function() {\n                  return getBinary()\n                })\n              }\n              return new Promise(function(resolve, reject) {\n                    resolve(getBinary())\n                  }\n              )\n            }\n            function createWasm() {\n              var info = {\n                \"a\": asmLibraryArg\n              };\n              function receiveInstance(instance, module) {\n                var exports = instance.exports;\n                Module[\"asm\"] = exports;\n                removeRunDependency(\"wasm-instantiate\")\n              }\n              addRunDependency(\"wasm-instantiate\");\n              function receiveInstantiatedSource(output) {\n                receiveInstance(output[\"instance\"])\n              }\n              function instantiateArrayBuffer(receiver) {\n                return getBinaryPromise().then(function(binary) {\n                  return WebAssembly.instantiate(binary, info)\n                }).then(receiver, function(reason) {\n                  err(\"failed to asynchronously prepare wasm: \" + reason);\n                  abort(reason)\n                })\n              }\n              function instantiateAsync() {\n                if (!wasmBinary && typeof WebAssembly.instantiateStreaming === \"function\" && !isDataURI(wasmBinaryFile) && typeof fetch === \"function\") {\n                  fetch(wasmBinaryFile, {\n                    credentials: \"same-origin\"\n                  }).then(function(response) {\n                    var result = WebAssembly.instantiateStreaming(response, info);\n                    return result.then(receiveInstantiatedSource, function(reason) {\n                      err(\"wasm streaming compile failed: \" + reason);\n                      err(\"falling back to ArrayBuffer instantiation\");\n                      instantiateArrayBuffer(receiveInstantiatedSource)\n                    })\n                  })\n                } else {\n                  return instantiateArrayBuffer(receiveInstantiatedSource)\n                }\n              }\n              if (Module[\"instantiateWasm\"]) {\n                try {\n                  var exports = Module[\"instantiateWasm\"](info, receiveInstance);\n                  return exports\n                } catch (e) {\n                  err(\"Module.instantiateWasm callback failed with error: \" + e);\n                  return false\n                }\n              }\n              instantiateAsync();\n              return {}\n            }\n            var tempDouble;\n            var tempI64;\n            var ASM_CONSTS = {\n              161276: function($0) {\n                console.log(\"Error during V2M conversion.\", $0)\n              },\n              161441: function($0) {\n                console.log(\"Tiny MIDI Player loaded %d bytes.\", $0)\n              },\n              161499: function($0) {\n                console.log(\"First note appears at %d ms.\", $0)\n              }\n            };\n            function _emscripten_asm_const_iii(code, sigPtr, argbuf) {\n              var args = readAsmConstArgs(sigPtr, argbuf);\n              return ASM_CONSTS[code].apply(null, args)\n            }\n            __ATINIT__.push({\n              func: function() {\n                ___wasm_call_ctors()\n              }\n            });\n            function demangle(func) {\n              return func\n            }\n            function demangleAll(text) {\n              var regex = /\\b_Z[\\w\\d_]+/g;\n              return text.replace(regex, function(x) {\n                var y = demangle(x);\n                return x === y ? x : y + \" [\" + x + \"]\"\n              })\n            }\n            function jsStackTrace() {\n              var err = new Error;\n              if (!err.stack) {\n                try {\n                  throw new Error\n                } catch (e) {\n                  err = e\n                }\n                if (!err.stack) {\n                  return \"(no stack trace available)\"\n                }\n              }\n              return err.stack.toString()\n            }\n            function stackTrace() {\n              var js = jsStackTrace();\n              if (Module[\"extraStackTrace\"])\n                js += \"\\n\" + Module[\"extraStackTrace\"]();\n              return demangleAll(js)\n            }\n            function ___assert_fail(condition, filename, line, func) {\n              abort(\"Assertion failed: \" + UTF8ToString(condition) + \", at: \" + [filename ? UTF8ToString(filename) : \"unknown filename\", line, func ? UTF8ToString(func) : \"unknown function\"])\n            }\n            function ___cxa_allocate_exception(size) {\n              return _malloc(size)\n            }\n            var ___exception_infos = {};\n            var ___exception_last = 0;\n            function __ZSt18uncaught_exceptionv() {\n              return __ZSt18uncaught_exceptionv.uncaught_exceptions > 0\n            }\n            function ___cxa_throw(ptr, type, destructor) {\n              ___exception_infos[ptr] = {\n                ptr: ptr,\n                adjusted: [ptr],\n                type: type,\n                destructor: destructor,\n                refcount: 0,\n                caught: false,\n                rethrown: false\n              };\n              ___exception_last = ptr;\n              if (!(\"uncaught_exception\"in __ZSt18uncaught_exceptionv)) {\n                __ZSt18uncaught_exceptionv.uncaught_exceptions = 1\n              } else {\n                __ZSt18uncaught_exceptionv.uncaught_exceptions++\n              }\n              throw ptr\n            }\n            function ___setErrNo(value) {\n              if (Module[\"___errno_location\"])\n                HEAP32[Module[\"___errno_location\"]() >> 2] = value;\n              return value\n            }\n            function ___map_file(pathname, size) {\n              ___setErrNo(63);\n              return -1\n            }\n            var PATH = {\n              splitPath: function(filename) {\n                var splitPathRe = /^(\\/?|)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?|)(\\.[^.\\/]*|))(?:[\\/]*)$/;\n                return splitPathRe.exec(filename).slice(1)\n              },\n              normalizeArray: function(parts, allowAboveRoot) {\n                var up = 0;\n                for (var i = parts.length - 1; i >= 0; i--) {\n                  var last = parts[i];\n                  if (last === \".\") {\n                    parts.splice(i, 1)\n                  } else if (last === \"..\") {\n                    parts.splice(i, 1);\n                    up++\n                  } else if (up) {\n                    parts.splice(i, 1);\n                    up--\n                  }\n                }\n                if (allowAboveRoot) {\n                  for (; up; up--) {\n                    parts.unshift(\"..\")\n                  }\n                }\n                return parts\n              },\n              normalize: function(path) {\n                var isAbsolute = path.charAt(0) === \"/\"\n                    , trailingSlash = path.substr(-1) === \"/\";\n                path = PATH.normalizeArray(path.split(\"/\").filter(function(p) {\n                  return !!p\n                }), !isAbsolute).join(\"/\");\n                if (!path && !isAbsolute) {\n                  path = \".\"\n                }\n                if (path && trailingSlash) {\n                  path += \"/\"\n                }\n                return (isAbsolute ? \"/\" : \"\") + path\n              },\n              dirname: function(path) {\n                var result = PATH.splitPath(path)\n                    , root = result[0]\n                    , dir = result[1];\n                if (!root && !dir) {\n                  return \".\"\n                }\n                if (dir) {\n                  dir = dir.substr(0, dir.length - 1)\n                }\n                return root + dir\n              },\n              basename: function(path) {\n                if (path === \"/\")\n                  return \"/\";\n                var lastSlash = path.lastIndexOf(\"/\");\n                if (lastSlash === -1)\n                  return path;\n                return path.substr(lastSlash + 1)\n              },\n              extname: function(path) {\n                return PATH.splitPath(path)[3]\n              },\n              join: function() {\n                var paths = Array.prototype.slice.call(arguments, 0);\n                return PATH.normalize(paths.join(\"/\"))\n              },\n              join2: function(l, r) {\n                return PATH.normalize(l + \"/\" + r)\n              }\n            };\n            var PATH_FS = {\n              resolve: function() {\n                var resolvedPath = \"\"\n                    , resolvedAbsolute = false;\n                for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n                  var path = i >= 0 ? arguments[i] : FS.cwd();\n                  if (typeof path !== \"string\") {\n                    throw new TypeError(\"Arguments to path.resolve must be strings\")\n                  } else if (!path) {\n                    return \"\"\n                  }\n                  resolvedPath = path + \"/\" + resolvedPath;\n                  resolvedAbsolute = path.charAt(0) === \"/\"\n                }\n                resolvedPath = PATH.normalizeArray(resolvedPath.split(\"/\").filter(function(p) {\n                  return !!p\n                }), !resolvedAbsolute).join(\"/\");\n                return (resolvedAbsolute ? \"/\" : \"\") + resolvedPath || \".\"\n              },\n              relative: function(from, to) {\n                from = PATH_FS.resolve(from).substr(1);\n                to = PATH_FS.resolve(to).substr(1);\n                function trim(arr) {\n                  var start = 0;\n                  for (; start < arr.length; start++) {\n                    if (arr[start] !== \"\")\n                      break\n                  }\n                  var end = arr.length - 1;\n                  for (; end >= 0; end--) {\n                    if (arr[end] !== \"\")\n                      break\n                  }\n                  if (start > end)\n                    return [];\n                  return arr.slice(start, end - start + 1)\n                }\n                var fromParts = trim(from.split(\"/\"));\n                var toParts = trim(to.split(\"/\"));\n                var length = Math.min(fromParts.length, toParts.length);\n                var samePartsLength = length;\n                for (var i = 0; i < length; i++) {\n                  if (fromParts[i] !== toParts[i]) {\n                    samePartsLength = i;\n                    break\n                  }\n                }\n                var outputParts = [];\n                for (var i = samePartsLength; i < fromParts.length; i++) {\n                  outputParts.push(\"..\")\n                }\n                outputParts = outputParts.concat(toParts.slice(samePartsLength));\n                return outputParts.join(\"/\")\n              }\n            };\n            var TTY = {\n              ttys: [],\n              init: function() {},\n              shutdown: function() {},\n              register: function(dev, ops) {\n                TTY.ttys[dev] = {\n                  input: [],\n                  output: [],\n                  ops: ops\n                };\n                FS.registerDevice(dev, TTY.stream_ops)\n              },\n              stream_ops: {\n                open: function(stream) {\n                  var tty = TTY.ttys[stream.node.rdev];\n                  if (!tty) {\n                    throw new FS.ErrnoError(43)\n                  }\n                  stream.tty = tty;\n                  stream.seekable = false\n                },\n                close: function(stream) {\n                  stream.tty.ops.flush(stream.tty)\n                },\n                flush: function(stream) {\n                  stream.tty.ops.flush(stream.tty)\n                },\n                read: function(stream, buffer, offset, length, pos) {\n                  if (!stream.tty || !stream.tty.ops.get_char) {\n                    throw new FS.ErrnoError(60)\n                  }\n                  var bytesRead = 0;\n                  for (var i = 0; i < length; i++) {\n                    var result;\n                    try {\n                      result = stream.tty.ops.get_char(stream.tty)\n                    } catch (e) {\n                      throw new FS.ErrnoError(29)\n                    }\n                    if (result === undefined && bytesRead === 0) {\n                      throw new FS.ErrnoError(6)\n                    }\n                    if (result === null || result === undefined)\n                      break;\n                    bytesRead++;\n                    buffer[offset + i] = result\n                  }\n                  if (bytesRead) {\n                    stream.node.timestamp = Date.now()\n                  }\n                  return bytesRead\n                },\n                write: function(stream, buffer, offset, length, pos) {\n                  if (!stream.tty || !stream.tty.ops.put_char) {\n                    throw new FS.ErrnoError(60)\n                  }\n                  try {\n                    for (var i = 0; i < length; i++) {\n                      stream.tty.ops.put_char(stream.tty, buffer[offset + i])\n                    }\n                  } catch (e) {\n                    throw new FS.ErrnoError(29)\n                  }\n                  if (length) {\n                    stream.node.timestamp = Date.now()\n                  }\n                  return i\n                }\n              },\n              default_tty_ops: {\n                get_char: function(tty) {\n                  if (!tty.input.length) {\n                    var result = null;\n                    if (typeof window != \"undefined\" && typeof window.prompt == \"function\") {\n                      result = window.prompt(\"Input: \");\n                      if (result !== null) {\n                        result += \"\\n\"\n                      }\n                    } else if (typeof readline == \"function\") {\n                      result = readline();\n                      if (result !== null) {\n                        result += \"\\n\"\n                      }\n                    }\n                    if (!result) {\n                      return null\n                    }\n                    tty.input = intArrayFromString(result, true)\n                  }\n                  return tty.input.shift()\n                },\n                put_char: function(tty, val) {\n                  if (val === null || val === 10) {\n                    out(UTF8ArrayToString(tty.output, 0));\n                    tty.output = []\n                  } else {\n                    if (val != 0)\n                      tty.output.push(val)\n                  }\n                },\n                flush: function(tty) {\n                  if (tty.output && tty.output.length > 0) {\n                    out(UTF8ArrayToString(tty.output, 0));\n                    tty.output = []\n                  }\n                }\n              },\n              default_tty1_ops: {\n                put_char: function(tty, val) {\n                  if (val === null || val === 10) {\n                    err(UTF8ArrayToString(tty.output, 0));\n                    tty.output = []\n                  } else {\n                    if (val != 0)\n                      tty.output.push(val)\n                  }\n                },\n                flush: function(tty) {\n                  if (tty.output && tty.output.length > 0) {\n                    err(UTF8ArrayToString(tty.output, 0));\n                    tty.output = []\n                  }\n                }\n              }\n            };\n            var MEMFS = {\n              ops_table: null,\n              mount: function(mount) {\n                return MEMFS.createNode(null, \"/\", 16384 | 511, 0)\n              },\n              createNode: function(parent, name, mode, dev) {\n                if (FS.isBlkdev(mode) || FS.isFIFO(mode)) {\n                  throw new FS.ErrnoError(63)\n                }\n                if (!MEMFS.ops_table) {\n                  MEMFS.ops_table = {\n                    dir: {\n                      node: {\n                        getattr: MEMFS.node_ops.getattr,\n                        setattr: MEMFS.node_ops.setattr,\n                        lookup: MEMFS.node_ops.lookup,\n                        mknod: MEMFS.node_ops.mknod,\n                        rename: MEMFS.node_ops.rename,\n                        unlink: MEMFS.node_ops.unlink,\n                        rmdir: MEMFS.node_ops.rmdir,\n                        readdir: MEMFS.node_ops.readdir,\n                        symlink: MEMFS.node_ops.symlink\n                      },\n                      stream: {\n                        llseek: MEMFS.stream_ops.llseek\n                      }\n                    },\n                    file: {\n                      node: {\n                        getattr: MEMFS.node_ops.getattr,\n                        setattr: MEMFS.node_ops.setattr\n                      },\n                      stream: {\n                        llseek: MEMFS.stream_ops.llseek,\n                        read: MEMFS.stream_ops.read,\n                        write: MEMFS.stream_ops.write,\n                        allocate: MEMFS.stream_ops.allocate,\n                        mmap: MEMFS.stream_ops.mmap,\n                        msync: MEMFS.stream_ops.msync\n                      }\n                    },\n                    link: {\n                      node: {\n                        getattr: MEMFS.node_ops.getattr,\n                        setattr: MEMFS.node_ops.setattr,\n                        readlink: MEMFS.node_ops.readlink\n                      },\n                      stream: {}\n                    },\n                    chrdev: {\n                      node: {\n                        getattr: MEMFS.node_ops.getattr,\n                        setattr: MEMFS.node_ops.setattr\n                      },\n                      stream: FS.chrdev_stream_ops\n                    }\n                  }\n                }\n                var node = FS.createNode(parent, name, mode, dev);\n                if (FS.isDir(node.mode)) {\n                  node.node_ops = MEMFS.ops_table.dir.node;\n                  node.stream_ops = MEMFS.ops_table.dir.stream;\n                  node.contents = {}\n                } else if (FS.isFile(node.mode)) {\n                  node.node_ops = MEMFS.ops_table.file.node;\n                  node.stream_ops = MEMFS.ops_table.file.stream;\n                  node.usedBytes = 0;\n                  node.contents = null\n                } else if (FS.isLink(node.mode)) {\n                  node.node_ops = MEMFS.ops_table.link.node;\n                  node.stream_ops = MEMFS.ops_table.link.stream\n                } else if (FS.isChrdev(node.mode)) {\n                  node.node_ops = MEMFS.ops_table.chrdev.node;\n                  node.stream_ops = MEMFS.ops_table.chrdev.stream\n                }\n                node.timestamp = Date.now();\n                if (parent) {\n                  parent.contents[name] = node\n                }\n                return node\n              },\n              getFileDataAsRegularArray: function(node) {\n                if (node.contents && node.contents.subarray) {\n                  var arr = [];\n                  for (var i = 0; i < node.usedBytes; ++i)\n                    arr.push(node.contents[i]);\n                  return arr\n                }\n                return node.contents\n              },\n              getFileDataAsTypedArray: function(node) {\n                if (!node.contents)\n                  return new Uint8Array(0);\n                if (node.contents.subarray)\n                  return node.contents.subarray(0, node.usedBytes);\n                return new Uint8Array(node.contents)\n              },\n              expandFileStorage: function(node, newCapacity) {\n                var prevCapacity = node.contents ? node.contents.length : 0;\n                if (prevCapacity >= newCapacity)\n                  return;\n                var CAPACITY_DOUBLING_MAX = 1024 * 1024;\n                newCapacity = Math.max(newCapacity, prevCapacity * (prevCapacity < CAPACITY_DOUBLING_MAX ? 2 : 1.125) | 0);\n                if (prevCapacity != 0)\n                  newCapacity = Math.max(newCapacity, 256);\n                var oldContents = node.contents;\n                node.contents = new Uint8Array(newCapacity);\n                if (node.usedBytes > 0)\n                  node.contents.set(oldContents.subarray(0, node.usedBytes), 0);\n                return\n              },\n              resizeFileStorage: function(node, newSize) {\n                if (node.usedBytes == newSize)\n                  return;\n                if (newSize == 0) {\n                  node.contents = null;\n                  node.usedBytes = 0;\n                  return\n                }\n                if (!node.contents || node.contents.subarray) {\n                  var oldContents = node.contents;\n                  node.contents = new Uint8Array(newSize);\n                  if (oldContents) {\n                    node.contents.set(oldContents.subarray(0, Math.min(newSize, node.usedBytes)))\n                  }\n                  node.usedBytes = newSize;\n                  return\n                }\n                if (!node.contents)\n                  node.contents = [];\n                if (node.contents.length > newSize)\n                  node.contents.length = newSize;\n                else\n                  while (node.contents.length < newSize)\n                    node.contents.push(0);\n                node.usedBytes = newSize\n              },\n              node_ops: {\n                getattr: function(node) {\n                  var attr = {};\n                  attr.dev = FS.isChrdev(node.mode) ? node.id : 1;\n                  attr.ino = node.id;\n                  attr.mode = node.mode;\n                  attr.nlink = 1;\n                  attr.uid = 0;\n                  attr.gid = 0;\n                  attr.rdev = node.rdev;\n                  if (FS.isDir(node.mode)) {\n                    attr.size = 4096\n                  } else if (FS.isFile(node.mode)) {\n                    attr.size = node.usedBytes\n                  } else if (FS.isLink(node.mode)) {\n                    attr.size = node.link.length\n                  } else {\n                    attr.size = 0\n                  }\n                  attr.atime = new Date(node.timestamp);\n                  attr.mtime = new Date(node.timestamp);\n                  attr.ctime = new Date(node.timestamp);\n                  attr.blksize = 4096;\n                  attr.blocks = Math.ceil(attr.size / attr.blksize);\n                  return attr\n                },\n                setattr: function(node, attr) {\n                  if (attr.mode !== undefined) {\n                    node.mode = attr.mode\n                  }\n                  if (attr.timestamp !== undefined) {\n                    node.timestamp = attr.timestamp\n                  }\n                  if (attr.size !== undefined) {\n                    MEMFS.resizeFileStorage(node, attr.size)\n                  }\n                },\n                lookup: function(parent, name) {\n                  throw FS.genericErrors[44]\n                },\n                mknod: function(parent, name, mode, dev) {\n                  return MEMFS.createNode(parent, name, mode, dev)\n                },\n                rename: function(old_node, new_dir, new_name) {\n                  if (FS.isDir(old_node.mode)) {\n                    var new_node;\n                    try {\n                      new_node = FS.lookupNode(new_dir, new_name)\n                    } catch (e) {}\n                    if (new_node) {\n                      for (var i in new_node.contents) {\n                        throw new FS.ErrnoError(55)\n                      }\n                    }\n                  }\n                  delete old_node.parent.contents[old_node.name];\n                  old_node.name = new_name;\n                  new_dir.contents[new_name] = old_node;\n                  old_node.parent = new_dir\n                },\n                unlink: function(parent, name) {\n                  delete parent.contents[name]\n                },\n                rmdir: function(parent, name) {\n                  var node = FS.lookupNode(parent, name);\n                  for (var i in node.contents) {\n                    throw new FS.ErrnoError(55)\n                  }\n                  delete parent.contents[name]\n                },\n                readdir: function(node) {\n                  var entries = [\".\", \"..\"];\n                  for (var key in node.contents) {\n                    if (!node.contents.hasOwnProperty(key)) {\n                      continue\n                    }\n                    entries.push(key)\n                  }\n                  return entries\n                },\n                symlink: function(parent, newname, oldpath) {\n                  var node = MEMFS.createNode(parent, newname, 511 | 40960, 0);\n                  node.link = oldpath;\n                  return node\n                },\n                readlink: function(node) {\n                  if (!FS.isLink(node.mode)) {\n                    throw new FS.ErrnoError(28)\n                  }\n                  return node.link\n                }\n              },\n              stream_ops: {\n                read: function(stream, buffer, offset, length, position) {\n                  var contents = stream.node.contents;\n                  if (position >= stream.node.usedBytes)\n                    return 0;\n                  var size = Math.min(stream.node.usedBytes - position, length);\n                  if (size > 8 && contents.subarray) {\n                    buffer.set(contents.subarray(position, position + size), offset)\n                  } else {\n                    for (var i = 0; i < size; i++)\n                      buffer[offset + i] = contents[position + i]\n                  }\n                  return size\n                },\n                write: function(stream, buffer, offset, length, position, canOwn) {\n                  if (buffer.buffer === HEAP8.buffer) {\n                    canOwn = false\n                  }\n                  if (!length)\n                    return 0;\n                  var node = stream.node;\n                  node.timestamp = Date.now();\n                  if (buffer.subarray && (!node.contents || node.contents.subarray)) {\n                    if (canOwn) {\n                      node.contents = buffer.subarray(offset, offset + length);\n                      node.usedBytes = length;\n                      return length\n                    } else if (node.usedBytes === 0 && position === 0) {\n                      node.contents = buffer.slice(offset, offset + length);\n                      node.usedBytes = length;\n                      return length\n                    } else if (position + length <= node.usedBytes) {\n                      node.contents.set(buffer.subarray(offset, offset + length), position);\n                      return length\n                    }\n                  }\n                  MEMFS.expandFileStorage(node, position + length);\n                  if (node.contents.subarray && buffer.subarray)\n                    node.contents.set(buffer.subarray(offset, offset + length), position);\n                  else {\n                    for (var i = 0; i < length; i++) {\n                      node.contents[position + i] = buffer[offset + i]\n                    }\n                  }\n                  node.usedBytes = Math.max(node.usedBytes, position + length);\n                  return length\n                },\n                llseek: function(stream, offset, whence) {\n                  var position = offset;\n                  if (whence === 1) {\n                    position += stream.position\n                  } else if (whence === 2) {\n                    if (FS.isFile(stream.node.mode)) {\n                      position += stream.node.usedBytes\n                    }\n                  }\n                  if (position < 0) {\n                    throw new FS.ErrnoError(28)\n                  }\n                  return position\n                },\n                allocate: function(stream, offset, length) {\n                  MEMFS.expandFileStorage(stream.node, offset + length);\n                  stream.node.usedBytes = Math.max(stream.node.usedBytes, offset + length)\n                },\n                mmap: function(stream, buffer, offset, length, position, prot, flags) {\n                  if (!FS.isFile(stream.node.mode)) {\n                    throw new FS.ErrnoError(43)\n                  }\n                  var ptr;\n                  var allocated;\n                  var contents = stream.node.contents;\n                  if (!(flags & 2) && contents.buffer === buffer.buffer) {\n                    allocated = false;\n                    ptr = contents.byteOffset\n                  } else {\n                    if (position > 0 || position + length < contents.length) {\n                      if (contents.subarray) {\n                        contents = contents.subarray(position, position + length)\n                      } else {\n                        contents = Array.prototype.slice.call(contents, position, position + length)\n                      }\n                    }\n                    allocated = true;\n                    var fromHeap = buffer.buffer == HEAP8.buffer;\n                    ptr = _malloc(length);\n                    if (!ptr) {\n                      throw new FS.ErrnoError(48)\n                    }\n                    (fromHeap ? HEAP8 : buffer).set(contents, ptr)\n                  }\n                  return {\n                    ptr: ptr,\n                    allocated: allocated\n                  }\n                },\n                msync: function(stream, buffer, offset, length, mmapFlags) {\n                  if (!FS.isFile(stream.node.mode)) {\n                    throw new FS.ErrnoError(43)\n                  }\n                  if (mmapFlags & 2) {\n                    return 0\n                  }\n                  var bytesWritten = MEMFS.stream_ops.write(stream, buffer, 0, length, offset, false);\n                  return 0\n                }\n              }\n            };\n            var FS = {\n              root: null,\n              mounts: [],\n              devices: {},\n              streams: [],\n              nextInode: 1,\n              nameTable: null,\n              currentPath: \"/\",\n              initialized: false,\n              ignorePermissions: true,\n              trackingDelegate: {},\n              tracking: {\n                openFlags: {\n                  READ: 1,\n                  WRITE: 2\n                }\n              },\n              ErrnoError: null,\n              genericErrors: {},\n              filesystems: null,\n              syncFSRequests: 0,\n              handleFSError: function(e) {\n                if (!(e instanceof FS.ErrnoError))\n                  throw e + \" : \" + stackTrace();\n                return ___setErrNo(e.errno)\n              },\n              lookupPath: function(path, opts) {\n                path = PATH_FS.resolve(FS.cwd(), path);\n                opts = opts || {};\n                if (!path)\n                  return {\n                    path: \"\",\n                    node: null\n                  };\n                var defaults = {\n                  follow_mount: true,\n                  recurse_count: 0\n                };\n                for (var key in defaults) {\n                  if (opts[key] === undefined) {\n                    opts[key] = defaults[key]\n                  }\n                }\n                if (opts.recurse_count > 8) {\n                  throw new FS.ErrnoError(32)\n                }\n                var parts = PATH.normalizeArray(path.split(\"/\").filter(function(p) {\n                  return !!p\n                }), false);\n                var current = FS.root;\n                var current_path = \"/\";\n                for (var i = 0; i < parts.length; i++) {\n                  var islast = i === parts.length - 1;\n                  if (islast && opts.parent) {\n                    break\n                  }\n                  current = FS.lookupNode(current, parts[i]);\n                  current_path = PATH.join2(current_path, parts[i]);\n                  if (FS.isMountpoint(current)) {\n                    if (!islast || islast && opts.follow_mount) {\n                      current = current.mounted.root\n                    }\n                  }\n                  if (!islast || opts.follow) {\n                    var count = 0;\n                    while (FS.isLink(current.mode)) {\n                      var link = FS.readlink(current_path);\n                      current_path = PATH_FS.resolve(PATH.dirname(current_path), link);\n                      var lookup = FS.lookupPath(current_path, {\n                        recurse_count: opts.recurse_count\n                      });\n                      current = lookup.node;\n                      if (count++ > 40) {\n                        throw new FS.ErrnoError(32)\n                      }\n                    }\n                  }\n                }\n                return {\n                  path: current_path,\n                  node: current\n                }\n              },\n              getPath: function(node) {\n                var path;\n                while (true) {\n                  if (FS.isRoot(node)) {\n                    var mount = node.mount.mountpoint;\n                    if (!path)\n                      return mount;\n                    return mount[mount.length - 1] !== \"/\" ? mount + \"/\" + path : mount + path\n                  }\n                  path = path ? node.name + \"/\" + path : node.name;\n                  node = node.parent\n                }\n              },\n              hashName: function(parentid, name) {\n                var hash = 0;\n                for (var i = 0; i < name.length; i++) {\n                  hash = (hash << 5) - hash + name.charCodeAt(i) | 0\n                }\n                return (parentid + hash >>> 0) % FS.nameTable.length\n              },\n              hashAddNode: function(node) {\n                var hash = FS.hashName(node.parent.id, node.name);\n                node.name_next = FS.nameTable[hash];\n                FS.nameTable[hash] = node\n              },\n              hashRemoveNode: function(node) {\n                var hash = FS.hashName(node.parent.id, node.name);\n                if (FS.nameTable[hash] === node) {\n                  FS.nameTable[hash] = node.name_next\n                } else {\n                  var current = FS.nameTable[hash];\n                  while (current) {\n                    if (current.name_next === node) {\n                      current.name_next = node.name_next;\n                      break\n                    }\n                    current = current.name_next\n                  }\n                }\n              },\n              lookupNode: function(parent, name) {\n                var errCode = FS.mayLookup(parent);\n                if (errCode) {\n                  throw new FS.ErrnoError(errCode,parent)\n                }\n                var hash = FS.hashName(parent.id, name);\n                for (var node = FS.nameTable[hash]; node; node = node.name_next) {\n                  var nodeName = node.name;\n                  if (node.parent.id === parent.id && nodeName === name) {\n                    return node\n                  }\n                }\n                return FS.lookup(parent, name)\n              },\n              createNode: function(parent, name, mode, rdev) {\n                var node = new FS.FSNode(parent,name,mode,rdev);\n                FS.hashAddNode(node);\n                return node\n              },\n              destroyNode: function(node) {\n                FS.hashRemoveNode(node)\n              },\n              isRoot: function(node) {\n                return node === node.parent\n              },\n              isMountpoint: function(node) {\n                return !!node.mounted\n              },\n              isFile: function(mode) {\n                return (mode & 61440) === 32768\n              },\n              isDir: function(mode) {\n                return (mode & 61440) === 16384\n              },\n              isLink: function(mode) {\n                return (mode & 61440) === 40960\n              },\n              isChrdev: function(mode) {\n                return (mode & 61440) === 8192\n              },\n              isBlkdev: function(mode) {\n                return (mode & 61440) === 24576\n              },\n              isFIFO: function(mode) {\n                return (mode & 61440) === 4096\n              },\n              isSocket: function(mode) {\n                return (mode & 49152) === 49152\n              },\n              flagModes: {\n                \"r\": 0,\n                \"rs\": 1052672,\n                \"r+\": 2,\n                \"w\": 577,\n                \"wx\": 705,\n                \"xw\": 705,\n                \"w+\": 578,\n                \"wx+\": 706,\n                \"xw+\": 706,\n                \"a\": 1089,\n                \"ax\": 1217,\n                \"xa\": 1217,\n                \"a+\": 1090,\n                \"ax+\": 1218,\n                \"xa+\": 1218\n              },\n              modeStringToFlags: function(str) {\n                var flags = FS.flagModes[str];\n                if (typeof flags === \"undefined\") {\n                  throw new Error(\"Unknown file open mode: \" + str)\n                }\n                return flags\n              },\n              flagsToPermissionString: function(flag) {\n                var perms = [\"r\", \"w\", \"rw\"][flag & 3];\n                if (flag & 512) {\n                  perms += \"w\"\n                }\n                return perms\n              },\n              nodePermissions: function(node, perms) {\n                if (FS.ignorePermissions) {\n                  return 0\n                }\n                if (perms.indexOf(\"r\") !== -1 && !(node.mode & 292)) {\n                  return 2\n                } else if (perms.indexOf(\"w\") !== -1 && !(node.mode & 146)) {\n                  return 2\n                } else if (perms.indexOf(\"x\") !== -1 && !(node.mode & 73)) {\n                  return 2\n                }\n                return 0\n              },\n              mayLookup: function(dir) {\n                var errCode = FS.nodePermissions(dir, \"x\");\n                if (errCode)\n                  return errCode;\n                if (!dir.node_ops.lookup)\n                  return 2;\n                return 0\n              },\n              mayCreate: function(dir, name) {\n                try {\n                  var node = FS.lookupNode(dir, name);\n                  return 20\n                } catch (e) {}\n                return FS.nodePermissions(dir, \"wx\")\n              },\n              mayDelete: function(dir, name, isdir) {\n                var node;\n                try {\n                  node = FS.lookupNode(dir, name)\n                } catch (e) {\n                  return e.errno\n                }\n                var errCode = FS.nodePermissions(dir, \"wx\");\n                if (errCode) {\n                  return errCode\n                }\n                if (isdir) {\n                  if (!FS.isDir(node.mode)) {\n                    return 54\n                  }\n                  if (FS.isRoot(node) || FS.getPath(node) === FS.cwd()) {\n                    return 10\n                  }\n                } else {\n                  if (FS.isDir(node.mode)) {\n                    return 31\n                  }\n                }\n                return 0\n              },\n              mayOpen: function(node, flags) {\n                if (!node) {\n                  return 44\n                }\n                if (FS.isLink(node.mode)) {\n                  return 32\n                } else if (FS.isDir(node.mode)) {\n                  if (FS.flagsToPermissionString(flags) !== \"r\" || flags & 512) {\n                    return 31\n                  }\n                }\n                return FS.nodePermissions(node, FS.flagsToPermissionString(flags))\n              },\n              MAX_OPEN_FDS: 4096,\n              nextfd: function(fd_start, fd_end) {\n                fd_start = fd_start || 0;\n                fd_end = fd_end || FS.MAX_OPEN_FDS;\n                for (var fd = fd_start; fd <= fd_end; fd++) {\n                  if (!FS.streams[fd]) {\n                    return fd\n                  }\n                }\n                throw new FS.ErrnoError(33)\n              },\n              getStream: function(fd) {\n                return FS.streams[fd]\n              },\n              createStream: function(stream, fd_start, fd_end) {\n                if (!FS.FSStream) {\n                  FS.FSStream = function() {}\n                  ;\n                  FS.FSStream.prototype = {\n                    object: {\n                      get: function() {\n                        return this.node\n                      },\n                      set: function(val) {\n                        this.node = val\n                      }\n                    },\n                    isRead: {\n                      get: function() {\n                        return (this.flags & 2097155) !== 1\n                      }\n                    },\n                    isWrite: {\n                      get: function() {\n                        return (this.flags & 2097155) !== 0\n                      }\n                    },\n                    isAppend: {\n                      get: function() {\n                        return this.flags & 1024\n                      }\n                    }\n                  }\n                }\n                var newStream = new FS.FSStream;\n                for (var p in stream) {\n                  newStream[p] = stream[p]\n                }\n                stream = newStream;\n                var fd = FS.nextfd(fd_start, fd_end);\n                stream.fd = fd;\n                FS.streams[fd] = stream;\n                return stream\n              },\n              closeStream: function(fd) {\n                FS.streams[fd] = null\n              },\n              chrdev_stream_ops: {\n                open: function(stream) {\n                  var device = FS.getDevice(stream.node.rdev);\n                  stream.stream_ops = device.stream_ops;\n                  if (stream.stream_ops.open) {\n                    stream.stream_ops.open(stream)\n                  }\n                },\n                llseek: function() {\n                  throw new FS.ErrnoError(70)\n                }\n              },\n              major: function(dev) {\n                return dev >> 8\n              },\n              minor: function(dev) {\n                return dev & 255\n              },\n              makedev: function(ma, mi) {\n                return ma << 8 | mi\n              },\n              registerDevice: function(dev, ops) {\n                FS.devices[dev] = {\n                  stream_ops: ops\n                }\n              },\n              getDevice: function(dev) {\n                return FS.devices[dev]\n              },\n              getMounts: function(mount) {\n                var mounts = [];\n                var check = [mount];\n                while (check.length) {\n                  var m = check.pop();\n                  mounts.push(m);\n                  check.push.apply(check, m.mounts)\n                }\n                return mounts\n              },\n              syncfs: function(populate, callback) {\n                if (typeof populate === \"function\") {\n                  callback = populate;\n                  populate = false\n                }\n                FS.syncFSRequests++;\n                if (FS.syncFSRequests > 1) {\n                  err(\"warning: \" + FS.syncFSRequests + \" FS.syncfs operations in flight at once, probably just doing extra work\")\n                }\n                var mounts = FS.getMounts(FS.root.mount);\n                var completed = 0;\n                function doCallback(errCode) {\n                  FS.syncFSRequests--;\n                  return callback(errCode)\n                }\n                function done(errCode) {\n                  if (errCode) {\n                    if (!done.errored) {\n                      done.errored = true;\n                      return doCallback(errCode)\n                    }\n                    return\n                  }\n                  if (++completed >= mounts.length) {\n                    doCallback(null)\n                  }\n                }\n                mounts.forEach(function(mount) {\n                  if (!mount.type.syncfs) {\n                    return done(null)\n                  }\n                  mount.type.syncfs(mount, populate, done)\n                })\n              },\n              mount: function(type, opts, mountpoint) {\n                var root = mountpoint === \"/\";\n                var pseudo = !mountpoint;\n                var node;\n                if (root && FS.root) {\n                  throw new FS.ErrnoError(10)\n                } else if (!root && !pseudo) {\n                  var lookup = FS.lookupPath(mountpoint, {\n                    follow_mount: false\n                  });\n                  mountpoint = lookup.path;\n                  node = lookup.node;\n                  if (FS.isMountpoint(node)) {\n                    throw new FS.ErrnoError(10)\n                  }\n                  if (!FS.isDir(node.mode)) {\n                    throw new FS.ErrnoError(54)\n                  }\n                }\n                var mount = {\n                  type: type,\n                  opts: opts,\n                  mountpoint: mountpoint,\n                  mounts: []\n                };\n                var mountRoot = type.mount(mount);\n                mountRoot.mount = mount;\n                mount.root = mountRoot;\n                if (root) {\n                  FS.root = mountRoot\n                } else if (node) {\n                  node.mounted = mount;\n                  if (node.mount) {\n                    node.mount.mounts.push(mount)\n                  }\n                }\n                return mountRoot\n              },\n              unmount: function(mountpoint) {\n                var lookup = FS.lookupPath(mountpoint, {\n                  follow_mount: false\n                });\n                if (!FS.isMountpoint(lookup.node)) {\n                  throw new FS.ErrnoError(28)\n                }\n                var node = lookup.node;\n                var mount = node.mounted;\n                var mounts = FS.getMounts(mount);\n                Object.keys(FS.nameTable).forEach(function(hash) {\n                  var current = FS.nameTable[hash];\n                  while (current) {\n                    var next = current.name_next;\n                    if (mounts.indexOf(current.mount) !== -1) {\n                      FS.destroyNode(current)\n                    }\n                    current = next\n                  }\n                });\n                node.mounted = null;\n                var idx = node.mount.mounts.indexOf(mount);\n                node.mount.mounts.splice(idx, 1)\n              },\n              lookup: function(parent, name) {\n                return parent.node_ops.lookup(parent, name)\n              },\n              mknod: function(path, mode, dev) {\n                var lookup = FS.lookupPath(path, {\n                  parent: true\n                });\n                var parent = lookup.node;\n                var name = PATH.basename(path);\n                if (!name || name === \".\" || name === \"..\") {\n                  throw new FS.ErrnoError(28)\n                }\n                var errCode = FS.mayCreate(parent, name);\n                if (errCode) {\n                  throw new FS.ErrnoError(errCode)\n                }\n                if (!parent.node_ops.mknod) {\n                  throw new FS.ErrnoError(63)\n                }\n                return parent.node_ops.mknod(parent, name, mode, dev)\n              },\n              create: function(path, mode) {\n                mode = mode !== undefined ? mode : 438;\n                mode &= 4095;\n                mode |= 32768;\n                return FS.mknod(path, mode, 0)\n              },\n              mkdir: function(path, mode) {\n                mode = mode !== undefined ? mode : 511;\n                mode &= 511 | 512;\n                mode |= 16384;\n                return FS.mknod(path, mode, 0)\n              },\n              mkdirTree: function(path, mode) {\n                var dirs = path.split(\"/\");\n                var d = \"\";\n                for (var i = 0; i < dirs.length; ++i) {\n                  if (!dirs[i])\n                    continue;\n                  d += \"/\" + dirs[i];\n                  try {\n                    FS.mkdir(d, mode)\n                  } catch (e) {\n                    if (e.errno != 20)\n                      throw e\n                  }\n                }\n              },\n              mkdev: function(path, mode, dev) {\n                if (typeof dev === \"undefined\") {\n                  dev = mode;\n                  mode = 438\n                }\n                mode |= 8192;\n                return FS.mknod(path, mode, dev)\n              },\n              symlink: function(oldpath, newpath) {\n                if (!PATH_FS.resolve(oldpath)) {\n                  throw new FS.ErrnoError(44)\n                }\n                var lookup = FS.lookupPath(newpath, {\n                  parent: true\n                });\n                var parent = lookup.node;\n                if (!parent) {\n                  throw new FS.ErrnoError(44)\n                }\n                var newname = PATH.basename(newpath);\n                var errCode = FS.mayCreate(parent, newname);\n                if (errCode) {\n                  throw new FS.ErrnoError(errCode)\n                }\n                if (!parent.node_ops.symlink) {\n                  throw new FS.ErrnoError(63)\n                }\n                return parent.node_ops.symlink(parent, newname, oldpath)\n              },\n              rename: function(old_path, new_path) {\n                var old_dirname = PATH.dirname(old_path);\n                var new_dirname = PATH.dirname(new_path);\n                var old_name = PATH.basename(old_path);\n                var new_name = PATH.basename(new_path);\n                var lookup, old_dir, new_dir;\n                try {\n                  lookup = FS.lookupPath(old_path, {\n                    parent: true\n                  });\n                  old_dir = lookup.node;\n                  lookup = FS.lookupPath(new_path, {\n                    parent: true\n                  });\n                  new_dir = lookup.node\n                } catch (e) {\n                  throw new FS.ErrnoError(10)\n                }\n                if (!old_dir || !new_dir)\n                  throw new FS.ErrnoError(44);\n                if (old_dir.mount !== new_dir.mount) {\n                  throw new FS.ErrnoError(75)\n                }\n                var old_node = FS.lookupNode(old_dir, old_name);\n                var relative = PATH_FS.relative(old_path, new_dirname);\n                if (relative.charAt(0) !== \".\") {\n                  throw new FS.ErrnoError(28)\n                }\n                relative = PATH_FS.relative(new_path, old_dirname);\n                if (relative.charAt(0) !== \".\") {\n                  throw new FS.ErrnoError(55)\n                }\n                var new_node;\n                try {\n                  new_node = FS.lookupNode(new_dir, new_name)\n                } catch (e) {}\n                if (old_node === new_node) {\n                  return\n                }\n                var isdir = FS.isDir(old_node.mode);\n                var errCode = FS.mayDelete(old_dir, old_name, isdir);\n                if (errCode) {\n                  throw new FS.ErrnoError(errCode)\n                }\n                errCode = new_node ? FS.mayDelete(new_dir, new_name, isdir) : FS.mayCreate(new_dir, new_name);\n                if (errCode) {\n                  throw new FS.ErrnoError(errCode)\n                }\n                if (!old_dir.node_ops.rename) {\n                  throw new FS.ErrnoError(63)\n                }\n                if (FS.isMountpoint(old_node) || new_node && FS.isMountpoint(new_node)) {\n                  throw new FS.ErrnoError(10)\n                }\n                if (new_dir !== old_dir) {\n                  errCode = FS.nodePermissions(old_dir, \"w\");\n                  if (errCode) {\n                    throw new FS.ErrnoError(errCode)\n                  }\n                }\n                try {\n                  if (FS.trackingDelegate[\"willMovePath\"]) {\n                    FS.trackingDelegate[\"willMovePath\"](old_path, new_path)\n                  }\n                } catch (e) {\n                  err(\"FS.trackingDelegate['willMovePath']('\" + old_path + \"', '\" + new_path + \"') threw an exception: \" + e.message)\n                }\n                FS.hashRemoveNode(old_node);\n                try {\n                  old_dir.node_ops.rename(old_node, new_dir, new_name)\n                } catch (e) {\n                  throw e\n                } finally {\n                  FS.hashAddNode(old_node)\n                }\n                try {\n                  if (FS.trackingDelegate[\"onMovePath\"])\n                    FS.trackingDelegate[\"onMovePath\"](old_path, new_path)\n                } catch (e) {\n                  err(\"FS.trackingDelegate['onMovePath']('\" + old_path + \"', '\" + new_path + \"') threw an exception: \" + e.message)\n                }\n              },\n              rmdir: function(path) {\n                var lookup = FS.lookupPath(path, {\n                  parent: true\n                });\n                var parent = lookup.node;\n                var name = PATH.basename(path);\n                var node = FS.lookupNode(parent, name);\n                var errCode = FS.mayDelete(parent, name, true);\n                if (errCode) {\n                  throw new FS.ErrnoError(errCode)\n                }\n                if (!parent.node_ops.rmdir) {\n                  throw new FS.ErrnoError(63)\n                }\n                if (FS.isMountpoint(node)) {\n                  throw new FS.ErrnoError(10)\n                }\n                try {\n                  if (FS.trackingDelegate[\"willDeletePath\"]) {\n                    FS.trackingDelegate[\"willDeletePath\"](path)\n                  }\n                } catch (e) {\n                  err(\"FS.trackingDelegate['willDeletePath']('\" + path + \"') threw an exception: \" + e.message)\n                }\n                parent.node_ops.rmdir(parent, name);\n                FS.destroyNode(node);\n                try {\n                  if (FS.trackingDelegate[\"onDeletePath\"])\n                    FS.trackingDelegate[\"onDeletePath\"](path)\n                } catch (e) {\n                  err(\"FS.trackingDelegate['onDeletePath']('\" + path + \"') threw an exception: \" + e.message)\n                }\n              },\n              readdir: function(path) {\n                var lookup = FS.lookupPath(path, {\n                  follow: true\n                });\n                var node = lookup.node;\n                if (!node.node_ops.readdir) {\n                  throw new FS.ErrnoError(54)\n                }\n                return node.node_ops.readdir(node)\n              },\n              unlink: function(path) {\n                var lookup = FS.lookupPath(path, {\n                  parent: true\n                });\n                var parent = lookup.node;\n                var name = PATH.basename(path);\n                var node = FS.lookupNode(parent, name);\n                var errCode = FS.mayDelete(parent, name, false);\n                if (errCode) {\n                  throw new FS.ErrnoError(errCode)\n                }\n                if (!parent.node_ops.unlink) {\n                  throw new FS.ErrnoError(63)\n                }\n                if (FS.isMountpoint(node)) {\n                  throw new FS.ErrnoError(10)\n                }\n                try {\n                  if (FS.trackingDelegate[\"willDeletePath\"]) {\n                    FS.trackingDelegate[\"willDeletePath\"](path)\n                  }\n                } catch (e) {\n                  err(\"FS.trackingDelegate['willDeletePath']('\" + path + \"') threw an exception: \" + e.message)\n                }\n                parent.node_ops.unlink(parent, name);\n                FS.destroyNode(node);\n                try {\n                  if (FS.trackingDelegate[\"onDeletePath\"])\n                    FS.trackingDelegate[\"onDeletePath\"](path)\n                } catch (e) {\n                  err(\"FS.trackingDelegate['onDeletePath']('\" + path + \"') threw an exception: \" + e.message)\n                }\n              },\n              readlink: function(path) {\n                var lookup = FS.lookupPath(path);\n                var link = lookup.node;\n                if (!link) {\n                  throw new FS.ErrnoError(44)\n                }\n                if (!link.node_ops.readlink) {\n                  throw new FS.ErrnoError(28)\n                }\n                return PATH_FS.resolve(FS.getPath(link.parent), link.node_ops.readlink(link))\n              },\n              stat: function(path, dontFollow) {\n                var lookup = FS.lookupPath(path, {\n                  follow: !dontFollow\n                });\n                var node = lookup.node;\n                if (!node) {\n                  throw new FS.ErrnoError(44)\n                }\n                if (!node.node_ops.getattr) {\n                  throw new FS.ErrnoError(63)\n                }\n                return node.node_ops.getattr(node)\n              },\n              lstat: function(path) {\n                return FS.stat(path, true)\n              },\n              chmod: function(path, mode, dontFollow) {\n                var node;\n                if (typeof path === \"string\") {\n                  var lookup = FS.lookupPath(path, {\n                    follow: !dontFollow\n                  });\n                  node = lookup.node\n                } else {\n                  node = path\n                }\n                if (!node.node_ops.setattr) {\n                  throw new FS.ErrnoError(63)\n                }\n                node.node_ops.setattr(node, {\n                  mode: mode & 4095 | node.mode & ~4095,\n                  timestamp: Date.now()\n                })\n              },\n              lchmod: function(path, mode) {\n                FS.chmod(path, mode, true)\n              },\n              fchmod: function(fd, mode) {\n                var stream = FS.getStream(fd);\n                if (!stream) {\n                  throw new FS.ErrnoError(8)\n                }\n                FS.chmod(stream.node, mode)\n              },\n              chown: function(path, uid, gid, dontFollow) {\n                var node;\n                if (typeof path === \"string\") {\n                  var lookup = FS.lookupPath(path, {\n                    follow: !dontFollow\n                  });\n                  node = lookup.node\n                } else {\n                  node = path\n                }\n                if (!node.node_ops.setattr) {\n                  throw new FS.ErrnoError(63)\n                }\n                node.node_ops.setattr(node, {\n                  timestamp: Date.now()\n                })\n              },\n              lchown: function(path, uid, gid) {\n                FS.chown(path, uid, gid, true)\n              },\n              fchown: function(fd, uid, gid) {\n                var stream = FS.getStream(fd);\n                if (!stream) {\n                  throw new FS.ErrnoError(8)\n                }\n                FS.chown(stream.node, uid, gid)\n              },\n              truncate: function(path, len) {\n                if (len < 0) {\n                  throw new FS.ErrnoError(28)\n                }\n                var node;\n                if (typeof path === \"string\") {\n                  var lookup = FS.lookupPath(path, {\n                    follow: true\n                  });\n                  node = lookup.node\n                } else {\n                  node = path\n                }\n                if (!node.node_ops.setattr) {\n                  throw new FS.ErrnoError(63)\n                }\n                if (FS.isDir(node.mode)) {\n                  throw new FS.ErrnoError(31)\n                }\n                if (!FS.isFile(node.mode)) {\n                  throw new FS.ErrnoError(28)\n                }\n                var errCode = FS.nodePermissions(node, \"w\");\n                if (errCode) {\n                  throw new FS.ErrnoError(errCode)\n                }\n                node.node_ops.setattr(node, {\n                  size: len,\n                  timestamp: Date.now()\n                })\n              },\n              ftruncate: function(fd, len) {\n                var stream = FS.getStream(fd);\n                if (!stream) {\n                  throw new FS.ErrnoError(8)\n                }\n                if ((stream.flags & 2097155) === 0) {\n                  throw new FS.ErrnoError(28)\n                }\n                FS.truncate(stream.node, len)\n              },\n              utime: function(path, atime, mtime) {\n                var lookup = FS.lookupPath(path, {\n                  follow: true\n                });\n                var node = lookup.node;\n                node.node_ops.setattr(node, {\n                  timestamp: Math.max(atime, mtime)\n                })\n              },\n              open: function(path, flags, mode, fd_start, fd_end) {\n                if (path === \"\") {\n                  throw new FS.ErrnoError(44)\n                }\n                flags = typeof flags === \"string\" ? FS.modeStringToFlags(flags) : flags;\n                mode = typeof mode === \"undefined\" ? 438 : mode;\n                if (flags & 64) {\n                  mode = mode & 4095 | 32768\n                } else {\n                  mode = 0\n                }\n                var node;\n                if (typeof path === \"object\") {\n                  node = path\n                } else {\n                  path = PATH.normalize(path);\n                  try {\n                    var lookup = FS.lookupPath(path, {\n                      follow: !(flags & 131072)\n                    });\n                    node = lookup.node\n                  } catch (e) {}\n                }\n                var created = false;\n                if (flags & 64) {\n                  if (node) {\n                    if (flags & 128) {\n                      throw new FS.ErrnoError(20)\n                    }\n                  } else {\n                    node = FS.mknod(path, mode, 0);\n                    created = true\n                  }\n                }\n                if (!node) {\n                  throw new FS.ErrnoError(44)\n                }\n                if (FS.isChrdev(node.mode)) {\n                  flags &= ~512\n                }\n                if (flags & 65536 && !FS.isDir(node.mode)) {\n                  throw new FS.ErrnoError(54)\n                }\n                if (!created) {\n                  var errCode = FS.mayOpen(node, flags);\n                  if (errCode) {\n                    throw new FS.ErrnoError(errCode)\n                  }\n                }\n                if (flags & 512) {\n                  FS.truncate(node, 0)\n                }\n                flags &= ~(128 | 512);\n                var stream = FS.createStream({\n                  node: node,\n                  path: FS.getPath(node),\n                  flags: flags,\n                  seekable: true,\n                  position: 0,\n                  stream_ops: node.stream_ops,\n                  ungotten: [],\n                  error: false\n                }, fd_start, fd_end);\n                if (stream.stream_ops.open) {\n                  stream.stream_ops.open(stream)\n                }\n                if (Module[\"logReadFiles\"] && !(flags & 1)) {\n                  if (!FS.readFiles)\n                    FS.readFiles = {};\n                  if (!(path in FS.readFiles)) {\n                    FS.readFiles[path] = 1;\n                    err(\"FS.trackingDelegate error on read file: \" + path)\n                  }\n                }\n                try {\n                  if (FS.trackingDelegate[\"onOpenFile\"]) {\n                    var trackingFlags = 0;\n                    if ((flags & 2097155) !== 1) {\n                      trackingFlags |= FS.tracking.openFlags.READ\n                    }\n                    if ((flags & 2097155) !== 0) {\n                      trackingFlags |= FS.tracking.openFlags.WRITE\n                    }\n                    FS.trackingDelegate[\"onOpenFile\"](path, trackingFlags)\n                  }\n                } catch (e) {\n                  err(\"FS.trackingDelegate['onOpenFile']('\" + path + \"', flags) threw an exception: \" + e.message)\n                }\n                return stream\n              },\n              close: function(stream) {\n                if (FS.isClosed(stream)) {\n                  throw new FS.ErrnoError(8)\n                }\n                if (stream.getdents)\n                  stream.getdents = null;\n                try {\n                  if (stream.stream_ops.close) {\n                    stream.stream_ops.close(stream)\n                  }\n                } catch (e) {\n                  throw e\n                } finally {\n                  FS.closeStream(stream.fd)\n                }\n                stream.fd = null\n              },\n              isClosed: function(stream) {\n                return stream.fd === null\n              },\n              llseek: function(stream, offset, whence) {\n                if (FS.isClosed(stream)) {\n                  throw new FS.ErrnoError(8)\n                }\n                if (!stream.seekable || !stream.stream_ops.llseek) {\n                  throw new FS.ErrnoError(70)\n                }\n                if (whence != 0 && whence != 1 && whence != 2) {\n                  throw new FS.ErrnoError(28)\n                }\n                stream.position = stream.stream_ops.llseek(stream, offset, whence);\n                stream.ungotten = [];\n                return stream.position\n              },\n              read: function(stream, buffer, offset, length, position) {\n                if (length < 0 || position < 0) {\n                  throw new FS.ErrnoError(28)\n                }\n                if (FS.isClosed(stream)) {\n                  throw new FS.ErrnoError(8)\n                }\n                if ((stream.flags & 2097155) === 1) {\n                  throw new FS.ErrnoError(8)\n                }\n                if (FS.isDir(stream.node.mode)) {\n                  throw new FS.ErrnoError(31)\n                }\n                if (!stream.stream_ops.read) {\n                  throw new FS.ErrnoError(28)\n                }\n                var seeking = typeof position !== \"undefined\";\n                if (!seeking) {\n                  position = stream.position\n                } else if (!stream.seekable) {\n                  throw new FS.ErrnoError(70)\n                }\n                var bytesRead = stream.stream_ops.read(stream, buffer, offset, length, position);\n                if (!seeking)\n                  stream.position += bytesRead;\n                return bytesRead\n              },\n              write: function(stream, buffer, offset, length, position, canOwn) {\n                if (length < 0 || position < 0) {\n                  throw new FS.ErrnoError(28)\n                }\n                if (FS.isClosed(stream)) {\n                  throw new FS.ErrnoError(8)\n                }\n                if ((stream.flags & 2097155) === 0) {\n                  throw new FS.ErrnoError(8)\n                }\n                if (FS.isDir(stream.node.mode)) {\n                  throw new FS.ErrnoError(31)\n                }\n                if (!stream.stream_ops.write) {\n                  throw new FS.ErrnoError(28)\n                }\n                if (stream.flags & 1024) {\n                  FS.llseek(stream, 0, 2)\n                }\n                var seeking = typeof position !== \"undefined\";\n                if (!seeking) {\n                  position = stream.position\n                } else if (!stream.seekable) {\n                  throw new FS.ErrnoError(70)\n                }\n                var bytesWritten = stream.stream_ops.write(stream, buffer, offset, length, position, canOwn);\n                if (!seeking)\n                  stream.position += bytesWritten;\n                try {\n                  if (stream.path && FS.trackingDelegate[\"onWriteToFile\"])\n                    FS.trackingDelegate[\"onWriteToFile\"](stream.path)\n                } catch (e) {\n                  err(\"FS.trackingDelegate['onWriteToFile']('\" + stream.path + \"') threw an exception: \" + e.message)\n                }\n                return bytesWritten\n              },\n              allocate: function(stream, offset, length) {\n                if (FS.isClosed(stream)) {\n                  throw new FS.ErrnoError(8)\n                }\n                if (offset < 0 || length <= 0) {\n                  throw new FS.ErrnoError(28)\n                }\n                if ((stream.flags & 2097155) === 0) {\n                  throw new FS.ErrnoError(8)\n                }\n                if (!FS.isFile(stream.node.mode) && !FS.isDir(stream.node.mode)) {\n                  throw new FS.ErrnoError(43)\n                }\n                if (!stream.stream_ops.allocate) {\n                  throw new FS.ErrnoError(138)\n                }\n                stream.stream_ops.allocate(stream, offset, length)\n              },\n              mmap: function(stream, buffer, offset, length, position, prot, flags) {\n                if ((prot & 2) !== 0 && (flags & 2) === 0 && (stream.flags & 2097155) !== 2) {\n                  throw new FS.ErrnoError(2)\n                }\n                if ((stream.flags & 2097155) === 1) {\n                  throw new FS.ErrnoError(2)\n                }\n                if (!stream.stream_ops.mmap) {\n                  throw new FS.ErrnoError(43)\n                }\n                return stream.stream_ops.mmap(stream, buffer, offset, length, position, prot, flags)\n              },\n              msync: function(stream, buffer, offset, length, mmapFlags) {\n                if (!stream || !stream.stream_ops.msync) {\n                  return 0\n                }\n                return stream.stream_ops.msync(stream, buffer, offset, length, mmapFlags)\n              },\n              munmap: function(stream) {\n                return 0\n              },\n              ioctl: function(stream, cmd, arg) {\n                if (!stream.stream_ops.ioctl) {\n                  throw new FS.ErrnoError(59)\n                }\n                return stream.stream_ops.ioctl(stream, cmd, arg)\n              },\n              readFile: function(path, opts) {\n                opts = opts || {};\n                opts.flags = opts.flags || \"r\";\n                opts.encoding = opts.encoding || \"binary\";\n                if (opts.encoding !== \"utf8\" && opts.encoding !== \"binary\") {\n                  throw new Error('Invalid encoding type \"' + opts.encoding + '\"')\n                }\n                var ret;\n                var stream = FS.open(path, opts.flags);\n                var stat = FS.stat(path);\n                var length = stat.size;\n                var buf = new Uint8Array(length);\n                FS.read(stream, buf, 0, length, 0);\n                if (opts.encoding === \"utf8\") {\n                  ret = UTF8ArrayToString(buf, 0)\n                } else if (opts.encoding === \"binary\") {\n                  ret = buf\n                }\n                FS.close(stream);\n                return ret\n              },\n              writeFile: function(path, data, opts) {\n                opts = opts || {};\n                opts.flags = opts.flags || \"w\";\n                var stream = FS.open(path, opts.flags, opts.mode);\n                if (typeof data === \"string\") {\n                  var buf = new Uint8Array(lengthBytesUTF8(data) + 1);\n                  var actualNumBytes = stringToUTF8Array(data, buf, 0, buf.length);\n                  FS.write(stream, buf, 0, actualNumBytes, undefined, opts.canOwn)\n                } else if (ArrayBuffer.isView(data)) {\n                  FS.write(stream, data, 0, data.byteLength, undefined, opts.canOwn)\n                } else {\n                  throw new Error(\"Unsupported data type\")\n                }\n                FS.close(stream)\n              },\n              cwd: function() {\n                return FS.currentPath\n              },\n              chdir: function(path) {\n                var lookup = FS.lookupPath(path, {\n                  follow: true\n                });\n                if (lookup.node === null) {\n                  throw new FS.ErrnoError(44)\n                }\n                if (!FS.isDir(lookup.node.mode)) {\n                  throw new FS.ErrnoError(54)\n                }\n                var errCode = FS.nodePermissions(lookup.node, \"x\");\n                if (errCode) {\n                  throw new FS.ErrnoError(errCode)\n                }\n                FS.currentPath = lookup.path\n              },\n              createDefaultDirectories: function() {\n                FS.mkdir(\"/tmp\");\n                FS.mkdir(\"/home\");\n                FS.mkdir(\"/home/web_user\")\n              },\n              createDefaultDevices: function() {\n                FS.mkdir(\"/dev\");\n                FS.registerDevice(FS.makedev(1, 3), {\n                  read: function() {\n                    return 0\n                  },\n                  write: function(stream, buffer, offset, length, pos) {\n                    return length\n                  }\n                });\n                FS.mkdev(\"/dev/null\", FS.makedev(1, 3));\n                TTY.register(FS.makedev(5, 0), TTY.default_tty_ops);\n                TTY.register(FS.makedev(6, 0), TTY.default_tty1_ops);\n                FS.mkdev(\"/dev/tty\", FS.makedev(5, 0));\n                FS.mkdev(\"/dev/tty1\", FS.makedev(6, 0));\n                var random_device;\n                if (typeof crypto === \"object\" && typeof crypto[\"getRandomValues\"] === \"function\") {\n                  var randomBuffer = new Uint8Array(1);\n                  random_device = function() {\n                    crypto.getRandomValues(randomBuffer);\n                    return randomBuffer[0]\n                  }\n                } else {}\n                if (!random_device) {\n                  random_device = function() {\n                    abort(\"random_device\")\n                  }\n                }\n                FS.createDevice(\"/dev\", \"random\", random_device);\n                FS.createDevice(\"/dev\", \"urandom\", random_device);\n                FS.mkdir(\"/dev/shm\");\n                FS.mkdir(\"/dev/shm/tmp\")\n              },\n              createSpecialDirectories: function() {\n                FS.mkdir(\"/proc\");\n                FS.mkdir(\"/proc/self\");\n                FS.mkdir(\"/proc/self/fd\");\n                FS.mount({\n                  mount: function() {\n                    var node = FS.createNode(\"/proc/self\", \"fd\", 16384 | 511, 73);\n                    node.node_ops = {\n                      lookup: function(parent, name) {\n                        var fd = +name;\n                        var stream = FS.getStream(fd);\n                        if (!stream)\n                          throw new FS.ErrnoError(8);\n                        var ret = {\n                          parent: null,\n                          mount: {\n                            mountpoint: \"fake\"\n                          },\n                          node_ops: {\n                            readlink: function() {\n                              return stream.path\n                            }\n                          }\n                        };\n                        ret.parent = ret;\n                        return ret\n                      }\n                    };\n                    return node\n                  }\n                }, {}, \"/proc/self/fd\")\n              },\n              createStandardStreams: function() {\n                if (Module[\"stdin\"]) {\n                  FS.createDevice(\"/dev\", \"stdin\", Module[\"stdin\"])\n                } else {\n                  FS.symlink(\"/dev/tty\", \"/dev/stdin\")\n                }\n                if (Module[\"stdout\"]) {\n                  FS.createDevice(\"/dev\", \"stdout\", null, Module[\"stdout\"])\n                } else {\n                  FS.symlink(\"/dev/tty\", \"/dev/stdout\")\n                }\n                if (Module[\"stderr\"]) {\n                  FS.createDevice(\"/dev\", \"stderr\", null, Module[\"stderr\"])\n                } else {\n                  FS.symlink(\"/dev/tty1\", \"/dev/stderr\")\n                }\n                var stdin = FS.open(\"/dev/stdin\", \"r\");\n                var stdout = FS.open(\"/dev/stdout\", \"w\");\n                var stderr = FS.open(\"/dev/stderr\", \"w\")\n              },\n              ensureErrnoError: function() {\n                if (FS.ErrnoError)\n                  return;\n                FS.ErrnoError = function ErrnoError(errno, node) {\n                  this.node = node;\n                  this.setErrno = function(errno) {\n                    this.errno = errno\n                  }\n                  ;\n                  this.setErrno(errno);\n                  this.message = \"FS error\"\n                }\n                ;\n                FS.ErrnoError.prototype = new Error;\n                FS.ErrnoError.prototype.constructor = FS.ErrnoError;\n                [44].forEach(function(code) {\n                  FS.genericErrors[code] = new FS.ErrnoError(code);\n                  FS.genericErrors[code].stack = \"<generic error, no stack>\"\n                })\n              },\n              staticInit: function() {\n                FS.ensureErrnoError();\n                FS.nameTable = new Array(4096);\n                FS.mount(MEMFS, {}, \"/\");\n                FS.createDefaultDirectories();\n                FS.createDefaultDevices();\n                FS.createSpecialDirectories();\n                FS.filesystems = {\n                  \"MEMFS\": MEMFS\n                }\n              },\n              init: function(input, output, error) {\n                FS.init.initialized = true;\n                FS.ensureErrnoError();\n                Module[\"stdin\"] = input || Module[\"stdin\"];\n                Module[\"stdout\"] = output || Module[\"stdout\"];\n                Module[\"stderr\"] = error || Module[\"stderr\"];\n                FS.createStandardStreams()\n              },\n              quit: function() {\n                FS.init.initialized = false;\n                var fflush = Module[\"_fflush\"];\n                if (fflush)\n                  fflush(0);\n                for (var i = 0; i < FS.streams.length; i++) {\n                  var stream = FS.streams[i];\n                  if (!stream) {\n                    continue\n                  }\n                  FS.close(stream)\n                }\n              },\n              getMode: function(canRead, canWrite) {\n                var mode = 0;\n                if (canRead)\n                  mode |= 292 | 73;\n                if (canWrite)\n                  mode |= 146;\n                return mode\n              },\n              joinPath: function(parts, forceRelative) {\n                var path = PATH.join.apply(null, parts);\n                if (forceRelative && path[0] == \"/\")\n                  path = path.substr(1);\n                return path\n              },\n              absolutePath: function(relative, base) {\n                return PATH_FS.resolve(base, relative)\n              },\n              standardizePath: function(path) {\n                return PATH.normalize(path)\n              },\n              findObject: function(path, dontResolveLastLink) {\n                var ret = FS.analyzePath(path, dontResolveLastLink);\n                if (ret.exists) {\n                  return ret.object\n                } else {\n                  ___setErrNo(ret.error);\n                  return null\n                }\n              },\n              analyzePath: function(path, dontResolveLastLink) {\n                try {\n                  var lookup = FS.lookupPath(path, {\n                    follow: !dontResolveLastLink\n                  });\n                  path = lookup.path\n                } catch (e) {}\n                var ret = {\n                  isRoot: false,\n                  exists: false,\n                  error: 0,\n                  name: null,\n                  path: null,\n                  object: null,\n                  parentExists: false,\n                  parentPath: null,\n                  parentObject: null\n                };\n                try {\n                  var lookup = FS.lookupPath(path, {\n                    parent: true\n                  });\n                  ret.parentExists = true;\n                  ret.parentPath = lookup.path;\n                  ret.parentObject = lookup.node;\n                  ret.name = PATH.basename(path);\n                  lookup = FS.lookupPath(path, {\n                    follow: !dontResolveLastLink\n                  });\n                  ret.exists = true;\n                  ret.path = lookup.path;\n                  ret.object = lookup.node;\n                  ret.name = lookup.node.name;\n                  ret.isRoot = lookup.path === \"/\"\n                } catch (e) {\n                  ret.error = e.errno\n                }\n                return ret\n              },\n              createFolder: function(parent, name, canRead, canWrite) {\n                var path = PATH.join2(typeof parent === \"string\" ? parent : FS.getPath(parent), name);\n                var mode = FS.getMode(canRead, canWrite);\n                return FS.mkdir(path, mode)\n              },\n              createPath: function(parent, path, canRead, canWrite) {\n                parent = typeof parent === \"string\" ? parent : FS.getPath(parent);\n                var parts = path.split(\"/\").reverse();\n                while (parts.length) {\n                  var part = parts.pop();\n                  if (!part)\n                    continue;\n                  var current = PATH.join2(parent, part);\n                  try {\n                    FS.mkdir(current)\n                  } catch (e) {}\n                  parent = current\n                }\n                return current\n              },\n              createFile: function(parent, name, properties, canRead, canWrite) {\n                var path = PATH.join2(typeof parent === \"string\" ? parent : FS.getPath(parent), name);\n                var mode = FS.getMode(canRead, canWrite);\n                return FS.create(path, mode)\n              },\n              createDataFile: function(parent, name, data, canRead, canWrite, canOwn) {\n                var path = name ? PATH.join2(typeof parent === \"string\" ? parent : FS.getPath(parent), name) : parent;\n                var mode = FS.getMode(canRead, canWrite);\n                var node = FS.create(path, mode);\n                if (data) {\n                  if (typeof data === \"string\") {\n                    var arr = new Array(data.length);\n                    for (var i = 0, len = data.length; i < len; ++i)\n                      arr[i] = data.charCodeAt(i);\n                    data = arr\n                  }\n                  FS.chmod(node, mode | 146);\n                  var stream = FS.open(node, \"w\");\n                  FS.write(stream, data, 0, data.length, 0, canOwn);\n                  FS.close(stream);\n                  FS.chmod(node, mode)\n                }\n                return node\n              },\n              createDevice: function(parent, name, input, output) {\n                var path = PATH.join2(typeof parent === \"string\" ? parent : FS.getPath(parent), name);\n                var mode = FS.getMode(!!input, !!output);\n                if (!FS.createDevice.major)\n                  FS.createDevice.major = 64;\n                var dev = FS.makedev(FS.createDevice.major++, 0);\n                FS.registerDevice(dev, {\n                  open: function(stream) {\n                    stream.seekable = false\n                  },\n                  close: function(stream) {\n                    if (output && output.buffer && output.buffer.length) {\n                      output(10)\n                    }\n                  },\n                  read: function(stream, buffer, offset, length, pos) {\n                    var bytesRead = 0;\n                    for (var i = 0; i < length; i++) {\n                      var result;\n                      try {\n                        result = input()\n                      } catch (e) {\n                        throw new FS.ErrnoError(29)\n                      }\n                      if (result === undefined && bytesRead === 0) {\n                        throw new FS.ErrnoError(6)\n                      }\n                      if (result === null || result === undefined)\n                        break;\n                      bytesRead++;\n                      buffer[offset + i] = result\n                    }\n                    if (bytesRead) {\n                      stream.node.timestamp = Date.now()\n                    }\n                    return bytesRead\n                  },\n                  write: function(stream, buffer, offset, length, pos) {\n                    for (var i = 0; i < length; i++) {\n                      try {\n                        output(buffer[offset + i])\n                      } catch (e) {\n                        throw new FS.ErrnoError(29)\n                      }\n                    }\n                    if (length) {\n                      stream.node.timestamp = Date.now()\n                    }\n                    return i\n                  }\n                });\n                return FS.mkdev(path, mode, dev)\n              },\n              createLink: function(parent, name, target, canRead, canWrite) {\n                var path = PATH.join2(typeof parent === \"string\" ? parent : FS.getPath(parent), name);\n                return FS.symlink(target, path)\n              },\n              forceLoadFile: function(obj) {\n                if (obj.isDevice || obj.isFolder || obj.link || obj.contents)\n                  return true;\n                var success = true;\n                if (typeof XMLHttpRequest !== \"undefined\") {\n                  throw new Error(\"Lazy loading should have been performed (contents set) in createLazyFile, but it was not. Lazy loading only works in web workers. Use --embed-file or --preload-file in emcc on the main thread.\")\n                } else if (read_) {\n                  try {\n                    obj.contents = intArrayFromString(read_(obj.url), true);\n                    obj.usedBytes = obj.contents.length\n                  } catch (e) {\n                    success = false\n                  }\n                } else {\n                  throw new Error(\"Cannot load without read() or XMLHttpRequest.\")\n                }\n                if (!success)\n                  ___setErrNo(29);\n                return success\n              },\n              createLazyFile: function(parent, name, url, canRead, canWrite) {\n                function LazyUint8Array() {\n                  this.lengthKnown = false;\n                  this.chunks = []\n                }\n                LazyUint8Array.prototype.get = function LazyUint8Array_get(idx) {\n                  if (idx > this.length - 1 || idx < 0) {\n                    return undefined\n                  }\n                  var chunkOffset = idx % this.chunkSize;\n                  var chunkNum = idx / this.chunkSize | 0;\n                  return this.getter(chunkNum)[chunkOffset]\n                }\n                ;\n                LazyUint8Array.prototype.setDataGetter = function LazyUint8Array_setDataGetter(getter) {\n                  this.getter = getter\n                }\n                ;\n                LazyUint8Array.prototype.cacheLength = function LazyUint8Array_cacheLength() {\n                  var xhr = new XMLHttpRequest;\n                  xhr.open(\"HEAD\", url, false);\n                  xhr.send(null);\n                  if (!(xhr.status >= 200 && xhr.status < 300 || xhr.status === 304))\n                    throw new Error(\"Couldn't load \" + url + \". Status: \" + xhr.status);\n                  var datalength = Number(xhr.getResponseHeader(\"Content-length\"));\n                  var header;\n                  var hasByteServing = (header = xhr.getResponseHeader(\"Accept-Ranges\")) && header === \"bytes\";\n                  var usesGzip = (header = xhr.getResponseHeader(\"Content-Encoding\")) && header === \"gzip\";\n                  var chunkSize = 1024 * 1024;\n                  if (!hasByteServing)\n                    chunkSize = datalength;\n                  var doXHR = function(from, to) {\n                    if (from > to)\n                      throw new Error(\"invalid range (\" + from + \", \" + to + \") or no bytes requested!\");\n                    if (to > datalength - 1)\n                      throw new Error(\"only \" + datalength + \" bytes available! programmer error!\");\n                    var xhr = new XMLHttpRequest;\n                    xhr.open(\"GET\", url, false);\n                    if (datalength !== chunkSize)\n                      xhr.setRequestHeader(\"Range\", \"bytes=\" + from + \"-\" + to);\n                    if (typeof Uint8Array != \"undefined\")\n                      xhr.responseType = \"arraybuffer\";\n                    if (xhr.overrideMimeType) {\n                      xhr.overrideMimeType(\"text/plain; charset=x-user-defined\")\n                    }\n                    xhr.send(null);\n                    if (!(xhr.status >= 200 && xhr.status < 300 || xhr.status === 304))\n                      throw new Error(\"Couldn't load \" + url + \". Status: \" + xhr.status);\n                    if (xhr.response !== undefined) {\n                      return new Uint8Array(xhr.response || [])\n                    } else {\n                      return intArrayFromString(xhr.responseText || \"\", true)\n                    }\n                  };\n                  var lazyArray = this;\n                  lazyArray.setDataGetter(function(chunkNum) {\n                    var start = chunkNum * chunkSize;\n                    var end = (chunkNum + 1) * chunkSize - 1;\n                    end = Math.min(end, datalength - 1);\n                    if (typeof lazyArray.chunks[chunkNum] === \"undefined\") {\n                      lazyArray.chunks[chunkNum] = doXHR(start, end)\n                    }\n                    if (typeof lazyArray.chunks[chunkNum] === \"undefined\")\n                      throw new Error(\"doXHR failed!\");\n                    return lazyArray.chunks[chunkNum]\n                  });\n                  if (usesGzip || !datalength) {\n                    chunkSize = datalength = 1;\n                    datalength = this.getter(0).length;\n                    chunkSize = datalength;\n                    out(\"LazyFiles on gzip forces download of the whole file when length is accessed\")\n                  }\n                  this._length = datalength;\n                  this._chunkSize = chunkSize;\n                  this.lengthKnown = true\n                }\n                ;\n                if (typeof XMLHttpRequest !== \"undefined\") {\n                  if (!ENVIRONMENT_IS_WORKER)\n                    throw \"Cannot do synchronous binary XHRs outside webworkers in modern browsers. Use --embed-file or --preload-file in emcc\";\n                  var lazyArray = new LazyUint8Array;\n                  Object.defineProperties(lazyArray, {\n                    length: {\n                      get: function() {\n                        if (!this.lengthKnown) {\n                          this.cacheLength()\n                        }\n                        return this._length\n                      }\n                    },\n                    chunkSize: {\n                      get: function() {\n                        if (!this.lengthKnown) {\n                          this.cacheLength()\n                        }\n                        return this._chunkSize\n                      }\n                    }\n                  });\n                  var properties = {\n                    isDevice: false,\n                    contents: lazyArray\n                  }\n                } else {\n                  var properties = {\n                    isDevice: false,\n                    url: url\n                  }\n                }\n                var node = FS.createFile(parent, name, properties, canRead, canWrite);\n                if (properties.contents) {\n                  node.contents = properties.contents\n                } else if (properties.url) {\n                  node.contents = null;\n                  node.url = properties.url\n                }\n                Object.defineProperties(node, {\n                  usedBytes: {\n                    get: function() {\n                      return this.contents.length\n                    }\n                  }\n                });\n                var stream_ops = {};\n                var keys = Object.keys(node.stream_ops);\n                keys.forEach(function(key) {\n                  var fn = node.stream_ops[key];\n                  stream_ops[key] = function forceLoadLazyFile() {\n                    if (!FS.forceLoadFile(node)) {\n                      throw new FS.ErrnoError(29)\n                    }\n                    return fn.apply(null, arguments)\n                  }\n                });\n                stream_ops.read = function stream_ops_read(stream, buffer, offset, length, position) {\n                  if (!FS.forceLoadFile(node)) {\n                    throw new FS.ErrnoError(29)\n                  }\n                  var contents = stream.node.contents;\n                  if (position >= contents.length)\n                    return 0;\n                  var size = Math.min(contents.length - position, length);\n                  if (contents.slice) {\n                    for (var i = 0; i < size; i++) {\n                      buffer[offset + i] = contents[position + i]\n                    }\n                  } else {\n                    for (var i = 0; i < size; i++) {\n                      buffer[offset + i] = contents.get(position + i)\n                    }\n                  }\n                  return size\n                }\n                ;\n                node.stream_ops = stream_ops;\n                return node\n              },\n              createPreloadedFile: function(parent, name, url, canRead, canWrite, onload, onerror, dontCreateFile, canOwn, preFinish) {\n                Browser.init();\n                var fullname = name ? PATH_FS.resolve(PATH.join2(parent, name)) : parent;\n                var dep = getUniqueRunDependency(\"cp \" + fullname);\n                function processData(byteArray) {\n                  function finish(byteArray) {\n                    if (preFinish)\n                      preFinish();\n                    if (!dontCreateFile) {\n                      FS.createDataFile(parent, name, byteArray, canRead, canWrite, canOwn)\n                    }\n                    if (onload)\n                      onload();\n                    removeRunDependency(dep)\n                  }\n                  var handled = false;\n                  Module[\"preloadPlugins\"].forEach(function(plugin) {\n                    if (handled)\n                      return;\n                    if (plugin[\"canHandle\"](fullname)) {\n                      plugin[\"handle\"](byteArray, fullname, finish, function() {\n                        if (onerror)\n                          onerror();\n                        removeRunDependency(dep)\n                      });\n                      handled = true\n                    }\n                  });\n                  if (!handled)\n                    finish(byteArray)\n                }\n                addRunDependency(dep);\n                if (typeof url == \"string\") {\n                  Browser.asyncLoad(url, function(byteArray) {\n                    processData(byteArray)\n                  }, onerror)\n                } else {\n                  processData(url)\n                }\n              },\n              indexedDB: function() {\n                return window.indexedDB || window.mozIndexedDB || window.webkitIndexedDB || window.msIndexedDB\n              },\n              DB_NAME: function() {\n                return \"EM_FS_\" + window.location.pathname\n              },\n              DB_VERSION: 20,\n              DB_STORE_NAME: \"FILE_DATA\",\n              saveFilesToDB: function(paths, onload, onerror) {\n                onload = onload || function() {}\n                ;\n                onerror = onerror || function() {}\n                ;\n                var indexedDB = FS.indexedDB();\n                try {\n                  var openRequest = indexedDB.open(FS.DB_NAME(), FS.DB_VERSION)\n                } catch (e) {\n                  return onerror(e)\n                }\n                openRequest.onupgradeneeded = function openRequest_onupgradeneeded() {\n                  out(\"creating db\");\n                  var db = openRequest.result;\n                  db.createObjectStore(FS.DB_STORE_NAME)\n                }\n                ;\n                openRequest.onsuccess = function openRequest_onsuccess() {\n                  var db = openRequest.result;\n                  var transaction = db.transaction([FS.DB_STORE_NAME], \"readwrite\");\n                  var files = transaction.objectStore(FS.DB_STORE_NAME);\n                  var ok = 0\n                      , fail = 0\n                      , total = paths.length;\n                  function finish() {\n                    if (fail == 0)\n                      onload();\n                    else\n                      onerror()\n                  }\n                  paths.forEach(function(path) {\n                    var putRequest = files.put(FS.analyzePath(path).object.contents, path);\n                    putRequest.onsuccess = function putRequest_onsuccess() {\n                      ok++;\n                      if (ok + fail == total)\n                        finish()\n                    }\n                    ;\n                    putRequest.onerror = function putRequest_onerror() {\n                      fail++;\n                      if (ok + fail == total)\n                        finish()\n                    }\n                  });\n                  transaction.onerror = onerror\n                }\n                ;\n                openRequest.onerror = onerror\n              },\n              loadFilesFromDB: function(paths, onload, onerror) {\n                onload = onload || function() {}\n                ;\n                onerror = onerror || function() {}\n                ;\n                var indexedDB = FS.indexedDB();\n                try {\n                  var openRequest = indexedDB.open(FS.DB_NAME(), FS.DB_VERSION)\n                } catch (e) {\n                  return onerror(e)\n                }\n                openRequest.onupgradeneeded = onerror;\n                openRequest.onsuccess = function openRequest_onsuccess() {\n                  var db = openRequest.result;\n                  try {\n                    var transaction = db.transaction([FS.DB_STORE_NAME], \"readonly\")\n                  } catch (e) {\n                    onerror(e);\n                    return\n                  }\n                  var files = transaction.objectStore(FS.DB_STORE_NAME);\n                  var ok = 0\n                      , fail = 0\n                      , total = paths.length;\n                  function finish() {\n                    if (fail == 0)\n                      onload();\n                    else\n                      onerror()\n                  }\n                  paths.forEach(function(path) {\n                    var getRequest = files.get(path);\n                    getRequest.onsuccess = function getRequest_onsuccess() {\n                      if (FS.analyzePath(path).exists) {\n                        FS.unlink(path)\n                      }\n                      FS.createDataFile(PATH.dirname(path), PATH.basename(path), getRequest.result, true, true, true);\n                      ok++;\n                      if (ok + fail == total)\n                        finish()\n                    }\n                    ;\n                    getRequest.onerror = function getRequest_onerror() {\n                      fail++;\n                      if (ok + fail == total)\n                        finish()\n                    }\n                  });\n                  transaction.onerror = onerror\n                }\n                ;\n                openRequest.onerror = onerror\n              }\n            };\n            var SYSCALLS = {\n              mappings: {},\n              DEFAULT_POLLMASK: 5,\n              umask: 511,\n              calculateAt: function(dirfd, path) {\n                if (path[0] !== \"/\") {\n                  var dir;\n                  if (dirfd === -100) {\n                    dir = FS.cwd()\n                  } else {\n                    var dirstream = FS.getStream(dirfd);\n                    if (!dirstream)\n                      throw new FS.ErrnoError(8);\n                    dir = dirstream.path\n                  }\n                  path = PATH.join2(dir, path)\n                }\n                return path\n              },\n              doStat: function(func, path, buf) {\n                try {\n                  var stat = func(path)\n                } catch (e) {\n                  if (e && e.node && PATH.normalize(path) !== PATH.normalize(FS.getPath(e.node))) {\n                    return -54\n                  }\n                  throw e\n                }\n                HEAP32[buf >> 2] = stat.dev;\n                HEAP32[buf + 4 >> 2] = 0;\n                HEAP32[buf + 8 >> 2] = stat.ino;\n                HEAP32[buf + 12 >> 2] = stat.mode;\n                HEAP32[buf + 16 >> 2] = stat.nlink;\n                HEAP32[buf + 20 >> 2] = stat.uid;\n                HEAP32[buf + 24 >> 2] = stat.gid;\n                HEAP32[buf + 28 >> 2] = stat.rdev;\n                HEAP32[buf + 32 >> 2] = 0;\n                tempI64 = [stat.size >>> 0, (tempDouble = stat.size,\n                    +Math_abs(tempDouble) >= 1 ? tempDouble > 0 ? (Math_min(+Math_floor(tempDouble / 4294967296), 4294967295) | 0) >>> 0 : ~~+Math_ceil((tempDouble - +(~~tempDouble >>> 0)) / 4294967296) >>> 0 : 0)],\n                    HEAP32[buf + 40 >> 2] = tempI64[0],\n                    HEAP32[buf + 44 >> 2] = tempI64[1];\n                HEAP32[buf + 48 >> 2] = 4096;\n                HEAP32[buf + 52 >> 2] = stat.blocks;\n                HEAP32[buf + 56 >> 2] = stat.atime.getTime() / 1e3 | 0;\n                HEAP32[buf + 60 >> 2] = 0;\n                HEAP32[buf + 64 >> 2] = stat.mtime.getTime() / 1e3 | 0;\n                HEAP32[buf + 68 >> 2] = 0;\n                HEAP32[buf + 72 >> 2] = stat.ctime.getTime() / 1e3 | 0;\n                HEAP32[buf + 76 >> 2] = 0;\n                tempI64 = [stat.ino >>> 0, (tempDouble = stat.ino,\n                    +Math_abs(tempDouble) >= 1 ? tempDouble > 0 ? (Math_min(+Math_floor(tempDouble / 4294967296), 4294967295) | 0) >>> 0 : ~~+Math_ceil((tempDouble - +(~~tempDouble >>> 0)) / 4294967296) >>> 0 : 0)],\n                    HEAP32[buf + 80 >> 2] = tempI64[0],\n                    HEAP32[buf + 84 >> 2] = tempI64[1];\n                return 0\n              },\n              doMsync: function(addr, stream, len, flags, offset) {\n                var buffer = HEAPU8.slice(addr, addr + len);\n                FS.msync(stream, buffer, offset, len, flags)\n              },\n              doMkdir: function(path, mode) {\n                path = PATH.normalize(path);\n                if (path[path.length - 1] === \"/\")\n                  path = path.substr(0, path.length - 1);\n                FS.mkdir(path, mode, 0);\n                return 0\n              },\n              doMknod: function(path, mode, dev) {\n                switch (mode & 61440) {\n                  case 32768:\n                  case 8192:\n                  case 24576:\n                  case 4096:\n                  case 49152:\n                    break;\n                  default:\n                    return -28\n                }\n                FS.mknod(path, mode, dev);\n                return 0\n              },\n              doReadlink: function(path, buf, bufsize) {\n                if (bufsize <= 0)\n                  return -28;\n                var ret = FS.readlink(path);\n                var len = Math.min(bufsize, lengthBytesUTF8(ret));\n                var endChar = HEAP8[buf + len];\n                stringToUTF8(ret, buf, bufsize + 1);\n                HEAP8[buf + len] = endChar;\n                return len\n              },\n              doAccess: function(path, amode) {\n                if (amode & ~7) {\n                  return -28\n                }\n                var node;\n                var lookup = FS.lookupPath(path, {\n                  follow: true\n                });\n                node = lookup.node;\n                if (!node) {\n                  return -44\n                }\n                var perms = \"\";\n                if (amode & 4)\n                  perms += \"r\";\n                if (amode & 2)\n                  perms += \"w\";\n                if (amode & 1)\n                  perms += \"x\";\n                if (perms && FS.nodePermissions(node, perms)) {\n                  return -2\n                }\n                return 0\n              },\n              doDup: function(path, flags, suggestFD) {\n                var suggest = FS.getStream(suggestFD);\n                if (suggest)\n                  FS.close(suggest);\n                return FS.open(path, flags, 0, suggestFD, suggestFD).fd\n              },\n              doReadv: function(stream, iov, iovcnt, offset) {\n                var ret = 0;\n                for (var i = 0; i < iovcnt; i++) {\n                  var ptr = HEAP32[iov + i * 8 >> 2];\n                  var len = HEAP32[iov + (i * 8 + 4) >> 2];\n                  var curr = FS.read(stream, HEAP8, ptr, len, offset);\n                  if (curr < 0)\n                    return -1;\n                  ret += curr;\n                  if (curr < len)\n                    break\n                }\n                return ret\n              },\n              doWritev: function(stream, iov, iovcnt, offset) {\n                var ret = 0;\n                for (var i = 0; i < iovcnt; i++) {\n                  var ptr = HEAP32[iov + i * 8 >> 2];\n                  var len = HEAP32[iov + (i * 8 + 4) >> 2];\n                  var curr = FS.write(stream, HEAP8, ptr, len, offset);\n                  if (curr < 0)\n                    return -1;\n                  ret += curr\n                }\n                return ret\n              },\n              varargs: undefined,\n              get: function() {\n                SYSCALLS.varargs += 4;\n                var ret = HEAP32[SYSCALLS.varargs - 4 >> 2];\n                return ret\n              },\n              getStr: function(ptr) {\n                var ret = UTF8ToString(ptr);\n                return ret\n              },\n              getStreamFromFD: function(fd) {\n                var stream = FS.getStream(fd);\n                if (!stream)\n                  throw new FS.ErrnoError(8);\n                return stream\n              },\n              get64: function(low, high) {\n                return low\n              }\n            };\n            function ___syscall221(fd, cmd, varargs) {\n              SYSCALLS.varargs = varargs;\n              try {\n                var stream = SYSCALLS.getStreamFromFD(fd);\n                switch (cmd) {\n                  case 0:\n                  {\n                    var arg = SYSCALLS.get();\n                    if (arg < 0) {\n                      return -28\n                    }\n                    var newStream;\n                    newStream = FS.open(stream.path, stream.flags, 0, arg);\n                    return newStream.fd\n                  }\n                  case 1:\n                  case 2:\n                    return 0;\n                  case 3:\n                    return stream.flags;\n                  case 4:\n                  {\n                    var arg = SYSCALLS.get();\n                    stream.flags |= arg;\n                    return 0\n                  }\n                  case 12:\n                  {\n                    var arg = SYSCALLS.get();\n                    var offset = 0;\n                    HEAP16[arg + offset >> 1] = 2;\n                    return 0\n                  }\n                  case 13:\n                  case 14:\n                    return 0;\n                  case 16:\n                  case 8:\n                    return -28;\n                  case 9:\n                    ___setErrNo(28);\n                    return -1;\n                  default:\n                  {\n                    return -28\n                  }\n                }\n              } catch (e) {\n                if (typeof FS === \"undefined\" || !(e instanceof FS.ErrnoError))\n                  abort(e);\n                return -e.errno\n              }\n            }\n            function ___syscall5(path, flags, varargs) {\n              SYSCALLS.varargs = varargs;\n              try {\n                var pathname = SYSCALLS.getStr(path);\n                var mode = SYSCALLS.get();\n                var stream = FS.open(pathname, flags, mode);\n                return stream.fd\n              } catch (e) {\n                if (typeof FS === \"undefined\" || !(e instanceof FS.ErrnoError))\n                  abort(e);\n                return -e.errno\n              }\n            }\n            function ___syscall54(fd, op, varargs) {\n              SYSCALLS.varargs = varargs;\n              try {\n                var stream = SYSCALLS.getStreamFromFD(fd);\n                switch (op) {\n                  case 21509:\n                  case 21505:\n                  {\n                    if (!stream.tty)\n                      return -59;\n                    return 0\n                  }\n                  case 21510:\n                  case 21511:\n                  case 21512:\n                  case 21506:\n                  case 21507:\n                  case 21508:\n                  {\n                    if (!stream.tty)\n                      return -59;\n                    return 0\n                  }\n                  case 21519:\n                  {\n                    if (!stream.tty)\n                      return -59;\n                    var argp = SYSCALLS.get();\n                    HEAP32[argp >> 2] = 0;\n                    return 0\n                  }\n                  case 21520:\n                  {\n                    if (!stream.tty)\n                      return -59;\n                    return -28\n                  }\n                  case 21531:\n                  {\n                    var argp = SYSCALLS.get();\n                    return FS.ioctl(stream, op, argp)\n                  }\n                  case 21523:\n                  {\n                    if (!stream.tty)\n                      return -59;\n                    return 0\n                  }\n                  case 21524:\n                  {\n                    if (!stream.tty)\n                      return -59;\n                    return 0\n                  }\n                  default:\n                    abort(\"bad ioctl syscall \" + op)\n                }\n              } catch (e) {\n                if (typeof FS === \"undefined\" || !(e instanceof FS.ErrnoError))\n                  abort(e);\n                return -e.errno\n              }\n            }\n            function syscallMunmap(addr, len) {\n              if (addr === -1 || len === 0) {\n                return -28\n              }\n              var info = SYSCALLS.mappings[addr];\n              if (!info)\n                return 0;\n              if (len === info.len) {\n                var stream = FS.getStream(info.fd);\n                SYSCALLS.doMsync(addr, stream, len, info.flags, info.offset);\n                FS.munmap(stream);\n                SYSCALLS.mappings[addr] = null;\n                if (info.allocated) {\n                  _free(info.malloc)\n                }\n              }\n              return 0\n            }\n            function ___syscall91(addr, len) {\n              try {\n                return syscallMunmap(addr, len)\n              } catch (e) {\n                if (typeof FS === \"undefined\" || !(e instanceof FS.ErrnoError))\n                  abort(e);\n                return -e.errno\n              }\n            }\n            function _abort() {\n              abort()\n            }\n            var _abs = Math_abs;\n            function _emscripten_get_heap_size() {\n              return HEAPU8.length\n            }\n            function _emscripten_memcpy_big(dest, src, num) {\n              HEAPU8.copyWithin(dest, src, src + num)\n            }\n            function emscripten_realloc_buffer(size) {\n              try {\n                wasmMemory.grow(size - buffer.byteLength + 65535 >> 16);\n                updateGlobalBufferAndViews(wasmMemory.buffer);\n                return 1\n              } catch (e) {}\n            }\n            function _emscripten_resize_heap(requestedSize) {\n              var oldSize = _emscripten_get_heap_size();\n              var PAGE_MULTIPLE = 65536;\n              var maxHeapSize = 2147483648 - PAGE_MULTIPLE;\n              if (requestedSize > maxHeapSize) {\n                return false\n              }\n              var minHeapSize = 16777216;\n              for (var cutDown = 1; cutDown <= 4; cutDown *= 2) {\n                var overGrownHeapSize = oldSize * (1 + .2 / cutDown);\n                overGrownHeapSize = Math.min(overGrownHeapSize, requestedSize + 100663296);\n                var newSize = Math.min(maxHeapSize, alignUp(Math.max(minHeapSize, requestedSize, overGrownHeapSize), PAGE_MULTIPLE));\n                var replacement = emscripten_realloc_buffer(newSize);\n                if (replacement) {\n                  return true\n                }\n              }\n              return false\n            }\n            var ENV = {};\n            function __getExecutableName() {\n              return thisProgram || \"./this.program\"\n            }\n            function _emscripten_get_environ() {\n              if (!_emscripten_get_environ.strings) {\n                var env = {\n                  \"USER\": \"web_user\",\n                  \"LOGNAME\": \"web_user\",\n                  \"PATH\": \"/\",\n                  \"PWD\": \"/\",\n                  \"HOME\": \"/home/web_user\",\n                  \"LANG\": (typeof navigator === \"object\" && navigator.languages && navigator.languages[0] || \"C\").replace(\"-\", \"_\") + \".UTF-8\",\n                  \"_\": __getExecutableName()\n                };\n                for (var x in ENV) {\n                  env[x] = ENV[x]\n                }\n                var strings = [];\n                for (var x in env) {\n                  strings.push(x + \"=\" + env[x])\n                }\n                _emscripten_get_environ.strings = strings\n              }\n              return _emscripten_get_environ.strings\n            }\n            function _environ_get(__environ, environ_buf) {\n              var strings = _emscripten_get_environ();\n              var bufSize = 0;\n              strings.forEach(function(string, i) {\n                var ptr = environ_buf + bufSize;\n                HEAP32[__environ + i * 4 >> 2] = ptr;\n                writeAsciiToMemory(string, ptr);\n                bufSize += string.length + 1\n              });\n              return 0\n            }\n            function _environ_sizes_get(penviron_count, penviron_buf_size) {\n              var strings = _emscripten_get_environ();\n              HEAP32[penviron_count >> 2] = strings.length;\n              var bufSize = 0;\n              strings.forEach(function(string) {\n                bufSize += string.length + 1\n              });\n              HEAP32[penviron_buf_size >> 2] = bufSize;\n              return 0\n            }\n            function _fd_close(fd) {\n              try {\n                var stream = SYSCALLS.getStreamFromFD(fd);\n                FS.close(stream);\n                return 0\n              } catch (e) {\n                if (typeof FS === \"undefined\" || !(e instanceof FS.ErrnoError))\n                  abort(e);\n                return e.errno\n              }\n            }\n            function _fd_read(fd, iov, iovcnt, pnum) {\n              try {\n                var stream = SYSCALLS.getStreamFromFD(fd);\n                var num = SYSCALLS.doReadv(stream, iov, iovcnt);\n                HEAP32[pnum >> 2] = num;\n                return 0\n              } catch (e) {\n                if (typeof FS === \"undefined\" || !(e instanceof FS.ErrnoError))\n                  abort(e);\n                return e.errno\n              }\n            }\n            function _fd_seek(fd, offset_low, offset_high, whence, newOffset) {\n              try {\n                var stream = SYSCALLS.getStreamFromFD(fd);\n                var HIGH_OFFSET = 4294967296;\n                var offset = offset_high * HIGH_OFFSET + (offset_low >>> 0);\n                var DOUBLE_LIMIT = 9007199254740992;\n                if (offset <= -DOUBLE_LIMIT || offset >= DOUBLE_LIMIT) {\n                  return -61\n                }\n                FS.llseek(stream, offset, whence);\n                tempI64 = [stream.position >>> 0, (tempDouble = stream.position,\n                    +Math_abs(tempDouble) >= 1 ? tempDouble > 0 ? (Math_min(+Math_floor(tempDouble / 4294967296), 4294967295) | 0) >>> 0 : ~~+Math_ceil((tempDouble - +(~~tempDouble >>> 0)) / 4294967296) >>> 0 : 0)],\n                    HEAP32[newOffset >> 2] = tempI64[0],\n                    HEAP32[newOffset + 4 >> 2] = tempI64[1];\n                if (stream.getdents && offset === 0 && whence === 0)\n                  stream.getdents = null;\n                return 0\n              } catch (e) {\n                if (typeof FS === \"undefined\" || !(e instanceof FS.ErrnoError))\n                  abort(e);\n                return e.errno\n              }\n            }\n            function _fd_write(fd, iov, iovcnt, pnum) {\n              try {\n                var stream = SYSCALLS.getStreamFromFD(fd);\n                var num = SYSCALLS.doWritev(stream, iov, iovcnt);\n                HEAP32[pnum >> 2] = num;\n                return 0\n              } catch (e) {\n                if (typeof FS === \"undefined\" || !(e instanceof FS.ErrnoError))\n                  abort(e);\n                return e.errno\n              }\n            }\n            function _round(d) {\n              d = +d;\n              return d >= +0 ? +Math_floor(d + +.5) : +Math_ceil(d - +.5)\n            }\n            function _roundf(d) {\n              d = +d;\n              return d >= +0 ? +Math_floor(d + +.5) : +Math_ceil(d - +.5)\n            }\n            function __isLeapYear(year) {\n              return year % 4 === 0 && (year % 100 !== 0 || year % 400 === 0)\n            }\n            function __arraySum(array, index) {\n              var sum = 0;\n              for (var i = 0; i <= index; sum += array[i++]) {}\n              return sum\n            }\n            var __MONTH_DAYS_LEAP = [31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n            var __MONTH_DAYS_REGULAR = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n            function __addDays(date, days) {\n              var newDate = new Date(date.getTime());\n              while (days > 0) {\n                var leap = __isLeapYear(newDate.getFullYear());\n                var currentMonth = newDate.getMonth();\n                var daysInCurrentMonth = (leap ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR)[currentMonth];\n                if (days > daysInCurrentMonth - newDate.getDate()) {\n                  days -= daysInCurrentMonth - newDate.getDate() + 1;\n                  newDate.setDate(1);\n                  if (currentMonth < 11) {\n                    newDate.setMonth(currentMonth + 1)\n                  } else {\n                    newDate.setMonth(0);\n                    newDate.setFullYear(newDate.getFullYear() + 1)\n                  }\n                } else {\n                  newDate.setDate(newDate.getDate() + days);\n                  return newDate\n                }\n              }\n              return newDate\n            }\n            function _strftime(s, maxsize, format, tm) {\n              var tm_zone = HEAP32[tm + 40 >> 2];\n              var date = {\n                tm_sec: HEAP32[tm >> 2],\n                tm_min: HEAP32[tm + 4 >> 2],\n                tm_hour: HEAP32[tm + 8 >> 2],\n                tm_mday: HEAP32[tm + 12 >> 2],\n                tm_mon: HEAP32[tm + 16 >> 2],\n                tm_year: HEAP32[tm + 20 >> 2],\n                tm_wday: HEAP32[tm + 24 >> 2],\n                tm_yday: HEAP32[tm + 28 >> 2],\n                tm_isdst: HEAP32[tm + 32 >> 2],\n                tm_gmtoff: HEAP32[tm + 36 >> 2],\n                tm_zone: tm_zone ? UTF8ToString(tm_zone) : \"\"\n              };\n              var pattern = UTF8ToString(format);\n              var EXPANSION_RULES_1 = {\n                \"%c\": \"%a %b %d %H:%M:%S %Y\",\n                \"%D\": \"%m/%d/%y\",\n                \"%F\": \"%Y-%m-%d\",\n                \"%h\": \"%b\",\n                \"%r\": \"%I:%M:%S %p\",\n                \"%R\": \"%H:%M\",\n                \"%T\": \"%H:%M:%S\",\n                \"%x\": \"%m/%d/%y\",\n                \"%X\": \"%H:%M:%S\",\n                \"%Ec\": \"%c\",\n                \"%EC\": \"%C\",\n                \"%Ex\": \"%m/%d/%y\",\n                \"%EX\": \"%H:%M:%S\",\n                \"%Ey\": \"%y\",\n                \"%EY\": \"%Y\",\n                \"%Od\": \"%d\",\n                \"%Oe\": \"%e\",\n                \"%OH\": \"%H\",\n                \"%OI\": \"%I\",\n                \"%Om\": \"%m\",\n                \"%OM\": \"%M\",\n                \"%OS\": \"%S\",\n                \"%Ou\": \"%u\",\n                \"%OU\": \"%U\",\n                \"%OV\": \"%V\",\n                \"%Ow\": \"%w\",\n                \"%OW\": \"%W\",\n                \"%Oy\": \"%y\"\n              };\n              for (var rule in EXPANSION_RULES_1) {\n                pattern = pattern.replace(new RegExp(rule,\"g\"), EXPANSION_RULES_1[rule])\n              }\n              var WEEKDAYS = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n              var MONTHS = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n              function leadingSomething(value, digits, character) {\n                var str = typeof value === \"number\" ? value.toString() : value || \"\";\n                while (str.length < digits) {\n                  str = character[0] + str\n                }\n                return str\n              }\n              function leadingNulls(value, digits) {\n                return leadingSomething(value, digits, \"0\")\n              }\n              function compareByDay(date1, date2) {\n                function sgn(value) {\n                  return value < 0 ? -1 : value > 0 ? 1 : 0\n                }\n                var compare;\n                if ((compare = sgn(date1.getFullYear() - date2.getFullYear())) === 0) {\n                  if ((compare = sgn(date1.getMonth() - date2.getMonth())) === 0) {\n                    compare = sgn(date1.getDate() - date2.getDate())\n                  }\n                }\n                return compare\n              }\n              function getFirstWeekStartDate(janFourth) {\n                switch (janFourth.getDay()) {\n                  case 0:\n                    return new Date(janFourth.getFullYear() - 1,11,29);\n                  case 1:\n                    return janFourth;\n                  case 2:\n                    return new Date(janFourth.getFullYear(),0,3);\n                  case 3:\n                    return new Date(janFourth.getFullYear(),0,2);\n                  case 4:\n                    return new Date(janFourth.getFullYear(),0,1);\n                  case 5:\n                    return new Date(janFourth.getFullYear() - 1,11,31);\n                  case 6:\n                    return new Date(janFourth.getFullYear() - 1,11,30)\n                }\n              }\n              function getWeekBasedYear(date) {\n                var thisDate = __addDays(new Date(date.tm_year + 1900,0,1), date.tm_yday);\n                var janFourthThisYear = new Date(thisDate.getFullYear(),0,4);\n                var janFourthNextYear = new Date(thisDate.getFullYear() + 1,0,4);\n                var firstWeekStartThisYear = getFirstWeekStartDate(janFourthThisYear);\n                var firstWeekStartNextYear = getFirstWeekStartDate(janFourthNextYear);\n                if (compareByDay(firstWeekStartThisYear, thisDate) <= 0) {\n                  if (compareByDay(firstWeekStartNextYear, thisDate) <= 0) {\n                    return thisDate.getFullYear() + 1\n                  } else {\n                    return thisDate.getFullYear()\n                  }\n                } else {\n                  return thisDate.getFullYear() - 1\n                }\n              }\n              var EXPANSION_RULES_2 = {\n                \"%a\": function(date) {\n                  return WEEKDAYS[date.tm_wday].substring(0, 3)\n                },\n                \"%A\": function(date) {\n                  return WEEKDAYS[date.tm_wday]\n                },\n                \"%b\": function(date) {\n                  return MONTHS[date.tm_mon].substring(0, 3)\n                },\n                \"%B\": function(date) {\n                  return MONTHS[date.tm_mon]\n                },\n                \"%C\": function(date) {\n                  var year = date.tm_year + 1900;\n                  return leadingNulls(year / 100 | 0, 2)\n                },\n                \"%d\": function(date) {\n                  return leadingNulls(date.tm_mday, 2)\n                },\n                \"%e\": function(date) {\n                  return leadingSomething(date.tm_mday, 2, \" \")\n                },\n                \"%g\": function(date) {\n                  return getWeekBasedYear(date).toString().substring(2)\n                },\n                \"%G\": function(date) {\n                  return getWeekBasedYear(date)\n                },\n                \"%H\": function(date) {\n                  return leadingNulls(date.tm_hour, 2)\n                },\n                \"%I\": function(date) {\n                  var twelveHour = date.tm_hour;\n                  if (twelveHour == 0)\n                    twelveHour = 12;\n                  else if (twelveHour > 12)\n                    twelveHour -= 12;\n                  return leadingNulls(twelveHour, 2)\n                },\n                \"%j\": function(date) {\n                  return leadingNulls(date.tm_mday + __arraySum(__isLeapYear(date.tm_year + 1900) ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR, date.tm_mon - 1), 3)\n                },\n                \"%m\": function(date) {\n                  return leadingNulls(date.tm_mon + 1, 2)\n                },\n                \"%M\": function(date) {\n                  return leadingNulls(date.tm_min, 2)\n                },\n                \"%n\": function() {\n                  return \"\\n\"\n                },\n                \"%p\": function(date) {\n                  if (date.tm_hour >= 0 && date.tm_hour < 12) {\n                    return \"AM\"\n                  } else {\n                    return \"PM\"\n                  }\n                },\n                \"%S\": function(date) {\n                  return leadingNulls(date.tm_sec, 2)\n                },\n                \"%t\": function() {\n                  return \"\\t\"\n                },\n                \"%u\": function(date) {\n                  return date.tm_wday || 7\n                },\n                \"%U\": function(date) {\n                  var janFirst = new Date(date.tm_year + 1900,0,1);\n                  var firstSunday = janFirst.getDay() === 0 ? janFirst : __addDays(janFirst, 7 - janFirst.getDay());\n                  var endDate = new Date(date.tm_year + 1900,date.tm_mon,date.tm_mday);\n                  if (compareByDay(firstSunday, endDate) < 0) {\n                    var februaryFirstUntilEndMonth = __arraySum(__isLeapYear(endDate.getFullYear()) ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR, endDate.getMonth() - 1) - 31;\n                    var firstSundayUntilEndJanuary = 31 - firstSunday.getDate();\n                    var days = firstSundayUntilEndJanuary + februaryFirstUntilEndMonth + endDate.getDate();\n                    return leadingNulls(Math.ceil(days / 7), 2)\n                  }\n                  return compareByDay(firstSunday, janFirst) === 0 ? \"01\" : \"00\"\n                },\n                \"%V\": function(date) {\n                  var janFourthThisYear = new Date(date.tm_year + 1900,0,4);\n                  var janFourthNextYear = new Date(date.tm_year + 1901,0,4);\n                  var firstWeekStartThisYear = getFirstWeekStartDate(janFourthThisYear);\n                  var firstWeekStartNextYear = getFirstWeekStartDate(janFourthNextYear);\n                  var endDate = __addDays(new Date(date.tm_year + 1900,0,1), date.tm_yday);\n                  if (compareByDay(endDate, firstWeekStartThisYear) < 0) {\n                    return \"53\"\n                  }\n                  if (compareByDay(firstWeekStartNextYear, endDate) <= 0) {\n                    return \"01\"\n                  }\n                  var daysDifference;\n                  if (firstWeekStartThisYear.getFullYear() < date.tm_year + 1900) {\n                    daysDifference = date.tm_yday + 32 - firstWeekStartThisYear.getDate()\n                  } else {\n                    daysDifference = date.tm_yday + 1 - firstWeekStartThisYear.getDate()\n                  }\n                  return leadingNulls(Math.ceil(daysDifference / 7), 2)\n                },\n                \"%w\": function(date) {\n                  return date.tm_wday\n                },\n                \"%W\": function(date) {\n                  var janFirst = new Date(date.tm_year,0,1);\n                  var firstMonday = janFirst.getDay() === 1 ? janFirst : __addDays(janFirst, janFirst.getDay() === 0 ? 1 : 7 - janFirst.getDay() + 1);\n                  var endDate = new Date(date.tm_year + 1900,date.tm_mon,date.tm_mday);\n                  if (compareByDay(firstMonday, endDate) < 0) {\n                    var februaryFirstUntilEndMonth = __arraySum(__isLeapYear(endDate.getFullYear()) ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR, endDate.getMonth() - 1) - 31;\n                    var firstMondayUntilEndJanuary = 31 - firstMonday.getDate();\n                    var days = firstMondayUntilEndJanuary + februaryFirstUntilEndMonth + endDate.getDate();\n                    return leadingNulls(Math.ceil(days / 7), 2)\n                  }\n                  return compareByDay(firstMonday, janFirst) === 0 ? \"01\" : \"00\"\n                },\n                \"%y\": function(date) {\n                  return (date.tm_year + 1900).toString().substring(2)\n                },\n                \"%Y\": function(date) {\n                  return date.tm_year + 1900\n                },\n                \"%z\": function(date) {\n                  var off = date.tm_gmtoff;\n                  var ahead = off >= 0;\n                  off = Math.abs(off) / 60;\n                  off = off / 60 * 100 + off % 60;\n                  return (ahead ? \"+\" : \"-\") + String(\"0000\" + off).slice(-4)\n                },\n                \"%Z\": function(date) {\n                  return date.tm_zone\n                },\n                \"%%\": function() {\n                  return \"%\"\n                }\n              };\n              for (var rule in EXPANSION_RULES_2) {\n                if (pattern.indexOf(rule) >= 0) {\n                  pattern = pattern.replace(new RegExp(rule,\"g\"), EXPANSION_RULES_2[rule](date))\n                }\n              }\n              var bytes = intArrayFromString(pattern, false);\n              if (bytes.length > maxsize) {\n                return 0\n              }\n              writeArrayToMemory(bytes, s);\n              return bytes.length - 1\n            }\n            function _strftime_l(s, maxsize, format, tm) {\n              return _strftime(s, maxsize, format, tm)\n            }\n            function readAsmConstArgs(sigPtr, buf) {\n              if (!readAsmConstArgs.array) {\n                readAsmConstArgs.array = []\n              }\n              var args = readAsmConstArgs.array;\n              args.length = 0;\n              var ch;\n              while (ch = HEAPU8[sigPtr++]) {\n                if (ch === 100 || ch === 102) {\n                  buf = buf + 7 & ~7;\n                  args.push(HEAPF64[buf >> 3]);\n                  buf += 8\n                } else {\n                  buf = buf + 3 & ~3;\n                  args.push(HEAP32[buf >> 2]);\n                  buf += 4\n                }\n              }\n              return args\n            }\n            var FSNode = function(parent, name, mode, rdev) {\n              if (!parent) {\n                parent = this\n              }\n              this.parent = parent;\n              this.mount = parent.mount;\n              this.mounted = null;\n              this.id = FS.nextInode++;\n              this.name = name;\n              this.mode = mode;\n              this.node_ops = {};\n              this.stream_ops = {};\n              this.rdev = rdev\n            };\n            var readMode = 292 | 73;\n            var writeMode = 146;\n            Object.defineProperties(FSNode.prototype, {\n              read: {\n                get: function() {\n                  return (this.mode & readMode) === readMode\n                },\n                set: function(val) {\n                  val ? this.mode |= readMode : this.mode &= ~readMode\n                }\n              },\n              write: {\n                get: function() {\n                  return (this.mode & writeMode) === writeMode\n                },\n                set: function(val) {\n                  val ? this.mode |= writeMode : this.mode &= ~writeMode\n                }\n              },\n              isFolder: {\n                get: function() {\n                  return FS.isDir(this.mode)\n                }\n              },\n              isDevice: {\n                get: function() {\n                  return FS.isChrdev(this.mode)\n                }\n              }\n            });\n            FS.FSNode = FSNode;\n            FS.staticInit();\n            function intArrayFromString(stringy, dontAddNull, length) {\n              var len = length > 0 ? length : lengthBytesUTF8(stringy) + 1;\n              var u8array = new Array(len);\n              var numBytesWritten = stringToUTF8Array(stringy, u8array, 0, u8array.length);\n              if (dontAddNull)\n                u8array.length = numBytesWritten;\n              return u8array\n            }\n            var asmLibraryArg = {\n              \"a\": ___assert_fail,\n              \"e\": ___cxa_allocate_exception,\n              \"d\": ___cxa_throw,\n              \"t\": ___map_file,\n              \"f\": ___syscall221,\n              \"l\": ___syscall5,\n              \"k\": ___syscall54,\n              \"s\": ___syscall91,\n              \"i\": _abort,\n              \"m\": _abs,\n              \"c\": _emscripten_asm_const_iii,\n              \"p\": _emscripten_memcpy_big,\n              \"q\": _emscripten_resize_heap,\n              \"u\": _environ_get,\n              \"v\": _environ_sizes_get,\n              \"h\": _fd_close,\n              \"j\": _fd_read,\n              \"n\": _fd_seek,\n              \"g\": _fd_write,\n              \"memory\": wasmMemory,\n              \"b\": _round,\n              \"o\": _roundf,\n              \"r\": _strftime_l,\n              \"table\": wasmTable\n            };\n            var asm = createWasm();\n            Module[\"asm\"] = asm;\n            var ___wasm_call_ctors = Module[\"___wasm_call_ctors\"] = function() {\n                  return (___wasm_call_ctors = Module[\"___wasm_call_ctors\"] = Module[\"asm\"][\"w\"]).apply(null, arguments)\n                }\n            ;\n            var _free = Module[\"_free\"] = function() {\n                  return (_free = Module[\"_free\"] = Module[\"asm\"][\"x\"]).apply(null, arguments)\n                }\n            ;\n            var _malloc = Module[\"_malloc\"] = function() {\n                  return (_malloc = Module[\"_malloc\"] = Module[\"asm\"][\"y\"]).apply(null, arguments)\n                }\n            ;\n            var _gme_open_data = Module[\"_gme_open_data\"] = function() {\n                  return (_gme_open_data = Module[\"_gme_open_data\"] = Module[\"asm\"][\"z\"]).apply(null, arguments)\n                }\n            ;\n            var _gme_delete = Module[\"_gme_delete\"] = function() {\n                  return (_gme_delete = Module[\"_gme_delete\"] = Module[\"asm\"][\"A\"]).apply(null, arguments)\n                }\n            ;\n            var _gme_track_count = Module[\"_gme_track_count\"] = function() {\n                  return (_gme_track_count = Module[\"_gme_track_count\"] = Module[\"asm\"][\"B\"]).apply(null, arguments)\n                }\n            ;\n            var _gme_track_info = Module[\"_gme_track_info\"] = function() {\n                  return (_gme_track_info = Module[\"_gme_track_info\"] = Module[\"asm\"][\"C\"]).apply(null, arguments)\n                }\n            ;\n            var _gme_start_track = Module[\"_gme_start_track\"] = function() {\n                  return (_gme_start_track = Module[\"_gme_start_track\"] = Module[\"asm\"][\"D\"]).apply(null, arguments)\n                }\n            ;\n            var _gme_play = Module[\"_gme_play\"] = function() {\n                  return (_gme_play = Module[\"_gme_play\"] = Module[\"asm\"][\"E\"]).apply(null, arguments)\n                }\n            ;\n            var _gme_set_fade = Module[\"_gme_set_fade\"] = function() {\n                  return (_gme_set_fade = Module[\"_gme_set_fade\"] = Module[\"asm\"][\"F\"]).apply(null, arguments)\n                }\n            ;\n            var _gme_track_ended = Module[\"_gme_track_ended\"] = function() {\n                  return (_gme_track_ended = Module[\"_gme_track_ended\"] = Module[\"asm\"][\"G\"]).apply(null, arguments)\n                }\n            ;\n            var _gme_tell_scaled = Module[\"_gme_tell_scaled\"] = function() {\n                  return (_gme_tell_scaled = Module[\"_gme_tell_scaled\"] = Module[\"asm\"][\"H\"]).apply(null, arguments)\n                }\n            ;\n            var _gme_seek_scaled = Module[\"_gme_seek_scaled\"] = function() {\n                  return (_gme_seek_scaled = Module[\"_gme_seek_scaled\"] = Module[\"asm\"][\"I\"]).apply(null, arguments)\n                }\n            ;\n            var _gme_voice_count = Module[\"_gme_voice_count\"] = function() {\n                  return (_gme_voice_count = Module[\"_gme_voice_count\"] = Module[\"asm\"][\"J\"]).apply(null, arguments)\n                }\n            ;\n            var _gme_ignore_silence = Module[\"_gme_ignore_silence\"] = function() {\n                  return (_gme_ignore_silence = Module[\"_gme_ignore_silence\"] = Module[\"asm\"][\"K\"]).apply(null, arguments)\n                }\n            ;\n            var _gme_set_tempo = Module[\"_gme_set_tempo\"] = function() {\n                  return (_gme_set_tempo = Module[\"_gme_set_tempo\"] = Module[\"asm\"][\"L\"]).apply(null, arguments)\n                }\n            ;\n            var _gme_mute_voices = Module[\"_gme_mute_voices\"] = function() {\n                  return (_gme_mute_voices = Module[\"_gme_mute_voices\"] = Module[\"asm\"][\"M\"]).apply(null, arguments)\n                }\n            ;\n            var _gme_voice_name = Module[\"_gme_voice_name\"] = function() {\n                  return (_gme_voice_name = Module[\"_gme_voice_name\"] = Module[\"asm\"][\"N\"]).apply(null, arguments)\n                }\n            ;\n            var _adl_init = Module[\"_adl_init\"] = function() {\n                  return (_adl_init = Module[\"_adl_init\"] = Module[\"asm\"][\"O\"]).apply(null, arguments)\n                }\n            ;\n            var _adl_setNumChips = Module[\"_adl_setNumChips\"] = function() {\n                  return (_adl_setNumChips = Module[\"_adl_setNumChips\"] = Module[\"asm\"][\"P\"]).apply(null, arguments)\n                }\n            ;\n            var _adl_getNumChips = Module[\"_adl_getNumChips\"] = function() {\n                  return (_adl_getNumChips = Module[\"_adl_getNumChips\"] = Module[\"asm\"][\"Q\"]).apply(null, arguments)\n                }\n            ;\n            var _adl_setBank = Module[\"_adl_setBank\"] = function() {\n                  return (_adl_setBank = Module[\"_adl_setBank\"] = Module[\"asm\"][\"R\"]).apply(null, arguments)\n                }\n            ;\n            var _adl_getBanksCount = Module[\"_adl_getBanksCount\"] = function() {\n                  return (_adl_getBanksCount = Module[\"_adl_getBanksCount\"] = Module[\"asm\"][\"S\"]).apply(null, arguments)\n                }\n            ;\n            var _adl_getBankNames = Module[\"_adl_getBankNames\"] = function() {\n                  return (_adl_getBankNames = Module[\"_adl_getBankNames\"] = Module[\"asm\"][\"T\"]).apply(null, arguments)\n                }\n            ;\n            var _adl_setSoftPanEnabled = Module[\"_adl_setSoftPanEnabled\"] = function() {\n                  return (_adl_setSoftPanEnabled = Module[\"_adl_setSoftPanEnabled\"] = Module[\"asm\"][\"U\"]).apply(null, arguments)\n                }\n            ;\n            var _adl_generate = Module[\"_adl_generate\"] = function() {\n                  return (_adl_generate = Module[\"_adl_generate\"] = Module[\"asm\"][\"V\"]).apply(null, arguments)\n                }\n            ;\n            var _adl_panic = Module[\"_adl_panic\"] = function() {\n                  return (_adl_panic = Module[\"_adl_panic\"] = Module[\"asm\"][\"W\"]).apply(null, arguments)\n                }\n            ;\n            var _adl_rt_resetState = Module[\"_adl_rt_resetState\"] = function() {\n                  return (_adl_rt_resetState = Module[\"_adl_rt_resetState\"] = Module[\"asm\"][\"X\"]).apply(null, arguments)\n                }\n            ;\n            var _adl_rt_noteOn = Module[\"_adl_rt_noteOn\"] = function() {\n                  return (_adl_rt_noteOn = Module[\"_adl_rt_noteOn\"] = Module[\"asm\"][\"Y\"]).apply(null, arguments)\n                }\n            ;\n            var _adl_rt_noteOff = Module[\"_adl_rt_noteOff\"] = function() {\n                  return (_adl_rt_noteOff = Module[\"_adl_rt_noteOff\"] = Module[\"asm\"][\"Z\"]).apply(null, arguments)\n                }\n            ;\n            var _adl_rt_channelAfterTouch = Module[\"_adl_rt_channelAfterTouch\"] = function() {\n                  return (_adl_rt_channelAfterTouch = Module[\"_adl_rt_channelAfterTouch\"] = Module[\"asm\"][\"_\"]).apply(null, arguments)\n                }\n            ;\n            var _adl_rt_controllerChange = Module[\"_adl_rt_controllerChange\"] = function() {\n                  return (_adl_rt_controllerChange = Module[\"_adl_rt_controllerChange\"] = Module[\"asm\"][\"$\"]).apply(null, arguments)\n                }\n            ;\n            var _adl_rt_patchChange = Module[\"_adl_rt_patchChange\"] = function() {\n                  return (_adl_rt_patchChange = Module[\"_adl_rt_patchChange\"] = Module[\"asm\"][\"aa\"]).apply(null, arguments)\n                }\n            ;\n            var _adl_rt_pitchBend = Module[\"_adl_rt_pitchBend\"] = function() {\n                  return (_adl_rt_pitchBend = Module[\"_adl_rt_pitchBend\"] = Module[\"asm\"][\"ba\"]).apply(null, arguments)\n                }\n            ;\n            var _v2m_open = Module[\"_v2m_open\"] = function() {\n                  return (_v2m_open = Module[\"_v2m_open\"] = Module[\"asm\"][\"ca\"]).apply(null, arguments)\n                }\n            ;\n            var _v2m_write_audio = Module[\"_v2m_write_audio\"] = function() {\n                  return (_v2m_write_audio = Module[\"_v2m_write_audio\"] = Module[\"asm\"][\"da\"]).apply(null, arguments)\n                }\n            ;\n            var _v2m_get_position_ms = Module[\"_v2m_get_position_ms\"] = function() {\n                  return (_v2m_get_position_ms = Module[\"_v2m_get_position_ms\"] = Module[\"asm\"][\"ea\"]).apply(null, arguments)\n                }\n            ;\n            var _v2m_get_duration_ms = Module[\"_v2m_get_duration_ms\"] = function() {\n                  return (_v2m_get_duration_ms = Module[\"_v2m_get_duration_ms\"] = Module[\"asm\"][\"fa\"]).apply(null, arguments)\n                }\n            ;\n            var _v2m_seek_ms = Module[\"_v2m_seek_ms\"] = function() {\n                  return (_v2m_seek_ms = Module[\"_v2m_seek_ms\"] = Module[\"asm\"][\"ga\"]).apply(null, arguments)\n                }\n            ;\n            var _v2m_set_speed = Module[\"_v2m_set_speed\"] = function() {\n                  return (_v2m_set_speed = Module[\"_v2m_set_speed\"] = Module[\"asm\"][\"ha\"]).apply(null, arguments)\n                }\n            ;\n            var _v2m_close = Module[\"_v2m_close\"] = function() {\n                  return (_v2m_close = Module[\"_v2m_close\"] = Module[\"asm\"][\"ia\"]).apply(null, arguments)\n                }\n            ;\n            var _xmp_start_player = Module[\"_xmp_start_player\"] = function() {\n                  return (_xmp_start_player = Module[\"_xmp_start_player\"] = Module[\"asm\"][\"ja\"]).apply(null, arguments)\n                }\n            ;\n            var _xmp_end_player = Module[\"_xmp_end_player\"] = function() {\n                  return (_xmp_end_player = Module[\"_xmp_end_player\"] = Module[\"asm\"][\"ka\"]).apply(null, arguments)\n                }\n            ;\n            var _xmp_play_buffer = Module[\"_xmp_play_buffer\"] = function() {\n                  return (_xmp_play_buffer = Module[\"_xmp_play_buffer\"] = Module[\"asm\"][\"la\"]).apply(null, arguments)\n                }\n            ;\n            var _xmp_get_frame_info = Module[\"_xmp_get_frame_info\"] = function() {\n                  return (_xmp_get_frame_info = Module[\"_xmp_get_frame_info\"] = Module[\"asm\"][\"ma\"]).apply(null, arguments)\n                }\n            ;\n            var _xmp_get_module_info = Module[\"_xmp_get_module_info\"] = function() {\n                  return (_xmp_get_module_info = Module[\"_xmp_get_module_info\"] = Module[\"asm\"][\"na\"]).apply(null, arguments)\n                }\n            ;\n            var _xmp_create_context = Module[\"_xmp_create_context\"] = function() {\n                  return (_xmp_create_context = Module[\"_xmp_create_context\"] = Module[\"asm\"][\"oa\"]).apply(null, arguments)\n                }\n            ;\n            var _xmp_stop_module = Module[\"_xmp_stop_module\"] = function() {\n                  return (_xmp_stop_module = Module[\"_xmp_stop_module\"] = Module[\"asm\"][\"pa\"]).apply(null, arguments)\n                }\n            ;\n            var _xmp_restart_module = Module[\"_xmp_restart_module\"] = function() {\n                  return (_xmp_restart_module = Module[\"_xmp_restart_module\"] = Module[\"asm\"][\"qa\"]).apply(null, arguments)\n                }\n            ;\n            var _xmp_seek_time = Module[\"_xmp_seek_time\"] = function() {\n                  return (_xmp_seek_time = Module[\"_xmp_seek_time\"] = Module[\"asm\"][\"ra\"]).apply(null, arguments)\n                }\n            ;\n            var _xmp_channel_mute = Module[\"_xmp_channel_mute\"] = function() {\n                  return (_xmp_channel_mute = Module[\"_xmp_channel_mute\"] = Module[\"asm\"][\"sa\"]).apply(null, arguments)\n                }\n            ;\n            var _xmp_get_player = Module[\"_xmp_get_player\"] = function() {\n                  return (_xmp_get_player = Module[\"_xmp_get_player\"] = Module[\"asm\"][\"ta\"]).apply(null, arguments)\n                }\n            ;\n            var _xmp_get_format_list = Module[\"_xmp_get_format_list\"] = function() {\n                  return (_xmp_get_format_list = Module[\"_xmp_get_format_list\"] = Module[\"asm\"][\"ua\"]).apply(null, arguments)\n                }\n            ;\n            var _xmp_inject_event = Module[\"_xmp_inject_event\"] = function() {\n                  return (_xmp_inject_event = Module[\"_xmp_inject_event\"] = Module[\"asm\"][\"va\"]).apply(null, arguments)\n                }\n            ;\n            var _xmp_load_module_from_memory = Module[\"_xmp_load_module_from_memory\"] = function() {\n                  return (_xmp_load_module_from_memory = Module[\"_xmp_load_module_from_memory\"] = Module[\"asm\"][\"wa\"]).apply(null, arguments)\n                }\n            ;\n            var _new_fluid_settings = Module[\"_new_fluid_settings\"] = function() {\n                  return (_new_fluid_settings = Module[\"_new_fluid_settings\"] = Module[\"asm\"][\"xa\"]).apply(null, arguments)\n                }\n            ;\n            var _fluid_settings_setstr = Module[\"_fluid_settings_setstr\"] = function() {\n                  return (_fluid_settings_setstr = Module[\"_fluid_settings_setstr\"] = Module[\"asm\"][\"ya\"]).apply(null, arguments)\n                }\n            ;\n            var _fluid_settings_setnum = Module[\"_fluid_settings_setnum\"] = function() {\n                  return (_fluid_settings_setnum = Module[\"_fluid_settings_setnum\"] = Module[\"asm\"][\"za\"]).apply(null, arguments)\n                }\n            ;\n            var _fluid_settings_setint = Module[\"_fluid_settings_setint\"] = function() {\n                  return (_fluid_settings_setint = Module[\"_fluid_settings_setint\"] = Module[\"asm\"][\"Aa\"]).apply(null, arguments)\n                }\n            ;\n            var _new_fluid_synth = Module[\"_new_fluid_synth\"] = function() {\n                  return (_new_fluid_synth = Module[\"_new_fluid_synth\"] = Module[\"asm\"][\"Ba\"]).apply(null, arguments)\n                }\n            ;\n            var _fluid_synth_set_reverb = Module[\"_fluid_synth_set_reverb\"] = function() {\n                  return (_fluid_synth_set_reverb = Module[\"_fluid_synth_set_reverb\"] = Module[\"asm\"][\"Ca\"]).apply(null, arguments)\n                }\n            ;\n            var _fluid_synth_noteon = Module[\"_fluid_synth_noteon\"] = function() {\n                  return (_fluid_synth_noteon = Module[\"_fluid_synth_noteon\"] = Module[\"asm\"][\"Da\"]).apply(null, arguments)\n                }\n            ;\n            var _fluid_synth_noteoff = Module[\"_fluid_synth_noteoff\"] = function() {\n                  return (_fluid_synth_noteoff = Module[\"_fluid_synth_noteoff\"] = Module[\"asm\"][\"Ea\"]).apply(null, arguments)\n                }\n            ;\n            var _fluid_synth_all_notes_off = Module[\"_fluid_synth_all_notes_off\"] = function() {\n                  return (_fluid_synth_all_notes_off = Module[\"_fluid_synth_all_notes_off\"] = Module[\"asm\"][\"Fa\"]).apply(null, arguments)\n                }\n            ;\n            var _fluid_synth_all_sounds_off = Module[\"_fluid_synth_all_sounds_off\"] = function() {\n                  return (_fluid_synth_all_sounds_off = Module[\"_fluid_synth_all_sounds_off\"] = Module[\"asm\"][\"Ga\"]).apply(null, arguments)\n                }\n            ;\n            var _fluid_synth_write_float = Module[\"_fluid_synth_write_float\"] = function() {\n                  return (_fluid_synth_write_float = Module[\"_fluid_synth_write_float\"] = Module[\"asm\"][\"Ha\"]).apply(null, arguments)\n                }\n            ;\n            var _fluid_synth_sfload = Module[\"_fluid_synth_sfload\"] = function() {\n                  return (_fluid_synth_sfload = Module[\"_fluid_synth_sfload\"] = Module[\"asm\"][\"Ia\"]).apply(null, arguments)\n                }\n            ;\n            var _tp_note_on = Module[\"_tp_note_on\"] = function() {\n                  return (_tp_note_on = Module[\"_tp_note_on\"] = Module[\"asm\"][\"Ja\"]).apply(null, arguments)\n                }\n            ;\n            var _tp_note_off = Module[\"_tp_note_off\"] = function() {\n                  return (_tp_note_off = Module[\"_tp_note_off\"] = Module[\"asm\"][\"Ka\"]).apply(null, arguments)\n                }\n            ;\n            var _tp_program_change = Module[\"_tp_program_change\"] = function() {\n                  return (_tp_program_change = Module[\"_tp_program_change\"] = Module[\"asm\"][\"La\"]).apply(null, arguments)\n                }\n            ;\n            var _tp_pitch_bend = Module[\"_tp_pitch_bend\"] = function() {\n                  return (_tp_pitch_bend = Module[\"_tp_pitch_bend\"] = Module[\"asm\"][\"Ma\"]).apply(null, arguments)\n                }\n            ;\n            var _tp_control_change = Module[\"_tp_control_change\"] = function() {\n                  return (_tp_control_change = Module[\"_tp_control_change\"] = Module[\"asm\"][\"Na\"]).apply(null, arguments)\n                }\n            ;\n            var _tp_channel_pressure = Module[\"_tp_channel_pressure\"] = function() {\n                  return (_tp_channel_pressure = Module[\"_tp_channel_pressure\"] = Module[\"asm\"][\"Oa\"]).apply(null, arguments)\n                }\n            ;\n            var _tp_render = Module[\"_tp_render\"] = function() {\n                  return (_tp_render = Module[\"_tp_render\"] = Module[\"asm\"][\"Pa\"]).apply(null, arguments)\n                }\n            ;\n            var _tp_panic = Module[\"_tp_panic\"] = function() {\n                  return (_tp_panic = Module[\"_tp_panic\"] = Module[\"asm\"][\"Qa\"]).apply(null, arguments)\n                }\n            ;\n            var _tp_panic_channel = Module[\"_tp_panic_channel\"] = function() {\n                  return (_tp_panic_channel = Module[\"_tp_panic_channel\"] = Module[\"asm\"][\"Ra\"]).apply(null, arguments)\n                }\n            ;\n            var _tp_reset = Module[\"_tp_reset\"] = function() {\n                  return (_tp_reset = Module[\"_tp_reset\"] = Module[\"asm\"][\"Sa\"]).apply(null, arguments)\n                }\n            ;\n            var _tp_init = Module[\"_tp_init\"] = function() {\n                  return (_tp_init = Module[\"_tp_init\"] = Module[\"asm\"][\"Ta\"]).apply(null, arguments)\n                }\n            ;\n            var _tp_write_audio = Module[\"_tp_write_audio\"] = function() {\n                  return (_tp_write_audio = Module[\"_tp_write_audio\"] = Module[\"asm\"][\"Ua\"]).apply(null, arguments)\n                }\n            ;\n            var _tp_get_duration_ms = Module[\"_tp_get_duration_ms\"] = function() {\n                  return (_tp_get_duration_ms = Module[\"_tp_get_duration_ms\"] = Module[\"asm\"][\"Va\"]).apply(null, arguments)\n                }\n            ;\n            var _tp_seek = Module[\"_tp_seek\"] = function() {\n                  return (_tp_seek = Module[\"_tp_seek\"] = Module[\"asm\"][\"Wa\"]).apply(null, arguments)\n                }\n            ;\n            var _tp_get_position_ms = Module[\"_tp_get_position_ms\"] = function() {\n                  return (_tp_get_position_ms = Module[\"_tp_get_position_ms\"] = Module[\"asm\"][\"Xa\"]).apply(null, arguments)\n                }\n            ;\n            var _tp_set_speed = Module[\"_tp_set_speed\"] = function() {\n                  return (_tp_set_speed = Module[\"_tp_set_speed\"] = Module[\"asm\"][\"Ya\"]).apply(null, arguments)\n                }\n            ;\n            var _tp_stop = Module[\"_tp_stop\"] = function() {\n                  return (_tp_stop = Module[\"_tp_stop\"] = Module[\"asm\"][\"Za\"]).apply(null, arguments)\n                }\n            ;\n            var _tp_open = Module[\"_tp_open\"] = function() {\n                  return (_tp_open = Module[\"_tp_open\"] = Module[\"asm\"][\"_a\"]).apply(null, arguments)\n                }\n            ;\n            var _tp_unload_soundfont = Module[\"_tp_unload_soundfont\"] = function() {\n                  return (_tp_unload_soundfont = Module[\"_tp_unload_soundfont\"] = Module[\"asm\"][\"$a\"]).apply(null, arguments)\n                }\n            ;\n            var _tp_load_soundfont = Module[\"_tp_load_soundfont\"] = function() {\n                  return (_tp_load_soundfont = Module[\"_tp_load_soundfont\"] = Module[\"asm\"][\"ab\"]).apply(null, arguments)\n                }\n            ;\n            var _tp_add_soundfont = Module[\"_tp_add_soundfont\"] = function() {\n                  return (_tp_add_soundfont = Module[\"_tp_add_soundfont\"] = Module[\"asm\"][\"bb\"]).apply(null, arguments)\n                }\n            ;\n            var _tp_set_reverb = Module[\"_tp_set_reverb\"] = function() {\n                  return (_tp_set_reverb = Module[\"_tp_set_reverb\"] = Module[\"asm\"][\"cb\"]).apply(null, arguments)\n                }\n            ;\n            var _tp_get_channel_in_use = Module[\"_tp_get_channel_in_use\"] = function() {\n                  return (_tp_get_channel_in_use = Module[\"_tp_get_channel_in_use\"] = Module[\"asm\"][\"db\"]).apply(null, arguments)\n                }\n            ;\n            var _tp_get_channel_program = Module[\"_tp_get_channel_program\"] = function() {\n                  return (_tp_get_channel_program = Module[\"_tp_get_channel_program\"] = Module[\"asm\"][\"eb\"]).apply(null, arguments)\n                }\n            ;\n            var _tp_set_channel_mute = Module[\"_tp_set_channel_mute\"] = function() {\n                  return (_tp_set_channel_mute = Module[\"_tp_set_channel_mute\"] = Module[\"asm\"][\"fb\"]).apply(null, arguments)\n                }\n            ;\n            var _tp_set_bank = Module[\"_tp_set_bank\"] = function() {\n                  return (_tp_set_bank = Module[\"_tp_set_bank\"] = Module[\"asm\"][\"gb\"]).apply(null, arguments)\n                }\n            ;\n            var _tp_set_synth_engine = Module[\"_tp_set_synth_engine\"] = function() {\n                  return (_tp_set_synth_engine = Module[\"_tp_set_synth_engine\"] = Module[\"asm\"][\"hb\"]).apply(null, arguments)\n                }\n            ;\n            var _cqt_init = Module[\"_cqt_init\"] = function() {\n                  return (_cqt_init = Module[\"_cqt_init\"] = Module[\"asm\"][\"ib\"]).apply(null, arguments)\n                }\n            ;\n            var _cqt_calc = Module[\"_cqt_calc\"] = function() {\n                  return (_cqt_calc = Module[\"_cqt_calc\"] = Module[\"asm\"][\"jb\"]).apply(null, arguments)\n                }\n            ;\n            var _cqt_render_line = Module[\"_cqt_render_line\"] = function() {\n                  return (_cqt_render_line = Module[\"_cqt_render_line\"] = Module[\"asm\"][\"kb\"]).apply(null, arguments)\n                }\n            ;\n            var _cqt_bin_to_freq = Module[\"_cqt_bin_to_freq\"] = function() {\n                  return (_cqt_bin_to_freq = Module[\"_cqt_bin_to_freq\"] = Module[\"asm\"][\"lb\"]).apply(null, arguments)\n                }\n            ;\n            var ___errno_location = Module[\"___errno_location\"] = function() {\n                  return (___errno_location = Module[\"___errno_location\"] = Module[\"asm\"][\"mb\"]).apply(null, arguments)\n                }\n            ;\n            var stackSave = Module[\"stackSave\"] = function() {\n                  return (stackSave = Module[\"stackSave\"] = Module[\"asm\"][\"nb\"]).apply(null, arguments)\n                }\n            ;\n            var stackAlloc = Module[\"stackAlloc\"] = function() {\n                  return (stackAlloc = Module[\"stackAlloc\"] = Module[\"asm\"][\"ob\"]).apply(null, arguments)\n                }\n            ;\n            var stackRestore = Module[\"stackRestore\"] = function() {\n                  return (stackRestore = Module[\"stackRestore\"] = Module[\"asm\"][\"pb\"]).apply(null, arguments)\n                }\n            ;\n            var dynCall_vi = Module[\"dynCall_vi\"] = function() {\n                  return (dynCall_vi = Module[\"dynCall_vi\"] = Module[\"asm\"][\"qb\"]).apply(null, arguments)\n                }\n            ;\n            var dynCall_v = Module[\"dynCall_v\"] = function() {\n                  return (dynCall_v = Module[\"dynCall_v\"] = Module[\"asm\"][\"rb\"]).apply(null, arguments)\n                }\n            ;\n            Module[\"asm\"] = asm;\n            Module[\"ccall\"] = ccall;\n            Module[\"setValue\"] = setValue;\n            Module[\"getValue\"] = getValue;\n            Module[\"allocate\"] = allocate;\n            Module[\"UTF8ToString\"] = UTF8ToString;\n            Module[\"FS\"] = FS;\n            Module[\"ALLOC_NORMAL\"] = ALLOC_NORMAL;\n            var calledRun;\n            Module[\"then\"] = function(func) {\n              if (calledRun) {\n                func(Module)\n              } else {\n                var old = Module[\"onRuntimeInitialized\"];\n                Module[\"onRuntimeInitialized\"] = function() {\n                  if (old)\n                    old();\n                  func(Module)\n                }\n              }\n              return Module\n            }\n            ;\n            dependenciesFulfilled = function runCaller() {\n              if (!calledRun)\n                run();\n              if (!calledRun)\n                dependenciesFulfilled = runCaller\n            }\n            ;\n            function run(args) {\n              args = args || arguments_;\n              if (runDependencies > 0) {\n                return\n              }\n              preRun();\n              if (runDependencies > 0)\n                return;\n              function doRun() {\n                if (calledRun)\n                  return;\n                calledRun = true;\n                Module[\"calledRun\"] = true;\n                if (ABORT)\n                  return;\n                initRuntime();\n                preMain();\n                if (Module[\"onRuntimeInitialized\"])\n                  Module[\"onRuntimeInitialized\"]();\n                postRun()\n              }\n              if (Module[\"setStatus\"]) {\n                Module[\"setStatus\"](\"Running...\");\n                setTimeout(function() {\n                  setTimeout(function() {\n                    Module[\"setStatus\"](\"\")\n                  }, 1);\n                  doRun()\n                }, 1)\n              } else {\n                doRun()\n              }\n            }\n            Module[\"run\"] = run;\n            if (Module[\"preInit\"]) {\n              if (typeof Module[\"preInit\"] == \"function\")\n                Module[\"preInit\"] = [Module[\"preInit\"]];\n              while (Module[\"preInit\"].length > 0) {\n                Module[\"preInit\"].pop()()\n              }\n            }\n            noExitRuntime = true;\n            run();\n\n            return CHIP_CORE\n          }\n      );\n    }\n)();\nexport default CHIP_CORE;\n \n","import Player from \"./Player.js\";\n\nconst INT16_MAX = Math.pow(2, 16) - 1;\nconst XMP_PLAYER_STATE = 8;\nconst XMP_STATE_PLAYING = 2;\nconst fileExtensions = [\n  // libxmp-lite:\n  'it',  //  Impulse Tracker  1.00, 2.00, 2.14, 2.15\n  'mod', //  Sound/Noise/Protracker M.K., M!K!, M&K!, N.T., CD81\n  's3m', //  Scream Tracker 3 3.00, 3.01+\n  'xm',  //  Fast Tracker II  1.02, 1.03, 1.04\n];\n\nexport default class XMPPlayer extends Player {\n  constructor(audioCtx, destNode, chipCore, onPlayerStateUpdate = function() {}) {\n    super(audioCtx, destNode, chipCore, onPlayerStateUpdate);\n\n    this.lib = chipCore;\n    this.xmpCtx = chipCore._xmp_create_context();\n    this.xmp_frame_infoPtr = chipCore._malloc(2048);\n    this.fileExtensions = fileExtensions;\n    this.initialBPM = 125;\n    this.tempoScale = 1;\n    this._positionMs = 0;\n    this._durationMs = 1000;\n    this.buffer = chipCore.allocate(this.bufferSize * 16, 'i16', chipCore.ALLOC_NORMAL);\n\n    this.setAudioProcess(this.xmpAudioProcess);\n  }\n\n  xmpAudioProcess(e) {\n    let err;\n    let i, channel;\n    const infoPtr = this.xmp_frame_infoPtr;\n    const channels = [];\n    for (channel = 0; channel < e.outputBuffer.numberOfChannels; channel++) {\n      channels[channel] = e.outputBuffer.getChannelData(channel);\n    }\n\n    if (this.paused) {\n      for (channel = 0; channel < channels.length; channel++) {\n        channels[channel].fill(0);\n      }\n      return;\n    }\n\n    err = this.lib._xmp_play_buffer(this.xmpCtx, this.buffer, this.bufferSize * 4, 1);\n    if (err === -1) {\n      this.stop();\n    } else if (err !== 0) {\n      this.suspend();\n      console.error(\"xmp_play_buffer failed. error code: %d\", err);\n      throw Error('Unable to play this file!');\n    }\n\n    // Get current module BPM\n    // see http://xmp.sourceforge.net/libxmp.html#id25\n    this.lib._xmp_get_frame_info(this.xmpCtx, infoPtr);\n    const bpm = this.lib.getValue(infoPtr + 6 * 4, 'i32');\n    this._positionMs = this.lib.getValue(infoPtr + 7 * 4, 'i32'); // xmp_frame_info.time\n    this._maybeInjectTempo(bpm);\n\n    for (channel = 0; channel < channels.length; channel++) {\n      for (i = 0; i < this.bufferSize; i++) {\n        channels[channel][i] = this.lib.getValue(\n          this.buffer +           // Interleaved channel format\n          i * 2 * 2 +             // frame offset   * bytes per sample * num channels +\n          channel * 2,            // channel offset * bytes per sample\n          'i16'                   // the sample values are signed 16-bit integers\n        ) / INT16_MAX;            // convert int16 to float\n      }\n    }\n  }\n\n  _parseMetadata() {\n    const xmp = this.lib;\n    const meta = {};\n\n    // Match layout of xmp_module_info struct\n    // http://xmp.sourceforge.net/libxmp.html\n    // #void-xmp-get-module-info-xmp-context-c-struct-xmp-module-info-info\n    const xmp_module_infoPtr = xmp._malloc(2048);\n    xmp._xmp_get_module_info(this.xmpCtx, xmp_module_infoPtr);\n    const xmp_modulePtr = xmp.getValue(xmp_module_infoPtr + 20, '*');\n    meta.title = xmp.UTF8ToString(xmp_modulePtr, 256);\n    meta.system = xmp.UTF8ToString(xmp_modulePtr + 64, 256);\n    meta.comment = xmp.UTF8ToString(xmp.getValue(xmp_module_infoPtr + 24, '*'), 512);\n\n    const infoPtr = this.xmp_frame_infoPtr;\n    xmp._xmp_get_frame_info(this.xmpCtx, infoPtr);\n    this._durationMs = xmp.getValue(infoPtr + 8 * 4, 'i32');\n\n    // XMP-specific metadata\n    meta.patterns = xmp.getValue(xmp_modulePtr + 128 + 4 * 0, 'i32'); // patterns\n    meta.tracks = xmp.getValue(xmp_modulePtr + 128 + 4 * 1, 'i32'); // tracks\n    meta.numChannels = xmp.getValue(xmp_modulePtr + 128 + 4 * 2, 'i32'); // tracks per pattern\n    meta.numInstruments = xmp.getValue(xmp_modulePtr + 128 + 4 * 3, 'i32'); // instruments\n    meta.numSamples = xmp.getValue(xmp_modulePtr + 128 + 4 * 4, 'i32'); // samples\n    meta.initialSpeed = xmp.getValue(xmp_modulePtr + 128 + 4 * 5, 'i32'); // initial speed\n    meta.initialBPM = xmp.getValue(xmp_modulePtr + 128 + 4 * 6, 'i32'); // initial bpm\n    meta.moduleLength = xmp.getValue(xmp_modulePtr + 128 + 4 * 7, 'i32'); // module length\n    meta.restartPosition = xmp.getValue(xmp_modulePtr + 128 + 4 * 8, 'i32'); // restart position\n\n    // Filename fallback\n    if (!meta.title) meta.title = this.filepathMeta.title;\n\n    this.initialBPM = meta.initialBPM;\n\n    return meta;\n  }\n\n  loadData(data, filename) {\n    let err;\n    this.filepathMeta = Player.metadataFromFilepath(filename);\n\n    err = this.lib.ccall(\n      'xmp_load_module_from_memory', 'number',\n      ['number', 'array', 'number'],\n      [this.xmpCtx, data, data.length]\n    );\n    if (err !== 0) {\n      console.error(\"xmp_load_module_from_memory failed. error code: %d\", err);\n      throw Error('Unable to load this file!');\n    }\n\n    err = this.lib._xmp_start_player(this.xmpCtx, this.audioCtx.sampleRate, 0);\n    if (err !== 0) {\n      console.error('xmp_start_player failed. error code: %d', err);\n    }\n\n    this.metadata = this._parseMetadata(filename);\n\n    this.connect();\n    this.resume();\n    this.onPlayerStateUpdate(false);\n  }\n\n  setVoices(voices) {\n    voices.forEach((isEnabled, i) => {\n      this.lib._xmp_channel_mute(this.xmpCtx, i, isEnabled ? 0 : 1);\n    });\n  }\n\n  setTempo(val) {\n    if (!this.metadata.initialSpeed) {\n      console.error('Unable to set speed for this file format.');\n      return;\n    }\n    this.tempoScale = val;\n  }\n\n  _maybeInjectTempo(measuredBPM) {\n    const xmp = this.lib;\n    const minBPM = 20;\n    const maxBPM = 255;\n    const targetBPM = Math.floor(Math.max(Math.min(this.metadata.initialBPM * this.tempoScale, maxBPM), minBPM));\n\n    if (targetBPM === measuredBPM) return;\n\n    console.log('Injecting %d BPM into libxmp. (Initial: %d)', targetBPM, this.metadata.initialBPM);\n    const xmp_eventPtr = xmp._malloc(8);\n    for (let i = 0; i < 8; i++) xmp.setValue(xmp_eventPtr + i, 0, 'i8');\n    xmp.setValue(xmp_eventPtr + 3, 0x87, 'i8');\n    xmp.setValue(xmp_eventPtr + 4, targetBPM, 'i32');\n    xmp._xmp_inject_event(this.xmpCtx, 0, xmp_eventPtr);\n  }\n\n  getVoiceName(index) {\n    return `Ch ${index + 1}`;\n  }\n\n  getNumVoices() {\n    return this.metadata.numChannels;\n  }\n\n  getNumSubtunes() {\n    return 0;\n  }\n\n  getPositionMs() {\n    return this._positionMs;\n  }\n\n  getDurationMs() {\n    return this._durationMs;\n  }\n\n  getMetadata() {\n    return this.metadata;\n  }\n\n  isPlaying() {\n    const playingState = this.lib._xmp_get_player(this.xmpCtx, XMP_PLAYER_STATE);\n    return !this.isPaused() && playingState === XMP_STATE_PLAYING;\n  }\n\n  seekMs(seekMs) {\n    this.lib._xmp_seek_time(this.xmpCtx, seekMs);\n  }\n\n  stop() {\n    this.suspend();\n    this.lib._xmp_stop_module(this.xmpCtx);\n    console.debug('XMPPlayer.stop()');\n    this.onPlayerStateUpdate(true);\n  }\n}\n","import {ChipCore, GMEPlayer} from \"../../3rdparty/chip-player-js-lib\";\n// import queryString from \"querystring\";\n\n\nclass GMESongFile {\n    async init() { // TODO: lazy load\n\n        await new Promise((resolve, reject) => {\n            // Load the chip-core Emscripten runtime\n            try {\n                this.chipCore = new ChipCore({\n                    // Look for .wasm file in web root, not the same location as the app bundle (static/js).\n                    locateFile: (path, prefix) => {\n                        if (path.endsWith('.wasm') || path.endsWith('.wast'))\n                            return `${process.env.PUBLIC_URL}/${path}`;\n                        return prefix + path;\n                    },\n                    onRuntimeInitialized: (e) => {\n                        console.log('onRuntimeInitialized', e);\n                        resolve();\n                        // this.sequencer.setPlayers([\n                        //     new GMEPlayer(audioCtx, playerNode, chipCore),\n                        //     new XMPPlayer(audioCtx, playerNode, chipCore),\n                        //     new MIDIPlayer(audioCtx, playerNode, chipCore),\n                        //     new V2MPlayer(audioCtx, playerNode, chipCore),\n                        // ]);\n                        // this.setState({loading: false});\n\n                        // Experimental: Split Module Support\n                        //\n                        // chipCore.loadDynamicLibrary('./xmp.wasm', {\n                        //     loadAsync: true,\n                        //     global: true,\n                        //     nodelete: true,\n                        //   })\n                        //   .then(() => {\n                        //     return this.sequencer.setPlayers([new XMPPlayer(audioCtx, playerNode, chipCore)]);\n                        //   });\n\n                        // const urlParams = queryString.parse(window.location.search.substr(1));\n                        // if (urlParams.play) {\n                        //     // Allow a little time for initial page render before starting the song.\n                        //     // This is not absolutely necessary but helps prevent stuttering.\n                        //     setTimeout(() => {\n                        //         this.sequencer.playSonglist([urlParams.play]);\n                        //         if (urlParams.t) {\n                        //             setTimeout(() => {\n                        //                 if (this.sequencer.getPlayer()) {\n                        //                     this.sequencer.getPlayer().seekMs(parseInt(urlParams.t, 10));\n                        //                 }\n                        //             }, 100);\n                        //         }\n                        //     }, 500);\n                        // }\n                    },\n                });\n            } catch (e) {\n                // Browser doesn't file WASM (Safari in iOS Simulator)\n                throw e;\n            }\n        });\n\n        // this.sequencer = new Sequencer([], this.handleSequencerStateUpdate, this.handlePlayerError);\n    }\n\n    loadPlayerFromBuffer(audioContext, destinationNode, buffer, filepath) {\n        let uint8Array;\n        uint8Array = new Uint8Array(buffer);\n\n\n        const player = new GMEPlayer(audioContext, destinationNode, this.chipCore, e => this.onPlayerStateUpdate(e));\n        try {\n            player.loadData(uint8Array, filepath);\n        } catch (e) {\n            throw e;\n            // this.onPlayerError(e.message);\n            // return;\n        }\n        // this.onPlayerError(null);\n\n        const numVoices = player.getNumVoices();\n        player.setTempo(1.0); // this.tempo);\n        player.setVoices([...Array(numVoices)].fill(true));\n        player.stop();\n        return player;\n\n        // console.debug('Sequencer.playSong(...) song request completed');\n    }\n\n    onPlayerStateUpdate(e) {\n        console.log(e);\n    }\n\n\n\n    loadSongDataFromBuffer(buffer, filepath) {\n        var audioCtx = new AudioContext();\n        const player = this.loadPlayerFromBuffer(audioCtx, audioCtx.destination, buffer, filepath);\n        return this.loadSongDataFromPlayer(player, filepath);\n    }\n\n    loadSongDataFromPlayer(player, filepath) {\n        const metadata = player.metadata;\n        console.log('metadata', metadata);\n        // id666.length = 5;\n        const timeDivision = 96;\n        const beatsPerMinute = 120;\n        const lengthInTicks = (metadata.length * (beatsPerMinute / 60)) * timeDivision;\n\n        const songData = {\n            title: metadata.title,\n            // game: (id666.game ? id666.game + ': ' : ''),\n            game: metadata.game,\n            system: metadata.system,\n            artist: metadata.artist,\n            copyright: metadata.copyright,\n            version: 'auto',\n            created: new Date().getTime(),\n            timeDivision: timeDivision,\n            beatsPerMinute: beatsPerMinute,\n            // beatsPerMeasure: 4,\n            rootGroup: 'root',\n            programs: [\n                {\n                    \"className\": \"GMEPlayerSynthesizer\",\n                    fileURL: filepath\n                }\n            ],\n            instructions: {\n                'root': [\n                    ['C4', 0, lengthInTicks],\n                ]\n            }\n        };\n\n        return songData;\n    }\n\n    async loadSongDataFromURL(filepath, children={}) {\n        const response = await fetch(filepath);\n        const buffer = await response.arrayBuffer();\n        var audioCtx = new AudioContext();\n        const player = this.loadPlayerFromBuffer(audioCtx, audioCtx.destination, buffer, filepath);\n        const songData = this.loadSongDataFromPlayer(player, filepath);\n        return songData;\n    }\n\n\n}\n\n\nexport default GMESongFile;\n","class JSONSongFile {\n\n    async loadSongDataFromFileInput(file) {\n        const fileResult = await new Promise((resolve, reject) => {\n            let reader = new FileReader();                                      // prepare the file Reader\n            reader.readAsText(file);                 // read the binary data\n            reader.onload =  (e) => {\n                resolve(e.target.result);\n            };\n        });\n\n        // noinspection JSCheckFunctionSignatures\n        return JSON.parse(fileResult);\n    }\n\n\n    async loadSongDataFromURL(url, children={}) {\n        const response = await fetch(url);\n        const songData = await response.json();\n        return songData;\n    }\n\n}\n\n\nexport default JSONSongFile;\n","const TARGET = Symbol('proxy_target');\nconst LISTENER = Symbol('proxy_listener');\n\nexport class ConfigListener {\n    constructor(song, path=[]) {\n        this.path = path;\n        this.song = song;\n        this.updateTimeout = null;\n        this.changeListeners = [];\n        // TODO: allow fast changes. trigger update slowly\n    }\n\n    /** @deprecated **/\n    // addChangeListener(listener) {\n    //     const i = this.changeListeners.indexOf(listener)\n    //     if(i === -1)\n    //         this.changeListeners.push(listener);\n    // }\n    //\n    // /** @deprecated **/\n    // removeChangeListener(listener) {\n    //     const i = this.changeListeners.indexOf(listener)\n    //     if(i !== -1)\n    //         this.changeListeners.splice(i);\n    // }\n\n\n    get(obj, prop) {\n        switch(prop) { // TODO: support all common methods\n            case TARGET: return obj;\n            case LISTENER: return this;\n            case 'indexOf': return (v,b,e) => obj.indexOf(v,b,e);\n            case 'splice': return (number, deleteCount, ...newValues) => this.splice(obj, this.path.concat(number), number, deleteCount, ...newValues);\n            default:\n                const path = this.path.concat(prop);\n                if(typeof obj[prop] === 'object') {\n                    return new Proxy(obj[prop], new ConfigListener(this.song, path));\n                }\n                return obj[prop];\n        }\n    }\n\n    set(obj, prop, value) {\n        obj[prop] = value;\n        this.queueChange('set', this.path.concat(prop), value);\n        return true;\n    }\n\n    deleteProperty(obj, prop) {\n        if (prop in obj) {\n            delete obj[prop];\n            this.queueChange('delete', this.path.concat(prop));\n        }\n        return true;\n    }\n\n    queueChange(action, path) {\n        this.song.queueHistoryAction(action, path);\n        // for(let i=0; i<this.changeListeners.length; i++) {\n        //     this.changeListeners[i](action, path);\n        // }\n    }\n\n\n\n    splice(obj, path, number, deleteCount, ...newValues) {\n        if(!Array.isArray(obj))\n            throw new Error(`Splice may only be used in array objects for path: ${path.join('.')}`);\n\n        obj.splice(number, deleteCount, ...newValues);\n        this.queueChange('splice', path, number, deleteCount, ...newValues);\n    }\n\n    /** Static **/\n\n    static TARGET = TARGET;\n    static LISTENER = LISTENER;\n\n    static resolveProxiedObject(proxyObject) {\n        return proxyObject[TARGET] || proxyObject;\n    }\n\n    static addChangeListener(proxyObject, listener) {\n        const configListener = proxyObject[LISTENER];\n        configListener.addChangeListener(listener);\n    }\n}\n","class AudioBufferInstrument {\n    constructor(config={}, audioContext=null) {\n        this.config = config;\n        this.audioContext = audioContext;\n        this.audioBuffer = null;\n        this.loadAudioBuffer();\n    }\n    async loadAudioBuffer() {\n        const response = await fetch(this.config.url);\n        const buffer = await response.arrayBuffer();\n        this.audioBuffer = this.audioContext.decodeAudioData(buffer);\n    }\n\n    /** Playback **/\n\n    playFrequency(destination, frequencyValue, startTime, duration, velocity, onended=null) {\n        // Velocity\n        let velocityGain = destination.context.createGain();\n        velocityGain.gain.value = parseFloat(velocity || 127) / 127;\n        velocityGain.connect(destination);\n        destination = velocityGain;\n\n        // Audio Buffer\n        const source = destination.context.createBufferSource();\n        source.buffer = this.audioBuffer;\n        if(typeof this.config.loop !== \"undefined\")\n            source.loop = !!this.config.loop;\n        const playbackRate = frequencyValue / (this.config.root ? this.getCommandFrequency(this.config.root) : 440);\n        source.playbackRate.value = playbackRate; //  Math.random()*2;\n        if(typeof this.config.detune !== \"undefined\")\n            source.detune.value = this.config.detune;\n\n\n        source.connect(destination);\n        source.start(startTime);\n        source.stop(startTime + duration);\n        if(onended)\n            source.onended = onended;\n\n        // TODO: envelop is an effect\n        // let adsr = this.config.adsr || [0, 0, 0, .1];\n        // let currentTime = destination.context.currentTime;\n        // startTime = startTime !== null ? startTime : currentTime;\n        // duration = duration !== null ? duration : 0;\n\n\n        // velocityGain.gain.linearRampToValueAtTime(velocityGain.gain.value, startTime + duration);\n        // velocityGain.gain.linearRampToValueAtTime(0, startTime + duration + adsr[3]);\n        return source;\n    }\n\n}\n\nexport default AudioBufferInstrument;\n\n","import React from 'react';\nimport {\n    // Button,\n    // InputSelect,\n    ASUIDiv,\n    ASUIButton,\n    ASUIMenuAction,\n    ASUIMenuBreak,\n    ASUIIcon, ASUIInputRange, ASUIMenuDropDown,\n} from \"../../../../components\";\n\nimport AudioBufferInstrumentRendererStyle from \"./AudioBufferInstrumentRendererStyle\";\n\n/** PolyphonyInstrumentRenderer **/\nclass AudioBufferInstrumentRenderer extends AudioBufferInstrumentRendererStyle {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            open: false\n        }\n    }\n\n    getSong() { return this.props.song; }\n    getSampleID() { return this.props.sampleID; }\n    getInstrumentID() { return this.props.instrumentID; }\n    getSampleData() { return this.props.sampleData; }\n\n    render() {\n        const sample = this.getSampleData();\n        // console.log('voice', voice);\n        const sampleName = sample.url.replace(/\\.(wav|mp3)$/, '');\n\n        let className = 'audiobuffer-instrument-renderer';\n        if(this.state.open)\n            className += ' open';\n\n        return (\n            <ASUIDiv\n                className={className}\n                >\n                <ASUIButton\n                    title=\"Change Sample\"\n                    className=\"name\"\n                    onAction={e => this.toggleOpen(e)}>\n                    {sampleName || \"Unnamed\"}\n                </ASUIButton>\n                {!this.state.open ? null : (\n                    <>\n                        {typeof sample.mixer === 'undefined' ? null : (\n                            <ASUIDiv title=\"Edit Mixer\" className=\"mixer\">\n                                <ASUIButton onAction={e => this.openMenuChangeMixer(e)} vertical openOnHover={false}>\n                                    {sample.mixer+'%'}\n                                </ASUIButton>\n                            </ASUIDiv>\n                        )}\n                        {typeof sample.detune === 'undefined' ? null : (\n                            <ASUIDiv title={`Detune by ${sample.detune} cents`} className=\"detune\">\n                                <ASUIButton onAction={e => this.openMenuChangeDetune(e)} vertical openOnHover={false}>\n                                    {sample.detune+'c'}\n                                </ASUIButton>\n                            </ASUIDiv>\n                        )}\n                        {typeof sample.root === 'undefined' ? null : (\n                            <ASUIDiv title={`Key Root is ${sample.root}`} className=\"root\">\n                                <ASUIButton onAction={e => this.openMenuChangeKeyRoot(e)} vertical openOnHover={false}>\n                                    {sample.root}\n                                </ASUIButton>\n                            </ASUIDiv>\n                        )}\n                        {typeof sample.alias === 'undefined' ? null : (\n                            <ASUIDiv title={`Key Alias is ${sample.alias}`} className=\"alias\">\n                                <ASUIButton onAction={e => this.openMenuChangeKeyAlias(e)} vertical openOnHover={false}>\n                                    {sample.alias}\n                                </ASUIButton>\n                            </ASUIDiv>\n                        )}\n                        {typeof sample.range === 'undefined' ? null : (\n                            <ASUIDiv title={`Key Range is ${sample.range}`} className=\"range\">\n                                <ASUIButton onAction={e => this.openMenuChangeKeyRange(e)} vertical openOnHover={false}>\n                                    {sample.range}\n                                </ASUIButton>\n                            </ASUIDiv>\n                        )}\n                        {typeof sample.loop === 'undefined' ? null : (\n                            <ASUIDiv title=\"Toggle Loop\" className=\"loop\">\n                                <ASUIButton title=\"\" onAction={e => this.changeLoop(!sample.loop)} arrow={false} vertical openOnHover={false}>\n                                    {sample.loop?'∞':'⇥'}\n                                </ASUIButton>\n                            </ASUIDiv>\n                        )}\n                    </>)\n                }\n                <ASUIDiv title={`Edit Sample '${sampleName}'`} className=\"config\">\n                    <ASUIButton onAction={e => this.openMenuRoot(e)} vertical openOnHover={false}>\n                        <ASUIIcon source=\"config\"/>\n                    </ASUIButton>\n                </ASUIDiv>\n            </ASUIDiv>\n        );\n    }\n\n\n    openMenu(e, options) {\n        if(typeof this.props.openMenu === \"function\")\n            this.props.openMenu(e, options);\n        else\n            throw new Error(\"Invalid 'openMenu' props\");\n    }\n\n    openMenuRoot(e) {\n        this.openMenu(e, <>\n            <ASUIMenuAction onAction={()=>{}} disabled>Sample {this.props.sampleID}</ASUIMenuAction>\n            <ASUIMenuBreak />\n            <ASUIMenuDropDown key=\"mixer\" onAction={e => this.openMenuChangeMixer(e)}>Edit Mixer</ASUIMenuDropDown>\n            <ASUIMenuDropDown key=\"detune\" onAction={e => this.openMenuChangeDetune(e)}>Edit Detune</ASUIMenuDropDown>\n            <ASUIMenuDropDown key=\"root\" onAction={e => this.openMenuChangeKeyRoot(e)}>Edit Key Root</ASUIMenuDropDown>\n            <ASUIMenuDropDown key=\"alias\" onAction={e => this.openMenuChangeKeyAlias(e)}>Edit Key Alias</ASUIMenuDropDown>\n            <ASUIMenuDropDown key=\"range\" onAction={e => this.openMenuChangeKeyRange(e)}>Edit Key Range</ASUIMenuDropDown>\n            <ASUIMenuDropDown key=\"loop\" onAction={e => this.openMenuChangeLoop(e)}>Toggle Loop</ASUIMenuDropDown>\n            <ASUIMenuBreak />\n            <ASUIMenuDropDown key=\"change\" onAction={e => this.openMenuChangeSample(e)}>Change Sample</ASUIMenuDropDown>\n            <ASUIMenuAction key=\"remove\" onAction={e => this.renderMenu('voice-remove')}>Remove Sample</ASUIMenuAction>\n        </>);\n    }\n\n    openMenuChangeSample(e) {\n        const sample = this.getSampleData();\n        this.openMenu(e, <ASUIInputRange min={0} max={100} value={sample.mixer} />);\n    }\n\n    openMenuChangeMixer(e) {\n        const sample = this.getSampleData();\n        this.openMenu(e, <ASUIInputRange\n            min={0}\n            max={100}\n            value={typeof sample.mixer !== \"undefined\" ? sample.mixer : 100}\n            onChange={(mixerValue) => this.changeMixer(mixerValue)}\n        />);\n    }\n\n    openMenuChangeDetune(e) {\n        const sample = this.getSampleData();\n        this.openMenu(e, <ASUIInputRange\n            min={-1000}\n            max={1000}\n            value={typeof sample.detune !== \"undefined\" ? sample.detune : 100}\n            onChange={(detuneValue) => this.changeDetune(detuneValue)}\n        />);\n    }\n\n    // TODO: use generic menu/value library\n    openMenuChangeKeyRoot(e) {\n        const values = this.getSong().values;\n        this.openMenu(e, <>\n            <ASUIMenuAction onAction={null} disabled>Edit Key Root</ASUIMenuAction>\n            <ASUIMenuBreak />\n            {values.getNoteOctaves((octave) =>\n                <ASUIMenuDropDown onAction={e => this.openMenu(e,\n                    values.getNoteFrequencies((noteName) =>\n                        <ASUIMenuAction onAction={e => this.changeRoot(noteName+octave)}    >{noteName+octave}</ASUIMenuAction>\n                    )\n                )}>{octave}</ASUIMenuDropDown>)}\n        </>);\n    }\n\n    openMenuChangeKeyAlias(e) {\n        const values = this.getSong().values;\n        this.openMenu(e, <>\n            <ASUIMenuAction onAction={null} disabled>Edit Key Root</ASUIMenuAction>\n            <ASUIMenuBreak />\n            {values.getNoteOctaves((octave) =>\n                <ASUIMenuDropDown onAction={e => this.openMenu(e,\n                    values.getNoteFrequencies((noteName) =>\n                        <ASUIMenuAction onAction={e => this.changeAlias(noteName+octave)}    >{noteName+octave}</ASUIMenuAction>\n                    )\n                )}>{octave}</ASUIMenuDropDown>)}\n        </>);\n    }\n\n    openMenuChangeKeyRange(e) {\n        this.openMenu(e, );\n    }\n\n    openMenuChangeLoop(e) {\n        this.openMenu(e, );\n    }\n\n\n\n    renderMenu(menuKey=null) {\n        // const voice = this.getSampleData();\n        const values = this.getSong().values;\n        switch(menuKey) {\n            case 'voice-loop':\n            case 'voice-remove':\n            case null:\n                return ;\n\n            case 'voice-change':\n                return <>\n\n                </>;\n\n            case 'voice-mixer':\n                return <>\n\n                    <ASUIMenuBreak />\n                    <ASUIMenuAction onAction={null} disabled>Edit Mixer</ASUIMenuAction>\n                </>;\n\n            case 'voice-detune':\n                return <>\n\n                    <ASUIMenuBreak />\n                    <ASUIMenuAction onAction={null} disabled>Edit Detune</ASUIMenuAction>\n                </>;\n\n            case 'voice-root':\n                return <>\n                    <ASUIMenuAction onAction={null} disabled>Edit Key Root</ASUIMenuAction>\n                    <ASUIMenuBreak />\n                    {values.getNoteOctaves((octave) =>\n                    <ASUIMenuAction onAction={\n                        () => values.getNoteFrequencies((noteName) =>\n                            <ASUIMenuAction onAction={e => this.changeRoot(noteName+octave)}    >{noteName+octave}</ASUIMenuAction>\n                        )\n                    }>{octave}</ASUIMenuAction>)}\n                </>;\n\n            case 'voice-alias':\n                return <>\n                    <ASUIMenuAction onAction={null} disabled>Edit Key Alias</ASUIMenuAction>\n                    <ASUIMenuBreak />\n                    {values.getNoteOctaves((octave) =>\n                    <ASUIMenuAction onAction={\n                        () => values.getNoteFrequencies((noteName) =>\n                            <ASUIMenuAction onAction={e => this.changeAlias(noteName+octave)}    >{noteName+octave}</ASUIMenuAction>\n                        )\n                    }>{octave}</ASUIMenuAction>)}\n                </>;\n\n            case 'voice-range':\n                return <>\n                    <ASUIMenuAction onAction={null} disabled>Edit Key Range</ASUIMenuAction>\n                    <ASUIMenuBreak />\n                    <ASUIMenuAction onAction={e => this.renderMenu('voice-range-start')} >Set Range Start</ASUIMenuAction>\n                    <ASUIMenuAction onAction={e => this.renderMenu('voice-range-end')} >Set Range End</ASUIMenuAction>\n                </>;\n\n            case 'voice-range-start':\n                return (<>\n                    <ASUIMenuAction onAction={null} disabled>Range Start</ASUIMenuAction>\n                    <ASUIMenuBreak />\n                    {values.getNoteOctaves((octave) =>\n                        <ASUIMenuAction onAction={\n                            () => values.getNoteFrequencies((noteName) =>\n                                <ASUIMenuAction onAction={e => this.changeRange(noteName+octave)}    >{noteName+octave}</ASUIMenuAction>\n                            )\n                        }>{octave}</ASUIMenuAction>)}\n                </>);\n\n            case 'voice-range-end':\n                return (<>\n                    <ASUIMenuAction onAction={null} disabled>Range End</ASUIMenuAction>\n                    <ASUIMenuBreak />\n                    {values.getNoteOctaves((octave) =>\n                        <ASUIMenuAction onAction={\n                            () => values.getNoteFrequencies((noteName) =>\n                                <ASUIMenuAction onAction={e => this.changeRange(null, noteName+octave)}    >{noteName+octave}</ASUIMenuAction>\n                            )\n                        }>{octave}</ASUIMenuAction>)}\n                </>);\n\n\n\n            default:\n                throw new Error(\"Unknown menu key: \" + menuKey);\n        }\n\n    }\n\n\n    toggleOpen(e) {\n        this.setState({open: !this.state.open})\n    }\n\n    changeMixer(newMixerValue) {\n        if(!Number.isInteger(newMixerValue))\n            throw new Error(\"Invalid mixer value type: \" + typeof newMixerValue);\n        this.config.samples[this.getSampleID()].mixer = newMixerValue;\n    }\n\n    changeDetune(newDetuneValue) {\n        if(!Number.isInteger(newDetuneValue))\n            throw new Error(\"Invalid detune value type: \" + typeof newDetuneValue);\n        this.config.samples[this.getSampleID()].detune = newDetuneValue;\n    }\n\n    changeRoot(newRootValue) {\n        this.config.samples[this.getSampleID()].root = newRootValue;\n    }\n\n    changeAlias(newAliasValue) {\n        this.config.samples[this.getSampleID()].alias = newAliasValue;\n    }\n\n    changeLoop(newLoopValue=null) {\n        if(newLoopValue === null)\n            newLoopValue = !this.getSampleData().loop;\n        this.config.samples[this.getSampleID()].loop = newLoopValue?1:0;\n    }\n\n}\n\nexport default AudioBufferInstrumentRenderer;\n","import React from 'react';\n\n\nimport \"./assets/AudioBufferInstrumentRenderer.css\";\n\n/** PolyphonyInstrumentRenderer **/\nclass AudioBufferInstrumentRendererStyle extends React.Component {\n\n}\n\nexport default AudioBufferInstrumentRendererStyle;\n","export default class PeriodicWaveLoader {\n    constructor(audioContext) {\n        this.audioContext = audioContext;\n    }\n\n    isPeriodicWaveAvailable(url) {\n        return !!PeriodicWaveLoader.waveURLCache[url];\n    }\n    getCachedPeriodicWaveFromURL(url) {\n        return PeriodicWaveLoader.waveURLCache[url];\n    }\n\n    async loadPeriodicWaveFromURL(url) {\n        if(PeriodicWaveLoader.waveURLCache[url])\n            return PeriodicWaveLoader.waveURLCache[url];\n\n        // TODO Use file service\n        const response = await fetch(url);\n        const waveData = await response.json();\n        if (!waveData.real)\n            throw new Error(\"Invalid 'real' data for createPeriodicWave\");\n        if (!waveData.imag)\n            throw new Error(\"Invalid 'imag' data for createPeriodicWave\");\n\n        return PeriodicWaveLoader.waveURLCache[url] = this.audioContext.createPeriodicWave(\n            new Float32Array(waveData.real),\n            new Float32Array(waveData.imag)\n        );\n\n        // throw new Error(\"Periodic wave was not found\");\n    }\n\n\n    /** Static **/\n\n    static waveURLCache = {};\n}\n","import PeriodicWaveLoader from \"../loader/PeriodicWaveLoader\";\n\n\nclass OscillatorInstrument {\n    constructor(config={}) {\n        // console.log('OscillatorInstrument', config);\n        this.config = config;\n    }\n\n    /** Effect **/\n\n    useDestination(oldDestination) {\n        return null; // Null is no effect processing\n    }\n\n    /** Playback **/\n\n    playFrequency(destination, frequency, startTime, duration, velocity, onended=null) {\n        const audioContext = destination.context;\n        const waveLoader = new PeriodicWaveLoader(audioContext);\n\n\n        // TODO: Detect config changes on the fly. Leave caching to browser. Destination cache?\n\n        // console.log('playFrequency', destination, frequency, startTime, duration, velocity)\n\n\n        //         // Filter voice playback\n        //         if (voiceConfig.alias) {\n        //             if(voiceConfig.alias !== commandFrequency)\n        //                 // if(voiceConfig.name !== namedFrequency)\n        //                 continue;\n        //         } else {\n        //             frequencyValue = this.getCommandFrequency(commandFrequency);\n        //         }\n        //\n        //         if (voiceConfig.keyLow && this.getCommandFrequency(voiceConfig.keyLow) > frequencyValue)\n        //             continue;\n        //         if (voiceConfig.keyHigh && this.getCommandFrequency(voiceConfig.keyHigh) < frequencyValue)\n        //             continue;\n\n        // Velocity\n//         console.log('velocity', velocity);\n        if(velocity !== null) {\n            let velocityGain = destination.context.createGain();\n            velocityGain.gain.value = parseFloat(velocity || 127) / 127;\n            velocityGain.connect(destination);\n            destination = velocityGain;\n        }\n\n        const osc = destination.context.createOscillator();   // instantiate an oscillator\n        osc.frequency.value = frequency;    // set Frequency (hz)\n        if (typeof this.config.detune !== \"undefined\")\n            osc.detune.value = this.config.detune;\n\n        switch(this.config.type) {\n            default:\n                osc.type = this.config.type;\n                break;\n\n            // case null:\n            case 'custom':\n                if(!this.config.url)\n                    throw new Error(\"Custom osc requires a url\");\n                if(waveLoader.isPeriodicWaveAvailable(this.config.url)) {\n                    osc.setPeriodicWave(waveLoader.getCachedPeriodicWaveFromURL(this.config.url))\n                } else {\n                    waveLoader.loadPeriodicWaveFromURL(this.config.url)\n                        .then(periodicWave => osc.setPeriodicWave(periodicWave));\n                }\n                break;\n        }\n\n        osc.connect(destination);\n        osc.start(startTime);\n        osc.stop(startTime + duration);\n\n        OscillatorInstrument.playingOSCs.push(osc);\n        osc.onended = function() {\n            const i = OscillatorInstrument.playingOSCs.indexOf(osc);\n            if(i !== -1)\n                OscillatorInstrument.playingOSCs.splice(i, 1);\n            onended && onended();\n        };\n\n    }\n\n\n\n    /** Static **/\n\n    static playingOSCs = [];\n\n    static stopPlayback() {\n        // Stop all active sources\n        //     console.log(\"this.playingOSCs\", this.playingOSCs);\n        for (let i = 0; i < this.playingOSCs.length; i++) {\n            try {\n                this.playingOSCs[i].stop();\n            } catch (e) {\n                console.warn(e);\n            }\n        }\n        this.playingOSCs = [];\n    }\n\n\n    static waveURLCache = {};\n\n    static unloadAll() {\n        this.waveURLCache = {}\n        // Unload all cached samples from this program type\n    }\n}\n\nexport default OscillatorInstrument;\n","import React from 'react';\n\nimport \"./assets/OscillatorInstrumentRenderer.css\";\nimport OscillatorInstrumentRendererBase from \"./OscillatorInstrumentRendererBase\";\nimport {ASUIIcon, ASUIMenuDropDown} from \"../../../../components\";\n\nclass OscillatorInstrumentRenderer extends OscillatorInstrumentRendererBase {\n\n    render() {\n        let className = \"instrument-renderer-oscillator-node\";\n        if(this.state.open)\n            className += ' open';\n        let title = this.getTitle();\n\n\n        return <div className={className}>\n            <div\n                className=\"title\"\n                title={`Oscillator: ${title}`}\n                onClick={this.cb.onClick}\n            >\n                {title}\n            </div>\n            {this.renderParameters()}\n            <ASUIMenuDropDown\n                arrow={false}\n                className=\"config\"\n                options={() => this.renderMenuRoot()}\n            >\n                <ASUIIcon source=\"config\"/>\n            </ASUIMenuDropDown>\n        </div>;\n    }\n}\nexport default OscillatorInstrumentRenderer;\n","import React from 'react';\nimport {\n    ASUIMenuAction,\n    ASUIMenuBreak,\n    ASUIInputRange,\n    ASUIMenuDropDown,\n} from \"../../../../components\";\nimport Library from \"../../../../song/library/Library\";\nimport Values from \"../../../../common/values/Values\";\n\n\nclass OscillatorInstrumentRendererBase extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            open: false\n        };\n        this.cb = {\n            onClick: e => this.toggleOpen(),\n        };\n        this.library = Library.loadDefault();\n    }\n\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if(!this.props.config.type) {\n            console.warn(\"No default oscillator type was set. Setting to 'sawtooth'\");\n            this.props.config.type = 'sawtooth';\n        }\n    }\n\n    getTitle() {\n        return this.props.config.title\n            || this.props.config.type\n            || \"Unknown Osc\";\n    }\n\n\n    renderParameters() {\n        if(!this.state.open)\n            return [];\n        const config = this.props.config;\n        return (<>\n            <ASUIMenuDropDown title=\"Edit Mixer\"\n                              className=\"mixer\"\n                              options={() => this.renderMenuChangeMixer()}\n                              arrow={false}\n                              vertical>\n                {typeof config.mixer !== \"undefined\" ? config.mixer+'%' : '100%'}\n            </ASUIMenuDropDown>\n            <ASUIMenuDropDown title={`Detune by ${config.detune} cents`}\n                              className=\"detune\"\n                              options={() => this.renderMenuChangeDetune()}\n                              arrow={false}\n                              vertical>\n                {typeof config.detune !== \"undefined\" ? config.detune+'c' : '0c'}\n            </ASUIMenuDropDown>\n            {config.root ? <ASUIMenuDropDown title={`Key Root is ${config.root}`}\n                                             className=\"root\"\n                                             options={() => this.renderMenuChangeKeyRoot()}\n                                             arrow={false}\n                                             vertical>\n                {config.root ? config.root : \"-\"}\n            </ASUIMenuDropDown> : null}\n            {config.alias ? <ASUIMenuDropDown title={`Key Alias is ${config.alias}`}\n                                              className=\"alias\"\n                                              options={() => this.renderMenuChangeKeyAlias()}\n                                              arrow={false}\n                                              vertical>\n                {config.alias ? config.alias : \"-\"}\n            </ASUIMenuDropDown> : null}\n            {config.range ? <ASUIMenuDropDown title={`Key Range is ${config.range}`}\n                                              className=\"range\"\n                                              options={() => this.renderMenuChangeKeyRange()}\n                                              arrow={false}\n                                              vertical>\n                {config.range ? config.range : \"-\"}\n            </ASUIMenuDropDown> : null}\n            <ASUIMenuAction\n                    className=\"loop\"\n                    title=\"Toggle Loop\"\n                    onAction={e => this.changeLoop(!config.loop)}\n                    arrow={false}\n                    vertical>\n                    {config.loop?'∞':'1'}\n            </ASUIMenuAction>\n        </>);\n    }\n\n\n    /** Actions **/\n\n    toggleOpen() {\n        this.setState({open: !this.state.open});\n    }\n\n    changeMixer(newMixerValue) {\n        if(!Number.isInteger(newMixerValue))\n            throw new Error(\"Invalid mixer value type: \" + typeof newMixerValue);\n        this.props.config.mixer = newMixerValue;\n    }\n\n    changeDetune(newDetuneValue) {\n        if(!Number.isInteger(newDetuneValue))\n            throw new Error(\"Invalid detune value type: \" + typeof newDetuneValue);\n        this.props.config.detune = newDetuneValue;\n    }\n\n    changeRoot(newRootValue) {\n        this.props.config.root = newRootValue;\n    }\n\n    changeAlias(newAliasValue) {\n        this.props.config.alias = newAliasValue;\n    }\n\n\n    changeOscillator(newType) {\n        if(newType === 'custom') {\n        } else {\n            delete this.props.config.url;\n            delete this.props.config.real;\n            delete this.props.config.imag;\n            delete this.props.config.title;\n            this.props.config.type = newType;\n        }\n    }\n\n    changeLoop(newLoopValue=null) {\n        if(newLoopValue === null)\n            newLoopValue = !this.props.config.loop;\n        this.props.config.loop = newLoopValue?1:0;\n    }\n\n    loadPreset(preset) {\n        console.log(\"Loading preset: \", preset);\n        preset.type = 'custom';\n        Object.assign(this.props.config, preset);\n    }\n\n    /** Menus **/\n\n    renderMenuRoot() {\n        return (<>\n            <ASUIMenuAction onAction={()=>{}} disabled>Oscillator: {this.getTitle()}</ASUIMenuAction>\n            <ASUIMenuBreak />\n            <ASUIMenuDropDown options={() => this.renderMenuChangeOscillator()}>Change Oscillator</ASUIMenuDropDown>\n            <ASUIMenuBreak />\n            <ASUIMenuDropDown options={() => this.renderMenuChangeMixer()}>Edit Mixer</ASUIMenuDropDown>\n            <ASUIMenuDropDown options={() => this.renderMenuChangeDetune()}>Edit Detune</ASUIMenuDropDown>\n            <ASUIMenuDropDown options={() => this.renderMenuChangeKeyRoot()}>Edit Key Root</ASUIMenuDropDown>\n            <ASUIMenuDropDown options={() => this.renderMenuChangeKeyAlias()}>Edit Key Alias</ASUIMenuDropDown>\n            <ASUIMenuDropDown options={() => this.renderMenuChangeKeyRange()}>Edit Key Range</ASUIMenuDropDown>\n            <ASUIMenuDropDown options={() => this.renderMenuChangeLoop()}>Toggle Loop</ASUIMenuDropDown>\n            <ASUIMenuAction disabled={!this.props.onRemove} onAction={(e) => this.props.onRemove(this.props.instrumentID)}>Remove Oscillator</ASUIMenuAction>\n        </>);\n    }\n\n    renderMenuChangeOscillator() {\n        return (<>\n            <ASUIMenuDropDown options={() => this.renderMenuChangeOscillatorStandard()}>Standard</ASUIMenuDropDown>\n            {/*<MenuDropDown options={() => this.renderMenuChangeOscillator('custom')}>Custom</MenuDropDown>*/}\n            <ASUIMenuBreak/>\n            {this.library.renderMenuProgramAllPresets(([className, presetConfig]) => {\n                this.loadPreset(className, presetConfig);\n            })}\n        </>);\n    }\n\n    renderMenuChangeOscillatorStandard() {\n        return (<>\n            <ASUIMenuAction onAction={e => this.changeOscillator('sine')}>Sine</ASUIMenuAction>\n            <ASUIMenuAction onAction={e => this.changeOscillator('square')}>Square</ASUIMenuAction>\n            <ASUIMenuAction onAction={e => this.changeOscillator('sawtooth')}>Sawtooth</ASUIMenuAction>\n            <ASUIMenuAction onAction={e => this.changeOscillator('triangle')}>Triangle</ASUIMenuAction>\n        </>);\n    }\n\n\n\n    renderMenuChangeMixer() {\n        const config = this.props.config;\n        return <ASUIInputRange\n            min={0}\n            max={100}\n            value={typeof config.mixer !== \"undefined\" ? config.mixer : 100}\n            onChange={(mixerValue) => this.changeMixer(mixerValue)}\n        />;\n    }\n\n    renderMenuChangeDetune() {\n        const config = this.props.config;\n        return ( <ASUIInputRange\n            min={-1000}\n            max={1000}\n            value={typeof config.detune !== \"undefined\" ? config.detune : 100}\n            onChange={(detuneValue) => this.changeDetune(detuneValue)}\n        />);\n    }\n\n    renderMenuChangeKeyRoot() {\n        return Values.renderMenuSelectCommand(noteNameOctave => {\n            this.changeRoot(noteNameOctave)\n        });\n    }\n\n    renderMenuChangeKeyAlias() {\n        return Values.renderMenuSelectCommand(noteNameOctave => {\n            this.changeAlias(noteNameOctave)\n        });\n    }\n\n\n    renderMenuChangeKeyRange() {\n        return (<>TODO</>);\n    }\n\n    renderMenuChangeLoop() {\n        return (<>TODO</>);\n    }\n}\n\nexport default OscillatorInstrumentRendererBase;\n","import ProgramLoader from \"../../../common/program/ProgramLoader\";\n// import Values from \"../../song/Values\";\n\nclass PolyphonyInstrument {\n    constructor(config={}) {\n        this.config = config;\n    }\n\n    /** Loading **/\n\n    loadVoice(voiceID) {\n        if(!this.config.voices[voiceID])\n            throw new Error(\"Voice config is missing: \" + voiceID);\n        const [voiceClassName, voiceConfig] = this.config.voices[voiceID];\n        let {classProgram:voiceClass} = ProgramLoader.getProgramClassInfo(voiceClassName);\n        return new voiceClass(voiceConfig);\n    }\n\n\n    /** Playback **/\n\n    playFrequency(destination, frequency, startTime, duration, velocity=null, onended=null) {\n        for (let i = 0; i < this.config.voices.length; i++) {\n            const voice = this.loadVoice(i);\n            voice.playFrequency(destination, frequency, startTime, duration, velocity, onended);\n        }\n    }\n\n    stopPlayback() {\n        // Stop all active sources\n//             console.log(\"activeSources!\", this.activeSources);\n        for (let i = 0; i < this.config.voices.length; i++) {\n            try {\n                const voice = this.loadVoice(i);\n                voice.stopPlayback(); // TODO: hacky?\n            } catch (e) {\n                console.warn(e);\n            }\n        }\n\n    }\n\n    /** Static **/\n\n    unloadAll() {\n        // Unload all cached samples from this program type\n    }\n\n\n\n}\n\n\nexport default PolyphonyInstrument;\n\n","import React from 'react';\n\nimport {\n    ASUIMenuAction, ASUIMenuBreak,\n} from \"../../../../components\";\n\nimport ProgramLoader from \"../../../../common/program/ProgramLoader\";\nimport Library from \"../../../../song/library/Library\";\nimport PromptManager from \"../../../../common/prompt/PromptManager\";\n\n/** PolyphonyInstrumentRenderer **/\nclass PolyphonyInstrumentRendererBase extends React.Component {\n    constructor(props) {\n        super(props);\n        this.cb = {\n            onRemove: (voiceID) => this.removeVoice(voiceID),\n            onAction: (e) => this.addVoice()\n        }\n    }\n\n    /** Actions **/\n\n    // TODO: Use Context Consumer/Provider for status/error callbacks\n    setStatus(message) { console.info(this.constructor.name, 'setStatus', message); }\n    setError(message) { console.error(this.constructor.name, 'setStatus', message); }\n\n    wrapVoiceWithNewInstrument(voiceID) {\n\n    }\n\n    async addVoice(instrumentClassName, promptUser=true) {\n        if (!instrumentClassName)\n            throw new Error(`Invalid voice instrument class`);\n        const {title} = ProgramLoader.getProgramClassInfo(instrumentClassName);\n        const instrumentConfig = {};\n        // instrumentConfig = InstrumentLoader.createInstrumentConfig(instrumentClassName, instrumentConfig);\n        // instrumentConfig.libraryURL = this.defaultLibraryURL;\n        // instrumentConfig.name = instrumentConfig.name || instrumentURL.split('/').pop();\n\n//         e.target.form.elements['instrumentURL'].value = '';\n        if (promptUser === false || await PromptManager.openConfirmDialog(`Add voice class '${title}' to Instrument?`)) {\n            const newVoiceID = this.props.config.voices.length;\n            this.props.config.voices[newVoiceID] = [instrumentClassName, instrumentConfig];\n            this.setStatus(`Instrument '${instrumentClassName}' added as voice ${newVoiceID}`);\n\n        } else {\n            this.setError(`New voice canceled: ${instrumentClassName}`);\n        }\n\n    }\n\n    renameVoice(voiceID, newTitle) {\n\n    }\n\n    removeVoice(voiceID) {\n        const voices = this.props.config.voices;\n        if(typeof voices[voiceID] === \"undefined\")\n            throw new Error(\"Voice ID not found: \" + voiceID);\n        voices.splice(voiceID, 1);\n    }\n\n    /** Menu **/\n\n    renderMenuAddVoice() {\n        const library = Library.loadDefault();\n        return (<>\n            <ASUIMenuAction disabled action={()=>{}}>Add new voice instrument</ASUIMenuAction>\n            <ASUIMenuBreak/>\n            {library.songLengthAllPresets(([className, presetConfig]) => {\n                this.addVoice(className, presetConfig);\n            })}\n        </>)\n        // return Values.renderMenuSelectAvailableInstrument((instrumentClass) => {\n        //     this.addVoice(instrumentClass);\n        // }, \"Add new program as voice\")\n    }\n}\n\nexport default PolyphonyInstrumentRendererBase;\n","import React from 'react';\n\nimport \"./PolyphonyInstrumentRenderer.css\";\nimport PolyphonyInstrumentRendererBase from \"./PolyphonyInstrumentRendererBase\";\nimport {ASUIButtonDropDown} from \"../../../../components\";\nimport {ProgramLoader} from \"../../../../common/program\";\n\n/** PolyphonyInstrumentRenderer **/\nexport default class PolyphonyInstrumentRenderer extends PolyphonyInstrumentRendererBase {\n\n    render() {\n        const voices = this.props.config.voices;\n//         console.log('voices', voices);\n        // Presets are handled by composer\n        return (\n            <div className=\"polyphony-instrument-renderer\">\n                <div className=\"voices\">\n                    {voices.map((voiceData, voiceID) => {\n                        const [className, config] = voiceData;\n                        const {classRenderer: Renderer} = ProgramLoader.getProgramClassInfo(className);\n                        return <Renderer\n                            onRemove={this.cb.onRemove}\n                            key={voiceID}\n                            instrumentID={voiceID}\n                            config={config}\n                        />\n                    })}\n                </div>\n                <ASUIButtonDropDown\n                    title=\"Add new voice\"\n                    className=\"add-voice\"\n                    arrow={false}\n                    options={() => this.renderMenuAddVoice()}>\n                    +\n                </ASUIButtonDropDown>\n            </div>\n        );\n\n    }\n\n}\n","import FileService from \"../../../song/file/FileService\";\nimport GMESongFile from \"../../../song/file/GMESongFile\";\n\nlet libGMESupport = null;\nclass GMEPlayerSynthesizer {\n    constructor(config={}) {\n        this.config = config;\n        if(libGMESupport === null) {\n            libGMESupport = new GMESongFile();\n            libGMESupport.init();\n        }\n    }\n\n    connect(destination) {\n\n    }\n\n    async loadBuffer() {\n        if(!this.fileBuffer) {\n            const src = this.config.fileURL;\n            const service = new FileService();\n            this.fileBuffer = service.loadBufferFromURL(src);\n            console.info(\"SPC ASPlayer loaded\");\n        }\n        if(this.fileBuffer instanceof Promise)\n            this.spcBuffer = await this.spcBuffer;\n        return this.fileBuffer;\n    }\n\n    async loadGMEPlayer(destination) {\n        const buffer = await this.loadBuffer();\n        return libGMESupport.loadPlayerFromBuffer(destination.context, destination, buffer, 'file', {\n            destination\n        });\n    }\n\n    /** Initializing Audio **/\n\n    async init(audioContext) {\n        this.audioContext = audioContext;\n        if (this.config.fileURL)\n            await this.loadBuffer();\n        console.info(\"SPC ASPlayer initialized\");\n    }\n\n    /** Playback **/\n\n\n    // Instruments return promises\n    async play(destination, namedFrequency, startTime, duration, velocity) {\n        const spcPlayer = await this.loadGMEPlayer(destination);\n        this.spcPlayers.push(spcPlayer);\n\n        let currentTime = destination.context.currentTime;\n        startTime = startTime !== null ? startTime : currentTime;\n        if(startTime > currentTime) {\n            const waitTime = startTime - currentTime;\n            await new Promise((resolve, reject) => setTimeout(resolve, waitTime * 1000));\n        }\n        // const commandFrequency = this.getFrequencyFromAlias(namedFrequency) || namedFrequency;\n        // const max = spcPlayer.getMaxPlaybackPosition();\n        if(startTime < currentTime) {\n            const seekPos = (currentTime - startTime) * 1000;\n            spcPlayer.seekPlaybackPosition(seekPos);\n        }\n        spcPlayer.play(destination);\n\n        if(duration) {\n            const waitTime = (startTime + duration) - destination.context.currentTime;\n            await new Promise((resolve, reject) => setTimeout(resolve, waitTime * 1000));\n            spcPlayer.pause();\n        }\n    }\n\n    stopPlayback() {\n        for(let i=0; i<this.spcPlayers.length; i++) {\n            // this.spcPlayers[i].stop();\n            this.spcPlayers[i].pause();\n        }\n        // this.spcPlayer.stop();\n\n    }\n\n    getFrequencyFromAlias(aliasName) {\n        return null;\n    }\n\n    getCommandFrequency(command) {\n        const keyNumber = this.getCommandKeyNumber(command);\n        return 440 * Math.pow(2, (keyNumber - 49) / 12);\n    }\n\n    getCommandKeyNumber(command) {\n        if (Number(command) === command && command % 1 !== 0)\n            return command;\n        if (!command)\n            return null;\n\n        const noteCommands = this.noteFrequencies; // ['A', 'A#', 'B', 'C', 'C#', 'D', 'D#', 'E', 'F', 'F#', 'G', 'G#'];\n        let octave = command.length === 3 ? command.charAt(2) : command.charAt(1),\n            keyNumber = noteCommands.indexOf(command.slice(0, -1));\n        if (keyNumber < 3) keyNumber = keyNumber + 12 + ((octave - 1) * 12) + 1;\n        else keyNumber = keyNumber + ((octave - 1) * 12) + 1;\n        return keyNumber;\n    }\n\n\n    get noteFrequencies() {\n        return ['A', 'A#', 'B', 'C', 'C#', 'D', 'D#', 'E', 'F', 'F#', 'G', 'G#'];\n    }\n\n    // get instrumentID() {\n    //     return this.getAttribute('data-id');\n    // }\n\n    // render(renderObject=null) {\n    //     if(renderObject instanceof HTMLElement && renderObject.matches('asui-div')) {\n    //         this.form = new GMEPlayerFormRenderer(renderObject, this);\n    //     } else {\n    //         throw new Error(\"Unknown renderer\");\n    //     }\n    // }\n\n\n}\n\n\n\n\n\n/**\n * Used for all Instrument UI. Instance not necessary for song playback\n */\n// class GMEPlayerRenderer {\n//\n//     /**\n//      *\n//      * @param {AudioSourceComposerForm} instrumentForm\n//      * @param programs\n//      */\n//     constructor(instrumentForm, programs) {\n//         this.form = instrumentForm;\n//         this.programs = programs;\n//         const root = instrumentForm.getRootNode() || document;\n//         this.appendCSS(root);\n//         this.render();\n//     }\n//\n//     // get DEFAULT_SAMPLE_LIBRARY_URL() {\n//     //     return getScriptDirectory('default.library.json');\n//     // }\n//\n//\n//\n// //     appendCSS(rootElm) {\n// //\n// //         // Append Instrument CSS\n// //         const PATH = 'programs/chip/spc-player-synthesizer.css';\n// //         const linkHRef = getScriptDirectory(PATH);\n// // //             console.log(rootElm);\n// //         let linkElms = rootElm.querySelectorAll('link');\n// //         for(let i=0; i<linkElms.length; i++) {\n// //             if(linkElms[i].href.endsWith(PATH))\n// //                 return;\n// //         }\n// //         const linkElm = document.createElement('link');\n// //         linkElm.setAttribute('href', linkHRef);\n// //         linkElm.setAttribute('rel', 'stylesheet');\n// //         rootElm.insertBefore(linkElm, rootElm.firstChild);\n// //     }\n//\n//     /** Modify Instrument **/\n//\n//     remove() {\n//         this.programs.song.instrumentRemove(this.programs.id);\n//         // document.dispatchEvent(new CustomEvent('programs:remove', this));\n//     }\n//\n//     instrumentRename(newInstrumentName) {\n//         return this.programs.song.instrumentRename(this.programs.id, newInstrumentName);\n//     }\n//\n//     render() {\n//         // const programs = this.programs;\n//         const instrumentID = typeof this.programs.id !== \"undefined\" ? this.programs.id : -1;\n//         const instrumentIDHTML = (instrumentID < 10 ? \"0\" : \"\") + (instrumentID);\n//         this.form.innerHTML = '';\n//         this.form.classList.add('spc-player-synthesizer-container');\n//\n//         // this.form.removeEventListener('focus', this.focusHandler);\n//         // this.form.addEventListener('focus', this.focusHandler, true);\n//\n//         const instrumentToggleButton = this.form.addButtonInput('programs-id',\n//             e => this.form.classList.toggle('selected'),\n//             instrumentIDHTML + ':'\n//         );\n//         instrumentToggleButton.classList.add('show-on-focus');\n//\n//         const instrumentNameInput = this.form.addTextInput('programs-name',\n//             (e, newInstrumentName) => this.instrumentRename(newInstrumentName),\n//             'Instrument Name',\n//             this.programs.config.name || '',\n//             'Unnamed'\n//         );\n//         instrumentNameInput.classList.add('show-on-focus');\n//\n//\n//         this.form.addButtonInput('programs-remove',\n//             (e) => this.remove(e, instrumentID),\n//             this.form.createIcon('delete'),\n//             'Remove Instrument');\n//\n//         let defaultPresetURL = '';\n//         if (this.programs.config.libraryURL && this.programs.config.preset)\n//             defaultPresetURL = new URL(this.programs.config.libraryURL + '#' + this.programs.config.preset, document.location) + '';\n//\n//         this.fieldChangePreset = this.form.addSelectInput('programs-preset',\n//             (e, presetURL) => this.setPreset(presetURL),\n//             (addOption, setOptgroup) => {\n//                 addOption('', 'Change Preset');\n//                 // setOptgroup(this.sampleLibrary.name || 'Unnamed Library');\n//                 // this.sampleLibrary.getPresets().map(presetConfig => addOption(presetConfig.url, presetConfig.name));\n//                 // setOptgroup('Libraries');\n//                 // this.sampleLibrary.getLibraries().map(libraryConfig => addOption(libraryConfig.url, libraryConfig.name));\n//                 // setOptgroup('Other Libraries');\n//                 // const Library = customElements.get('audio-source-library');\n//                 // Library.eachHistoricLibrary(addOption);\n//             },\n//             'Change Instrument',\n//             defaultPresetURL);\n//\n//\n//         this.form.addBreak();\n//     }\n// }\n\nexport default GMEPlayerSynthesizer;\n\n\n","// import FileService from \"../../song/file/FileService\";\nimport React from \"react\";\n// import GMESongFile from \"../../song/file/GMESongFile\";\n\n\nclass GMEPlayerSynthesizerRenderer extends React.Component {\n    constructor(props={}) {\n        console.log(props);\n        super(props);\n        this.config = props.config || {};\n        this.state = {};\n    }\n\n}\n\n\n\n\n\n/**\n * Used for all Instrument UI. Instance not necessary for song playback\n */\n// class GMEPlayerRenderer {\n//\n//     /**\n//      *\n//      * @param {AudioSourceComposerForm} instrumentForm\n//      * @param programs\n//      */\n//     constructor(instrumentForm, programs) {\n//         this.form = instrumentForm;\n//         this.programs = programs;\n//         const root = instrumentForm.getRootNode() || document;\n//         this.appendCSS(root);\n//         this.render();\n//     }\n//\n//     // get DEFAULT_SAMPLE_LIBRARY_URL() {\n//     //     return getScriptDirectory('default.library.json');\n//     // }\n//\n//\n//\n// //     appendCSS(rootElm) {\n// //\n// //         // Append Instrument CSS\n// //         const PATH = 'programs/chip/spc-player-synthesizer.css';\n// //         const linkHRef = getScriptDirectory(PATH);\n// // //             console.log(rootElm);\n// //         let linkElms = rootElm.querySelectorAll('link');\n// //         for(let i=0; i<linkElms.length; i++) {\n// //             if(linkElms[i].href.endsWith(PATH))\n// //                 return;\n// //         }\n// //         const linkElm = document.createElement('link');\n// //         linkElm.setAttribute('href', linkHRef);\n// //         linkElm.setAttribute('rel', 'stylesheet');\n// //         rootElm.insertBefore(linkElm, rootElm.firstChild);\n// //     }\n//\n//     /** Modify Instrument **/\n//\n//     remove() {\n//         this.programs.song.instrumentRemove(this.programs.id);\n//         // document.dispatchEvent(new CustomEvent('programs:remove', this));\n//     }\n//\n//     instrumentRename(newInstrumentName) {\n//         return this.programs.song.instrumentRename(this.programs.id, newInstrumentName);\n//     }\n//\n//     render() {\n//         // const programs = this.programs;\n//         const instrumentID = typeof this.programs.id !== \"undefined\" ? this.programs.id : -1;\n//         const instrumentIDHTML = (instrumentID < 10 ? \"0\" : \"\") + (instrumentID);\n//         this.form.innerHTML = '';\n//         this.form.classList.add('spc-player-synthesizer-container');\n//\n//         // this.form.removeEventListener('focus', this.focusHandler);\n//         // this.form.addEventListener('focus', this.focusHandler, true);\n//\n//         const instrumentToggleButton = this.form.addButtonInput('programs-id',\n//             e => this.form.classList.toggle('selected'),\n//             instrumentIDHTML + ':'\n//         );\n//         instrumentToggleButton.classList.add('show-on-focus');\n//\n//         const instrumentNameInput = this.form.addTextInput('programs-name',\n//             (e, newInstrumentName) => this.instrumentRename(newInstrumentName),\n//             'Instrument Name',\n//             this.programs.config.name || '',\n//             'Unnamed'\n//         );\n//         instrumentNameInput.classList.add('show-on-focus');\n//\n//\n//         this.form.addButtonInput('programs-remove',\n//             (e) => this.remove(e, instrumentID),\n//             this.form.createIcon('delete'),\n//             'Remove Instrument');\n//\n//         let defaultPresetURL = '';\n//         if (this.programs.config.libraryURL && this.programs.config.preset)\n//             defaultPresetURL = new URL(this.programs.config.libraryURL + '#' + this.programs.config.preset, document.location) + '';\n//\n//         this.fieldChangePreset = this.form.addSelectInput('programs-preset',\n//             (e, presetURL) => this.setPreset(presetURL),\n//             (addOption, setOptgroup) => {\n//                 addOption('', 'Change Preset');\n//                 // setOptgroup(this.sampleLibrary.name || 'Unnamed Library');\n//                 // this.sampleLibrary.getPresets().map(presetConfig => addOption(presetConfig.url, presetConfig.name));\n//                 // setOptgroup('Libraries');\n//                 // this.sampleLibrary.getLibraries().map(libraryConfig => addOption(libraryConfig.url, libraryConfig.name));\n//                 // setOptgroup('Other Libraries');\n//                 // const Library = customElements.get('audio-source-library');\n//                 // Library.eachHistoricLibrary(addOption);\n//             },\n//             'Change Instrument',\n//             defaultPresetURL);\n//\n//\n//         this.form.addBreak();\n//     }\n// }\n\nexport default GMEPlayerSynthesizerRenderer;\n","\nclass TestInstrument {\n    constructor(config={}, audioContext=null) {\n        this.config = {};\n        this.audioContext = audioContext;\n    }\n\n\n    /** Playback **/\n\n    playFrequency(destination, frequency, startTime, duration=null, velocity=null, onended=null) {\n        console.info('playFrequency(', frequency, startTime, duration, velocity, ')')\n    }\n\n\n}\n\nexport default TestInstrument;\n\n\n","import AudioBufferInstrument from \"./instrument/voice/AudioBufferInstrument\";\nimport AudioBufferInstrumentRenderer from \"./instrument/voice/render/AudioBufferInstrumentRenderer\";\nimport OscillatorInstrument from \"./instrument/voice/OscillatorInstrument\";\nimport OscillatorInstrumentRenderer from \"./instrument/voice/render/OscillatorInstrumentRenderer\";\nimport PolyphonyInstrument from \"./instrument/poly/PolyphonyInstrument\";\nimport PolyphonyInstrumentRenderer from \"./instrument/poly/render/PolyphonyInstrumentRenderer\";\nimport GMEPlayerSynthesizer from \"./player/gme/GMEPlayerSynthesizer\";\nimport GMEPlayerSynthesizerRenderer from \"./player/gme/GMEPlayerSynthesizerRenderer\";\nimport ProgramLoader from \"../common/program/ProgramLoader\";\nimport TestInstrument from \"./instrument/test/TestInstrument\";\n\nexport default {\n    AudioBufferInstrument,\n    AudioBufferInstrumentRenderer,\n    OscillatorInstrument,\n    OscillatorInstrumentRenderer,\n    PolyphonyInstrument,\n    PolyphonyInstrumentRenderer,\n    GMEPlayerSynthesizer,\n    GMEPlayerSynthesizerRenderer,\n    TestInstrument,\n    addAllPrograms: function() {\n        ProgramLoader.addProgramClass('AudioBufferInstrument', AudioBufferInstrument, AudioBufferInstrumentRenderer, 'AudioBuffer Instrument');\n        ProgramLoader.addProgramClass('OscillatorInstrument', OscillatorInstrument, OscillatorInstrumentRenderer, 'OscillatorNode Instrument');\n        ProgramLoader.addProgramClass('PolyphonyInstrument', PolyphonyInstrument, PolyphonyInstrumentRenderer, 'Audio Source Synthesizer');\n        ProgramLoader.addProgramClass('GMEPlayerSynthesizer', GMEPlayerSynthesizer, GMEPlayerSynthesizerRenderer, 'Game Music ASPlayer Synthesizer');\n        ProgramLoader.addProgramClass('TestInstrument', TestInstrument, null, 'Test Instrument');\n    }\n}\n\n\n","import ProgramLoader from \"../common/program/ProgramLoader\";\nimport SongValues from \"./values/SongValues\";\n\nimport GMESongFile from \"./file/GMESongFile\";\nimport JSONSongFile from \"./file/JSONSongFile\";\nimport {ConfigListener} from \"./config/ConfigListener\";\nimport {Instruction, InstructionIterator, QuantizedInstructionIterator} from \"./instruction/\";\n\n\nimport ProgramList from \"../programs\";\nimport Values from \"../common/values/Values\";\nimport TrackIterator from \"./track/TrackIterator\";\nimport TrackPlayback from \"./track/TrackPlayback\";\n\n// TODO: can be handled cleaner\nProgramList.addAllPrograms();\n// const DEFAULT_PROGRAM_CLASS = 'PolyphonyProgram';\n\n\nclass Song {\n    constructor(songData={}) {\n\n        this.eventListeners = [];\n        this.programLoader = new ProgramLoader(this);\n\n        this.volume = null;\n        this.lastVolumeGain = null;\n        this.playback = null;\n\n        const data = {\n            title: Song.generateTitle(),\n            uuid: Values.generateUUID(),\n            version: '0.0.1',\n            created: new Date().getTime(),\n            timeDivision: 96 * 4,\n            beatsPerMinute: 120,\n            beatsPerMeasure: 4,\n            startTrack: 'root',\n            programs: [ // Also called 'programs' or 'patches'\n                ['PolyphonyInstrument', {\n                    voices: [\n                        ['OscillatorInstrument', {\n                            type: 'sawtooth'\n                        }],\n                        ['OscillatorInstrument', {\n                            type: 'sawtooth'\n                        }],\n                    ]}\n                ],\n                ['OscillatorInstrument',{type: 'square'}],\n            ],\n            tracks: {\n                root: [\n                    ['@track0', 288],\n                    ['@track1'],\n                    [1000, '@track1', 288],\n                    [1000, '@track1', 288],\n                ],\n                track0: [\n                    // ['!d', 'Effect'],\n                    ['!p', 0],\n                    [0, 'C4', 64],\n                    [64, 'D4', 64],\n                    [64, 'E4', 64],\n                    [64, 'F4', 64],\n                    [64, 'G4', 64],\n                    [64, 'A4', 64],\n                ],\n                track1: [\n                    ['!p', 1],\n                    [64, 'A3', 64],\n                    // [64, 'Aq3', 64],\n                    // [64, 'A#3', 64],\n                    [64, 'A#q3', 64],\n                    // [64, 'B3', 64],\n                    // [64, 'Bq3', 64],\n                    [64, 'C4', 64],\n                    // [64, 'Cq4', 64],\n                    // [64, 'C#4', 64],\n                    [64, 'C#q4', 64],\n                    // [64, 'D4', 64],\n                    // [64, 'Dq4', 64],\n                    [64, 'D#4', 64],\n                    // [64, 'D#q4', 64],\n                    // [64, 'E4', 64],\n                    [64, 'Eq4', 64],\n                    // [64, 'E#4', 64],\n                    // [64, 'E#q4', 64],\n                    [64, 'F#4', 64],\n                    // [64, 'F#q4', 64],\n                    // [64, 'G4', 64],\n                    [64, 'Gq4', 64],\n                    // [64, 'G#4', 64],\n                    // [64, 'G#q4', 64],\n                    [64, 'A4', 64],\n                    // [64, 'Aq4', 64],\n                    // [64, 'A#4', 64],\n                    [64, 'A#q4', 64],\n                    // [64, 'B4', 64],\n                    // [64, 'Bq4', 64],\n                    [64, 'C5', 64],\n                    // [64, 'Cq4', 64],\n                    // [64, 'C#4', 64],\n                    [64, 'C#q5', 64],\n                    // [64, 'D4', 64],\n                    // [64, 'Dq4', 64],\n                    [64, 'D#5', 64],\n                    // [64, 'D#q4', 64],\n                    // [64, 'E4', 64],\n                    [64, 'Eq5', 64],\n                    // [64, 'E#4', 64],\n                    // [64, 'E#q4', 64],\n                    [64, 'F#5', 64],\n                    // [64, 'F#q4', 64],\n                    // [64, 'G4', 64],\n                    [64, 'Gq5', 64],\n                    // [64, 'G#4', 64],\n                    // [64, 'G#q4', 64],\n                    [64, 'A5', 64],\n                ]\n            }\n        };\n\n        this.getProxiedData = function() { return data; };\n        this.data = new Proxy(data, new ConfigListener(this, []));\n        this.history = [];\n        this.values = new SongValues(this);\n\n        this.loadSongData(songData);\n        this.programLoadAll();\n\n        this.dispatchEventCallback = e => this.dispatchEvent(e);\n    }\n\n    /** @deprecated? **/\n    connect(destination) {\n        this.destination = destination;\n    }\n\n    /** Events and Listeners **/\n\n    dispatchEvent(e) {\n        for (let i = 0; i < this.eventListeners.length; i++) {\n            const [eventName, listenerCallback] = this.eventListeners[i];\n            if(e.name === eventName || eventName === '*') {\n                listenerCallback(e);\n            }\n        }\n    }\n\n    addEventListener(eventName, listenerCallback) {\n        this.eventListeners.push([eventName, listenerCallback]);\n    }\n\n    removeEventListener(eventName, listenerCallback) {\n        for (let i = 0; i < this.eventListeners.length; i++) {\n            const [eventName2, listenerCallback2] = this.eventListeners[i];\n            if(eventName === eventName2 && listenerCallback === listenerCallback2) {\n                this.eventListeners.splice(i, 1);\n                break;\n            }\n        }\n    }\n\n\n    unloadAll() {\n        this.programLoader.unloadAllPrograms();\n        this.eventListeners = [];\n    }\n\n\n    /** Song Data **/\n\n\n    loadSongData(songData) {\n        const data = this.getProxiedData();\n\n        if (this.playback)\n            this.stopPlayback();\n        Object.assign(data, songData);\n\n        // this.data = songData;\n        this.playbackPosition = 0;\n\n        // Process all instructions\n        if(!data.tracks)\n            throw new Error(\"No tracks found in song data\");\n        Instruction.processInstructionTracks(data.tracks);\n\n        // let loadingPrograms = 0;\n\n        // console.log(\"Song data loaded: \", songData);\n\n        this.dispatchEvent({\n            type: 'song:loaded',\n            song: this\n        });\n    }\n\n\n    loadSongHistory(songHistory) {\n        this.history = songHistory;\n    }\n\n\n    /** Instruction Tracks **/\n\n    getStartTrackName() {\n        return typeof this.data.startTrack === \"undefined\"\n            ? this.data.startTrack\n            : Object.keys(this.data.tracks)[0];\n    }\n\n    hasTrack(trackName) {\n        return typeof this.data.tracks[trackName] !== \"undefined\";\n    }\n\n\n    generateInstructionTrackName(trackName = 'track') {\n        const tracks = this.data.tracks;\n        for (let i = 0; i <= 999; i++) {\n            const currentTrackName = trackName + i;\n            if (!tracks.hasOwnProperty(currentTrackName))\n                return currentTrackName;\n        }\n        throw new Error(\"Failed to generate group name\");\n    }\n\n\n\n    /** Programs **/\n    // All programs are sent a 0 frequency play in order to pre-load samples.\n\n    hasProgram(programID) {\n        return !!this.data.programs[programID];\n    }\n\n    playProgram(destination, program, noteFrequency, noteStartTime, noteDuration=null, noteVelocity=null, onstart=null, onended=null) {\n        // if (!programID && programID !== 0)\n        //     throw new Error(\"Invalid program ID\");\n        // if (!programID && programID !== 0) {\n        //     console.warn(\"No programs set for instruction. Using programs 0\");\n        //     programID = 0;\n        //     // return;\n        // }\n        // let program = this.programLoader.loadInstanceFromID(programID);\n        // return await program.play(destination, noteFrequency, noteStartTime, noteDuration, noteVelocity);\n        if(onstart !== null) {\n            let currentTime = destination.context.currentTime;\n            setTimeout(onstart, (noteStartTime - currentTime) * 1000);\n        }\n        if(typeof noteFrequency === \"string\")\n            noteFrequency = Values.parseFrequencyString(noteFrequency);\n        return program.playFrequency(destination, noteFrequency, noteStartTime, noteDuration, noteVelocity, onended);\n    }\n\n    programGetData(programID)         { return this.programLoader.getData(programID); }\n    programGetClassName(programID)    { return this.programLoader.getClassName(programID); }\n    programGetClass(programID)        { return this.programLoader.getClass(programID); }\n    programGetConfig(programID)       { return this.programLoader.getConfig(programID); }\n\n\n    // programGetList() {\n    //     return this.data.programs;\n    // }\n    programEach(callback) {\n        return this.data.programs.map(function(entry, programID) {\n            const [className, config] = entry;\n            return callback(programID, className, config);\n        });\n    }\n\n\n    programLoadAll() {\n        const programList = this.data.programs;\n        for (let programID = 0; programID < programList.length; programID++) {\n            if (programList[programID]) {\n                this.programLoadInstanceFromID(programID);\n                // TODO wait for init?\n            }\n        }\n    }\n\n\n    programLoadInstanceFromID(programID) {\n        return this.programLoader.loadInstanceFromID(programID);\n        // this.dispatchEvent({\n        //     type: 'programs:instance',\n        //     program,\n        //     programID,\n        //     song: this\n        // });\n    }\n\n    programLoadRenderer(programID) {\n        return this.programLoader.programLoadRenderer(programID);\n    }\n\n\n    programAdd(config) {\n        if (typeof config !== 'object')\n            throw new Error(\"Invalid programs config object\");\n        if (!config.className)\n            throw new Error(\"Invalid Program Class\");\n\n        const programList = this.data.programs;\n        const programID = programList.length;\n\n        this.data.programs[programID] = config;\n        this.programLoadInstanceFromID(programID);\n        // this.dispatchEvent({\n        //     type: 'programs:added',\n        //     programID,\n        //     config,\n        //     song: this\n        // });\n        return programID;\n    }\n\n    programReplace(programID, programClassName, programConfig={}) {\n        // Preserve old programs name\n        // if (oldConfig && oldConfig.title && !programConfig.title)\n        //     programConfig.title = oldConfig.title;\n\n        const oldConfig = this.data.programs[programID];\n        this.data.programs[programID] = [programClassName, programConfig];\n        this.programLoadInstanceFromID(programID);\n\n        // this.dispatchEvent({\n        //     type: 'programs:modified',\n        //     programID,\n        //     oldConfig,\n        //     song: this\n        // });\n        return oldConfig;\n    }\n\n    programRename(programID, newTitle) {\n        const config = this.programGetConfig(programID);\n        config.title = newTitle;\n    }\n\n    programRemove(programID) {\n        const programList = this.data.programs;\n        if (!programList[programID])\n            return console.error(\"Invalid programs ID: \" + programID);\n        const isLastProgram = programID === programList.length - 1;\n\n        const oldConfig = programList[programID];\n        if(isLastProgram) {\n            delete programList[programID];\n        } else {\n            programList[programID] = null;\n        }\n        // this.programUnload(programID);\n\n        // this.dispatchEvent({\n        //     type: 'programs:removed',\n        //     programID,\n        //     song: this\n        // });\n        return oldConfig;\n    }\n\n\n\n\n    /** Instructions **/\n\n    instructionIndexOf(trackName, instruction) {\n        if (instruction instanceof Instruction)\n            instruction = instruction.data;\n\n        if(!this.data.tracks[trackName])\n            throw new Error(\"Invalid instruction track: \" + trackName);\n        let instructionList = this.data.tracks[trackName];\n\n        instruction = ConfigListener.resolveProxiedObject(instruction);\n        // instructionList = ConfigListener.resolveProxiedObject(instructionList);\n\n        const p = instructionList.indexOf(instruction);\n        if (p === -1)\n            throw new Error(\"Instruction not found in instruction list\");\n        return p;\n    }\n\n    instructionGetList(trackName) {\n        if(!this.data.tracks[trackName])\n            throw new Error(\"Invalid instruction track: \" + trackName);\n        return this.data.tracks[trackName];\n    }\n\n    instructionGetByIndex(trackName, index) {\n        if(!this.data.tracks[trackName])\n            throw new Error(\"Invalid instruction track: \" + trackName);\n        let instructionList = this.instructionGetList(trackName);\n        if(index < 0 || index > instructionList.length)\n            throw new Error(\"Index is out or range: \" + index);\n        if(!instructionList[index])\n            throw new Error(\"Invalid instruction index: \" + index);\n        return Instruction.getInstruction(instructionList[index]);\n    }\n\n\n    instructionGetIterator(trackName, timeDivision=null, beatsPerMinute=null) {\n        if(!this.data.tracks[trackName])\n            throw new Error(\"Invalid instruction track: \" + trackName);\n        const instructionList = this.data.tracks[trackName];\n\n        return new InstructionIterator(\n            instructionList,\n            timeDivision || this.data.timeDivision,\n            beatsPerMinute || this.data.beatsPerMinute,\n        );\n    }\n\n    instructionGetQuantizedIterator(trackName, quantizationTicks, timeDivision=null, beatsPerMinute=null) {\n        if(!this.data.tracks[trackName])\n            throw new Error(\"Invalid instruction track: \" + trackName);\n        const instructionList = this.data.tracks[trackName];\n\n        return new QuantizedInstructionIterator(\n            instructionList,\n            quantizationTicks,\n            timeDivision || this.data.timeDivision,\n            beatsPerMinute || this.data.beatsPerMinute,\n        );\n    }\n\n\n    /** Modify Instructions **/\n\n    /** TODO: fix insertion bugs **/\n    instructionInsertAtPosition(trackName, insertPositionInTicks, insertInstructionData) {\n        if (typeof insertPositionInTicks === 'string')\n            insertPositionInTicks = Values.parseDurationAsTicks(insertPositionInTicks, this.data.timeDivision);\n\n        if (!Number.isInteger(insertPositionInTicks))\n            throw new Error(\"Invalid integer: \" + typeof insertPositionInTicks);\n        if (!insertInstructionData)\n            throw new Error(\"Invalid insert instruction\");\n        const insertInstruction = Instruction.parseInstruction(insertInstructionData);\n        let instructionList = this.data.tracks[trackName];\n\n\n        const iterator = this.instructionGetIterator(trackName);\n\n        let instruction = iterator.nextInstruction();\n        while (instruction) {\n            // if(instruction.deltaDuration > 0) {\n            const currentPositionInTicks = iterator.positionTicks;\n            if (currentPositionInTicks > insertPositionInTicks) {\n                // Delta note appears after note to be inserted\n                const splitDuration = [\n                    insertPositionInTicks - (currentPositionInTicks - instruction.deltaDurationTicks),\n                    currentPositionInTicks - insertPositionInTicks\n                ];\n\n                const modifyIndex = iterator.currentIndex;\n                // Make following delta note smaller\n                this.instructionReplaceDeltaDuration(trackName, modifyIndex, splitDuration[1]);\n\n                // Insert new note before delta note.\n                insertInstruction.deltaDurationTicks = splitDuration[0];                     // Make new note equal the rest of the duration\n                this.instructionInsertAtIndex(trackName, modifyIndex, insertInstruction);\n\n                return modifyIndex; // this.splitPauseInstruction(trackName, i,insertPosition - groupPosition , insertInstruction);\n\n            } else if (currentPositionInTicks === insertPositionInTicks) {\n                // Delta note plays at the same time as new note, append after\n\n                let lastInsertIndex;\n                // Search for last insert position\n                for (lastInsertIndex = iterator.currentIndex + 1; lastInsertIndex < instructionList.length; lastInsertIndex++)\n                    if (new Instruction(instructionList[lastInsertIndex]).deltaDurationTicks > 0)\n                        break;\n\n                insertInstruction.deltaDurationTicks = 0; // TODO: is this correct?\n                this.instructionInsertAtIndex(trackName, lastInsertIndex, insertInstruction);\n                return lastInsertIndex;\n            }\n            // groupPosition += instruction.deltaDuration;\n            // lastDeltaInstructionIndex = i;\n            // }\n            // if (!instruction)\n            //     break;\n            instruction = iterator.nextInstruction();\n        }\n\n        if (iterator.positionTicks >= insertPositionInTicks)\n            throw new Error(\"Something went wrong\");\n        // Insert a new pause at the end of the song, lasting until the new note?\n        let lastPauseIndex = instructionList.length;\n        // this.instructionInsertAtIndex(trackName, lastPauseIndex, {\n        //     command: '!pause',\n        //     duration: insertPosition - groupPosition\n        // });\n        // Insert new note\n        insertInstruction.deltaDurationTicks = insertPositionInTicks - iterator.positionTicks;\n        this.instructionInsertAtIndex(trackName, lastPauseIndex, insertInstruction);\n        return lastPauseIndex;\n    }\n\n\n    instructionInsertAtIndex(trackName, insertIndex, insertInstructionData) {\n        if (!insertInstructionData)\n            throw new Error(\"Invalid insert instruction\");\n        let insertInstruction = Instruction.parseInstruction(insertInstructionData);\n        insertInstructionData = insertInstruction.data;\n        this.instructionGetList(trackName).splice(insertIndex, 0, insertInstructionData);\n        return insertIndex;\n    }\n\n\n    instructionDeleteAtIndex(trackName, deleteIndex) {\n        const deleteInstruction = this.instructionGetByIndex(trackName, deleteIndex);\n        if (deleteInstruction.deltaDurationTicks > 0) {\n            const nextInstruction = this.instructionGetByIndex(trackName, deleteIndex + 1, false);\n            if (nextInstruction) {\n                // this.getInstruction(trackName, deleteIndex+1).deltaDuration =\n                //     nextInstruction.deltaDuration + deleteInstruction.deltaDuration;\n                this.instructionReplaceDeltaDuration(trackName, deleteIndex + 1, nextInstruction.deltaDurationTicks + deleteInstruction.deltaDurationTicks)\n            }\n        }\n        this.instructionGetList(trackName).splice(deleteIndex, 1);\n        // return this.spliceDataByPath(['instructions', trackName, deleteIndex], 1);\n    }\n\n    instructionReplaceDeltaDuration(trackName, replaceIndex, newDelta) {\n        this.instructionGetByIndex(trackName, replaceIndex).deltaDurationTicks = newDelta;\n        // return this.instructionReplaceParam(trackName, replaceIndex, 0, newDelta);\n    }\n\n    instructionReplaceCommand(trackName, replaceIndex, newCommand) {\n        //: TODO: check for recursive group\n        this.instructionGetByIndex(trackName, replaceIndex).command = newCommand;\n    }\n\n    instructionReplaceProgram(trackName, replaceIndex, programID) {\n        this.instructionGetByIndex(trackName, replaceIndex).program = programID;\n    }\n\n    instructionReplaceDuration(trackName, replaceIndex, newDuration) {\n        if (typeof newDuration === 'string')\n            newDuration = Values.parseDurationAsTicks(newDuration, this.data.timeDivision);\n        this.instructionGetByIndex(trackName, replaceIndex).durationTicks = newDuration;\n    }\n\n    instructionReplaceVelocity(trackName, replaceIndex, newVelocity) {\n        if (!Number.isInteger(newVelocity))\n            throw new Error(\"Velocity must be an integer: \" + newVelocity);\n        if (newVelocity < 0)\n            throw new Error(\"Velocity must be a positive integer: \" + newVelocity);\n        this.instructionGetByIndex(trackName, replaceIndex).velocity = newVelocity;\n    }\n\n\n    /** Song Tracks **/\n\n    trackAdd(newTrackName, instructionList) {\n        if (this.data.tracks.hasOwnProperty(newTrackName))\n            throw new Error(\"New group already exists: \" + newTrackName);\n        this.data.tracks[newTrackName] = instructionList || [];\n    }\n\n\n    trackRemove(removeTrackName) {\n        if (removeTrackName === 'root')\n            throw new Error(\"Cannot remove root instruction track, n00b\");\n        if (!this.data.tracks.hasOwnProperty(removeTrackName))\n            throw new Error(\"Existing group not found: \" + removeTrackName);\n\n        delete this.data.tracks[removeTrackName];\n    }\n\n\n    trackRename(oldTrackName, newTrackName) {\n        if (oldTrackName === 'root')\n            throw new Error(\"Cannot rename root instruction track, n00b\");\n        if (!this.data.tracks.hasOwnProperty(oldTrackName))\n            throw new Error(\"Existing group not found: \" + oldTrackName);\n        if (this.data.tracks.hasOwnProperty(newTrackName))\n            throw new Error(\"New group already exists: \" + newTrackName);\n\n        const removedGroupData = this.data.tracks[oldTrackName];\n        delete this.data.tracks[oldTrackName];\n        this.data.tracks[newTrackName] = removedGroupData;\n    }\n\n\n    // trackGetIterator(destination, onEvent=null) {\n    //     return new TrackIterator(destination, this, this.getStartTrackName(), onEvent);\n    // }\n\n    /** Playback Timing **/\n\n    getSongLengthInSeconds() {\n        const iterator = new TrackIterator(this.data.tracks, this.getStartTrackName(), this.data.beatsPerMinute, this.data.timeDivision);\n        iterator.seekToEnd();\n        // console.log('getSongLengthInSeconds()', iterator.getEndPositionInSeconds())\n        return iterator.getEndPositionInSeconds();\n    }\n\n    // getSongLengthTicks() {\n    //     return this.instructionGetIterator(this.getStartTrackName())\n    //         .seekToEnd()\n    //         .endPositionTicks;\n    // }\n\n    // getSongLength() {\n    //     return this.getGroupLength(this.getStartTrackName());\n    // }\n    //\n    // getGroupLength(trackName) {\n    //     const instructionIterator = this.getInstructionIterator(trackName);\n    //     while (instructionIterator.nextInstruction()) {}\n    //     return instructionIterator;\n    //     // return {\n    //     //     inSeconds: instructionIterator.endPositionSeconds,\n    //     //     inTicks: instructionIterator.endPositionTicks\n    //     // }\n    // }\n\n\n    getSongPositionFromTicks(songPositionInTicks) {\n        return this.getGroupPositionFromTicks(this.getStartTrackName(), songPositionInTicks);\n    }\n\n    // Refactor\n    getGroupPositionFromTicks(trackName, groupPositionInTicks) {\n        const iterator = this.instructionGetIterator(trackName);\n        while (true) {\n            if (iterator.positionTicks >= groupPositionInTicks || !iterator.nextInstruction())\n                break;\n        }\n\n\n        let currentPosition = iterator.positionSeconds;\n\n        if (groupPositionInTicks > iterator.positionTicks) {\n            const elapsedTicks = groupPositionInTicks - iterator.positionTicks;\n            currentPosition += Song.ticksToSeconds(elapsedTicks, iterator.beatsPerMinute, iterator.timeDivision);\n\n        } else if (groupPositionInTicks < iterator.positionTicks) {\n            const elapsedTicks = iterator.positionTicks - groupPositionInTicks;\n            currentPosition -= Song.ticksToSeconds(elapsedTicks, iterator.beatsPerMinute, iterator.timeDivision);\n        }\n\n        // console.info(\"getGroupPositionFromTicks\", groupPositionInTicks, currentPosition);\n        return currentPosition;\n    }\n\n\n    getSongPositionInTicks(positionInSeconds = null) {\n        if (positionInSeconds === null)\n            positionInSeconds = this.getSongPlaybackPosition();\n        return this.getGroupPositionInTicks(this.getStartTrackName(), positionInSeconds);\n    }\n\n\n    getGroupPositionInTicks(trackName, positionInSeconds) {\n        const iterator = this.instructionGetIterator(trackName);\n        while (true) {\n            if (iterator.positionSeconds >= positionInSeconds || !iterator.nextInstruction())\n                break;\n        }\n\n        let currentPositionInTicks = iterator.positionTicks;\n        if (positionInSeconds > iterator.positionSeconds) {\n            const elapsedTime = positionInSeconds - iterator.positionSeconds;\n            currentPositionInTicks += Song.secondsToTicks(elapsedTime, iterator.beatsPerMinute);\n\n        } else if (positionInSeconds < iterator.positionSeconds) {\n            const elapsedTime = iterator.positionSeconds - positionInSeconds;\n            currentPositionInTicks -= Song.secondsToTicks(elapsedTime, iterator.beatsPerMinute);\n        }\n\n        // console.info(\"getSongPositionInTicks\", positionInSeconds, currentPositionInTicks);\n        return currentPositionInTicks;\n    }\n\n    static ticksToSeconds(elapsedTicks, beatsPerMinute, timeDivision) {\n        return (elapsedTicks / timeDivision) * (60 / beatsPerMinute);\n    }\n\n    static secondsToTicks(elapsedTime, beatsPerMinute, timeDivision) {\n        return Math.round((elapsedTime * timeDivision) / (60 / beatsPerMinute));\n    }\n\n\n    /** Playback **/\n\n    setVolume(newVolume) {\n        this.volume = newVolume;\n        if(this.lastVolumeGain)\n            this.lastVolumeGain.gain.value = newVolume;\n    }\n\n\n    getSongPlaybackPosition() {\n        if (this.playback)\n            return this.playback.audioContext.currentTime - this.playback.startTime;\n        return this.playbackPosition;\n    }\n\n\n    setPlaybackPositionInTicks(songPositionInTicks) {\n        if (!Number.isInteger(songPositionInTicks))\n            throw new Error(\"Invalid start position in ticks\");\n        // TODO: is start position beyond song's ending?\n\n        const playbackPosition = this.getSongPositionFromTicks(songPositionInTicks);\n        return this.setPlaybackPosition(playbackPosition);\n    }\n\n    setPlaybackPosition(songPosition) {// TODO: duplicate values? Does the song need to store position?\n        songPosition = parseFloat(songPosition);\n        if (Number.isNaN(songPosition))\n            throw new Error(\"Invalid start position\");\n\n        // this.playback.setPlaybackPosition(this.getAudioContext().currentTime - this.playbackPosition);\n        // let isPlaying = !!this.playback;\n        if (this.playback) {\n            this.stopPlayback();\n        }\n        this.playbackPosition = songPosition;\n\n        this.dispatchEvent({\n            type: 'song:seek',\n            position: this.playbackPosition,\n            // positionInTicks: this.getSongPositionInTicks(this.playbackPosition), // TODO: use iterator\n            song: this\n        });\n\n        console.log('setPlaybackPosition', songPosition);\n\n        // if (isPlaying) {\n        //     const oldDestination = this.playback.destination;\n        //     this.playback = new InstructionPlayback(oldDestination, this, this.getStartTrackName(), oldDestination.context.currentTime - this.playbackPosition);\n        //     // this.playback.awaitPlaybackReachedEnd()\n        //     //     .then((reachedEnding) => reachedEnding ? this.stopPlayback(true) : null);\n        // }\n        // const positionInTicks = this.getSongPositionInTicks(this.playbackPosition);\n//         console.log(\"Seek position: \", this.playbackPosition, positionInTicks);\n\n    }\n\n\n    play(destination, startPosition=null, onended=null) {\n        // destination = this.getVolumeGain(destination);\n        // const audioContext = destination.context;\n        if (this.playback) {\n            this.stopPlayback();\n            this.setPlaybackPosition(0);\n            // throw new Error(\"Song is already playing\");\n        }\n\n        // await this.init(audioContext);\n        if(startPosition === null)\n            startPosition = this.playbackPosition;\n        console.log(\"Start playback:\", startPosition);\n        const playback = new TrackPlayback(this, this.getStartTrackName(), this.dispatchEventCallback);\n        this.playback = playback;\n        playback.play(destination, startPosition)\n\n        this.dispatchEvent({\n            type: 'song:play',\n            playback: this.playback,\n            // positionInTicks: this.getSongPositionInTicks(this.playbackPosition), // TODO: use iterator\n            song: this\n        });\n\n        playback.awaitPlaybackReachedEnd()\n            .then(() => {\n                if(onended)\n                    onended();\n                this.dispatchEvent({\n                    type: 'song:end',\n                    playback: this.playback,\n                    // positionInTicks: this.getSongPositionInTicks(this.playbackPosition), // TODO: use iterator\n                    song: this\n                });\n                // if(this.playback)\n                //     this.stopPlayback();\n            });\n\n\n        return playback;\n        // const reachedEnding = await this.playback.awaitPlaybackReachedEnd();\n        // if(reachedEnding)\n        //     this.stopPlayback(true);\n    }\n\n\n    stopProgramPlayback(programID) {\n        this.programLoader.stopProgramPlayback(programID);\n        // let programClass = this.programLoader.programGetClass(programID);\n        // if(typeof programClass.stopPlayback !== \"function\")\n        //     return console.error(programClass.name + \".stopPlayback is not a function\");\n        // programClass.stopPlayback();\n    }\n\n    stopPlayback() {\n        if (!this.playback)\n            return console.warn(\"Playback is already stopped\");\n        const playback = this.playback;\n        this.playback = null;\n        this.playbackPosition = playback.getPositionInSeconds();\n        playback.stopPlayback();\n        this.programLoader.stopAllPlayback(); // TODO: redundant?\n\n        // TODO: move to playback class\n        // for (let i = 0; i < this.playbackEndCallbacks.length; i++)\n        //     this.playbackEndCallbacks[i]();\n        // this.playbackEndCallbacks = [];\n        // for (let i = 0; i < this.waitCancels.length; i++)\n        //     this.waitCancels[i]();\n        // this.waitCancels = [];\n\n\n        console.log(\"End playback:\", this.playbackPosition);\n\n\n        this.dispatchEvent({\n            type: 'song:end',\n            playback: this.playback,\n            // positionInTicks: this.getSongPositionInTicks(this.playbackPosition), // TODO: use iterator\n            song: this\n        });\n    }\n\n    pause() {\n        if (this.isPaused)\n            throw new Error(\"Song is already paused\");\n        this.isPaused = true;\n    }\n\n    resume() {\n        if (!this.isPaused)\n            throw new Error(\"Song is not paused\");\n        this.isPaused = false;\n    }\n\n    isPlaying() {\n        return !!this.playback;\n    }\n\n\n    playSelectedInstructions(destination, trackName, selectedIndices) {\n        // destination = this.getVolumeGain(destination);\n\n        // TrackIterator find playback position of first index start point\n        if(this.playback)\n            this.stopPlayback();\n        const playback = new TrackPlayback(this, trackName, this.dispatchEventCallback);\n        this.playback = playback;\n        playback.addInstructionFilter(function(instruction, trackStats) {\n            if(trackStats.trackName !== trackName)\n                return null;\n            const index = trackStats.iterator.currentIndex;\n            for(let i=0; i<selectedIndices.length; i++)\n                if(selectedIndices[i] === index) {\n                    // console.log(\"Playing instruction \", index, instruction);\n                    return instruction;\n                }\n            // console.log(\"Skipping instruction \", index, instruction);\n        })\n        // TrackPlayback with selective callback\n        if(selectedIndices.length > 0)\n            playback.playAtStartingTrackIndex(destination, selectedIndices[0])\n        // playback.play(destination);\n\n\n        // for(let i=0; i<selectedIndices.length; i++) {\n        //     const selectedIndex = selectedIndices[i];\n        //     const instruction = song.instructionGetByIndex(trackName, selectedIndex);\n        //     song.playInstruction(destination, instruction, trackState.programID);\n        // }\n\n    }\n\n    // playInstructionAtIndex(destination, trackName, instructionIndex, noteStartTime = null) {\n    //     const instruction = this.instructionGetByIndex(trackName, instructionIndex, false);\n    //     if (instruction)\n    //         this.playInstruction(instruction, noteStartTime);\n    //     else\n    //         console.warn(\"No instruction at index\");\n    // }\n\n    playInstruction(destination, instruction, program, noteStartTime = null, onstart=null, onended=null) {\n        // destination = this.getVolumeGain(destination);\n\n        const audioContext = destination.context;\n        if (!instruction instanceof Instruction)\n            throw new Error(\"Invalid instruction\");\n\n        // if(this.playback)\n        //     this.stopPlayback();\n\n        // if (instruction instanceof ASCTrackInstruction) { // Handled in  TrackPlayback\n        //     return new TrackPlayback(destination, this, instruction.getTrackName(), noteStartTime);\n        // }\n\n\n        // const noteDuration = (instruction.duration || 1) * (60 / beatsPerMinute);\n\n        let noteDuration = null;\n        if(typeof instruction.durationTicks !== \"undefined\") {\n            let beatsPerMinute = this.data.beatsPerMinute; // getStartingBeatsPerMinute();\n            let timeDivision = this.data.timeDivision;\n            const noteDurationTicks = instruction.durationTicks; // (timeDivision);\n            noteDuration = (noteDurationTicks / timeDivision) / (beatsPerMinute / 60);\n        }\n\n        let currentTime = audioContext.currentTime;\n\n        if (!noteStartTime && noteStartTime !== 0)\n            noteStartTime = currentTime;\n\n\n        this.playProgram(destination, program, instruction.command, noteStartTime, noteDuration, instruction.velocity, onstart, onended);\n        // Wait for note to start\n        // if (noteStartTime > currentTime) {\n        //     await this.wait(noteStartTime - currentTime);\n        //     // await new Promise((resolve, reject) => setTimeout(resolve, (noteStartTime - currentTime) * 1000));\n        // }\n\n        // Dispatch note start event\n        // this.dispatchEvent({\n        //     type: 'note:start',\n        //     trackName,\n        //     instruction,\n        //     song: this\n        // });\n\n        // currentTime = audioContext.currentTime;\n        // if (noteStartTime + noteDuration > currentTime) {\n        //     await this.wait(noteStartTime + noteDuration - currentTime);\n        //     // await new Promise((resolve, reject) => setTimeout(resolve, (noteStartTime + noteDuration - currentTime) * 1000));\n        // }\n        // // TODO: check for song stop\n        // // Dispatch note end event\n        // this.dispatchEvent({\n        //     type: 'note:end',\n        //     trackName,\n        //     instruction,\n        //     song: this\n        // });\n    }\n\n\n\n    /** Song Modification History **/\n\n\n\n    queueHistoryAction(action, pathList, data = null, oldData = null) {\n        if(Array.isArray(pathList))\n            pathList = pathList.join('.');\n        const historyAction = [\n            action, pathList,\n        ];\n        if (data !== null || oldData !== null)\n            historyAction.push(data);\n        if (oldData !== null)\n            historyAction.push(oldData);\n        // this.history.push(historyAction);\n\n        // setTimeout(() => {\n\n        this.dispatchEvent({\n            type: 'song:modified',\n            historyAction,\n            song: this\n        });\n\n        return historyAction;\n    }\n\n\n\n    /** History **/\n\n    applyHistoryActions(songHistory) {\n        for (let i = 0; i < songHistory.length; i++) {\n            const historyAction = songHistory[i];\n            this.applyHistoryAction(historyAction);\n        }\n    }\n\n    applyHistoryAction(...args) {\n        const historyAction = args.shift();\n        const path = args.shift().split('.');\n        const lastPath = path.pop();\n        const songData = this.getProxiedData();\n\n        let target = songData;\n\n        for(let i=0; i<path.length; i++) {\n            target = target[path[i]];\n        }\n        switch (historyAction) {\n            // case 'reset':\n            //     Object.assign(this.data, historyAction.data);\n            //     break;\n            case 'set':\n                const newValue = args.shift();\n                target[lastPath] = newValue;\n                break;\n            case 'delete':\n                delete target[lastPath];\n                break;\n            case 'replace':\n                const replaceValue = args.shift();\n                const oldValue = args.shift();\n                if(oldValue !== target[lastPath]) {\n                    console.warn(`Replace value mismatch: ${oldValue} !== ${songData[lastPath]}`)\n                }\n                target[lastPath] = replaceValue;\n                break;\n            default:\n                throw new Error(\"Unknown history action: \" + historyAction);\n        }\n    }\n\n\n    /** Static Fle Support Module **/\n\n    static getFileSupportModule(filePath) {\n        // const AudioSourceLoader = customElements.get('audio-source-loader');\n        // const requireAsync = AudioSourceLoader.getRequireAsync(thisModule);\n        const fileExt = filePath.split('.').pop().toLowerCase();\n        let library;\n        switch (fileExt) {\n            // case 'mid':\n            // case 'midi':\n            //     const {MIDISupport} = require('../file/MIDIFile.js');\n            //     return new MIDISupport;\n            //\n            case 'json':\n                library = new JSONSongFile();\n                // await library.init();\n                return library;\n            //\n            case 'nsf':\n            case 'nsfe':\n            case 'spc':\n            case 'gym':\n            case 'vgm':\n            case 'vgz':\n            case 'ay':\n            case 'sgc':\n            case 'kss':\n                library = new GMESongFile();\n                library.init();\n                return library;\n            //\n            // case 'mp3':\n            //     const {MP3Support} = require('../file/MP3File.js');\n            //     return new MP3Support;\n\n            default:\n                throw new Error(\"Unknown file module for file type: \" + fileExt);\n        }\n    };\n\n\n\n\n    /** Generate Song Data **/\n\n    static generateTitle() {\n        return `Untitled (${new Date().toJSON().slice(0, 10).replace(/-/g, '/')})`;\n    }\n\n}\n\nSong.DEFAULT_VOLUME = 0.7;\n\n\n// Song.loadSongFromMIDIFile = async function (file, defaultProgramURL = null) {\n//     defaultProgramURL = defaultProgramURL || this.getDefaultProgramURL();\n//     const midiSupport = new MIDIImport();\n//     const songData = await midiSupport.loadSongFromMidiFile(file, defaultProgramURL);\n//     const song = new Song();\n//     await song.loadSongData(songData);\n//     return song;\n// };\n\n\n\n\nexport default Song;\n","import React from \"react\";\n\nconst unimplemented = function() { throw new Error(\"MenuContext Object is unimplemented\")};\nconst ASUIMenuContext = React.createContext({\n    openMenu: (options) =>                      unimplemented,\n    closeMenus: (butThese=[]) =>           unimplemented,\n    closeAllMenus: () =>                        unimplemented,\n    isHoverEnabled: () =>                       unimplemented,\n    removeDropDownMenu: (openMenuItem) =>       unimplemented,\n    addDropDownMenu: (openMenuItem) =>          unimplemented,\n});\n\nexport default ASUIMenuContext;\n","import {ASUIMenuAction, ASUIMenuBreak, ASUIMenuDropDown} from \"../../components/menu\";\nimport React from \"react\";\nimport ProgramLoader from \"../../common/program/ProgramLoader\";\n\nclass Library {\n\n    getTitle() {\n        return this.constructor.name;\n    }\n\n    getLibraries() {\n        return [];\n    }\n\n\n    getPresets() {\n        return [];\n    }\n\n\n    /** Shortcuts **/\n\n\n    supportsProgram(programClassName) {\n        const presets = this.getPresets();\n        for(let i=0; i<presets.length; i++) {\n            const [className] = presets[i];\n            if(className === programClassName)\n                return true;\n        }\n        return false;\n    }\n\n    /** Menu **/\n\n\n    renderMenuProgramAll(onSelectPreset, programClass=null) {\n        return (<>\n            <ASUIMenuDropDown options={() => this.renderMenuProgramNew(onSelectPreset, programClass)}>New Program</ASUIMenuDropDown>\n            <ASUIMenuBreak />\n            <ASUIMenuDropDown options={() => this.renderMenuProgramAllPresets(onSelectPreset, programClass, true)}>Using Preset</ASUIMenuDropDown>\n        </>);\n    }\n\n    renderMenuProgramNew(onSelectPreset) {\n        return (<>\n            {ProgramLoader.getRegisteredPrograms().map((config, i) =>\n                <ASUIMenuAction key={i} onAction={e => onSelectPreset(config.className)}>{config.title || 'Untitled Preset #' + i}</ASUIMenuAction>\n            )}\n        </>);\n    }\n\n    renderMenuProgramAllPresets(onSelectPreset, programClass=null, includeRecent=true) {\n        return (<>\n            {includeRecent && false ? <ASUIMenuDropDown\n                disabled={true}\n                options={() => this.renderMenuProgramRecentPresets(onSelectPreset, programClass)}>\n                Recent Presets\n            </ASUIMenuDropDown> : null}\n            {includeRecent && Library.lastSelectedLibrary ? <ASUIMenuDropDown\n                disabled={Library.lastSelectedLibrary.getPresets().length === 0}\n                options={() => Library.lastSelectedLibrary.renderMenuProgramPresets(onSelectPreset, programClass)}>\n                Current Library\n            </ASUIMenuDropDown> : null }\n            <ASUIMenuDropDown\n                disabled={this.getPresets().length === 0}\n                options={() => this.renderMenuProgramPresets(onSelectPreset, programClass)}>\n                Presets\n            </ASUIMenuDropDown>\n            <ASUIMenuDropDown\n                disabled={this.getLibraries().length === 0}\n                options={() => this.renderMenuLibraryOptions(library =>\n                    library.renderMenuProgramAllPresets(onSelectPreset, programClass, false)\n                    , programClass)}>\n                Other Libraries\n            </ASUIMenuDropDown>\n        </>);\n    }\n\n\n    renderMenuProgramRecentPresets(onSelectPreset, programClass=null) {\n        // let recentLibrary = Library.lastSelectedLibrary; // TODO: move to state?\n        return (<>\n            <ASUIMenuAction onAction={()=>{}} disabled>{this.getTitle()}</ASUIMenuAction>\n            <ASUIMenuBreak />\n            {this.getPresets().map(([className, presetConfig], i) => {\n                return programClass === null || programClass === className\n                    ? <ASUIMenuAction key={i} onAction={e => onSelectPreset(className, presetConfig)}>{presetConfig.title || 'Untitled Preset #' + i}</ASUIMenuAction>\n                    : null;\n            })}\n        </>);\n    }\n\n\n    renderMenuProgramPresets(onSelectPreset, programClass=null) {\n        return (<>\n            <ASUIMenuAction onAction={()=>{}} disabled>{this.getTitle()}</ASUIMenuAction>\n            <ASUIMenuBreak />\n            {this.getPresets().map(([className, presetConfig], i) => {\n                return programClass === null || programClass === className\n                    ? <ASUIMenuAction key={i} onAction={e => onSelectPreset(className, presetConfig)}>{presetConfig.title || 'Untitled Preset #' + i}</ASUIMenuAction>\n                    : null;\n            })}\n        </>);\n    }\n\n    renderMenuLibraryOptions(onSelectLibraryOptions, programClass=null) {\n        return this.getLibraries().map((library, i) => {\n            // if (programClass !== null && !library.supportsProgram(programClass))\n            //     return null;\n            return (\n                <ASUIMenuDropDown key={i++}\n                                  options={() => {\n                                  Library.lastSelectedLibrary = library;\n                                  return onSelectLibraryOptions(library);\n                              }}>\n                    {library.getTitle()}\n                </ASUIMenuDropDown>\n            );\n        });\n    }\n\n    // renderMenuProgramLibraryPresets(onSelectPreset, programClass=null) {\n    //     return this.renderMenuLibraryOptions(programClass, library =>\n    //         library.renderSubMenuProgramPresets(onSelectPreset, programClass)\n    //     );\n    // }\n\n    // constructor(title=null) {\n    // this.title = title || this.constructor.name;\n    // this.baseURL = baseURL || document.location;\n    // ['libraries', 'samples', 'presets']\n    //     .forEach(key => {\n    //         if(!this.data[key])\n    //             this.data[key] = []\n    //     });\n    // if(!this.data.url)\n    //     this.data.url = document.location.toString();\n    // this.data.url = null;\n    // this.data.urlPrefix = '';\n    // this.name = \"Loading...\";\n    // this.libraries = [];\n    // this.programs = {};\n    // this.presets = [];\n    // this.samples = [];\n    // Object.assign(this, data);\n    // }\n\n    // load(data) {\n    //     Object.assign(this, data);\n    // }\n\n    // getPrograms() { return this.data.programs || []; }\n\n\n    // getPresetConfig(presetName, presetConfig={}) {\n    //     let presetData = this.getPresets().find(p => p.name = presetName)\n    //         || (()=>{ throw new Error(\"Could not find preset config for: \" + presetName);})();\n    //\n    //     const samples = presetData.samples || [];\n    //     for(let i=0; i<samples.length; i++) {\n    //         samples[i] = this.getSampleConfig(samples[i]);\n    //     }\n    //     presetConfig.presetName = presetName;\n    //     presetConfig.samples = samples;\n    //\n    //     return presetConfig;\n    // }\n\n    /** @var Library **/\n    static lastSelectedLibrary = null;\n\n    static historicLibraryCount() {\n        return Object.values(Library.cache).length;\n    };\n\n    static eachHistoricLibrary(callback) {\n        const results = [];\n        for (let cacheURL in Library.cache) {\n            if (Library.cache.hasOwnProperty(cacheURL)) {\n                let libraryConfig = Library.cache[cacheURL];\n                if (libraryConfig instanceof Promise)\n                    continue;\n                // libraryConfig = await libraryConfig;\n                libraryConfig.name = libraryConfig.name || libraryConfig.url.split('/').pop();\n                const result = callback(libraryConfig);\n                if (result === false)\n                    break;\n                if (result !== null)\n                    results.push(result);\n            }\n        }\n        return results;\n    }\n\n    static loadDefault() {\n        const defaultLibrary = require(\"../../default.library.js\").default;\n        return new defaultLibrary();\n    };\n\n    /**\n     * @param url\n     * @returns {Promise<Library>}\n     */\n    static async loadFromURL(url) {\n        if (!url)\n            throw new Error(\"Invalid url\");\n        const response = await fetch(url);\n        const libraryData = await response.json();\n        if (typeof libraryData.url === \"undefined\")\n            libraryData.url = url.toString();\n        console.log('library', libraryData);\n        return new Library(libraryData);\n    }\n\n    static async loadFromURL2(url) {\n        if (!url)\n            throw new Error(\"Invalid url\");\n        url = new URL((url.toString()).split('#')[0], document.location).toString();\n\n        let libraryData;\n        if (!Library.cache[url]) {\n            Library.cache[url] = new Promise((resolve, reject) => {\n                const xhr = new XMLHttpRequest();\n                xhr.open('GET', url.toString(), true);\n                xhr.responseType = 'json';\n                xhr.onload = () => {\n                    if (xhr.status !== 200)\n                        return reject(\"Sample library not found: \" + url);\n\n                    const libraryData = xhr.response;\n                    libraryData.url = url.toString();\n\n                    Object.keys(Library.cache).forEach(cacheURL => {\n                        if (Object.values(Library.cache) > 5)\n                            delete Library.cache[cacheURL];\n                    });\n                    Library.cache[url] = libraryData;\n\n                    console.info(\"Sample Library Loaded: \", url, Library.cache);\n                    resolve(libraryData);\n                };\n                xhr.send();\n            });\n        }\n        libraryData = Library.cache[url];\n        if (libraryData instanceof Promise)\n            libraryData = await libraryData;\n        return new Library(libraryData);\n    }\n\n}\n\n\n// /** @returns {Promise<Library>} */\n// Library.loadDefaultLibrary = async function() {\n//     return await Library.loadFromURL(Library.defaultLibraryURL);\n// };\nLibrary.cache = {};\nexport default Library;\n","import TrackInstruction from \"../instruction/TrackInstruction\";\nimport CommandInstruction from \"../instruction/CommandInstruction\";\nimport {InstructionIterator} from \"../instruction\";\n\n\nexport default class TrackIterator {\n    constructor(tracks, startingTrackName, startingBeatsPerMinute, startingTimeDivision, onEvent=null) {\n        this.tracks = tracks;\n        if (!this.tracks[startingTrackName])\n            throw new Error(\"Invalid instruction track: \" + startingTrackName);\n\n        this.onEvent = onEvent || function() {};\n\n        // this.onEvent = onEvent;\n        this.positionSeconds = 0;\n        // this.seekLength = 10;\n        this.activeTracks = [];\n        // this.currentTrackID = -1;\n\n        this.startingBeatsPerMinute = startingBeatsPerMinute;\n        this.startingTimeDivision = startingTimeDivision;\n\n        const startingStats = {\n            // program: trackStats.program,            // Current program which all notes route through\n            // destination: trackStats.destination,    // Current destination sent to all playFrequency calls\n            startPosition: 0,\n            trackName: startingTrackName,\n            // beatsPerMinute: beatsPerMinute,\n            // startingTimeDivision: song.data.startingTimeDivision, // Time division is not passed to sub-groups\n        };\n        this.startTrackIteration(startingStats);\n    }\n\n    instructionGetIterator(trackName, timeDivision=null, beatsPerMinute=null) {\n        if(!this.tracks[trackName])\n            throw new Error(\"Invalid instruction track: \" + trackName);\n        const instructionList = this.tracks[trackName];\n\n        return new InstructionIterator(\n            instructionList,\n            timeDivision || this.startingTimeDivision,\n            beatsPerMinute || this.startingBeatsPerMinute,\n        );\n    }\n\n\n    startTrackIteration(trackStats) {\n        trackStats.iterator = this.instructionGetIterator(trackStats.trackName, trackStats.timeDivision, trackStats.beatsPerMinute);\n        this.activeTracks.push(trackStats);\n        return trackStats;\n    }\n\n    /** @deprecated **/\n    getPositionInSeconds() {\n        let totalPositionSeconds = 0;\n        for(let i=0; i<this.activeTracks.length; i++) {\n            const {iterator, startPosition} = this.activeTracks[i];\n            const positionSeconds = startPosition + iterator.positionSeconds;\n            if (positionSeconds > totalPositionSeconds)\n                totalPositionSeconds = positionSeconds;\n        }\n        return totalPositionSeconds;\n    }\n\n    getEndPositionInSeconds() {\n        let totalEndPositionSeconds = 0;\n        for(let i=0; i<this.activeTracks.length; i++) {\n            const {iterator, startPosition} = this.activeTracks[i];\n            const endPositionSeconds = startPosition + iterator.endPositionSeconds;\n            if (endPositionSeconds > totalEndPositionSeconds)\n                totalEndPositionSeconds = endPositionSeconds;\n        }\n        return totalEndPositionSeconds;\n    }\n\n    // incrementTrack() {\n    //     this.currentTrackID++;\n    //     if(this.currentTrackID >= this.activeTracks.length)\n    //         this.currentTrackID = 0;\n    //     return this.currentTrackID;\n    // }\n\n    hasReachedEnd() {\n        for(let i=0; i<this.activeTracks.length; i++) {\n            const {iterator} = this.activeTracks[i];\n            if(iterator.hasReachedEnd())\n                return true;\n        }\n        return false;\n    }\n\n\n    /**\n     * @param {TrackInstruction} instruction\n     * @param trackStats\n     */\n    processTrackInstruction(instruction, trackStats) {\n        // if (instruction.getTrackName() === iterator.trackName) { // TODO track stack\n\n        const subTrackStats = {\n            // program: trackStats.program,            // Current program which all notes route through\n            // destination: trackStats.destination,    // Current destination sent to all playFrequency calls\n            // parentStats: trackStats,\n            startPosition: trackStats.iterator.positionSeconds,\n            trackName: instruction.getTrackName(),\n            beatsPerMinute: trackStats.beatsPerMinute,\n            // timeDivision: trackStats.timeDivision, // Time division is not passed to sub-groups\n        };\n        if(typeof trackStats.program !== \"undefined\" && trackStats.program)\n            subTrackStats.program = trackStats.program;\n        if(typeof trackStats.destination !== \"undefined\" && trackStats.destination)\n            subTrackStats.destination = trackStats.destination;\n        // TODO: process track instruction parameters\n        this.startTrackIteration(subTrackStats);\n    }\n\n    /**\n     * @param {CommandInstruction} instruction\n     * @param trackStats\n     */\n    processCommandInstruction(instruction, trackStats) {\n\n    }\n\n    processInstruction(instruction, trackStats, callback=null) {\n        if(instruction instanceof CommandInstruction)\n            this.processCommandInstruction(instruction, trackStats);\n        else if(instruction instanceof TrackInstruction)\n            this.processTrackInstruction(instruction, trackStats);\n        callback && callback(instruction, trackStats);\n        // console.log(\"Note Playback: \", instruction, callback);\n    }\n\n\n    /** Seeking **/\n\n\n    seekToEnd(callback=null, seekLength=1) {\n        let seekPosition=0, finished = false;\n        while(!finished) {\n            seekPosition += seekLength; // Seek before\n            finished = this.seekToPosition(seekPosition, callback);\n        }\n        // return this;\n    }\n\n    seekToPosition(positionSeconds, callback=null) {\n        let finished = true;\n        for(let i=0; i<this.activeTracks.length; i++) {\n            const trackStats = this.activeTracks[i];\n            const {iterator, startPosition} = trackStats;\n            positionSeconds -= startPosition;\n            if(!iterator.hasReachedEnd()) {\n                iterator.seekToPosition(positionSeconds, (instruction) => {\n                    this.processInstruction(instruction, trackStats, callback);\n                });\n                if (!iterator.hasReachedEnd())\n                    finished = false;\n            }\n        }\n        return finished;\n    }\n\n    seekToStartingTrackIndex(index, callback=null) {\n        const trackStats = this.activeTracks[0];\n        const iterator = this.instructionGetIterator(trackStats.trackName, trackStats.timeDivision, trackStats.beatsPerMinute);\n        iterator.seekToIndex(index, callback);\n        const startPosition = iterator.positionSeconds;\n        this.seekToPosition(startPosition, callback);\n    }\n\n    // seekToPositionTicks(positionTicks, callback=null) {\n    //     while (this.positionTicks < positionTicks)\n    //         this.nextTrackInstruction(callback);\n    //     return this;\n    // }\n}\n","import React from \"react\";\n\nimport ASUIMenuContext from \"../menu/ASUIMenuContext\";\n\nexport default class ASUIClickableBase extends React.Component {\n    /** Context **/\n    static contextType = ASUIMenuContext;\n\n    constructor(props) {\n        super(props);\n        this.cb = {\n            onMouseInput: e => this.onMouseInput(e),\n            onKeyDown: e => this.onKeyDown(e),\n        };\n    }\n\n    getClassName() { return 'asui-clickable'; }\n\n    render() {\n        let className = this.getClassName();\n        if(this.props.className)\n            className += ' ' + this.props.className;\n        if(this.props.disabled)\n            className += ' disabled';\n        if(this.props.selected)\n            className += ' selected';\n\n        return (\n            <div\n                title={this.props.title}\n                className={className}\n                onClick={this.cb.onMouseInput}\n                onKeyDown={this.cb.onKeyDown}\n                tabIndex={0}\n            >\n                {this.renderChildren()}\n            </div>\n        );\n    }\n\n    renderChildren(props={}) {\n        return this.props.children;\n    }\n\n    /** User Input **/\n\n    onMouseInput(e) {\n        if(e.defaultPrevented)\n            return;\n        e.preventDefault();\n        this.doAction(e);\n    }\n\n\n    onKeyDown(e) {\n        if(e.isDefaultPrevented())\n            return;\n        switch(e.key) {\n            case ' ':\n            case 'Enter':\n                this.doAction(e);\n                break;\n\n            default:\n                console.info(\"Unhandled key: \", e.key);\n                break;\n        }\n    }\n\n    /** Actions **/\n\n    doAction(e) {\n        throw new Error(\"Not implemented\");\n    }\n\n    /** Overlay Context **/\n\n    getOverlay() { return this.context.overlay; }\n\n    closeAllDropDownMenus() {\n        if(this.getOverlay())\n            this.getOverlay().closeAllMenus();\n        else\n            console.warn(\"Could not close all dropdown menus\", this.getOverlay());\n    }\n\n}\n","import TrackIterator from \"./TrackIterator\";\nimport {Instruction, NoteInstruction} from \"../instruction\";\n\n\nexport default class TrackPlayback extends TrackIterator {\n    constructor(song, startingTrackName = null, onEvent=null) {\n        super(song.data.tracks,\n            startingTrackName || song.getStartTrackName(),\n            song.data.beatsPerMinute,\n            song.data.timeDivision,\n            onEvent)\n\n        this.song = song;\n        this.seekLength = 10;\n        this.active = true;\n\n        this.endPromise = new Promise((resolve, reject) => {\n            this.endResolve = resolve;\n        });\n\n        this.playInstructionCallback = this.playInstruction.bind(this);\n\n    }\n\n    startTrackIteration(trackStats) {\n        super.startTrackIteration(trackStats)\n        if(!trackStats.playingIndices)\n            trackStats.playingIndices = [];\n        this.onEvent({\n            type: 'track:start',\n            playback: this,\n            trackStats\n        });\n    }\n\n    addInstructionFilter(filterCallback) {\n        const oldCallback = this.playInstructionCallback;\n        this.playInstructionCallback = function(instruction, trackStats) {\n            instruction = filterCallback(instruction, trackStats);\n            if(!instruction)\n                return;\n            if(!instruction instanceof Instruction)\n                throw new Error(\"Invalid Instruction\");\n            oldCallback(instruction, trackStats);\n        }\n    }\n\n    play(destination, startPosition=null) {\n        if (!destination || !destination.context)\n            throw new Error(\"Invalid destination\");\n        this.audioContext = destination.context;\n        this.destination = destination;\n\n        this.startTime = this.audioContext.currentTime; // this.audioContext.currentTime\n\n        this.seekInterval = setInterval(() => this.renderPlayback(), this.seekLength / 10);\n\n        if(startPosition !== null) {\n            this.seekToPosition(startPosition);\n            this.startTime -= startPosition;\n        }\n        this.renderPlayback();\n    }\n\n\n    playAtStartingTrackIndex(destination, index, callback=null) {\n        const trackStats = this.activeTracks[0];\n        const iterator = this.instructionGetIterator(trackStats.trackName, trackStats.timeDivision, trackStats.beatsPerMinute);\n        iterator.seekToIndex(index, callback);\n        const startPosition = iterator.positionSeconds;\n        this.play(destination, startPosition);\n        // console.log('playAtStartingTrackIndex', index, startPosition);\n        // this.seekToPosition(startPosition, callback);\n    }\n\n    getPlaybackPosition() {\n        return this.audioContext.currentTime - this.startTime;\n\n    }\n\n    // getPositionInSeconds() {\n    //     return this.startTime;\n    // }\n\n    async awaitPlaybackReachedEnd() {\n        return await this.endPromise;\n    }\n\n    renderPlayback() {\n        const currentPositionSeconds = this.getPlaybackPosition();\n\n        if(!this.active || this.hasReachedEnd()) {\n            clearInterval(this.seekInterval);\n            const endPositionSeconds = this.getEndPositionInSeconds();\n            const timeTillFinished = endPositionSeconds - currentPositionSeconds;\n            console.log(`Song is ending in ${timeTillFinished} seconds`);\n            if(timeTillFinished > 0)\n                setTimeout(() => this.stopPlayback(), timeTillFinished * 1000);\n            else\n                this.stopPlayback();\n        } else {\n            this.seekToPosition(currentPositionSeconds + this.seekLength, this.playInstructionCallback);\n        }\n    }\n\n    stopPlayback() {\n        if(this.active) {\n            this.active = false;\n            this.endResolve();\n        }\n        // this.endPromise = true;\n    }\n\n    playInstruction(instruction, trackStats) {\n        if(instruction instanceof NoteInstruction) {\n            if(typeof trackStats.program === \"undefined\")\n                return console.error(`Track '${trackStats.trackName}' has no program set`);\n            const destination = trackStats.destination || this.destination;\n            const noteStartTime = this.startTime + trackStats.startPosition + trackStats.iterator.positionSeconds; // ASCTrack start time equals current track's start + playback times\n            if(noteStartTime > 0) {\n                const noteIndex = trackStats.iterator.currentIndex;\n                const playingIndices = trackStats.playingIndices;\n                const onEvent = this.onEvent;\n                this.song.playInstruction(destination, instruction, trackStats.program, noteStartTime,\n                    () => {\n                        if(playingIndices.indexOf(noteIndex) === -1) {\n                            playingIndices.push(noteIndex);\n                            // console.log('playingIndices.push', playingIndices);\n\n                            onEvent({\n                                type: 'instruction:play',\n                                playback: this,\n                                playingIndices,\n                                trackStats\n                            });\n                        }\n                    },\n                    () => {\n                        playingIndices.splice(playingIndices.indexOf(noteIndex), 1);\n                        // console.log('playingIndices.splice', playingIndices);\n                        onEvent({\n                            type: 'instruction:stop',\n                            playback: this,\n                            playingIndices,\n                            trackStats\n                        });\n\n\n                    });\n            }\n        }\n    }\n\n    /**\n     * @param {CommandInstruction} instruction\n     * @param trackStats\n     */\n    processCommandInstruction(instruction, trackStats) {\n        instruction.processCommandInstruction(this.song, trackStats);\n    }\n\n}\n","import Values from \"../../common/values/Values\";\n\nclass SongValues {\n    constructor(song) {\n        this.song = song;\n    }\n\n\n    getSongPrograms(callback = (id, name) => [id, name]) {\n        const song = this.song;\n        const results = [];\n        if (song && song.data.programs) {\n            const programList = song.data.programs;\n            for (let programID = 0; programID < programList.length; programID++) {\n                const [programClass, programInfo] = programList[programID]; //  || {title: \"No Program Loaded\"};\n                // const programs = this.renderer.getProgram(programID);\n                const result = callback(programID, programClass, programInfo);\n                if(!addResult(results, result)) return results;\n            }\n        }\n        return results;\n    }\n\n    getAllSongGroups(callback = (trackName) => trackName) {\n        const song = this.song;\n        const results = [];\n        const instructionList = song.data.tracks;\n        Object.keys(instructionList).forEach(function (key, i) {\n            const result = callback(key);\n            if(!addResult(results, result)) return results;\n        });\n        return results;\n    }\n\n\n    getAllNamedFrequencies(callback = (alias, aliasValue, programID) => [alias, aliasValue, programID]) {\n        return 'TODO';\n        // const song = this.song;\n        // const results = [];\n        // const programList = song.data.programs;\n        // for (let programID = 0; programID < programList.length; programID++) {\n        //     if (song.hasProgram(programID)) {\n        //         const instance = song.getProgram(programID);\n        //         if (instance.getFrequencyAliases) {\n        //             const aliases = instance.getFrequencyAliases();\n        //             for (const alias in aliases) {\n        //                 if (aliases.hasOwnProperty(alias)) {\n        //                     const aliasValue = aliases[alias];\n        //                     const result = callback(alias, aliasValue, programID);\n        //                     if(!addResult(results, result)) return results;\n        //                 }\n        //             }\n        //         }\n        //     }\n        // }\n        // return results;\n    }\n\n\n\n\n    formatSongDuration(input) {\n        return Values.formatDuration(input, this.song.data.timeDivision);\n    }\n\n\n    /** Duration **/\n\n    parseDurationAsTicks(durationString) {\n        return Values.parseDurationAsTicks(durationString, this.song.data.timeDivision);\n    }\n\n    formatDuration(input) {\n        return Values.formatDuration(input, this.song.data.timeDivision);\n    }\n\n\n    getNoteDurations(callback = (duration, durationString) => [duration, durationString]) {\n        return Values.getNoteDurations(callback, this.song.data.timeDivision);\n    }\n\n}\n\nfunction addResult (results, result) {\n    if (result !== null && typeof result !== \"undefined\")\n        results.push(result);\n    return result === false ? result : true;\n}\n\n\n\nexport default SongValues;\n","import ASUIClickableBase from \"../button/ASUIClickableBase\";\n\nimport './assets/ASUIMenu.css';\nimport PropTypes from \"prop-types\";\n\nclass ASUIMenuAction extends ASUIClickableBase {\n    /** Property validation **/\n    static propTypes = {\n        onAction: PropTypes.func.isRequired,\n        disabled: PropTypes.bool,\n    };\n\n    getClassName() { return 'asui-menu-item'; }\n\n    /** Actions **/\n\n    async doAction(e) {\n        if(this.props.disabled) {\n            console.warn(this.constructor.name + \" is disabled.\", this);\n            return;\n        }\n\n        if(!this.props.onAction)\n            throw new Error(\"Button does not contain props 'onAction'\");\n        const result = await this.props.onAction(e, this);\n        if (result !== false)\n            this.closeAllDropDownMenus();\n    }\n}\n\nexport default ASUIMenuAction;\n\n","import React from \"react\";\n\nimport './assets/ASUIMenu.css';\n\nclass ASUIMenuBreak extends React.Component {\n    render() {\n        return (\n            <hr className=\"asui-menu-break\"/>\n        );\n    }\n}\n\nexport default ASUIMenuBreak;\n","import ProgramLoader from \"./ProgramLoader\";\n\nexport {\n    ProgramLoader\n}\n","import React from \"react\";\nimport ASUIMenuContext from \"../ASUIMenuContext\";\n\nexport default class ASUIMenuOverlayContainerBase extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            open: false,\n            openOverlay: false\n        };\n        this.cb = {\n            closeAllMenus: () => this.closeAllMenus(),\n        };\n        this.openMenus =  [];\n        this.updateOverlayTimeout = null;\n    }\n    // componentDidMount() {\n    //     MenuDropDown.addGlobalSubMenuHandler(this.openMenuHandler)\n    // }\n    //\n    // componentWillUnmount() {\n    //     MenuDropDown.removeGlobalSubMenuHandler(this.openMenuHandler)\n    // }\n\n    renderContent() {\n        throw new Error(\"Not implemented\");\n    }\n\n\n    render() {\n        return <ASUIMenuContext.Provider\n            value={{overlay:this, parentDropDown:null}}>\n            {this.renderContent()}\n        </ASUIMenuContext.Provider>;\n    }\n\n\n    // getActiveMenuCount() {\n    //     return this.openMenus.length;\n    // }\n\n    updateOverlay() {\n        const openOverlay = this.state.open || this.openMenus.length > 0;\n//             console.log('updateOverlay', openOverlay);\n        if(this.state.openOverlay !== openOverlay)\n            this.setState({openOverlay})\n    }\n\n    isHoverEnabled() {\n        return !this.props.isActive && (this.state.openOverlay || this.openMenus.length > 0);\n    }\n\n    addCloseMenuCallback(menuItem, closeMenuCallback) {\n        const i = this.openMenus.findIndex(openMenu => openMenu[0] === menuItem);\n        if(i === -1)\n            this.openMenus.push([menuItem, closeMenuCallback]);\n        // console.log('this.openMenus', this.openMenus);\n        this.updateOverlay();\n    }\n\n    removeCloseMenuCallback(menuItem) {\n        const i = this.openMenus.findIndex(openMenu => openMenu[0] === menuItem);\n        if(i !== -1)\n            this.openMenus.splice(i, 1);\n        // this.updateOverlay();\n    }\n\n\n    closeMenus(butThese=[], stayOpenOnStick=true) {\n        // console.log('closeMenus', butThese, stayOpenOnStick);\n        // this.overlayContext.openMenuItems = [];\n        this.openMenus.forEach(openMenu => {\n            const [menuItem, closeMenuCallback] = openMenu;\n            if(butThese.indexOf(menuItem) !== -1)\n                return;\n            closeMenuCallback(stayOpenOnStick);\n        });\n        // this.updateOverlay();\n    }\n\n\n    closeAllMenus(e) {\n        this.closeMenus(e, []);\n        this.setState({\n            open: false,\n            openOverlay: false,\n            options: null\n        });\n    }\n\n    async openMenu(options) {\n        if(!this.props.isActive)\n            return false;\n\n        if(typeof options === \"function\")\n            options = options(this);\n        if(options instanceof Promise)\n            options = await options;\n\n        this.setState({\n            open: true,\n            openOverlay: true,\n            options\n        });\n        return true;\n    }\n\n    // openOverlay() {\n    //     this.setState({\n    //         openOverlay: true,\n    //     });\n    //     return true;\n    // }\n    //\n    // closeOverlay() {\n    //     this.setState({\n    //         openOverlay: false,\n    //     });\n    //     return true;\n    // }\n}\n","import React from \"react\";\nimport ASUIMenuBreak from \"../ASUIMenuBreak\";\nimport ASUIMenuAction from \"../ASUIMenuAction\";\nimport ASUIMenuOverlayContainerBase from \"./ASUIMenuOverlayContainerBase\";\n\nimport \"../assets/ASUIMenuOverlayContainer.css\";\n\nexport default class ASUIMenuOverlayContainer extends ASUIMenuOverlayContainerBase {\n\n\n    renderContent() {\n        // <div className=\"asui-menu-overlay-container\">\n        return [\n            this.props.children,\n            this.state.openOverlay ? this.renderOverlay() : null,\n            this.state.open ? this.renderDropDown() : null\n        ];\n    }\n\n    renderOverlay() {\n        return (\n            <div key=\"overlay\" className=\"asui-menu-overlay\"\n                 onClick={this.cb.closeAllMenus}\n                />\n        )\n    }\n\n    renderDropDown() {\n        return (\n            <div className=\"asui-menu-overlay-dropdown\">\n                {this.state.options}\n                <ASUIMenuBreak/>\n                <ASUIMenuAction onAction={this.cb.closeAllMenus}>- Close Menu -</ASUIMenuAction>\n            </div>\n        )\n    }\n}\n","\nconst archiveBuffers = {};\nconst torrentCache = {};\nconst trackerURLS = [\n    \"udp://explodie.org:6969\",\n    \"udp://track.coppersurfer.tk:6969\",\n    \"udp://track.empire-js.us:1337\",\n    \"udp://track.leechers-paradise.org:6969\",\n    \"udp://track.opentrackr.org:1337\",\n    // \"wss://snesology.net/wss\",\n    \"wss://track.fastcast.nz\",\n    \"wss://track.openwebtorrent.com\",\n    \"wss://track.btorrent.xyz\",\n];\n\nclass FileService {\n    // constructor(song) {\n    //     this.song = song;\n    // }\n\n    log(message) {\n        console.info(message);\n        // if(this.song) {\n        //     this.song.dispatchEvent(new CustomEvent('log', {detail: message}))\n        // }\n    }\n\n    async loadBufferFromURL(url) {\n        // this.log(\"Loading buffer from url: \" + url);\n        if(url.toString().startsWith('torrent://')) {\n            console.time('getFileBufferFromTorrent');\n            const buffer = await this.getFileBufferFromTorrent(url);\n            console.timeEnd('getFileBufferFromTorrent');\n            return buffer;\n        }\n\n        const response = await fetch(url);\n        return await response.arrayBuffer();\n    }\n\n    getMagnetURL(torrentID) {\n        // &dn=snes\n        const magnetURL = `magnet:?xt=urn:btih:${torrentID}&dn=torrent&${trackerURLS.map(t => 'tr='+t).join('&')}`;\n        return magnetURL;\n    }\n\n    async getFileBufferFromTorrent(torrentURL) {\n        var match = torrentURL.match(/^(torrent?:)\\/\\/(([^:/?#]*)(?::([0-9]+))?)([/]{0,1}[^?#]*)(\\?[^#]*|)(#.*|)$/);\n        const parsedURL = match && {\n            hostname: match[3],\n            pathname: match[5],\n        };\n\n        const torrentID = parsedURL.hostname;\n        const filePath = parsedURL.pathname.substr(1);\n\n        const torrent = await this.getTorrent(torrentID);\n        for(let i=0; i<torrent.files.length; i++) {\n            const file = torrent.files[i];\n            if(filePath === file.path) {\n                return await getBuffer(file);\n            }\n            if(filePath.startsWith(file.path)) {\n                const archiveFilePath = filePath.substr(file.path.length);\n                let archiveBuffer;\n                if(typeof archiveBuffers[file.path] !== \"undefined\") {\n                    archiveBuffer = archiveBuffers[file.path];\n                } else {\n                    archiveBuffer = getBuffer(file);\n                    archiveBuffers[file.path] = archiveBuffer;\n                }\n                if(archiveBuffer instanceof Promise)\n                    archiveBuffer = await archiveBuffer;\n                return await this.getFileBufferFromArchive(archiveBuffer, archiveFilePath);\n            }\n        }\n        throw new Error(\"Archive file not found: \" + filePath);\n\n        async function getBuffer(file) {\n            return await new Promise((resolve, reject) => {\n                file.getBuffer(async function(err, buffer) {\n                    if(err) throw new Error(err);\n                    resolve(buffer);\n                });\n            })\n        }\n    }\n\n    async getFileBufferFromArchive(archiveBuffer, filePath) {\n        const files = await this.decompress7ZipArchive(archiveBuffer);\n        for(let i=0; i<files.length; i++) {\n            const file = files[i];\n            if(file.path === filePath) {\n                return file.data;\n            }\n        }\n        throw new Error(\"Archive file not found: \" + filePath);\n\n    }\n\n    async getTorrent(torrentID) {\n        var WebTorrent = await requireWebTorrent();\n\n        if(torrentCache[torrentID]) {\n            if(torrentCache[torrentID] instanceof Promise)\n                await torrentCache[torrentID];\n            return torrentCache[torrentID];\n        }\n\n        const magnetURL = this.getMagnetURL(torrentID);\n\n        var client = new WebTorrent();\n\n        torrentCache[torrentID] = new Promise((resolve, reject) => {\n            this.log(\"Connecting to cloud url: \" + magnetURL);\n            client.add(magnetURL, function (torrent) {\n                // Got torrent metadata!\n                resolve(torrent);\n            });\n        });\n        torrentCache[torrentID] = await torrentCache[torrentID];\n        const torrent = torrentCache[torrentID];\n        this.log(\"Connected to cloud: \" + torrent.infoHash);\n        return torrent;\n    }\n\n    async decompress7ZipArchive(archiveBuffer) {\n        const fda = [];\n        var totalMemory = 268435456;\n        var INTERRUPT = false;\n        var rootdata = \"/data\";\n        var fileName=  'archive.7z';\n        fda.push(new DataStorage(rootdata,true,null));\n        const filedata = new Uint8Array(archiveBuffer);\n        fda.push(new DataStorage(rootdata  + \"/\" + fileName,false,filedata));\n\n        const workerURL =  'assets/3rdparty/7zip/js/worker.7z.wrapper.js';\n\n        let worker7z = new Worker(workerURL);\n\n        return await new Promise((resolve, reject) => {\n            worker7z.onerror = console.error; // TODO: reuse webworker\n            worker7z.onmessage = function(event) {//1\n                if (INTERRUPT) {\n                    finfunc();\n                    return;\n                }\n                if (event.data.type === 1){\n                    // console.info(event.data.text);\n                } else if (event.data.type === 2){\n                    // console.info(event.data.text);\n                } else if (event.data.type === 3){\n                    resolve(event.data.results);\n                    worker7z.terminate();//this is very important!!! You have to release memory!\n                }\n            };\n            var fda0 = [fda[0],fda[1]];\n            var args = [\"x\",  fda0[1].path ,\"-o/result\"];\n            worker7z.postMessage({\n                id:1,\n                action:'doit',\n                arguments:args,\n                totalMemory: totalMemory,\n                FilesDataArray: fda0\n            });\n\n            function finfunc() {\n                worker7z.terminate();\n                worker7z = undefined;\n                INTERRUPT = false;\n                // clearDataWrapper();\n            }\n        });\n\n        function DataStorage(path,isdir,data) {\n            this.path = path;\n            this.isdir = isdir;\n            this.data = data;\n        }\n    }\n}\n\n\n\nasync function requireWebTorrent() {\n    const AudioSourceLoader = customElements.get('audio-source-loader');\n    const relativeScriptPath = 'node_modules/webtorrent/webtorrent.min.js';\n\n    let scriptElm = AudioSourceLoader.findScript(relativeScriptPath, false);\n    if(!scriptElm) {\n        window.exports = {};\n        window.module = {exports: window.exports};\n        // const scriptURL = findThisScript()[0].basePath + relativeScriptPath;\n        scriptElm = document.createElement('script');\n        // scriptElm.src = scriptURL;\n        scriptElm.promises = (scriptElm.promises || []).concat(new Promise(async (resolve, reject) => {\n            scriptElm.onload = e => {\n                scriptElm.exports = window.module.exports;\n                delete window.module; delete window.exports;\n                resolve();\n            };\n            document.head.appendChild(scriptElm);\n        }));\n    }\n    for (let i=0; i<scriptElm.promises.length; i++)\n        await scriptElm.promises[i];\n    return scriptElm.exports\n        || (() => { throw new Error(\"Script module has no exports: \" + relativeScriptPath); })()\n}\n\nexport default FileService;\n","import Instruction from \"./Instruction\";\n\nclass NoteInstruction extends Instruction {\n\n\n    get durationTicks() {\n        return typeof this.data[2] !== \"undefined\" ? this.data[2] : undefined;\n    }\n\n    set durationTicks(newDuration) {\n        newDuration = parseFloat(newDuration);\n        if (Number.isNaN(newDuration))\n            throw new Error(\"Invalid Duration\");\n        this.data[2] = newDuration;\n    }\n\n    get velocity() {\n        return typeof this.data[3] !== \"undefined\" ? this.data[3] : undefined;\n    }\n\n    set velocity(newVelocity) {\n        newVelocity = parseFloat(newVelocity);\n        if (Number.isNaN(newVelocity))\n            throw new Error(\"Invalid Velocity\");\n        this.data[3] = newVelocity;\n    }\n\n\n    clone() {\n        return new NoteInstruction(this.data.slice());\n    }\n}\n\nexport default NoteInstruction;\n","import Instruction from \"./Instruction\";\nimport ProgramLoader from \"../../common/program/ProgramLoader\";\n\nclass CommandInstruction extends Instruction {\n\n    getCommandName() {\n        return typeof this.data[1] === \"string\" ? this.data[1].substr(1) : undefined;\n    }\n\n    setCommandName(newCommandName) {\n        this.data[1] = `!${newCommandName}`;\n    }\n\n    getParams() {\n        return this.data.slice(2);\n    }\n\n    get durationTicks() {\n        return undefined;\n    }\n\n    get velocity() {\n        return undefined;\n    }\n\n\n    /**\n     * @param {CommandInstruction} song\n     * @param trackStats\n     */\n    processCommandInstruction(song, trackStats) {\n        const command = this.getCommandName().toLowerCase();\n        switch(command) {\n            case 'program':      // Set Program (can be changed many times per track)\n            case 'p':\n                const oldProgram = trackStats.program;\n                const oldDestination = trackStats.destination;\n                let programInstance = this.loadProgramFromParams(song);\n                trackStats.program = programInstance;\n\n                // useDestination allows for audio processing (i.e. effects)\n                if(typeof programInstance.useDestination === 'function')\n                    trackStats.destination = programInstance.useDestination(oldDestination);\n\n                // useProgram allows for both note processing and audio processing effects\n                if(typeof programInstance.useProgram === 'function')\n                    programInstance.useProgram(oldProgram);\n\n                break;\n\n            // case 'destination':     // Append destination (does not handle note processing)\n            // case 'd':\n            //     // if(!trackStats.originalDestination)\n            //     //     trackStats.originalDestination = trackStats.destination;\n            //     trackStats.destination = instruction.loadDestinationFromParams(trackStats.destination, this.song);\n            //\n            //     // this.song.programLoadInstance()\n            //     break;\n\n            default:\n                return console.error(\"Unknown command instruction: \" + command);\n        }\n    }\n\n\n    loadProgramFromParams(song) {\n        const params = this.getParams();\n        let program;\n        if(typeof params[0] === \"string\") {\n            program = ProgramLoader.loadInstance(params[0], params[1]);\n        } else {\n            program = song.programLoadInstanceFromID(params[0]);\n        }\n        return program;\n    }\n\n\n    clone() {\n        return new CommandInstruction(this.data.slice());\n    }\n}\n\nexport default CommandInstruction;\n","import Instruction from \"./Instruction\";\n\nclass MIDIInstruction extends Instruction {\n\n    get instruction() {\n        return this.data[2];\n    }\n\n    set instruction(newCommand) {\n        this.data[2] = newCommand;\n    }\n\n    get durationTicks() {\n        return null;\n    }\n\n    set durationTicks(newDuration) {\n        throw new Error(\"Unable to set duration on MIDI instruction\");\n    }\n\n}\n\nexport default MIDIInstruction;\n","import React from \"react\";\n// import {ASUIDiv as Div} from \"../../components/\";\n\n// import Icon from \"../../components/asui-icon\";\n// import Menu from \"../../components/asui-menu\";\n\nimport \"./assets/ASPPlaylist.css\";\n\nclass ASPPlaylistEntry extends React.Component {\n    constructor(props = {}) {\n        super(props, {});\n        if(!this.props.data)\n            throw new Error(\"Invalid Entry data\");\n        if(!this.props.playlist)\n            throw new Error(\"Invalid Entry playlist\");\n        // if(!this.state.name)\n        //     this.state.name = state.url.split('/').pop();\n        // this.props.position = null;\n        // this.props.selected = null;\n        // props.isPlaylist = entryData.url.toString().toLowerCase().endsWith('.pl.json');\n    }\n\n    render() {\n        let id = typeof this.props.id !== \"undefined\" ? this.props.id : '-';\n        if(Number.isInteger(id) && id <= 9)\n            if (id <= 9) id = '0' + id;\n\n        const [length, fade] = (this.props.data.length || 0).toString().split(':');\n        const formattedLength = (() => {\n            try { return new Date(length * 1000).toISOString().substr(14, 5); }\n            catch { return \"N/A\"; }\n        })();\n\n\n        return <div className=\"asp-playlist-entry\" onClick={e => this.onInput(e)}>\n            <div className=\"id\">{id+\":\"}</div>\n            <div className=\"name\">{this.props.data.name}</div>\n            <div className=\"length\">{formattedLength}{fade ? `[${fade}]` : ''}</div>\n        </div>\n    }\n\n    onInput(e) {\n        switch(e.type) {\n            case 'click':\n                console.log(e);\n                this.props.onAction && this.props.onAction(e);\n                break;\n\n            default:\n                console.log(\"Unknown input: \", e.type);\n                break;\n        }\n    }\n\n}\n\n\n\n/** Export this script **/\nexport default ASPPlaylistEntry;\n","import React from \"react\";\n// import {ASUIDiv as Div} from \"../../components/\";\nimport ASPPlaylistEntry from \"./ASPPlaylistEntry\";\n\nimport \"./assets/ASPPlaylist.css\";\n\nclass ASPPlaylist extends React.Component {\n    constructor(props = {}) {\n        super(props, {});\n        if(!this.props.player)\n            throw new Error(\"Invalid player\");\n\n        this.state = this.props.player.state.playlist;\n        this.state.position = this.state.position || 0;\n        this.state.entries = this.state.entries || [];\n        this.state.selectedPositions = this.state.selectedPositions || [];\n    }\n\n    // get player() { return this.props.player; }\n    // get position() { return this.state.position; }\n    // get entries() { return this.state.entries; }\n\n    render() {\n        return (\n            <div className=\"asp-playlist\">\n                <div className=\"header\">\n                    <div className=\"id\">ID</div>\n                    <div className=\"name\">Name</div>\n                    <div className=\"length\">Length</div>\n                </div>\n                <div className=\"container\">\n                    {this.state.entries.length > 0\n                    ? this.props.player.eachEntry((entryData, position, depth) => {\n                            // const props = {\n                            //     key: position,\n                            //     data:entryData,\n                            //     playlist: this,\n                            //     depth,\n                            //     onPress: (e) => player.toggleEntryAtPosition(position)\n                            // };\n                            // const classes = [];\n                            // if(this.state.position === position)\n                            //     classes.push('position');\n                            // if(this.state.selectedPositions.indexOf(position) !== -1)\n                            //     classes.push('selected');\n                            // if(entryData.loading)\n                            //     classes.push('loading');\n                            // if(classes.length > 0)\n                            //     props.class = classes.join(' ');\n                            return <ASPPlaylistEntry\n                                id={position}\n                                key={position}\n                                data={entryData}\n                                playlist={this}\n                                depth={depth}\n                                onAction={(e) => this.props.player.toggleEntryAtPosition(position)}\n                            />\n                        })\n                    :<div className=\"empty-playlist\">Empty Playlist</div>\n                    }\n                </div>\n            </div>\n        )\n    }\n\n    // onInput(e) {\n    //     switch(e.type) {\n    //         case 'click':\n    //\n    //     }\n    //     console.log(e);\n    // }\n\n    // render2() {\n    //     // TODO: move to entry - this.addEventHandler('click', e => this.onClick(e));\n    //     // await this.updateEntries();\n    //     const player = this.props.player;\n    //     return [\n    //         Div.createElement('header', [\n    //             Div.createElement('id', 'ID'),\n    //             Div.createElement('name', 'Name'),\n    //             // Div.createElement('url', 'URL'),\n    //             Div.createElement('length', 'Length'),\n    //         ], {key: 'asp-playlist-header'}),\n    //         Div.createElement('asp-playlist-container', [\n    //             this.state.entries.length > 0\n    //             ? player.eachEntry((entryData, position, depth) => {\n    //                 const props = {\n    //                     key: position,\n    //                     data:entryData,\n    //                     playlist: this,\n    //                     depth,\n    //                     onPress: (e) => player.toggleEntryAtPosition(position)\n    //                 };\n    //                 const classes = [];\n    //                 if(this.state.position === position)\n    //                     classes.push('position');\n    //                     if(this.state.selectedPositions.indexOf(position) !== -1)\n    //                         classes.push('selected');\n    //                     if(entryData.loading)\n    //                         classes.push('loading');\n    //                 if(classes.length > 0)\n    //                     props.class = classes.join(' ');\n    //                 return ASPPlaylistEntry.createElement(props)\n    //             })\n    //             : Div.createElement('empty-playlist', \"Empty ASPPlaylist\")\n    //         ], {'style': `max-height:${Math.round(window.innerHeight / 2)}px;`}),\n    //     ];\n    // }\n\n    async onClick(e) {\n        const entryElm = e.target.closest('aspp-entry,div.asp-playlist-entry');\n        if(entryElm) {\n            // entryElm.toggleSelect();\n            if(entryElm.isPlaylist) {\n                await entryElm.togglePlaylist();\n            } else {\n                await this.props.player.playlistMoveToEntry(entryElm);\n                await this.props.player.playlistPlay();\n            }\n            //     await songPlay();\n        } else {\n            console.error(e, this);\n        }\n    }\n\n    clear() {\n        this.setState({entries: []})\n    }\n\n\n}\n// if(isBrowser)\n    // customElements.define('asp-playlist', ASPPlaylist);\n\n\n/** Export this script **/\nexport default ASPPlaylist;\n","import React from \"react\";\n\n\nimport \"./assets/ASPlayer.css\";\n\nclass ASPlayerStyle extends React.Component {\n\n}\n\nexport default ASPlayerStyle;\n","import React from \"react\";\nimport {ASUIMenuDropDown} from \"../../components/menu\";\nimport {ASUIIcon} from \"../../components\";\n\nexport class ASPlayerHeader extends React.Component {\n    render() {\n        if (this.props.portrait)\n            return [\n                <div key=\"title\" className=\"asp-title-text\">{this.props.title}</div>,\n                <ASUIMenuDropDown\n                    key=\"menu-button\"\n                    arrow={false}\n                    className=\"asp-menu-button-toggle\"\n                    options={this.props.menuContent}\n                >\n                    <ASUIIcon source=\"menu\"/>\n                </ASUIMenuDropDown>\n            ];\n\n        let menuContent = this.props.menuContent;\n        if(typeof menuContent === \"function\")\n            menuContent = menuContent();\n\n        return [\n            <div key=\"title\" className=\"asp-title-text\">{this.props.title}</div>,\n            <div className=\"asp-menu-container\">\n                {menuContent}\n            </div>\n        ];\n    }\n}\n","import Song from \"../song/Song\";\nimport Storage from \"../common/storage/Storage\";\nimport ASPlayerMenu from \"./ASPlayerMenu\";\n// import Div from \"../components/div/Div\";\nimport React from \"react\";\n\n\nclass ASPlayerActions extends ASPlayerMenu {\n    constructor(props={}) {\n        super(props);\n        this.onSongEventCallback = (e) => this.onSongEvent(e);\n\n        // this.activeSong = null;\n        // this.nextPlaylistSong = null;\n    }\n\n\n    // getDefaultProgramURL() {\n    //     return findThisScript()[0].basePath + 'programs/audio-source-synthesizer.js';\n    // }\n\n\n\n    /** Song rendering **/\n\n    setCurrentSong(song) {\n        if(this.song) {\n            this.setStatus(\"Unloading song: \" + this.song.data.title);\n            if(this.song.isPlaying) {\n                this.song.stopPlayback();\n            }\n            this.song.removeEventListener('*', this.onSongEventCallback);\n            // this.song.removeDispatchElement(this);\n            // TODO: unload song?\n        }\n        this.song = song;\n        this.song.addEventListener('*', this.onSongEventCallback);\n        this.state.songLength = song.getSongLengthInSeconds();\n        // this.song.setVolume(this.state.volume);\n        // this.song.addDispatchElement(this);\n        song.playlistPosition = this.getCurrentEntryPosition();\n        const currentEntry = this.getCurrentEntry();\n        currentEntry.name = song.data.title;\n        currentEntry.length = song.getSongLengthInSeconds();\n        this.forceUpdate();\n        this.setStatus(\"Initializing song: \" + song.data.title);\n        this.song.connect(this.getAudioContext());\n        this.setStatus(\"Loaded song: \" + song.data.title);\n    }\n\n    // handleError(err) {\n    //     this.setStatus(`<span style=\"error\">${err}</span>`);\n    //     console.error(err);\n    //     // if(this.webSocket)\n    // }\n\n    setStatus(newStatus) {\n        console.info.apply(null, arguments); // (newStatus);\n        this.setState({status: newStatus});\n    }\n\n    setError(newStatus) {\n        this.setStatus(<div className=\"error\">{newStatus}</div>);\n    }\n\n    setVersion(versionString) {\n        this.setState({version: versionString});\n    }\n\n\n    // closeAllMenus() {\n    //     this.menuFile.closeAllMenus();\n    // }\n\n\n    /** Song loading **/\n\n    saveSongToFile() {\n        const songData = this.song.data;\n        // const songHistory = this.song.history;\n        const storage = new Storage();\n        storage.saveSongToFile(songData);\n        this.setStatus(\"Saved song to file\");\n    }\n\n\n    /** Song commands **/\n\n\n\n    /** Playback **/\n\n    getAudioContext()               {\n        if (this.audioContext)\n            return this.audioContext;\n\n        const audioContext = new (window.AudioContext || window.webkitAudioContext)();\n        this.audioContext = audioContext;\n        return audioContext;\n    }\n\n    getVolumeGain()                 {\n        if (!this.volumeGain) {\n            const context = this.getAudioContext();\n            let gain = context.createGain();\n            gain.gain.value = this.state.volume; // Song.DEFAULT_VOLUME;\n            gain.connect(context.destination);\n            this.volumeGain = gain;\n        }\n        return this.volumeGain; }\n\n    getVolume () {\n        return this.state.volume;\n        // if(this.volumeGain) {\n        //     return this.volumeGain.gain.value;\n        // }\n        // return ASPlayer.DEFAULT_VOLUME;\n    }\n    setVolume (volume) {\n        console.info(\"Setting volume: \", volume);\n        if(this.song)\n            this.song.setVolume(volume);\n\n        // const gain = this.getVolumeGain();\n        // if(gain.gain.value !== volume) {\n        //     gain.gain.value = volume;\n        // }\n        // this.state.volume = volume;\n        // this.fieldSongVolume.value = volume * 100;\n    }\n\n\n    async updateSongPositionMaxLength(maxSongLength) {\n        await this.fieldSongPosition.setState({max: Math.ceil(maxSongLength)});\n    }\n\n    updateSongPositionValue(playbackPositionInSeconds) {\n        const roundedSeconds = Math.round(playbackPositionInSeconds);\n        this.fieldSongTiming.value = this.values.formatPlaybackPosition(playbackPositionInSeconds);\n        if (this.fieldSongPosition.value !== roundedSeconds)\n            this.fieldSongPosition.value = roundedSeconds;\n    }\n\n\n//         async loadSongFromMemory(songUUID) {\n//             await this.song.loadSongFromMemory(songUUID);\n//             // this.render();\n//             this.setStatus(\"Song loaded from memory: \" + songUUID, this.song);\n// //         console.info(songData);\n//         }\n//\n//         async loadSongFromFileInput(file=null) {\n//             if(file === null)\n//                 file = this.fieldSongFileLoad.inputElm.files[0];\n//             if (!file)\n//                 throw new Error(\"Invalid file input\");\n//             await this.song.loadSongFromFileInput(file);\n//             this.addSongFileToPlaylist(file, this.song.data.title, this.song.getSongLengthInSeconds());\n//             // this.render();\n//         }\n\n\n    // async loadSongFromPlaylistEntry(playlistPosition) {\n    //     // this.setStatus(\"Loading from playlist: \" + url);\n    //     await this.playlist.loadSongFromURL(playlistPosition);\n    // }\n\n    /** Song ASPPlaylist **/\n\n    // async loadPlaylistFromURL(playlistURL) {\n    //     await this.playlist.loadSongFromURL(playlistURL);\n    //     this.setStatus(\"Loaded playlist from url: \" + playlistURL);\n    // }\n\n    /** Entries **/\n\n\n    getCurrentEntryPosition() { return this.state.playlist.position || 0; }\n    getCurrentEntry(throwException=true) {\n        if(this.state.playlist.entries.length === 0)\n            throw new Error(\"Empty playlist\");\n        return this.getEntry(this.getCurrentEntryPosition(), throwException);\n    }\n\n    getEntry(position, throwException=true) {\n        let foundEntry=null;\n        this.eachEntry((entry, i) => {\n            // console.log('entry', i, position);\n            if(i === position)\n                foundEntry = entry;\n            if(foundEntry)\n                return false;\n        });\n        if(!foundEntry && throwException)\n            throw new Error(\"Invalid playlist position: \" + position);\n        // console.log('found', foundEntry.state.id, position);\n        return foundEntry;\n    }\n\n\n    eachEntry(callback) {\n        const results = [];\n        let offset=0;\n        each(this.state.playlist.entries, 0);\n        return results;\n\n        function each(playlist, depth) {\n            for (let i = 0; i < playlist.length; i++) {\n                const entry = playlist[i];\n                const ret = callback(entry, offset, depth);\n                if (ret === false) return false;\n                if (ret !== null) results.push(ret);\n                offset++;\n                if(entry.playlist && entry.open === true) {\n                    const ret = each(entry.playlist.entries, depth+1);\n                    if (ret === false)\n                        return false;\n                }\n            }\n            return true;\n        }\n    }\n\n    async toggleEntryAtPosition(entryPosition) {\n        const entryData = this.getEntry(entryPosition);\n        if(this.isPlaylist(entryData.url)) {\n            await this.togglePlaylistEntry(entryData);\n        } else {\n            if(this.state.playlist.position !== entryPosition) {\n                this.state.playlist.position = entryPosition;\n                this.playlistPlay();\n            } else {\n                console.warn('no action');\n            }\n\n        }\n    }\n\n    async togglePlaylistEntry(entryData) {\n        if(!this.isPlaylist(entryData.url))\n            throw new Error(\"Invalid playlist entry\");\n        entryData.open = !entryData.open;\n        if(entryData.open === true) {\n            if(!entryData.playlist) {\n                entryData.loading = true;\n                this.playlist && this.playlist.forceUpdate(); // TODO: optimize\n                entryData.playlist = await this.loadPlaylistDataFromURL(entryData.url);\n                delete entryData.loading;\n            }\n\n        }\n        this.playlist && this.playlist.forceUpdate(); // TODO: optimize\n    }\n\n    playEntry(entryData) {\n\n    }\n\n    /** Loading **/\n\n//     /** @deprecated **/\n//     async loadSongFromURL(url) {\n//         const song = this.song;\n//         if(this.isPlaylist(url)) {\n//             const playlistEntry = new PlaylistPlaylistEntry({url});\n//             this.addEntry(playlistEntry);\n//             this.forceUpdate();\n//             // await this.loadPlaylistFromURL(url);\n//             // const entry = this.getCurrentEntry();\n//             // if(entry.url && !this.isPlaylist(entry.url))\n//             //     await this.loadSongFromPlaylistEntry(this.position);\n//         } else {\n//             await song.loadSongFromURL(url);\n//             this.setStatus(\"Loaded from url: \" + url);\n// //                 this.addSongURLToPlaylist(url, song.data.title, song.getSongLengthInSeconds());\n//         }\n//         // this.render();\n//     }\n\n\n    /** @deprecated **/\n    async loadURLAsPlaylist(playlistURL) {\n        this.addEntryToPlaylist(playlistURL);\n        this.toggleEntryAtPosition(0);\n        // this.state.playlist = await this.loadPlaylistDataFromURL(playlistURL);\n        // this.forceUpdate();\n    }\n\n    async loadSongFromPlaylistEntry() {\n        const currentEntry = await this.getCurrentEntry();\n\n        let song;\n        if(this.isPlaylist(currentEntry.url))\n            throw new Error(\"Invalid song (playlist): \" + currentEntry.url);\n\n        if(currentEntry.file) {\n            this.setStatus(\"Loading playlist song from file: \" + currentEntry.file.name);\n            song = await Song.loadSongFromFileInput(currentEntry.file);\n        } else if(currentEntry.url) {\n            this.setStatus(\"Loading playlist song from url: \" + currentEntry.url);\n            song = await Song.loadSongFromURL(currentEntry.url);\n        } else {\n            throw new Error(\"Invalid song entry: \" + JSON.stringify(currentEntry));\n        }\n        return song;\n        // this.setPositionEntry(currentEntry);\n\n        // song.playlistPosition = this.position;\n        // this.render();\n    }\n\n    async loadPlaylistDataFromURL(playlistURL) {\n        console.log(\"Loading playlist: \", playlistURL);\n        playlistURL = new URL(playlistURL, document.location);\n\n        const playlistData = await new Promise((resolve, reject) => {\n            const xhr = new XMLHttpRequest();\n            xhr.open('GET', playlistURL.toString(), true);\n            xhr.responseType = 'json';\n            xhr.onload = () => resolve(xhr.response);\n            xhr.onerror = reject;\n            xhr.send();\n        });\n\n        if(!playlistData.entries)\n            throw new Error(\"No playlist entries: \" + playlistURL);\n        if(!Array.isArray(playlistData.entries))\n            throw new Error(\"Invalid playlist entries: \" + playlistURL);\n\n        let urlPrefix = playlistData.urlPrefix;\n        if(!urlPrefix || urlPrefix[0] !== '/')\n            urlPrefix = playlistURL.pathname.split(\"/\").slice(0,-1).join(\"/\") + '/' + (urlPrefix||'');\n        for(let id=0; id<playlistData.entries.length; id++) {\n            let entry = playlistData.entries[id];\n            if(typeof entry === \"object\")   entry.url = urlPrefix + entry.url;\n            else                            entry = urlPrefix + entry;\n\n            entry = this.parseEntryData(entry);\n            playlistData.entries[id] = entry;\n        }\n\n        console.log(\"Loaded playlist: \", playlistURL, playlistData);\n        return playlistData;\n    }\n\n    addEntryToPlaylist(entryData, insertAtPosition=null) {\n        entryData = this.parseEntryData(entryData);\n        const playlist = this.state.playlist;\n        if(!playlist.entries)\n            playlist.entries = [];\n        const entries = playlist.entries;\n        if(insertAtPosition === null) {\n            insertAtPosition = entries.length;\n            entries.push(entryData);\n        } else {\n            entries.splice(insertAtPosition, 0, entryData);\n        }\n    }\n\n    async openSongFromFileDialog(e, accept=null) {\n        const file = await this.openFileDialog(accept);\n        this.addInputFileToPlaylist(file);\n    }\n\n    addInputFileToPlaylist(file) {\n        const entryData = {\n            file,\n            name: 'file://' + file.name,\n            url: 'file://' + file.name\n        };\n        this.addEntryToPlaylist(entryData);\n        this.playlist.forceUpdate();\n    }\n\n    // addSongURLToPlaylist(url, name=null, length=null) {\n    //     this.addEntryToPlaylist({url, name, length});\n    //     if(this.playlist)\n    //         this.playlist.forceUpdate();\n    //     this.setStatus(\"Added URL to playlist: \" + url);\n    // }\n    // addSongFileToPlaylist(file, name=null, length=null) {\n    //     const entryData = {\n    //         url: 'file://' + file.name,\n    //         name: name || file.name.split('/').pop(),\n    //         length\n    //     };\n    //     this.addEntryToPlaylist(entryData);\n    //     this.forceUpdate();\n    //     this.setStatus(\"Added file to playlist: \" + file.name);\n    // }\n\n    scrollToEntry(entryPosition) {\n        console.log('TODO scrollToEntry', entryPosition)\n        // (currentEntry.scrollIntoViewIfNeeded || currentEntry.scrollIntoView).apply(currentEntry);\n    }\n\n    /** Playback **/\n\n    async playlistPlay() {\n        // this.playlistStop();\n        let position = this.getCurrentEntryPosition();\n        if(this.song && this.song.playlistPosition === position) {\n            if(this.song.isPaused)\n                return this.song.resume();\n            if(this.song.isPlaying)\n                throw new Error(\"Song is already playing\");\n            await this.setCurrentSong(this.song);\n            this.setStatus(\"Playing: \" + this.song.data.title);\n            return await this.song.play(this.getAudioContext());\n        }\n        // let entry = await this.playlist.getCurrentEntry();\n        // if(entry instanceof PlaylistPlaylistEntry)\n        //     entry = await this.playlistMoveToNextSongEntry();\n\n        this.setState({playing: true});\n        let currentEntry = await this.getCurrentEntry();\n        if(this.isPlaylist(currentEntry.url))\n            await this.playlistMoveToNextSongEntry();\n        while(this.state.playing) {\n            this.scrollToEntry(this.getCurrentEntryPosition());\n            const currentSong = await this.loadSongFromPlaylistEntry();\n            await this.setCurrentSong(currentSong);\n            this.setStatus(\"Playing: \" + currentSong.data.title);\n            await currentSong.play(this.getAudioContext());\n            if(!this.state.playing)\n                break;\n            // currentEntry = await this.playlistMoveToNextSongEntry();\n        }\n        this.setState({playing: false});\n    }\n\n    /** @deprecated **/\n    async playlistStop() {\n        this.isPlaylistActive = false;\n        if(this.song && this.song.isPlaying) {\n            this.setStatus(\"Stopping: \" + this.song.data.title);\n            this.song.stopPlayback();\n            this.song.setPlaybackPositionInTicks(0);\n            this.setStatus(\"Stopped: \" + this.song.data.title);\n        }\n    }\n\n    /** @deprecated **/\n    async playlistNext() {\n        this.playlistStop();\n        await this.playlistMoveToNextSongEntry();\n        await this.playlistPlay();\n    }\n\n    async playlistMovePosition(position) {\n        let nextEntry = await this.getEntry(position,false);\n        if(!nextEntry) position = 0;\n        return await this.setPlaylistPosition(position);\n    }\n\n    /** @deprecated **/\n    async playlistMoveToEntry(nextEntry) {\n        const position = await this.getEntryPosition(nextEntry);\n        return await this.playlistMovePosition(position);\n    }\n\n    async playlistMoveToNextSongEntry() {\n        let position = this.getCurrentEntryPosition();\n        const currentEntry = await this.getEntry(position);\n        if(this.isPlaylist(currentEntry.url) && currentEntry.open !== true) {\n            await this.togglePlaylistEntry(currentEntry);\n            // this.playlist.forceUpdate();\n            // await currentEntry.togglePlaylist(true);\n        }\n        let totalCount = await this.getPlaylistCount();\n        for(let i=0; i<totalCount; i++) {\n            position++;\n\n            const currentEntry = await this.getEntry(position);\n            if(this.isPlaylist(currentEntry.url)) {\n                await this.togglePlaylistEntry(currentEntry);\n                // this.playlist.forceUpdate();\n                totalCount = await this.getPlaylistCount();\n            } else {\n                if(position >= totalCount)\n                    position = 0;\n                await this.setPlaylistPosition(position);\n                return; // Done\n                // return currentEntry;\n            }\n        }\n        throw new Error(\"Song entry not found\");\n    }\n\n    async getPlaylistCount() {\n        let count=0;\n        await this.eachEntry((entry, i) => count = i+1);\n        return count;\n    }\n\n    async setPlaylistPosition(position) {\n        if(position !== this.state.playlist.position) {\n            this.state.playlist.position = position;\n            this.playlist.forceUpdate();\n            // const nextEntry = await this.getEntry(position);\n            // await currentEntry.removePosition();\n            // await nextEntry.setPosition();\n        }\n        // this.setState({position});\n        // return nextEntry;\n    }\n    async setPositionEntry(entry) {\n        const position = await this.findEntryPosition(entry);\n        await this.setPlaylistPosition(position);\n    }\n\n\n    /** Utilities **/\n\n    isPlaylist(entryUrl) {\n        return entryUrl && (entryUrl.toString().toLowerCase().endsWith('.pl.json'));\n    }\n\n    parseEntryData(entryData) {\n        if(typeof entryData === \"string\") {\n            const split = entryData.split(';');\n            entryData = {url: split[0]};\n            if(split[1]) entryData.name = split[1];\n            if(split[2]) entryData.length = split[2];\n        }\n        if(!entryData.url)\n            throw new Error(\"Invalid ASPPlaylist Entry URL\");\n        if(!entryData.name)\n            entryData.name = '../' + entryData.url.split('/').pop();\n        return entryData;\n    }\n\n    // async updateEntries() {\n    //     console.time('updateEntries');\n    //     for(let i=0; i<this.playlist.length; i++) {\n    //         const entry = this.playlist[i];\n    //         await entry.updateID(i);\n    //     }\n    //     console.timeEnd('updateEntries');\n    // }\n\n    // toggleSelect(position) {\n    //     const selected = this.state.selected;\n    //     const i = selected.indexOf(position);\n    //     if(i === -1) {\n    //         selected.push(position);\n    //         selected.sort();\n    //     } else {\n    //         selected.splice(i, 1);\n    //     }\n    //     this.getEntry(position)\n    //         .updatePlaylist(this);\n    // }\n\n\n    // async eachEntry(callback) {\n    //     let offset=0;\n    //     return await this.eachEntry(async (entry, i) => {\n    //         if(entry instanceof PlaylistPlaylistEntry)\n    //             return null;\n    //         return await callback(entry, offset++);\n    //     })\n    // }\n    //\n    // async eachPlaylistEntry(callback) {\n    //     let offset=0;\n    //     return await this.eachEntry(async (entry, i) => {\n    //         if(!entry instanceof PlaylistPlaylistEntry)\n    //             return null;\n    //         return await callback(entry, offset++);\n    //     })\n    // }\n\n    // getCurrentEntry() {\n    //     if(this.state.playlist.length === 0)\n    //         throw new Error(\"Empty playlist\");\n    //     return this.getEntry(this.state.playlist.position);\n    // }\n\n    // async addEntry(entry, insertAtPosition=null, skipDuplicate=true) {\n    //     if(!entry instanceof ASPPlaylistEntry)\n    //         throw new Error(\"Invalid ASPPlaylistEntry\");\n    //     if(skipDuplicate && this.entries.find(e => e.url === entry.url)) {\n    //         return false;\n    //     }\n    //     if(insertAtPosition === null) {\n    //         insertAtPosition = this.entries.length;\n    //         this.entries.push(entry);\n    //     } else {\n    //         this.entries.splice(insertAtPosition, 0, entry);\n    //     }\n    //     await entry.updateID(insertAtPosition);\n    //     // this.forceUpdate();\n    //     return true;\n    // }\n\n\n    // async updateNextPosition() {\n    //     let position = this.state.playlist.position;\n    //     const currentEntry = await this.getEntry(position);\n    //     await currentEntry.removePosition();\n    //     position++;\n    //     let nextEntry = await this.getEntry(position,false);\n    //     if(!nextEntry) position = 0;\n    //     return await this.setPlaylistPosition(position);\n    // }\n\n\n    // getPlaylistPosition() { return this.state.playlist.position; }\n\n\n    // async updatePosition(position) {\n    //     if(!this.playlist[position])\n    //         throw new Error(\"Invalid playlist position: \" + position);\n    //     this.state.playlist.position = position;\n    //     // await this.updateEntries();\n    // }\n\n\n\n\n    /** Song Playback **/\n\n    // async songPlay() {\n    //     if(this.playlistActive)\n    //         throw new Error(\"Playback is already active\");\n    //     this.playlistActive = true;\n    //     await this.song.play();\n    //     await this.songNext(); // TODO: prevent async playback\n    // }\n    //\n    // async songNext() {\n    //     this.playlistActive = true;\n    //     while(this.playlistActive) {\n    //         const entry = await this.playlistMovePosition();\n    //         (entry.scrollIntoViewIfNeeded || entry.scrollIntoView).apply(entry);\n    //         const nextSong = await this.playlist.loadSongFromPlaylistEntry();\n    //         this.setCurrentSong(nextSong);\n    //         await this.song.play();\n    //     }\n    // }\n    //\n    // async songPause() {\n    //     this.song.stopPlayback();\n    // }\n\n    // songStopIfPlaying() {\n    //     if(this.playlistActive)\n    //         this.songStop();\n    // }\n\n\n    setSongPositionPercentage(playbackPercentage) {\n        const playbackPosition = (playbackPercentage / 100) * this.state.songLength;\n        return this.setSongPosition(playbackPosition);\n    }\n    setSongPosition(playbackPosition) {\n        // const wasPlaying = !!this.song.playback;\n        // if (wasPlaying)\n        //     this.song.stopPlayback();\n        if(!this.song)\n            throw new Error(\"No song loaded\");\n        const song = this.song;\n        song.setPlaybackPosition(playbackPosition);\n        // if (wasPlaying)\n        //     this.song.play();\n    }\n\n    // async clearPlaylist() {\n    //     this.playlist.clear();\n    // }\n\n    /** @deprecated **/\n    async playlistPlayTest() {\n        let entry = await this.playlist.getCurrentEntry();\n        while(entry) {\n            (entry.scrollIntoViewIfNeeded || entry.scrollIntoView).apply(entry);\n            await new Promise((resolve, reject) => {\n                setTimeout(resolve, 1000);\n            });\n            entry = await this.playlistMoveToNextSongEntry();\n        }\n    }\n\n    /** Toggle Panels **/\n\n    togglePanelPlaylist(e) {\n        this.classList.toggle('hide-panel-playlist');\n    }\n\n    togglePanelSong(e) {\n        this.classList.toggle('hide-panel-song');\n    }\n    toggleFullscreen(e) {\n        const setFullScreen = !this.classList.contains('fullscreen');\n        // this.containerElm.classList.toggle('fullscreen', setFullScreen);\n        this.classList.toggle('fullscreen', setFullScreen);\n\n        if (setFullScreen) {\n\n        }\n    }\n\n\n\n\n    /** Prompt **/\n\n    async openFileDialog(accept=null) {\n        return await new Promise((resolve, reject) => {\n            const input = document.createElement('input');\n            input.setAttribute('type', 'file');\n            if(accept)\n                input.setAttribute('accept', accept);\n            input.addEventListener('change', () => {\n                const file = input.files[0];\n                if(file)\n                    resolve(file);\n                else\n                    reject();\n            });\n            input.click();\n        })\n    }\n\n\n\n    // get playlist() { return this.state.playlist; }\n\n    // createStyleSheetLink(stylePath, scriptElm=null) {\n    //     // const AudioSourceLoader = customElements.get('audio-source-loader');\n    //     const linkHRef = new URL(stylePath, (scriptElm || thisModule).src);\n    //     const link = document.createElement('link');\n    //     link.setAttribute('rel', 'stylesheet');\n    //     link.href = linkHRef;\n    //     return link;\n    // }\n\n    // restart() {\n    //     const RNRestart = require('react-native-restart').default;\n    //     RNRestart.Restart();\n    // }\n\n    // openMenu(menuKey) {\n    //     this.state.menuKey = menuKey;\n    //     // if(this.props.onUpdateMenu)\n    //         this.props.onUpdateMenu();\n    //     // setTimeout(e => this.toggleMenu(), 10);\n    // }\n    //\n    // toggleMenu(menuKey=null) {\n    //     if(this.props.onToggleMenu)\n    //         this.props.onToggleMenu();\n    // }\n\n}\n\nexport default ASPlayerActions;\n","import React from \"react\";\n\nimport {ASUIMenuAction, ASUIMenuDropDown} from \"../components\";\n\nimport Storage from \"../common/storage/Storage\";\n\nimport ASPlayerRenderer from \"./ASPlayerRenderer\";\n\n\nclass ASPlayerMenu extends ASPlayerRenderer {\n\n    openMenu(e, options) {\n        // console.log('openMenu', e);\n        if(!this.state.portrait) {\n            if(typeof e.openMenu !== \"function\") {\n                console.warn(\"Menu.openMenu was triggered from a non-Menu element class\");\n            } else {\n                e.openMenu(e, options);\n                return;\n            }\n        }\n\n        console.log(this.header);\n        this.header.current.openMenu(e, options);\n    }\n\n    renderRootMenu() {\n        const props = {\n            vertical: !this.state.portrait,\n            // openOnHover: false,\n            // openOnHover: !this.state.portrait,\n        };\n        if(!this.state.portrait)\n            props.arrow = false;\n        return (<>\n            <ASUIMenuDropDown {...props} options={p => this.renderFileMenu(p)}      >File</ASUIMenuDropDown>\n            <ASUIMenuDropDown {...props} options={p => this.renderPlaylistMenu(p)}  >Playlist</ASUIMenuDropDown>\n            <ASUIMenuDropDown {...props} options={p => this.renderViewMenu(p)}      >View</ASUIMenuDropDown>\n        </>);\n    }\n\n    renderFileMenu() {\n        return (<>\n            <ASUIMenuDropDown options={p => this.renderFileMemoryMenu(p)}      >Load from Memory</ASUIMenuDropDown>\n            <ASUIMenuAction onAction={e => this.openSongFromFileDialog(e)} >Load from File</ASUIMenuAction>\n            <ASUIMenuAction onAction={e=>{}} disabled>Load from URL</ASUIMenuAction>\n            <ASUIMenuAction onAction={e=>{}} disabled>Load from Library</ASUIMenuAction>\n        </>);\n    }\n\n    async renderFileMemoryMenu() {\n        const storage = new Storage();\n        const songRecentUUIDs = await storage.getRecentSongList() ;\n        return songRecentUUIDs.length > 0\n            ? songRecentUUIDs.map((entry, i) =>\n                <ASUIMenuAction\n                    key={i}\n                    onAction={e => this.loadSongFromMemory(entry.uuid)}\n                >{entry.name || entry.uuid}</ASUIMenuAction>)\n            :<ASUIMenuAction\n                key=\"no-recent\"\n                disabled\n                onAction={e=>{}}\n            >No Songs Available</ASUIMenuAction>\n        ;\n    }\n\n    renderPlaylistMenu() {\n        return (<>\n            <ASUIMenuAction key=\"next\" onAction={e => this.playlistNext(e)}>Load from Memory</ASUIMenuAction>\n            <ASUIMenuAction key=\"clear\" onAction={e => this.clearPlaylist(e)} >Load from File</ASUIMenuAction>\n        </>);\n    }\n\n    renderViewMenu() {\n        return (<>\n            <ASUIMenuAction key=\"fullscreen\" onAction={e => this.toggleFullscreen(e)}>{this.state.fullscreen ? 'Disable' : 'Enable'} Fullscreen</ASUIMenuAction>\n            <ASUIMenuAction key=\"hide-panel-song\" onAction={e => this.togglePanelSong(e)} >{this.state.showPanelSong ? 'Show' : 'Hide'} Song Forms</ASUIMenuAction>\n            <ASUIMenuAction key=\"hide-panel-playlist\" onAction={e => this.togglePanelPlaylist(e)} >{this.state.showPanelPlaylist ? 'Show' : 'Hide'} Playlist</ASUIMenuAction>\n        </>);\n    }\n\n\n}\n\nexport default ASPlayerMenu;\n","import React from \"react\";\n\nimport {\n    ASUIButton,\n    ASUIDiv,\n    ASUIForm,\n    ASUIIcon,\n    ASUIInputRange,\n    ASUIMenuOverlayContainer,\n    ASUIPanel\n} from \"../components\";\n\n\nimport ASPPlaylist from \"./playlist/ASPPlaylist\";\nimport ASPlayerStyle from \"./ASPlayerStyle\";\nimport {ASPlayerHeader} from \"./header/ASPlayerHeader\";\n\nclass ASPlayerRenderer extends ASPlayerStyle {\n    constructor(props={}) {\n        super(props);\n        this.state = {\n            title: \"Audio Source Player\",\n            status: \"[No Song Loaded]\",\n            version: require('../package.json').version,\n            menuKey: 'root',\n            fullscreen: false,\n            portrait: true,\n            showPanelSong: true,\n            showPanelPlaylist: true,\n        };\n        this.playlist = null; // playlist ref;\n        this.footerVersionText = React.createRef();\n    }\n\n    render() {\n        return (\n            <ASUIDiv className={[\"asp-container\", this.state.portrait ? 'portrait' : 'landscape'].join(' ')}>\n                <ASUIMenuOverlayContainer\n                    isActive={this.state.portrait}\n                >\n                    <ASUIDiv key=\"header\" className=\"asp-title-container\">\n                        <ASPlayerHeader\n                            title={this.state.title}\n                            portrait={this.state.portrait}\n                            menuContent={() => this.renderRootMenu()}\n                            />\n                    </ASUIDiv>\n                    <ASUIDiv className=\"asp-forms-container\">\n                        <ASUIPanel className=\"song\" header=\"Song\">\n                            <ASUIForm className=\"playback\" header=\"Playback\">\n                                <ASUIButton\n                                    className=\"song-play\"\n                                    onAction={e => this.playlistPlay(e)}\n                                >\n                                    <ASUIIcon source=\"play\"/>\n                                </ASUIButton>\n                                <ASUIButton\n                                    className=\"song-pause\"\n                                    onAction={e => this.playlistPause(e)}\n                                >\n                                    <ASUIIcon source=\"pause\"/>\n                                </ASUIButton>\n                                <ASUIButton\n                                    className=\"song-stop\"\n                                    onAction={e => this.playlistStop(e)}\n                                >\n                                    <ASUIIcon source=\"stop\"/>\n                                </ASUIButton>\n                                <ASUIButton\n                                    className=\"song-next\"\n                                    onAction={e => this.playlistNext(e)}\n                                >\n                                    <ASUIIcon source=\"next\"/>\n                                </ASUIButton>\n                            </ASUIForm>\n\n                            <ASUIForm className=\"file\" header=\"File\">\n                                <ASUIButton\n                                    className=\"file-load\"\n                                    onAction={(e) => this.loadSongFromFileInput(e)}\n                                    accept=\".json,.mid,.midi\"\n                                    ref={ref => this.fieldSongFileLoad = ref}\n                                    title=\"Load Song from File\"\n                                >\n                                    <ASUIIcon source=\"file-load\"/>\n                                </ASUIButton>\n                                <ASUIButton\n                                    className=\"file-save\"\n                                    onAction={e => this.saveSongToFile(e)}\n                                    title=\"Save Song to File\"\n                                >\n                                    <ASUIIcon source=\"file-save\"/>\n                                </ASUIButton>\n                            </ASUIForm>\n\n                            <ASUIForm className=\"volume\" header=\"Volume\">\n                                <ASUIInputRange\n                                    className=\"volume\"\n                                    onChange={(newVolume) => this.setVolume(newVolume / 100)}\n                                    value={this.state.volume}\n                                    min={1}\n                                    max={100}\n                                    ref={ref => this.fieldSongVolume = ref}\n                                    title=\"Song Volume\"\n                                />\n                            </ASUIForm>\n\n                            <ASUIForm className=\"position\" header=\"Position\">\n                                <ASUIInputRange\n                                    className=\"position\"\n                                    onChange={(pos) => this.setSongPosition(pos)}\n                                    value={0}\n                                    min={0}\n                                    max={Math.ceil(this.state.songLength) || 1}\n                                    ref={ref => this.fieldSongPosition = ref}\n                                    title=\"Song Position\"\n                                />\n                            </ASUIForm>\n\n                            <ASUIForm className=\"timing\" header=\"Timing\">\n                                <ASUIButton\n                                    className=\"timing\"\n                                    onAction={(e) => this.setSongPositionPrompt()}\n                                    ref={ref => this.fieldSongTiming = ref}\n                                    title=\"Song Timing\"\n                                    children=\"00:00:000\"\n                                />\n                            </ASUIForm>\n\n                            <ASUIForm className=\"name\" header=\"Name\">\n                                <ASUIButton\n                                    className=\"name\"\n                                    onAction={(e) => this.setSongNamePrompt()}\n                                    title=\"Song Name\"\n                                    children={this.song ? this.song.data.title : \"no song loaded\"}\n                                />\n                            </ASUIForm>\n\n                            <ASUIForm className=\"version\" header=\"Version\">\n                                <ASUIButton\n                                    className=\"version\"\n                                    onAction={(e) => this.setSongVersionPrompt()}\n                                    ref={ref => this.fieldSongVersion = ref}\n                                    title=\"Song Version\"\n                                    children={this.song ? this.song.data.version : \"0.0.0\"}\n                                />\n                            </ASUIForm>\n\n                            <ASUIForm className=\"source\" header=\"Source\">\n                                <ASUIButton\n                                    className=\"source\"\n                                    onAction={(e, newSongVersion) => this.openSongSource(e, newSongVersion)}\n                                    title=\"Song Source\"\n                                >\n                                    <ASUIIcon source=\"source\"/>\n                                </ASUIButton>\n                            </ASUIForm>\n                        </ASUIPanel>\n                        <ASUIPanel className=\"playlist\" header=\"Playlist\" styleContainer={{}}>\n                            <ASPPlaylist\n                                player={this}\n                                ref={ref => this.playlist = ref}\n                                />\n                        </ASUIPanel>\n                    </ASUIDiv>\n                    <ASUIDiv key=\"footer\" className=\"asp-footer-container\">\n                        <ASUIDiv className=\"asp-status-text\">{this.state.status}</ASUIDiv>\n                        <ASUIDiv className=\"asp-version-text\"\n                             ref={this.footerVersionText}\n                        >{this.state.version}</ASUIDiv>\n                    </ASUIDiv>\n                </ASUIMenuOverlayContainer>\n            </ASUIDiv>\n        )\n    }\n\n}\n\nexport default ASPlayerRenderer;\n","import ASPlayerActions from \"./ASPlayerActions\";\n\nimport {Song, SongValues}          from \"../song\";\nimport Storage       from \"../common/storage/Storage\";\n\n/**\n * ASPlayer requires a modern browser\n */\n\n// const fs = new AudioSourceFileService();\n// setTimeout(async e => {\n//     const torrentID = \"005ff6b3e47f34ad254b301481561d3145187467\";\n//     const torrent = await fs.getTorrent(torrentID);\n//     console.log(torrent.files);\n//     torrent.files[50].getBuffer(async function(err, buffer) {\n//         if(err) throw new Error(err);\n//         const files = await fs.decompress7ZipArchive(buffer);\n//         console.log(files);\n//     });\n// }, 1000);\n\nclass ASPlayer extends ASPlayerActions {\n    constructor(props=null) {\n        super(props);\n        this.state.playlist = {\n            entries: [],\n            position: 0\n        };\n        this.state.volume = Song.DEFAULT_VOLUME;\n        this.state.songLength = 0;\n        this.state.playlistActive = false;\n        this.state.playing = false;\n        this.state.paused = false;\n        // this.state.position = 0;\n\n        this.audioContext = null;\n        this.volumeGain = null;\n        this.song = null;\n        // this.shadowDOM = null;\n        // this.props.playlistActive = false;\n        // this.props.playing = false;\n        // this.props.paused = false;\n\n        this.onResizeCallback = e => this.onResize(e);\n    }\n\n    // static getDefaultProps() {\n    //     return {\n    //         onPress: e => this.onInput(e),\n    //         onPressIn: e => this.onInput(e),\n    //         onPressOut: e => this.onInput(e)\n    //     };\n    // }\n\n    // get isPlaylistActive()      { return this.state.playlistActive; }\n    // set isPlaylistActive(value) { this.setStatus({playlistActive: value}); }\n    // get isPlaying()             { return this.state.playing; }\n    // set isPlaying(value)        { this.setStatus({playing: value}); }\n    // get isPaused()              { return this.state.paused; }\n    // set isPaused(value)         { this.setStatus({paused: value}); }\n\n    get values() { return new SongValues(this.song); }\n\n    componentDidMount(e) {\n        const url = this.props.src || this.props.url;\n        if(url)\n            this.loadURLAsPlaylist(url);\n        else\n            this.loadState();\n\n        if(window)\n            window.addEventListener('resize', this.onResizeCallback);\n        // this.onResize(e);\n        // this.loadPackageInfo()\n        //     .then(packageInfo => this.setVersion(packageInfo.version));\n    }\n\n    componentWillUnmount() {\n\n        if(window)\n            window.removeEventListener('resize', this.onResizeCallback);\n        this.saveState();\n    }\n\n    /** Portrait Mode **/\n\n    onResize() {\n        const aspectRatio = window.innerWidth / window.innerHeight;\n        const portrait = aspectRatio < 14/16;\n        if(!this.state.portrait === portrait) {\n            console.log(\"Setting portrait mode to \", portrait, \". Aspect ratio: \", aspectRatio);\n            this.setState({portrait});\n        }\n    }\n\n    disconnectedCallback() {\n        super.disconnectedCallback();\n        // if(isBrowser)\n            this.saveState();\n            // window.addEventListener('unload', e => this.saveState(e));\n    }\n\n    async loadState() {\n\n        const storage = new Storage();\n        const state = await storage.loadState('audio-source-player-state');\n        console.log('loadState', state);\n\n\n        if (state) {\n            this.setState(state);\n        }\n    }\n\n\n    async saveState() {\n        // await this.saveSongToMemory(e);\n        const state = this.state;\n        const storage = new Storage();\n        await storage.saveState(state, 'audio-source-player-state');\n        console.log('saveState', state);\n    }\n\n\n\n    /** Package Info **/\n\n    // async loadPackageInfo(force=false) {\n    //     const url = new URL('files/package.json', document.location); // , thisModule.src);\n    //\n    //     let packageInfo = this.packageInfo;\n    //     if (!force && packageInfo)\n    //         return packageInfo;\n    //\n    //     const response = await fetch(url);\n    //     packageInfo = await response.json();\n    //     if(!packageInfo.version)\n    //         throw new Error(\"Invalid package version: \" + url);\n    //\n    //     console.log(\"Package Version: \", packageInfo.version, packageInfo);\n    //     this.packageInfo = packageInfo;\n    //     return packageInfo;\n    // }\n\n\n    // Rendering\n    // get statusElm() { return this.shadowDOM.querySelector(`asui-div[key=asp-status-container] asui-div[key=status-text]`); }\n    // get versionElm() { return this.shadowDOM.querySelector(`asui-div[key=asp-status-container] asui-div[key=version-text]`); }\n\n\n    toggleFullscreen(e) {\n        const setFullScreen = !this.classList.contains('fullscreen');\n        this.containerElm.classList.toggle('fullscreen', setFullScreen);\n        this.classList.toggle('fullscreen', setFullScreen);\n    }\n\n    async onSongEvent(e) {\n        // console.log(e.type, e);\n        switch(e.type) {\n            case 'log':\n                this.setStatus(e.detail);\n                break;\n\n            case 'song:seek':\n                this.updateSongPositionValue(e.detail.position);\n\n                break;\n\n            case 'song:volume':\n                this.fieldSongVolume.value = e.detail.volume;\n                break;\n\n            case 'song:play':\n                this.containerElm.classList.add('playing');\n                if(e.playback) {\n                    await e.playback.waitForPlaybackToEnd();\n                    this.containerElm.classList.remove('playing');\n                }\n\n                this.setState({playing: true, paused: false});\n                // this.fieldSongPlaybackPause.disabled = false;\n                this.updateSongPositionMaxLength(this.song.getSongLengthInSeconds());\n                const updateSongPositionInterval = setInterval(e => {\n                    if (!this.song.isPlaying) {\n                        clearInterval(updateSongPositionInterval);\n                        // this.fieldSongPlaybackPause.disabled = true;\n                        this.setState({playing: false, paused: false});\n                        // this.containerElm.classList.remove('playing');\n                        // this.classList.remove('playing');\n                    }\n                    this.updateSongPositionValue(this.song.getSongPlaybackPosition());\n                }, 10);\n                break;\n\n            case 'song:pause':\n                this.setState({paused: true});\n                // this.containerElm.classList.remove('playing');\n                break;\n            case 'song:end':\n                this.setState({playing: false, paused: false});\n                // this.containerElm.classList.remove('playing');\n                break;\n\n            default:\n                console.log(\"Unknown song event: \", e.type);\n                break;\n        }\n    }\n\n\n    // Input\n\n    onInput(e) {\n        if(e.defaultPrevented)\n            return;\n        switch(e.type) {\n            case 'click':\n                break;\n            case 'dragover':\n                e.stopPropagation();\n                e.preventDefault();\n                e.dataTransfer.dropEffect = 'copy';\n                break;\n            case 'drop':\n                e.stopPropagation();\n                e.preventDefault();\n                var files = e.dataTransfer.files; // Array of all files\n                this.loadSongFromFileInput(files[0]);\n                console.log(files);\n                break;\n\n            default:\n                console.log(\"Unknown input event: \", e.type);\n                break;\n        }\n    }\n\n}\nASPlayer.DEFAULT_VOLUME = 0.3;\n\n\nexport default ASPlayer;\n","export default class ActiveTrackState {\n    static DEFAULT_ROW_LENGTH = 16;\n    static DEFAULT_BEATS_PER_SEGMENT = 16;\n    static DEFAULT_BEATS_PER_MEASURE = 4;\n\n    constructor(composer, trackName=null) {\n        if(trackName === null)\n            trackName = composer.state.selectedTrack;\n        if(!composer.state.activeTracks.hasOwnProperty(trackName))\n            throw new Error(`Invalid track: ${trackName}`)\n\n        this.composer = composer;\n        this.trackName = trackName;\n        this.state = composer.state.activeTracks[trackName];\n    }\n\n    get timeDivision() { return this.state.timeDivision || this.composer.song.data.timeDivision; }\n    get quantizationTicks() { return this.state.quantizationTicks || this.timeDivision; }\n\n    get beatsPerMinute() { return this.state.beatsPerMinute || this.composer.song.data.beatsPerMinute; }\n    get beatsPerMeasure() { return this.state.beatsPerMeasure || this.composer.song.data.beatsPerMeasure || ActiveTrackState.DEFAULT_BEATS_PER_MEASURE; }\n\n    get programID() { return this.state.programID; }\n\n    get selectedIndices() { return this.state.selectedIndices || []; }\n    get cursorOffset() { return this.state.cursorOffset || 0; }\n    get cursorPositionTicks() { return this.state.cursorPositionTicks || 0; }\n    get playingIndices() { return this.state.playingIndices || []; }\n\n    get currentCommand() { return this.state.currentCommand || 'C4'; }\n    get currentDuration() { return this.state.currentDuration || '1B'; }\n    get currentVelocity() { return this.state.currentVelocity || null; }\n\n    get destinationList() { return this.state.destinationList || []; }\n    get rowLength() { return this.state.rowLength || ActiveTrackState.DEFAULT_ROW_LENGTH; }\n    get rowOffset() { return this.state.rowOffset || 0; }\n\n    get trackLengthTicks() { return this.state.trackLengthTicks || null; }\n    get segmentLengthTicks() { return this.state.segmentLengthTicks || (this.timeDivision * ActiveTrackState.DEFAULT_BEATS_PER_SEGMENT); }\n    get segmentPositions() { return this.state.segmentPositions || [0]; }\n\n    get startPosition() { return this.state.startPosition || 0; }\n\n    async update(newState) {\n        await this.composer.updateState(state => {\n            if(typeof newState === \"function\")\n                newState(state.activeTracks[this.trackName]);\n\n            // state.activeTracks[this.trackName] = newState;\n            return state;\n        })\n    }\n}\n","import * as React from \"react\";\nimport PropTypes from 'prop-types';\n\nimport {ASUIDropDownContainer} from \"../../../../components/menu/\";\n\nimport \"./ASCTrackParam.css\";\n\n\nclass ASCTrackInstructionParameter extends React.Component {\n    /** Default Properties **/\n    static defaultProps = {\n        vertical: true\n    };\n\n    /** Property validation **/\n    static propTypes = {\n        options: PropTypes.any.isRequired,\n        trackerInstruction: PropTypes.any.isRequired,\n    };\n\n    constructor(props) {\n        super(props);\n        this.dropdown = React.createRef();\n        this.cb = {\n            onContextMenu: (e) => this.onContextMenu(e),\n            onKeyDown: (e) => this.onKeyDown(e),\n            // onMouseInput: e => this.onMouseInput(e),\n        };\n    }\n\n    render() {\n        let className = \"asct-parameter\";\n        if(this.props.type)\n            className += ' ' + this.props.type;\n\n        return <div\n            // onClick={this.cb.onMouseInput}\n            onKeyDown={this.cb.onKeyDown}\n            onContextMenu={this.cb.onContextMenu}\n            className={className}\n            title={this.props.title}\n            // tabIndex={0}\n        >\n            {this.props.children}\n            <ASUIDropDownContainer\n                ref={this.dropdown}\n                options={this.props.options}\n                vertical={this.props.vertical}\n                />\n        </div>;\n    }\n\n    toggleMenu()    { return this.dropdown.current.toggleMenu(); }\n\n\n    /** User Input **/\n\n\n    onKeyDown(e) {\n        if(e.isDefaultPrevented())\n            return;\n        switch(e.key) {\n            case 'ContextMenu':\n                e.preventDefault();\n                this.toggleMenu();\n                break;\n\n            default:\n                console.info(\"Unhandled key: \", e.key);\n                break;\n        }\n    }\n\n    // onMouseInput(e) {\n    //     console.log(e.type);\n    //     if(e.defaultPrevented)\n    //         return;\n    //     e.preventDefault();\n    //\n    //     switch(e.type) {\n    //         case 'click':\n    //             if(e.button === 0)\n    //                 this.selectInstruction();\n    //             else if(e.button === 1)\n    //                 throw new Error(\"Unimplemented middle button\");\n    //             else if(e.button === 2)\n    //                 this.toggleMenu();\n    //             else\n    //                 throw new Error(\"Unknown mouse button\");\n    //\n    //             break;\n    //         default:\n    //             throw new Error(\"Unknown Mouse event: \" + e.type);\n    //     }\n    // }\n\n    onContextMenu(e) {\n        if(e.defaultPrevented || e.shiftKey)\n            return;\n        e.preventDefault();\n        this.toggleMenu();\n    }\n\n\n    onMouseEnter(e) {\n        this.toggleMenu();\n    }\n\n    selectInstruction() {\n        this.props.trackerInstruction.selectInstruction();\n    }\n\n}\n\nexport default ASCTrackInstructionParameter;\n\n","import * as React from \"react\";\nimport PropTypes from \"prop-types\";\nimport ASCTrackInstructionParameter from \"../instruction/param/ASCTrackInstructionParameter\";\nimport TrackInstruction from \"../../../song/instruction/TrackInstruction\";\n\nexport default class ASCTrackInstructionBase extends React.Component {\n    /** Default Properties **/\n    static defaultProps = {\n    };\n\n    /** Property validation **/\n    static propTypes = {\n        index: PropTypes.number.isRequired,\n        instruction: PropTypes.any.isRequired,\n        tracker: PropTypes.any.isRequired,\n        cursorPosition: PropTypes.number.isRequired,\n        selected: PropTypes.bool.isRequired,\n        cursor: PropTypes.bool.isRequired\n    };\n\n    // play() {\n    //     const composer = this.props.composer;\n    //     composer.song.playInstructionAtIndex(destination, this.state.track.currentGroup, this.index, composer.song.getAudioContext().currentTime);\n    //     return this;\n    getTracker() { return this.props.tracker; }\n    getComposer() { return this.getTracker().props.composer; }\n    getSong() { return this.getComposer().getSong(); }\n    /** @returns Instruction **/\n    getInstruction() { return this.props.instruction; }\n    getInstructionIndex() { return this.props.index; }\n\n    render() {\n        // throw new Error(\"Unimplemented\");\n        return null;\n    }\n\n    renderParameters() {\n        const instruction = this.props.instruction;\n        const open = this.props.cursor || this.props.selected;\n\n        const parameters = [];\n\n        parameters.push(<ASCTrackInstructionParameter\n            key=\"command\"\n            title={`Command: ${instruction.command}`}\n            trackerInstruction={this}\n            type=\"command\"\n            options={() => this.renderMenuSelectCommand()}\n            ref={this.commandParam}\n        >{instruction.command}</ASCTrackInstructionParameter>);\n\n        // console.log('instruction', this.props, className);\n        if(open) {\n            const durationString = instruction.durationTicks === null ? 'N/A'\n                : this.getComposer().values.formatSongDuration(instruction.durationTicks);\n\n            if(typeof instruction.velocity !== \"undefined\")\n                parameters.push(<ASCTrackInstructionParameter\n                    key=\"velocity\"\n                    title={`Velocity: ${instruction.velocity}`}\n                    trackerInstruction={this}\n                    type=\"velocity\"\n                    options={() => this.renderMenuSelectVelocity(instruction.velocity)}\n                >{instruction.velocity}</ASCTrackInstructionParameter>);\n            if(typeof instruction.durationTicks !== \"undefined\")\n                parameters.push(<ASCTrackInstructionParameter\n                    key=\"duration\"\n                    title={`Duration: ${durationString}`}\n                    trackerInstruction={this}\n                    type=\"duration\"\n                    options={() => this.renderMenuSelectDuration(instruction.durationTicks)}\n                >{durationString||'-'}</ASCTrackInstructionParameter>);\n        }\n        return parameters;\n    }\n\n    /** Actions **/\n\n    playInstruction(destination=null) {\n        this.getTracker().getTrackInfo().updateCurrentInstruction(); // Hack\n        return this.getTracker().playInstructions(this.getInstructionIndex(), destination);\n    }\n\n    async selectInstruction(clearSelection=true, toggleValue = null) {\n        // const trackName = this.getTracker().getTrackName();\n        const selectedIndices = clearSelection ? [] : this.getTracker().getTrackState().selectedIndices;\n        // const instruction = this.getInstruction();\n        const i = selectedIndices.indexOf(this.props.index);\n        if(toggleValue === true || i === -1) {\n            if(i === -1)\n                selectedIndices.push(this.props.index);\n        } else {\n            if(i !== -1)\n                selectedIndices.splice(i, 1);\n        }\n        // this.getComposer().trackerSelectIndices(trackName, selectedIndices, this.props.cursorPosition)\n        // this.getTracker().selectIndices(selectedIndices); // , this.props.cursorPosition);\n        await this.getTracker().setCursorOffset(this.props.cursorPosition, selectedIndices);\n        return selectedIndices;\n    }\n\n    async selectInstructionWithAction(clearSelection=true, toggleValue = null) {\n        const selectedIndices = await this.selectInstruction(clearSelection, toggleValue);\n        const instruction = this.getInstruction();\n        if(instruction instanceof TrackInstruction) {\n            this.getComposer().trackerToggleTrack(\n                instruction.getTrackName(),\n                null,\n                {\n                    destinationList: this.getTracker().getTrackState().destinationList.concat(this.getTracker().getTrackName())\n                }\n            );\n        } else {\n            this.getTracker().playInstructions(selectedIndices);\n        }\n\n    }\n\n\n    /** User Input **/\n\n    onMouseInput(e) {\n        if(e.defaultPrevented)\n            return;\n        e.preventDefault();\n\n        switch(e.type) {\n            case 'mousedown':\n            case 'click':\n                if(e.button === 0)\n                    this.selectInstructionWithAction(!e.ctrlKey);\n                // TODO: e.shiftKey for selecting a range of notes\n                else if(e.button === 1)\n                    throw new Error(\"Unimplemented middle button\");\n                else if(e.button === 2)\n                    throw new Error(\"Unimplemented right button\");\n                else\n                    throw new Error(\"Unknown mouse button\");\n\n                break;\n            default:\n                throw new Error(\"Unknown Mouse event: \" + e.type);\n        }\n    }\n\n    /** Menus **/\n\n    // }\n    renderMenuSelectCommand(e) {\n        return this.getComposer().renderMenuSelectCommand((command) => {\n            this.instructionReplaceCommand(command);\n        });\n    }\n\n\n    renderMenuSelectVelocity(currentVelocity=null) {\n        return this.getComposer().renderMenuSelectVelocity(velocity => {\n            this.instructionReplaceVelocity(velocity);\n        }, currentVelocity);\n    }\n\n    renderMenuSelectDuration(currentDuration=null) {\n        return this.getComposer().renderMenuSelectDuration(duration => {\n            this.instructionReplaceDuration(duration);\n        }, currentDuration);\n    }\n\n\n    instructionReplaceCommand(command) {\n        this.getComposer().instructionReplaceCommandSelected(\n            command,\n            this.getComposer().state.selectedTrack,\n            this.props.index,\n        )\n    }\n\n    // instructionReplaceProgram(programID) {\n    //     this.getSong().instructionReplaceProgram(\n    //         this.getComposer().state.selectedTrack,\n    //         this.props.index,\n    //         programID);\n    //     this.forceUpdate();\n    //\n    // }\n\n    instructionReplaceVelocity(velocity) {\n        this.getSong().instructionReplaceVelocity(\n            this.getComposer().state.selectedTrack,\n            this.props.index,\n            velocity);\n        this.playInstruction();\n    }\n\n    instructionReplaceDuration(duration) {\n        this.getSong().instructionReplaceDuration(\n            this.getComposer().state.selectedTrack,\n            this.props.index,\n            duration);\n        this.playInstruction();\n    }\n}\n","import * as React from \"react\";\nimport ASCTrackInstructionBase from \"./ASCTrackInstructionBase\";\n\nimport \"./ASCTrackInstruction.css\";\n\nexport default class ASCTrackInstruction extends ASCTrackInstructionBase {\n    constructor(props) {\n        super(props);\n\n        this.cb = {\n            // onContextMenu: (e) => this.onContextMenu(e),\n            // onKeyDown: (e) => this.onKeyDown(e),\n            onMouseInput: e => this.onMouseInput(e),\n        };\n        this.commandParam = React.createRef();\n    }\n\n    render() {\n        let className = \"asct-instruction\";\n        // if(this.props.className)\n        //     className += ' ' + this.props.className;\n        if(this.props.cursor)\n            className += ' cursor';\n        if(this.props.selected)\n            className += ' selected';\n        if(this.props.playing)\n            className += ' playing';\n\n        const parameters = this.renderParameters();\n        return <div\n            ref={input => this.props.cursor && this.getTracker().props.selected && input && input.focus()}\n            tabIndex={0}\n            className={className}\n            onKeyDown={this.cb.onKeyDown}\n            // onClick={this.cb.onMouseInput}\n            onMouseDown={this.cb.onMouseInput}\n            >\n            {parameters}\n        </div>;\n    }\n\n}\n","import * as React from \"react\";\n\nimport \"./ASCTrackPosition.css\";\n\nclass ASCTrackPosition extends React.Component {\n    render() {\n        return <div className=\"asct-position\">{this.props.positionTicks}</div>;\n    }\n}\n\nexport default ASCTrackPosition;\n","import * as React from \"react\";\n// import Div from \"../../components/div/Div\";\n// import ASCTrackDelta from \"./ASCTrackDelta\";\n\nclass ASCTrackInstructionAdd extends React.Component {\n    // setCursor(isCursor = true) {\n    //     this.setProps({cursor: isCursor});\n    // }\n\n    render() {\n        return <div className=\"asct-instruction-add\">+</div>;\n    }\n\n}\n\nexport default ASCTrackInstructionAdd;\n","import * as React from \"react\";\n\nimport \"./ASCTrackDelta.css\";\n\nclass ASCTrackDelta extends React.Component {\n    render() {\n        return <div className=\"asct-delta\">{this.props.duration}</div>;\n    }\n}\n\nexport default ASCTrackDelta;\n","import * as React from \"react\";\nimport PropTypes from \"prop-types\";\nimport ASCTrackPosition from \"../position/ASCTrackPosition\";\nimport ASCTrackInstructionAdd from \"../instruction/ASCTrackInstructionAdd\";\nimport ASCTrackDelta from \"../delta/ASCTrackDelta\";\nimport ASUIDropDownContainer from \"../../../components/menu/dropdown/ASUIDropDownContainer\";\nimport \"./ASCTrackRow.css\";\n\nclass ASCTrackRow extends React.Component {\n    constructor(props) {\n        super(props);\n        this.dropdown = React.createRef();\n        this.cb = {\n            onContextMenu: (e) => this.onContextMenu(e),\n            onKeyDown: (e) => this.onKeyDown(e),\n            onMouseInput: e => this.onMouseInput(e),\n        };\n    }\n\n    /** Default Properties **/\n    static defaultProps = {\n        // cursor: true\n    };\n\n    /** Property validation **/\n    static propTypes = {\n        positionTicks: PropTypes.number.isRequired,\n        deltaDuration: PropTypes.number.isRequired,\n        tracker: PropTypes.any.isRequired,\n        cursor: PropTypes.bool.isRequired,\n        cursorPosition: PropTypes.number.isRequired // TODO: inefficient?\n    };\n\n    getTracker() {\n        return this.props.tracker;\n    }\n\n    getComposer() {\n        return this.getTracker().getComposer();\n    }\n\n    render() {\n        let className = \"asct-row\";\n        if (this.props.highlight)\n            className += ` ${this.props.highlight}`; // ' highlight';\n        const composer = this.props.tracker.getComposer();\n        const rowDeltaDuration = composer.values.formatSongDuration(this.props.deltaDuration);\n        return (\n            <div\n                ref={input => this.props.cursor && this.getTracker().props.selected && input && input.focus()}\n                tabIndex={0}\n                className={className}\n                // onClick={this.cb.onMouseInput}\n                onMouseDown={this.cb.onMouseInput}\n                onKeyDown={this.cb.onKeyDown}\n            >\n                <ASCTrackPosition positionTicks={this.props.positionTicks}/>\n                {this.props.children}\n                {this.props.cursor ? <ASCTrackInstructionAdd\n                    cursorPosition={this.props.cursorPosition}\n                /> : null}\n                <ASCTrackDelta duration={rowDeltaDuration}/>\n                <ASUIDropDownContainer\n                    ref={this.dropdown}\n                    options={this.props.options}\n                    vertical={this.props.vertical}\n                />\n            </div>\n        )\n    }\n\n    toggleMenu() {\n        return this.dropdown.current.toggleMenu();\n    }\n\n    async selectRow(clearSelection = true) {\n        // const selectedIndices = clearSelection ? [] : null;\n        await this.getTracker().setCursorOffset(this.props.cursorPosition, clearSelection ? [] : null);\n    }\n\n\n    /** User Input **/\n\n    onMouseInput(e) {\n        if (e.defaultPrevented)\n            return;\n        e.preventDefault();\n        // console.log(e.type, e.button);\n\n        switch (e.type) {\n            case 'mousedown':\n            case 'click':\n                if (e.button === 0)\n                    this.selectRow(!e.ctrlKey);\n                else if (e.button === 1)\n                    throw new Error(\"Unimplemented middle button\");\n                else if (e.button === 2)\n                    this.toggleMenu();\n                else\n                    throw new Error(\"Unknown mouse button\");\n\n                break;\n            default:\n                throw new Error(\"Unknown Mouse event: \" + e.type);\n        }\n    }\n\n    onContextMenu(e) {\n        if (e.defaultPrevented || e.shiftKey)\n            return;\n        e.preventDefault();\n        this.toggleMenu();\n    }\n\n    onKeyDown(e) {\n        if (e.isDefaultPrevented())\n            return;\n        switch (e.key) {\n            case 'ContextMenu':\n                e.preventDefault();\n                this.toggleMenu();\n                break;\n\n            default:\n                break;\n        }\n    }\n\n}\n\nexport default ASCTrackRow;\n","import * as React from \"react\";\nimport PropTypes from 'prop-types';\n\nimport ASCTrackInstruction from \"./instruction/ASCTrackInstruction\";\nimport ASCTrackRow from \"./row/ASCTrackRow\";\nimport {ASUIButton, ASUIButtonDropDown} from \"../../components/\";\nimport ActiveTrackState from \"./state/ActiveTrackState\";\n\nexport default class ASCTrackBase extends React.Component {\n    /** Default Properties **/\n    static defaultProps = {\n        // cursorOffset: 0,\n        // selectedIndices: [],\n        // rowOffset: 0,\n        // rowLength: 16,\n        // quantizationTicks: null,\n        // destinationList: []\n    };\n\n    /** Property validation **/\n    static propTypes = {\n        composer: PropTypes.object.isRequired,\n        trackName: PropTypes.string.isRequired,\n        trackState: PropTypes.object.isRequired\n    };\n\n    static DEFAULT_MAX_SEGMENTS = 8;\n    static DEFAULT_MIN_SEGMENTS = 3;\n\n    constructor(props) {\n        super(props);\n\n        if(!props.composer)\n            throw new Error(\"Invalid composer\");\n\n        this.cb = {\n            onKeyDown: (e) => this.onKeyDown(e),\n            onWheel: e => this.onWheel(e)\n        };\n        this.destination = null;\n        // this.cursorInstruction = React.createRef();\n        // this.trackerGetCursorInfo();\n    }\n\n    // getTrackInfo() {\n    //     return new TrackInfo(this.props.trackName, this.props.composer);\n    // }\n\n    /** TODO: calculate correct destination **/\n    getDestination()            {\n        if(this.destination)\n            return this.destination;\n        console.warn('TODO: calculate correct destination');\n        return this.destination = this.getComposer().getAudioContext();\n    }\n    getComposer()               { return this.props.composer; }\n    getSong()                   { return this.props.composer.song; }\n\n    getTrackName()              { return this.props.trackName; }\n    getTrackState()             { return new ActiveTrackState(this.props.composer, this.props.trackName); }\n    // getDestinationList()        { return this.getTrackState().destinationList; }\n    // getSelectedIndices()        { return this.getTrackState().selectedIndices; }\n    // getCursorOffset()           { return this.getTrackState().cursorOffset; }\n    // getRowLength()              { return this.getTrackState().rowLength; }\n    // getRowOffset()              { return this.getTrackState().rowOffset; }\n    // getSegmentCount()           { return this.getTrackState().segmentCount; }\n    // getStartPosition()          { return this.getTrackState().startPosition; }\n\n\n    trackerGetCursorInfo(cursorOffset=null) {\n        return this.getComposer().trackerGetCursorInfo(this.getTrackName(), cursorOffset);\n    }\n\n    instructionGetQuantizedIterator() {\n        const trackState = this.getTrackState();\n        return this.getSong().instructionGetQuantizedIterator(\n            this.getTrackName(),\n            trackState.quantizationTicks,\n            trackState.timeDivision, // || this.getSong().data.timeDivision,\n            trackState.beatsPerMinute //  || this.getSong().data.beatsPerMinute\n        )\n    }\n\n    // getQuantizationInTicks() {\n    //     return this.props.quantizationTicks || this.props.composer.song.data.timeDivision;\n    // }\n\n    getSegmentInfo() {\n    }\n\n\n    /** Actions **/\n\n    setCursorOffset(cursorOffset, selectedIndices=null, rowOffset=null) {\n        if(selectedIndices === null) {\n            const {cursorIndex} = this.trackerGetCursorInfo(cursorOffset);\n            selectedIndices = [];\n            if(cursorIndex !== null)\n                selectedIndices = [cursorIndex];\n        }\n        // if(selectedIndices === null)\n        //     selectedIndices = [];\n        return this.selectIndices(selectedIndices, cursorOffset, rowOffset);\n\n        // const selectedIndex = this.findInstructionIndexFromCursorOffset(cursorOffset);\n        // console.log('setCursorOffset', cursorOffset, selectedIndex);\n        // this.playSelectedInstructions();\n    }\n\n    selectIndices(selectedIndices, cursorOffset=null, rowOffset=null) {\n        return this.getComposer().trackerSelectIndices(this.getTrackName(), selectedIndices, cursorOffset, rowOffset);\n        // TODO: get song position by this.props.index\n    }\n\n\n    /** Render Content **/\n\n    renderRowContent() {\n        const trackState = this.getTrackState();\n        const songPosition = this.getComposer().state.songPosition;\n        const trackSongPosition = songPosition - trackState.startPosition;\n        let trackSongPositionFound = false;\n        // const quantizationTicks = trackState.quantizationTicks || this.getSong().data.timeDivision;\n\n        // console.time('ASCTrack.renderRowContent()');\n        const selectedIndices = trackState.selectedIndices;\n        const playingIndices = trackState.playingIndices;\n        const beatsPerMeasureTicks = trackState.beatsPerMeasure * trackState.timeDivision;\n        const quantizationTicks = trackState.quantizationTicks;\n        // const segmentLengthTicks = trackState.segmentLengthTicks;\n        // console.log('beatsPerMeasureTicks', beatsPerMeasureTicks);\n\n\n        // Get Iterator\n        const iterator = this.getSong().instructionGetQuantizedIterator(\n            this.getTrackName(),\n            quantizationTicks,\n            trackState.timeDivision, // || this.getSong().data.timeDivision,\n            trackState.beatsPerMinute //  || this.getSong().data.beatsPerMinute\n        )\n\n        const rowContent = [];\n        let rowInstructionElms = [];\n        while(iterator.nextQuantizedInstructionRow(() => {\n            let highlight = false;\n            if(iterator.positionTicks % beatsPerMeasureTicks === 0)\n                highlight = 'measure-start';\n            if(!trackSongPositionFound && trackSongPosition <= iterator.positionSeconds) {\n                trackSongPositionFound = true;\n                highlight = 'position';\n            }\n\n            if(iterator.rowCount < trackState.rowOffset)\n                return;\n\n            let nextRowPositionTicks = iterator.getNextRowPositionTicks();\n            let rowDeltaDuration = nextRowPositionTicks - iterator.positionTicks;\n            if (rowDeltaDuration <= 0 || rowDeltaDuration > quantizationTicks) {\n                console.warn(\"rowDeltaDuration is \", rowDeltaDuration);\n            }\n\n            const newRowElm = <ASCTrackRow\n                key={iterator.rowCount}\n                tracker={this}\n                positionTicks={iterator.positionTicks}\n                positionSeconds={iterator.positionSeconds}\n                deltaDuration={rowDeltaDuration}\n                cursorPosition={iterator.cursorPosition}\n                cursor={iterator.cursorPosition === trackState.cursorOffset}\n                highlight={highlight}\n\n            >{rowInstructionElms}</ASCTrackRow>;\n            rowContent.push(newRowElm);\n            rowInstructionElms = [];\n\n        }, (instruction) => {\n            if(iterator.rowCount < trackState.rowOffset)\n                return;\n            const index = iterator.currentIndex;\n            rowInstructionElms.push(<ASCTrackInstruction\n                key={index}\n                index={index}\n                instruction={instruction}\n                tracker={this}\n                cursorPosition={iterator.cursorPosition}\n                cursor={iterator.cursorPosition === trackState.cursorOffset}\n                selected={selectedIndices.indexOf(index) !== -1}\n                playing={playingIndices.indexOf(index) !== -1}\n            />)\n\n        })) {\n            if (rowContent.length >= trackState.rowLength)\n                break;\n        }\n\n\n        // console.timeEnd('ASCTrack.renderRowContent()');\n        return rowContent;\n    }\n\n\n    renderRowSegments() {\n        const composer = this.props.composer;\n        const trackState = this.getTrackState();\n        const rowOffset = trackState.rowOffset;\n        const rowLength = trackState.rowLength;\n\n        // TODO: add next position segment\n\n        let buttons = [], selectedSegmentID = null;\n        const segmentPositions = trackState.segmentPositions;\n        for(let segmentID=0; segmentID<segmentPositions.length; segmentID++) {\n            if(segmentID > ASCTrackBase.DEFAULT_MAX_SEGMENTS)\n                break;\n            const segmentPosition = segmentPositions[segmentID];\n            const props = {\n                onAction: e => composer.trackerSetRowOffset(this.props.trackName, segmentPosition),\n                children: segmentID\n            }\n            if(selectedSegmentID === null && rowOffset - rowLength < segmentPosition) {\n                selectedSegmentID = segmentID;\n                props.selected = true;\n            }\n            buttons.push(<ASUIButton\n                key={segmentID}\n                {...props}\n            />);\n        }\n\n        const rowDeltaDuration = composer.values.formatSongDuration(trackState.quantizationTicks);\n        buttons.push(<ASUIButtonDropDown\n            className=\"row-quantization\"\n            title={`Quantization (Duration = ${rowDeltaDuration})`}\n            arrow=\"▼\"\n            key=\"row-quantization\"\n            options={() => this.getComposer().renderMenuTrackerSetQuantization(this.getTrackName())}\n            children={rowDeltaDuration}\n        />);\n\n        return buttons;\n    }\n\n    renderRowOptions() {\n        // const composer = this.props.composer;\n\n        const buttons = [];\n\n        const rowLength = this.getTrackState().rowLength;\n        buttons.push(<ASUIButtonDropDown\n            className=\"row-length\"\n            title={`Segment Length (${rowLength} Rows)`}\n            arrow=\"▼\"\n            key=\"row-length\"\n            options={() => this.getComposer().renderMenuTrackerSetSegmentLength(this.getTrackName())}\n            children={`${rowLength} Rows`}\n        />);\n\n\n        return buttons;\n    }\n\n    /** Playback **/\n\n    playSelectedInstructions() {\n        return this.playInstructions(this.getTrackState().selectedIndices);\n    }\n\n    playInstructions(selectedIndices, stopPlayback=true) {\n        // console.log(\"ASCTrack.playInstructions\", selectedIndices);\n        this.getComposer().trackerPlay(this.getTrackName(), selectedIndices, stopPlayback)\n    }\n\n\n\n\n    /** User Input **/\n\n    onWheel(e) {\n        e.preventDefault();\n        let newRowOffset = this.getTrackState().rowOffset;\n        newRowOffset += e.deltaY > 0 ? 1 : -1;\n        if(newRowOffset < 0)\n            newRowOffset = 0; // return console.log(\"Unable to scroll past beginning\");\n        this.getComposer().trackerSetRowOffset(this.getTrackName(), newRowOffset)\n        // this.getComposer().trackerUpdateSegmentInfo(this.getTrackName());\n        // this.getTrackInfo().changeRowOffset(this.getTrackName(), newRowOffset);\n    }\n\n    async onKeyDown(e) {\n        // console.log(e.type);\n        if(e.isDefaultPrevented())\n            return;\n        let selectedIndices;\n        switch(e.key) {\n            case 'Delete':\n                this.getComposer().instructionDeleteSelected();\n                break;\n            //\n            // case 'Escape':\n            // case 'Backspace':\n            //     break;\n            //\n            case 'Enter':\n                this.getComposer().instructionInsert();\n                break;\n            //\n            case ' ':\n            case 'Play':\n                this.getComposer().songPlay(); // TODO: play track?\n                break;\n\n            case 'ArrowRight':\n                const {nextOffset} = this.trackerGetCursorInfo();\n                e.preventDefault();\n                selectedIndices = this.setCursorOffset(nextOffset);\n                this.playInstructions(selectedIndices);\n                break;\n\n            case 'ArrowLeft':\n                e.preventDefault();\n                const {previousOffset} = this.trackerGetCursorInfo();\n                if(previousOffset >= 0) {\n                    selectedIndices = this.setCursorOffset(previousOffset);\n                    this.playInstructions(selectedIndices);\n                }\n                break;\n\n            case 'ArrowUp':\n                e.preventDefault();\n                const {previousRowOffset} = this.trackerGetCursorInfo();\n                if(previousRowOffset >= 0) {\n                    selectedIndices = this.setCursorOffset(previousRowOffset);\n                    this.playInstructions(selectedIndices);\n                }\n                break;\n\n            case 'ArrowDown':\n                e.preventDefault();\n                const {nextRowOffset} = this.trackerGetCursorInfo();\n                selectedIndices = this.setCursorOffset(nextRowOffset);\n                this.playInstructions(selectedIndices);\n                break;\n            //\n            // case ' ':\n            //     break;\n            //\n            // case 'PlayFrequency':\n            //     break;\n\n            case 'ContextMenu':\n                e.preventDefault();\n                this.cursorInstruction.current.toggleMenu();\n                break;\n\n            default:\n                const keyboardCommand = this.getComposer().keyboard.getKeyboardCommand(e.key, this.getComposer().state.keyboardOctave);\n                if(keyboardCommand) {\n                    const selectedIndices = this.getTrackState().selectedIndices;\n                    // const cursorOffset = this.getCursorOffset();\n                    if(selectedIndices.length > 0) {\n                        await this.getComposer().instructionReplaceCommandSelected(keyboardCommand);\n\n                    } else {\n                        await this.getComposer().instructionInsert(keyboardCommand);\n                    }\n                    // console.log('TODO: keyboardCommand', keyboardCommand, selectedIndices, cursorOffset);\n                    return;\n                }\n                // this.instructionInsert\n                console.info(\"Unhandled key: \", e.key);\n                break;\n        }\n    }\n\n}\n\n","/* eslint-disable no-loop-func */\nimport * as React from \"react\";\nimport {ASUIPanel} from \"../../components/\";\n\nimport \"./ASCTrack.css\";\nimport ASCTrackBase from \"./ASCTrackBase\";\n\nexport default class ASCTrack extends ASCTrackBase {\n    constructor(props) {\n        super(props);\n        this.container = React.createRef();\n    }\n\n    componentDidMount() {\n        this.container.current.addEventListener('wheel', this.cb.onWheel, { passive: false });\n    }\n\n    componentWillUnmount() {\n        this.container.current.removeEventListener('wheel', this.cb.onWheel);\n    }\n\n\n    /** Render **/\n\n    render() {\n        // console.log('ASCTrack.render');\n        let className = \"asc-track\";\n        // if(this.props.className)\n        //     className += ' ' + this.props.className;\n        if(this.props.selected)\n            className += ' selected';\n        return (\n            <ASUIPanel\n                className={className}\n                header={this.getTrackName()}\n                title={`Track: ${this.getTrackName()}`}\n                >\n                <div\n                    className=\"asct-segments\"\n                    children={this.renderRowSegments()}\n                    />\n                <div\n                    className=\"asct-container\"\n                    ref={this.container}\n                    tabIndex={0}\n                    onKeyDown={this.cb.onKeyDown}\n                    // onWheel={this.cb.onWheel}\n                    >\n                    {this.renderRowContent()}\n                </div>\n                <div\n                    className=\"asct-options\"\n                    children={this.renderRowOptions()}\n                />\n            </ASUIPanel>\n        );\n    }\n\n}\n\n","import React from \"react\";\nimport {\n    ASUIIcon,\n    ASUIButtonDropDown,\n    ASUIButton,\n} from \"../../components\";\n\nimport \"./assets/ASCProgramRenderer.css\";\nimport ASCProgramRendererBase from \"./ASCProgramRendererBase\";\n\nexport default class ASCProgramRenderer extends ASCProgramRendererBase {\n    render() {\n        const song = this.getSong();\n        const programID = this.props.programID;\n        const programConfig = song.programGetData(programID);\n        const programIDHTML = (programID < 10 ? \"0\" : \"\") + (programID);\n\n\n        // let contentClass = 'error';\n        let titleHTML = '';\n        if (song.hasProgram(programID)) {\n            titleHTML = programConfig.title || \"No Title\"\n\n        } else {\n            titleHTML = `Empty`;\n        }\n        return (\n            <div className=\"asc-instrument-renderer-empty\">\n                <div className=\"header\">\n                    <ASUIButton\n                        className=\"toggle-container\"\n                        onAction={e => this.toggleContainer()}\n                    >{programIDHTML}: {titleHTML}</ASUIButton>\n                    <ASUIButtonDropDown\n                        arrow={false}\n                        className=\"program-config\"\n                        options={() => this.renderMenuRoot()}\n                    >\n                        <ASUIIcon source=\"config\"/>\n                    </ASUIButtonDropDown>\n                </div>\n                {this.state.open ? <div className=\"content\">\n                    {this.renderProgramContent()}\n                </div> : null}\n            </div>\n        );\n\n        // return content;\n    }\n\n}\n","import React from \"react\";\nimport {\n    ASUIMenuAction,\n    ASUIMenuDropDown, ASUIMenuBreak,\n} from \"../../components\";\nimport {Library} from \"../../song\";\n\n\nexport default class ASCProgramRendererBase extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            open: true\n        }\n    }\n\n    getComposer() { return this.props.composer; }\n    getSong() { return this.getComposer().getSong(); }\n\n\n    renderProgramContent() {\n        try {\n            return this.getSong().programLoadRenderer(this.props.programID);\n\n        } catch (e) {\n            return e.message;\n        }\n    }\n\n    /** Actions **/\n\n\n    toggleContainer() {\n        this.setState({open: !this.state.open});\n    }\n\n    loadPreset(presetClassName, presetConfig) {\n        console.log(\"Loading preset: \", presetClassName, presetConfig);\n        const song = this.getSong();\n        const programID = this.props.programID;\n        song.programReplace(programID, presetClassName, presetConfig);\n    }\n\n    /** Menu **/\n\n\n\n\n    renderMenuRoot() {\n        return (<>\n            <ASUIMenuDropDown options={() => this.renderMenuChangePreset()}>Change Preset</ASUIMenuDropDown>\n            <ASUIMenuBreak />\n            <ASUIMenuDropDown options={() => this.renderMenuChangeProgram()}>Change Program</ASUIMenuDropDown>\n            <ASUIMenuAction onAction={e => this.programRename()}>Rename Program</ASUIMenuAction>\n            <ASUIMenuAction onAction={e => this.programRemove()}>Remove Program</ASUIMenuAction>\n        </>);\n    }\n\n    renderMenuChangeProgram() {\n        const library = Library.loadDefault();\n        return library.renderMenuProgramAll(([className, presetConfig]) => {\n            this.loadPreset(className, presetConfig);\n        });\n\n    }\n\n    renderMenuChangePreset() {\n        const library = Library.loadDefault();\n        const programID = this.props.programID;\n        const programClassName = this.getSong().programGetClassName(programID);\n        return library.renderMenuProgramAllPresets((className, presetConfig) => {\n            this.loadPreset(className, presetConfig);\n        }, programClassName);\n    }\n\n\n    programReplace(e, programClassName, programConfig={}) {\n        const programID = this.props.programID;\n        // programConfig = ProgramLoader.createProgramConfig(programClassName, programConfig);\n        this.getSong().programReplace(programID, programClassName, programConfig);\n    }\n    programRename() {\n        const programID = this.props.programID;\n        this.getComposer().programRename(programID);\n    }\n    programRemove() {\n        const programID = this.props.programID;\n        this.getSong().programRemove(programID);\n    }\n}\n","import React from \"react\";\nimport {ASUIMenuDropDown} from \"../../components/menu\";\nimport {ASUIIcon} from \"../../components\";\nimport ASUIMenuOverlayContainer from \"../../components/menu/overlay/ASUIMenuOverlayContainer\";\n\nimport \"./assets/ASComposerContainer.css\";\n\nexport class ASComposerContainer extends React.Component {\n    /** Property validation **/\n    static propTypes = {\n        // children: PropTypes.any.isRequired,\n        // portrait: PropTypes.bool.isRequired\n    };\n\n\n    render() {\n        const state = this.props.composer.state;\n        return (\n            <div className={[\"asc-container\", state.portrait ? 'portrait' : 'landscape'].join(' ')}>\n                <ASUIMenuOverlayContainer\n                    isActive={state.portrait}\n                >\n                    {this.renderHeader()}\n                    {this.renderContent()}\n                    {this.renderFooter()}\n                </ASUIMenuOverlayContainer>\n            </div>\n        );\n    }\n\n    renderContent() {\n        return (\n            <div className=\"asc-content-container\">\n                {this.props.children}\n            </div>\n        );\n    }\n\n    renderHeader() {\n        const state = this.props.composer.state;\n        if (state.portrait)\n            return (\n                <div className=\"asc-header-container\">\n                    <div className=\"asc-title-text\">{state.title}</div>\n                    <ASUIMenuDropDown\n                        arrow={false}\n                        className=\"asc-menu-button-toggle\"\n                        options={() => this.props.composer.renderRootMenu()}\n                    >\n                        <ASUIIcon source=\"menu\"/>\n                    </ASUIMenuDropDown>\n                </div>\n            );\n\n        return (\n            <div className=\"asc-header-container\">\n                <div key=\"title\" className=\"asc-title-text\">{state.title}</div>\n                <div className=\"asc-menu-container\">\n                    {this.props.composer.renderRootMenu()}\n                </div>\n            </div>\n        );\n    }\n\n    renderFooter() {\n        const state = this.props.composer.state;\n        return (\n            <div key=\"footer\" className=\"asc-footer-container\">\n                <div className=\"asc-status-text\">{state.status}</div>\n                <div className=\"asc-version-text\"\n                     ref={this.footerVersionText}\n                >{state.version}</div>\n            </div>\n        );\n    }\n}\n","import * as React from \"react\";\nimport ASCTrack from \"../ASCTrack\";\n\nexport default class ASCTracksContainerBase extends React.Component {\n    /** Render **/\n\n    render() {\n        return this.renderTracks();\n    }\n\n    // TODO: auto scroll to selected track when selected track changes?\n\n    renderTracks() {\n        const composer = this.props.composer;\n        const selectedTrackName = this.props.selectedTrackName;\n        let trackList = Object.keys(composer.state.activeTracks);\n        if(composer.state.portrait) {\n            const selectedTrackID = trackList.indexOf(selectedTrackName);\n            if (selectedTrackID !== -1)\n                trackList.unshift(trackList.splice(selectedTrackID, 1)[0])\n        }\n        return trackList.map(trackName => (\n            <ASCTrack\n                key={trackName}\n                trackName={trackName}\n                trackState={composer.state.activeTracks[trackName]}\n                selected={trackName === selectedTrackName}\n                composer={composer}\n                />\n        ))\n    }\n\n}\n\n","import * as React from \"react\";\nimport ASCTracksContainerBase from \"./ASCTracksContainerBase\";\n\nimport \"./assets/ASCTracksContainer.css\"\n\nexport default class ASCTracksContainer extends ASCTracksContainerBase {\n    render() {\n        return <div className={`asc-tracks-container${this.props.composer.state.portrait ? ' portrait' : ''}`}>\n            {super.render()}\n        </div>\n    }\n}\n\n","import React from \"react\";\nimport {ASUIMenuAction, ASUIMenuDropDown, ASUIMenuBreak} from \"../components\";\nimport Values from \"../common/values/Values\";\nimport {Storage, ProgramLoader} from \"../song\";\nimport ASComposerRenderer from \"./ASComposerRenderer\";\n\nclass ASComposerMenu extends ASComposerRenderer {\n\n\n    renderRootMenu() {\n        const props = {\n            vertical: !this.state.portrait,\n            openOnHover: false,\n        };\n        if(!this.state.portrait)\n            props.arrow = false;\n        return (<>\n            <ASUIMenuDropDown {...props} options={() => this.renderMenuFile()}          >File</ASUIMenuDropDown>\n            <ASUIMenuDropDown {...props} options={() => this.renderMenuEdit()}          >Edit</ASUIMenuDropDown>\n            <ASUIMenuDropDown {...props} options={() => this.renderMenuTrack()}         >Track</ASUIMenuDropDown>\n            <ASUIMenuDropDown {...props} options={() => this.renderMenuProgram()}    >Program</ASUIMenuDropDown>\n            <ASUIMenuDropDown {...props} options={() => this.renderMenuView()}          >View</ASUIMenuDropDown>\n        </>);\n    }\n\n    renderMenuFile() {\n        return (<>\n            <ASUIMenuAction onAction={e => this.loadNewSongData(e)}             >New song</ASUIMenuAction>\n            <ASUIMenuDropDown options={() => this.renderMenuFileOpen()}           >Open song</ASUIMenuDropDown>\n            <ASUIMenuDropDown options={() => this.renderMenuFileSave()}           >Save song</ASUIMenuDropDown>\n            <ASUIMenuDropDown options={() => this.renderMenuFileImport()}         >Import song</ASUIMenuDropDown>\n            <ASUIMenuDropDown options={() => this.renderMenuFileExport()}         >Export song</ASUIMenuDropDown>\n        </>);\n    }\n\n\n    renderMenuFileOpen() {\n        return (<>\n            <ASUIMenuDropDown options={() => this.renderMenuFileOpenMemory()}     >from Memory</ASUIMenuDropDown>\n            <ASUIMenuAction onAction={e => this.openSongFromFileDialog(e)}      >from File</ASUIMenuAction>\n            <ASUIMenuAction onAction={e => this.loadSongFromURL(e)}             >from URL</ASUIMenuAction>\n        </>);\n    }\n\n    renderMenuFileSave() {\n        return (<>\n            <ASUIMenuAction onAction={e => this.saveSongToMemory(e)}                        >to Memory</ASUIMenuAction>\n            <ASUIMenuAction onAction={e => this.saveSongToFile(e)}                          >to File</ASUIMenuAction>\n        </>);\n\n    }\n\n    renderMenuFileImport() {\n        return (<>\n            <ASUIMenuAction onAction={e => this.openSongFromFileDialog('.mid,.midi')}          >from MIDI File</ASUIMenuAction>\n        </>);\n        // this.loadSongFromFileInput(this.fieldSongFileLoad.inputElm);\n        // renderMenuFileImportSongFromMIDI.action = (e) => this.onAction('song:load-from-midi-file');\n        // renderMenuFileImportSongFromMIDI.disabled = true;\n\n    }\n\n    renderMenuFileExport() {\n        return (<>\n            <ASUIMenuAction onAction={()=>{}} disabled>to MIDI File</ASUIMenuAction>\n        </>);\n\n    }\n\n    async renderMenuFileOpenMemory() {\n        const storage = new Storage();\n        const songRecentUUIDs = await storage.getRecentSongList() ;\n        // console.log('songRecentUUIDs', songRecentUUIDs);\n        return songRecentUUIDs.length > 0\n            ? songRecentUUIDs.map((entry, i) =>\n                <ASUIMenuAction\n                    key={i}\n                    onAction={(e) => this.loadSongFromMemory(entry.uuid)}\n                >{entry.title || entry.uuid}</ASUIMenuAction>)\n            :<ASUIMenuAction\n                onAction={() => {}}\n                key=\"no-recent\"\n                disabled\n            >No Songs Available</ASUIMenuAction>\n        ;\n    }\n\n\n    /** Deep selection menus **/\n\n\n\n    /** Deep selection menus **/\n\n\n    renderMenuSelectCommand(onSelectValue) {\n        return Values.renderMenuSelectCommand(onSelectValue, this.state.keyboardOctave);\n    }\n\n\n    // renderMenuSelectCommandByCurrentOctave(onSelectValue, octave=null) {\n    //     octave = octave !== null ? octave : this.state.keyboardOctave;\n    //     return this.values.getNoteFrequencies((noteName) =>\n    //         <MenuAction key={noteName} onAction={e => onSelectValue(`${noteName}${octave}`)}     >{noteName}{octave}</MenuAction>\n    //     );\n    // }\n\n\n    renderMenuSelectCommandByFrequency(onSelectValue) {\n        return Values.renderMenuSelectCommandByFrequency(onSelectValue, this.state.keyboardOctave);\n    }\n\n    // renderMenuSelectCommandByFrequencyOctave(onSelectValue, noteName) {\n    //     return Values.renderMenuSelectCommandByFrequencyOctave(onSelectValue, noteName);\n    // }\n\n    renderMenuSelectCommandByOctave(onSelectValue) {\n        return Values.renderMenuSelectCommandByOctave(onSelectValue, this.state.keyboardOctave);\n    }\n\n    // renderMenuSelectCommandByOctaveFrequency(onSelectValue, octave) {\n    //     return Values.renderMenuSelectCommandByOctaveFrequency(onSelectValue, octave);\n    // }\n\n\n\n\n    renderMenuSelectSongProgram(onSelectValue) {\n        return this.values.getSongPrograms((programID, programClass, programInfo) =>\n            <ASUIMenuAction key={programID} onAction={() => onSelectValue(programID)}  >{programID}: {programInfo.title || programClass}</ASUIMenuAction>\n        );\n    }\n\n    renderMenuSelectDuration(onSelectValue, currentDuration, timeDivision=null) {\n        return Values.renderMenuSelectDuration(onSelectValue, currentDuration, timeDivision || this.song.data.timeDivision);\n    }\n\n    renderMenuSelectVelocity(onSelectValue, currentVelocity=null) {\n        return Values.renderMenuSelectVelocity(onSelectValue, currentVelocity);\n    }\n\n\n    renderMenuSelectAvailableProgram(onSelectValue, menuTitle=null) {\n        return Values.renderMenuSelectAvailableProgram(onSelectValue, menuTitle);\n    }\n\n\n\n    renderMenuEdit() {\n        const trackState = this.trackGetState();\n        const selectedIndices = trackState.selectedIndices || [];\n\n        // const populateGroupCommands = (renderMenuTrack, action) => {\n        //     renderMenuTrack.populate = () => {\n        //         const MENU = e.menuElement;\n        //         this.values.getValues('song-groups', (trackName, groupTitle) => {\n        //             const renderMenuEditSetCommandGroup = MENU.getOrCreateMenu(trackName, `${groupTitle}`);\n        //             renderMenuEditSetCommandGroup.action = action;\n        //         });\n        //         const menuCustom = MENU.getOrCreateMenu('new', `Create New Group`);\n        //         menuCustom.action = e => this.trackAdd();\n        //         menuCustom.hasBreak = true;\n        //     };\n        // };\n\n        // renderMenuEditInsertCommand.disabled = selectedIndices.length > 0; // !this.cursorCell;\n        // renderMenuEditInsertCommand.action = handleAction('song:new');\n        return (<>\n            <ASUIMenuDropDown\n                options={() => this.renderMenuEditInsert()}\n                children=\"Insert Command\"\n                />\n\n\n            <ASUIMenuDropDown\n                disabled={selectedIndices.length === 0}\n                options={() => this.renderMenuEditSetCommand()}\n                hasBreak\n                children=\"Set Command\"\n                />\n            <ASUIMenuDropDown\n                disabled={selectedIndices.length === 0}\n                options={() => this.renderMenuEditSetDuration()}\n                hasBreak\n                children=\"Set Duration\"\n                />\n            <ASUIMenuDropDown\n                disabled={selectedIndices.length === 0}\n                options={() => this.renderMenuEditSetVelocity()}\n                hasBreak\n                children=\"Set Velocity\"\n                />\n\n            <ASUIMenuBreak />\n            <ASUIMenuDropDown options={() => this.renderMenuEditSelect()} hasBreak   >Select</ASUIMenuDropDown>\n\n            <ASUIMenuBreak />\n            <ASUIMenuDropDown options={() => this.renderMenuEditBatch()} hasBreak   >Batch</ASUIMenuDropDown>\n        </>);\n        // const renderMenuEditGroup = MENU.getOrCreateMenu('group', 'Group ►');\n        // renderMenuEditGroup.hasBreak = true;\n        // renderMenuEditGroup.disabled = true;\n    }\n\n\n    renderMenuEditInsert() {\n        return Values.renderMenuSelectCommand(async newCommand => {\n            if(newCommand === null)\n                await this.instructionInsertPrompt();\n            else\n                this.instructionInsert(newCommand);\n        }, this.state.keyboardOctave);\n    }\n\n\n    renderMenuEditInsertCommandFrequency() {\n        return this.renderMenuSelectCommandByFrequency(noteNameOctave => this.instructionInsert(noteNameOctave, false));\n    }\n\n\n    renderMenuEditInsertCommandOctave() {\n        return this.renderMenuSelectCommandByOctave(noteNameOctave => this.instructionInsert(noteNameOctave, false));\n    }\n\n    // renderMenuEditInsertCommandCurrentOctave(octave=null) {\n    //     return this.renderMenuSelectCommandByCurrentOctave((noteNameOctave) => this.instructionInsert(noteNameOctave, false), octave);\n    // }\n\n\n\n    renderMenuEditSetCommand() {\n        return Values.renderMenuSelectCommand(async newCommand => {\n            if(newCommand === null)\n                await this.instructionReplaceCommandSelectedPrompt();\n            else\n                this.instructionReplaceCommandSelected(newCommand);\n        }, this.state.keyboardOctave);\n    }\n\n    // renderMenuEditSetProgram() {\n    //     return this.values.getSongPrograms((programID, programClass, programInfo) =>\n    //         <MenuAction key={programID} onAction={e => this.instructionReplaceProgram(programID)}  >\n    //             {programID}: {programInfo.title || programClass}\n    //         </MenuAction>\n    //     );\n    // }\n\n    renderMenuEditSetDuration() {\n        return this.renderMenuSelectDuration(durationTicks => {\n            this.instructionReplaceDurationSelected(durationTicks)\n        });\n    }\n\n    renderMenuEditSetVelocity() {\n        return (<>\n            {Values.getNoteVelocities((velocity) =>\n                <ASUIMenuAction key={velocity} onAction={e => this.instructionReplaceVelocity(velocity)}  >{velocity}</ASUIMenuAction>)}\n            <ASUIMenuAction onAction={e => this.instructionReplaceVelocity(null, true)} hasBreak >Custom Velocity</ASUIMenuAction>\n        </>);\n    }\n\n    renderMenuEditSetCommandFrequency() {\n        return this.renderMenuSelectCommandByFrequency(noteNameOctave => this.instructionReplaceCommandSelected(noteNameOctave));\n    }\n\n    // renderMenuEditSetCommandCurrentOctave(octave=null) {\n    //     return this.renderMenuSelectCommandByCurrentOctave((noteNameOctave) => this.trackerReplaceSelectedInstructions(noteNameOctave, false), octave);\n    // }\n\n    renderMenuEditSetCommandOctave() {\n        return this.renderMenuSelectCommandByOctave(noteNameOctave => this.instructionReplaceCommandSelected(noteNameOctave));\n    }\n\n    renderMenuEditSelect() {\n        return (<>\n            <ASUIMenuAction onAction={e => this.trackerSelectIndices('segment')}      >Select Segment Instructions</ASUIMenuAction>\n            <ASUIMenuAction onAction={e => this.trackerSelectIndices('all')}       >Select All Song Instructions</ASUIMenuAction>\n            <ASUIMenuAction onAction={e => this.trackerSelectIndices('none')}       >Select No Instructions</ASUIMenuAction>\n            <ASUIMenuBreak />\n            <ASUIMenuDropDown options={() => this.renderMenuEditSelectBatch()} hasBreak                        >Batch Select</ASUIMenuDropDown>\n        </>);\n\n    }\n\n    renderMenuEditSelectBatch() {\n        return (<>\n            {(new Storage()).getBatchRecentSearches().map((recentBatchSearch, i) =>\n                <ASUIMenuAction onAction={e => this.batchSelect(recentBatchSearch, true)}      >New Selection Command</ASUIMenuAction>\n            )}\n            <ASUIMenuAction onAction={e => this.batchSelect(e)} hasBreak      >New Selection Command</ASUIMenuAction>\n        </>);\n    }\n\n    renderMenuEditBatch() {\n        return (<>\n            {(new Storage()).getBatchRecentCommands().map((recentBatchCommand, i) =>\n                <ASUIMenuDropDown options={() => this.renderMenuEditBatchRecent(recentBatchCommand)}                          >{recentBatchCommand}</ASUIMenuDropDown>\n            )}\n            <ASUIMenuAction onAction={e => this.batchRunCommand(e)} hasBreak      >New Batch Command</ASUIMenuAction>\n        </>);\n    }\n\n    renderMenuEditBatchRecent(recentBatchCommand) {\n        return (<>\n            <ASUIMenuAction onAction={e => this.batchRunCommand(recentBatchCommand, true)}                   >Execute on Group</ASUIMenuAction>\n            <ASUIMenuDropDown options={() => this.renderMenuEditBatchRecentExecuteSearch(recentBatchCommand)}    >Execute using Search</ASUIMenuDropDown>\n        </>);\n    }\n\n    renderMenuEditBatchRecentExecuteSearch(recentBatchCommand) {\n        return (<>\n            <ASUIMenuAction onAction={e => this.batchRunCommand(recentBatchCommand, null, true)}                   >New Search</ASUIMenuAction>\n            {(new Storage()).getBatchRecentSearches().map((recentBatchSearch, i) =>\n                <ASUIMenuAction onAction={e => this.batchRunCommand(recentBatchCommand, recentBatchSearch)}                   >{recentBatchSearch}</ASUIMenuAction>\n            )}\n        </>);\n\n    }\n\n\n    /** ASCTrack Menu **/\n\n    renderMenuTrackerSetQuantization(trackName) {\n        return (<>\n            {this.renderMenuSelectDuration(durationTicks => {\n                this.trackerChangeQuantization(trackName, durationTicks);\n            })}\n            <ASUIMenuAction onAction={(e) => this.trackerChangeQuantization(trackName)} hasBreak >Custom Quantization</ASUIMenuAction>\n        </>);\n    }\n\n\n\n    renderMenuTrackerSetSegmentLength(trackName) {\n        return (<>\n            {Values.getTrackerSegmentLengthInRows((length, title) =>\n                <ASUIMenuAction key={length} onAction={(e) => this.trackerChangeSegmentLength(trackName, length)}>{title}</ASUIMenuAction>\n            )}\n            <ASUIMenuAction onAction={(e) => this.trackerChangeSegmentLength(trackName)} hasBreak >Custom Length</ASUIMenuAction>\n        </>);\n    }\n\n    // renderMenuTrackerSetProgramFilter() {\n    //     return this.renderMenuSelectSongProgram(programID => this.trackerChangeProgramFilter(programID));\n    // }\n\n    renderMenuKeyboardSetOctave() {\n        return Values.getNoteOctaves(octave =>\n            <ASUIMenuAction key={octave} onAction={(e) => this.keyboardChangeOctave(octave)}>{octave}</ASUIMenuAction>\n        );\n    }\n\n    /** View Menu **/\n    renderMenuView() {\n        return (<>\n            <ASUIMenuAction onAction={e => this.toggleFullscreen(e)}       >{this.props.fullscreen ? 'Disable' : 'Enable'} Fullscreen</ASUIMenuAction>\n            <ASUIMenuAction onAction={e => this.togglePanelSong(e)}       >{this.props.hidePanelSongs ? 'Disable' : 'Enable'} Song Forms</ASUIMenuAction>\n            <ASUIMenuAction onAction={e => this.togglePanelTracker(e)}       >{this.props.hidePanelTracker ? 'Disable' : 'Enable'} Tracker Forms</ASUIMenuAction>\n            <ASUIMenuAction onAction={e => this.togglePanelPrograms(e)}       >{this.props.hidePanelProgram ? 'Disable' : 'Enable'} Program Forms</ASUIMenuAction>\n        </>);\n\n    }\n\n    renderMenuProgram() {\n        return (<>\n            <ASUIMenuDropDown key=\"add\" options={() => this.renderMenuProgramAdd()}    >Add program to song</ASUIMenuDropDown>\n            <ASUIMenuBreak />\n            {this.values.getSongPrograms((programID, programClass, programInfo) =>\n                <ASUIMenuDropDown key={programID} options={() => this.renderMenuProgramEdit(programID)}       >\n                    {programID}: {programInfo.title || programClass}\n                </ASUIMenuDropDown>)}\n        </>);\n    }\n\n    renderMenuProgramAdd() {\n        return ProgramLoader.getRegisteredPrograms().map((config, i) =>\n            <ASUIMenuAction key={i} onAction={e => this.programAdd(config.className)}       >{config.title}</ASUIMenuAction>\n        );\n    }\n\n    renderMenuProgramEdit(programID) {\n        return (<>\n            <ASUIMenuDropDown key=\"replace\" options={() => this.renderMenuProgramEditReplace(programID)}    >Replace</ASUIMenuDropDown>\n            <ASUIMenuAction\n                key=\"remove\"\n                onAction={e => this.programRemove(programID)}\n                disabled={!this.song.hasProgram(programID)}\n            >Remove from song</ASUIMenuAction>\n        </>);\n    }\n\n    renderMenuProgramEditReplace(programID) {\n        return ProgramLoader.getRegisteredPrograms().map((config, i) =>\n            <ASUIMenuAction key={i} onAction={e => this.programReplace(programID, config.className)}       >{config.name}</ASUIMenuAction>\n        );\n    }\n\n    renderMenuTrack() {\n        return (<>\n            <ASUIMenuAction onAction={e => this.trackAdd(e)} hasBreak     >Add new group</ASUIMenuAction>\n            <ASUIMenuBreak />\n            {this.values.getAllSongGroups((trackName) =>\n                <ASUIMenuDropDown\n                    key={trackName}\n                    // disabled={trackName === this.state.selectedTrack}\n                    options={() => this.renderMenuTrackEdit(trackName)}\n                >{trackName}</ASUIMenuDropDown>)}\n        </>);\n    }\n\n    renderMenuTrackEdit(trackName) {\n\n        // const trackName = menuParam;\n        return (<>\n            <ASUIMenuAction onAction={e => this.trackRename(trackName)} hasBreak     >Rename group {trackName}</ASUIMenuAction>\n            <ASUIMenuAction onAction={e => this.trackRemove(trackName)} hasBreak     >Delete group {trackName}</ASUIMenuAction>\n        </>);\n    }\n\n}\n\n\nexport default ASComposerMenu;\n","import React from \"react\";\n\nimport {ASUIIcon, ASUIForm, ASUIPanel, ASUIInputRange, ASUIButton, ASUIButtonDropDown, ASUIMenuDropDown} from \"../components\";\nimport ASCProgramRenderer from \"./program/ASCProgramRenderer\";\nimport ASCTrack from \"./track/ASCTrack\";\nimport Values from \"../common/values/Values\";\n// import \"./assets/ASComposer.css\";\n// import style from \"./ASComposerRenderer.style\";\nimport {ASComposerContainer} from \"./container/ASComposerContainer\";\nimport ASCTracksContainer from \"./track/container/ASCTracksContainer\";\n\nclass ASComposerRenderer extends React.Component {\n\n    render() {\n        const selectedTrackName = this.state.selectedTrack;\n        const trackState = this.state.activeTracks[selectedTrackName];\n        // console.log('trackState', trackState);\n        const selectedIndices = trackState.selectedIndices || [];\n        return <ASComposerContainer\n                    composer={this}\n                    >\n                    <ASUIPanel className=\"song\" header=\"Song\">\n                        <ASUIForm className=\"playback\" header=\"Playback\">\n                            <ASUIButton\n                                className=\"song-play\"\n                                onAction={e => this.songPlay()}\n                            >\n                                <ASUIIcon source=\"play\"/>\n                            </ASUIButton>\n                            <ASUIButton\n                                className=\"song-pause\"\n                                onAction={e => this.songPause()}\n                            >\n                                <ASUIIcon source=\"pause\"/>\n                            </ASUIButton>\n                            <ASUIButton\n                                className=\"song-stop\"\n                                onAction={e => this.songStop()}\n                            >\n                                <ASUIIcon source=\"stop\"/>\n                            </ASUIButton>\n                        </ASUIForm>\n\n                        {this.state.portrait ? null : <ASUIForm className=\"file\" header=\"File\">\n                            <ASUIButton\n                                className=\"file-load\"\n                                onAction={(e) => this.loadSongFromFileInput(e)}\n                                accept=\".json,.mid,.midi\"\n                                ref={ref => this.fieldSongFileLoad = ref}\n                                title=\"Load Song from File\"\n                            >\n                                <ASUIIcon source=\"file-load\"/>\n                            </ASUIButton>\n                            <ASUIButton\n                                className=\"file-save\"\n                                onAction={e => this.saveSongToFile(e)}\n                                title=\"Save Song to File\"\n                            >\n                                <ASUIIcon source=\"file-save\"/>\n                            </ASUIButton>\n                        </ASUIForm>}\n\n                        <ASUIForm className=\"volume\" header=\"Volume\">\n                            <ASUIInputRange\n                                className=\"volume\"\n                                onChange={(newVolume) => this.setVolume(newVolume)}\n                                value={this.state.volume}\n                                min={0}\n                                max={1}\n                                step={0.02}\n                                title=\"Song Volume\"\n                            />\n                        </ASUIForm>\n\n                        <ASUIForm className=\"position\" header=\"Position\">\n                            <ASUIInputRange\n                                className=\"position\"\n                                onChange={(pos) => this.setSongPositionPercentage(pos)}\n                                value={Math.floor(this.state.songPosition / (this.state.songLength || 1) * 100)}\n                                min={0}\n                                max={100}\n                                // ref={ref => this.fieldSongPosition = ref}\n                                title=\"Song Position\"\n                            />\n                        </ASUIForm>\n\n                        <ASUIForm className=\"timing\" header=\"Timing\">\n                            <ASUIButton\n                                className=\"timing\"\n                                onAction={(e, timingString) => this.setSongPositionPrompt(timingString)}\n                                title=\"Song Timing\"\n                                children={Values.formatPlaybackPosition(this.state.songPosition)}\n                            />\n                        </ASUIForm>\n\n                        {this.state.portrait ? null : <ASUIForm className=\"name\" header=\"Name\">\n                            <ASUIButton\n                                className=\"name\"\n                                onAction={(e) => this.setSongNamePrompt()}\n                                title=\"Song Name\"\n                                children={this.song ? this.song.data.title : \"no song loaded\"}\n                            />\n                        </ASUIForm>}\n\n                        <ASUIForm className=\"version\" header=\"Version\">\n                            <ASUIButton\n                                className=\"version\"\n                                onAction={(e) => this.setSongVersionPrompt()}\n                                title=\"Song Version\"\n                                children={this.song ? this.song.data.version : \"0.0.0\"}\n                            />\n                        </ASUIForm>\n                    </ASUIPanel>\n\n\n                    <ASUIPanel className=\"programs\" header=\"Programs\">\n                       {this.song.programEach((programID, programClass, programConfig) =>\n                           <ASCProgramRenderer\n                               key={programID}\n                               composer={this}\n                               // openMenu={(e, options) => this.renderMenu(e, options)}\n                               // programClass={programClass}\n                               // programConfig={programConfig}\n                               programID={programID}\n                           />\n                       )}\n                       <ASUIForm className=\"program-add\" header=\"Add Program\">\n                           <ASUIMenuDropDown\n                               arrow={'▼'}\n                               className=\"program-add\"\n                               options={() => this.renderMenuSelectAvailableProgram(programClass =>\n                                       this.programAdd(programClass)\n                                   , 'Add New Program')}\n                               title=\"Add Program\"\n                           >Select...</ASUIMenuDropDown>\n                       </ASUIForm>\n                    </ASUIPanel>\n\n                    <ASUIPanel\n                        className=\"instructions\"\n                        header={`Instruction${selectedIndices.length !== 1 ? 's' : ''}`}>\n                        <ASUIForm className=\"instruction-command\" header=\"Command\">\n                            <ASUIButtonDropDown\n                                arrow={'▼'}\n                                // className=\"command\"\n                                options={() => selectedIndices.length > 0 ? this.renderMenuEditSetCommand() : this.renderMenuEditInsert()}\n                            >{trackState.currentCommand}</ASUIButtonDropDown>\n                        </ASUIForm>\n                        <ASUIForm className=\"instruction-insert\" header=\"Add\">\n                            <ASUIButton\n                                // className=\"instruction-insert\"\n                                onAction={e => this.instructionInsert()}\n                                title=\"Insert Instruction\"\n                                disabled={selectedIndices.length > 0}\n                            >\n                                <ASUIIcon source=\"insert\"/>\n                            </ASUIButton>\n                        </ASUIForm>\n                        <ASUIForm className=\"instruction-delete\" header=\"Rem\">\n                            <ASUIButton\n                                // className=\"instruction-delete\"\n                                onAction={e => this.instructionDeleteSelected()}\n                                title=\"Delete Instruction\"\n                                disabled={selectedIndices.length === 0}\n                            >\n                                <ASUIIcon source=\"remove\"/>\n                            </ASUIButton>\n                        </ASUIForm>\n\n                        {/*<Form className=\"instruction-program\" header=\"Program\">*/}\n                        {/*    <ButtonDropDown*/}\n                        {/*        arrow={'▼'}*/}\n                        {/*        // className=\"programs-programs\"*/}\n                        {/*        options={() => this.renderMenuEditSetProgram()}*/}\n                        {/*        header=\"Song Programs\"*/}\n                        {/*    >Select</ButtonDropDown>*/}\n                        {/*</Form>*/}\n\n                        <ASUIForm className=\"instruction-velocity\" header=\"Velocity\">\n                            <ASUIInputRange\n                                // className=\"velocity\"\n                                onChange={(newVelocity) => this.instructionReplaceVelocitySelected(newVelocity)}\n                                value={trackState.currentVelocity || 0}\n                                min={1}\n                                max={127}\n                                // ref={ref => this.fieldProgramVelocity = ref}\n                                title=\"Program Velocity\"\n                                disabled={selectedIndices.length === 0}\n                                />\n                        </ASUIForm>\n\n\n                        <ASUIForm className=\"instruction-duration\" header=\"Duration\">\n                            <ASUIButtonDropDown\n                                arrow={'▼'}\n                                // className=\"instruction-duration\"\n                                options={() => this.renderMenuEditSetDuration()}\n                                title=\"Program Duration\"\n                                disabled={selectedIndices.length === 0}\n                            >{trackState.currentDuration}</ASUIButtonDropDown>\n                        </ASUIForm>\n\n                        <ASUIForm className=\"tracker-selection\" header=\"Selection\">\n                            <ASUIButton\n                                // className=\"track-selection\"\n                                onAction={() => this.trackerSelectIndicesPrompt()}\n                                title=\"Tracker Note Selection\"\n                                children={selectedIndices.length > 0 ? selectedIndices.join(',') : \"None\"}\n                            />\n                        </ASUIForm>\n\n                        <ASUIForm className=\"keyboard-octave\" header=\"Octave\">\n                            <ASUIButtonDropDown\n                                arrow={'▼'}\n                                className=\"keyboard-octave\"\n                                options={() => this.renderMenuKeyboardSetOctave()}\n                                title=\"Change Keyboard Octave\"\n                            >{this.state.keyboardOctave}</ASUIButtonDropDown>\n                        </ASUIForm>\n\n                        {/*<Form className=\"track-octave\" header=\"Octave\">*/}\n                        {/*    <Button*/}\n                        {/*        arrow={'▼'}*/}\n                        {/*        className=\"track-selection\"*/}\n                        {/*        onAction={e => this.renderMenuKeyboardSetOctave(e)}*/}\n                        {/*        title=\"ASCTrack Change Octave\"*/}\n                        {/*    >4</Button>*/}\n                        {/*</Form>*/}\n                    </ASUIPanel>\n\n                    {/*<TrackerGroupsPane -w\n                    l composer={this} />*/}\n                    {/*<TrackerRowSegmentsPanel composer={this} />*/}\n\n                    {/*<ASUIPanel className=\"track\" header=\"ASCTrack\">*/}\n                    {/*    <Form className=\"track-row-length\" title=\"Row &#120491;\">*/}\n                    {/*        <Button*/}\n                    {/*            arrow={'▼'}*/}\n                    {/*            // className=\"track-row-length\"*/}\n                    {/*            onAction={e => this.renderMenuTrackerSetQuantization(e)}*/}\n                    {/*        >1B</Button>*/}\n                    {/*    </Form>*/}\n\n                    {/*    <Form className=\"track-segment-length\" header=\"Seg &#120491;\">*/}\n                    {/*        <Button*/}\n                    {/*            arrow={'▼'}*/}\n                    {/*            // className=\"track-segment-length\"*/}\n                    {/*            onAction={e => this.renderMenuTrackerSetSegmentLength(e)}*/}\n                    {/*            title=\"Select ASCTrack Segment Length\"*/}\n                    {/*        >16B</Button>*/}\n                    {/*    </Form>*/}\n\n                    {/*    /!*<Form className=\"track-program\" header=\"Program\">*!/*/}\n                    {/*    /!*    <Button*!/*/}\n                    {/*    /!*        arrow={'▼'}*!/*/}\n                    {/*    /!*        // className=\"track-programs\"*!/*/}\n                    {/*    /!*        onAction={e => this.renderMenuTrackerSetProgramFilter(e)}*!/*/}\n                    {/*    /!*        title=\"Filter by ASCTrack Program\"*!/*/}\n                    {/*    /!*    >Any</Button>*!/*/}\n                    {/*    /!*</Form>*!/*/}\n                    {/*</ASUIPanel>*/}\n\n                    <ASCTracksContainer\n                        composer={this}\n                        selectedTrackName={selectedTrackName}\n                        />\n                    {this.renderWebViewProxy()}\n                </ASComposerContainer>;\n    }\n\n\n    /** Render WebView Proxy **/\n    renderWebViewProxy() {\n        return null;\n    }\n\n}\n\n\nexport default ASComposerRenderer\n","import {\n    Song,\n    SongValues,\n    Keyboard,\n    Library}          from \"../song\";\nimport ActiveTrackState from \"./track/state/ActiveTrackState\";\nimport ASComposerInput from \"./ASComposerInput\";\n\nexport default class ASComposer extends ASComposerInput {\n    constructor(props) {\n        super(props);\n        this.state = {\n            title: \"Audio Source Composer\",\n            status: \"[No Song Loaded]\",\n            version: require('../package.json').version,\n            menuKey: 'root',\n\n\n            portrait: true,\n            fullscreen: false,\n            showPanelSong: true,\n            showPanelPlaylist: true,\n\n            // Playback\n            volume: Song.DEFAULT_VOLUME,\n            playing: false,\n            paused: false,\n\n            // Song Information\n            songUUID: null,\n            // songLengthTicks: 0,\n            songLength: 0,\n            songPosition: 0,\n\n            // Trackers\n            selectedTrack: 'root',\n            activeTracks: {\n                root:{\n                    // destination: null,\n                    currentCommand: 'C4',\n                    currentVelocity: null,\n                    currentDuration: '1B',\n                }\n            },\n\n\n            /** UI **/\n\n            // Keyboard\n            keyboardOctave: 4,\n\n\n        };\n\n        this.timeouts = {\n            saveSongToMemory: null,\n            renderPrograms: null\n        };\n        this.autoSaveTimeout = 4000;\n\n        this.keyboard = new Keyboard();\n\n        this.library = Library.loadDefault();\n        console.log('library', this.library);\n\n        this.song = new Song();\n        this.audioContext = null;\n        this.lastVolumeGain = null;\n        // this.onSongEvent = (e) => this.onSongEvent(e);\n\n        this.onSongEventCallback = (e) => this.onSongEvent(e);\n    }\n\n\n    get values() { return new SongValues(this.song); }\n\n    // async connectedCallback() {\n    //     this.shadowDOM = this.attachShadow({mode: 'closed'});\n    //\n    //     super.connectedCallback(false);\n    //\n    //     this.focus();\n    //\n    //     this.forceUpdate();\n    //     this.loadState();\n    //\n    //     this.loadMIDIInterface(e => this.onInput(e));        // TODO: wait for user input\n    //\n    // }\n\n    componentDidMount() {\n        super.componentDidMount();\n        this.loadState();\n        // TODO: get default library url from composer?\n    }\n\n\n    /** Song Events **/\n\n    async onSongEvent(e) {\n        // console.log(\"Song Event: \", e.type);\n        switch (e.type) {\n            case 'log':\n                this.setStatus(e.detail);\n                break;\n\n            case 'track:start':\n            case 'track:end':\n                break;\n\n            case 'instruction:play':\n            case 'instruction:stop':\n                // console.log(e.type, e.playingIndices);\n                const trackState = new ActiveTrackState(this, e.trackStats.trackName);\n                await trackState.update(state => {\n                    state.playingIndices = e.playingIndices;\n                })\n                // this.forceUpdate();\n                break;\n\n            case 'song:seek':\n                this.updateSongPositionValue(e.position);\n                break;\n\n            case 'song:volume':\n                this.fieldSongVolume.value = e.detail.volume;\n                break;\n\n            case 'song:loaded':\n                // this.trackerElm.renderDuration = this.song.data.timeDivision;\n                break;\n\n            case 'song:play':\n                this.setState({playing: true});\n                // this.fieldSongPlaybackPause.disabled = false;\n                const updateSongPositionInterval = setInterval(e => {\n                    if (!this.song.isPlaying()) {\n                        clearInterval(updateSongPositionInterval);\n                        // this.fieldSongPlaybackPause.disabled = true;\n                        this.setState({playing: false, paused: false});\n                    }\n                    this.updateSongPositionValue(this.song.getSongPlaybackPosition());\n                }, 10);\n                break;\n\n            case 'song:pause':\n                this.setState({paused: true});\n                break;\n\n            case 'song:end':\n                this.setState({playing: false, paused: false});\n                break;\n\n            case 'programs:instance':\n            case 'programs:added':\n            case 'programs:removed':\n                this.panelPrograms && this.panelPrograms.forceUpdate();\n                break;\n\n            case 'programs:modified':\n                this.panelPrograms && this.panelPrograms.forceUpdate();\n                // this.renderProgram(e.detail.programID);\n\n                clearTimeout(this.timeouts.saveSongToMemory);\n                this.timeouts.saveSongToMemory = setTimeout(e => this.saveAll(), this.autoSaveTimeout);\n                break;\n\n            case 'song:modified':\n                // console.log(e.type);\n                this.forceUpdate();  // TODO: might be inefficient\n                // TODO: auto save toggle\n                clearTimeout(this.timeouts.saveSongToMemory);\n                this.timeouts.saveSongToMemory = setTimeout(e => this.saveAll(), this.autoSaveTimeout);\n                break;\n\n            case 'programs:library':\n//                 console.log(e.type);\n                // TODO: this.programs.render();\n                // this.renderPrograms();\n                this.updateForms();\n                break;\n\n            default:\n                console.warn(\"Unknown song event: \", e.type);\n\n                //             case 'group:seek':\n// //                 console.log(e.type, e.detail);\n//                 if (e.detail.trackName === this.getTrackName())\n//                     this.setPlaybackPositionInTicks(e.detail.positionInTicks);\n//\n//                 break;\n//\n//             case 'group:play':\n//                 break;\n//\n//             case 'note:start':\n//                 if (e.detail.trackName === this.getTrackName()) {\n//                     let instructionElm = this.findInstructionElement(e.detail.instruction.index);\n//                     if (instructionElm) {\n//                         instructionElm.classList.add('playing');\n//                     }\n//                 }\n//                 break;\n//             case 'note:end':\n//                 if (e.detail.trackName === this.getTrackName()) {\n//                     let instructionElm = this.findInstructionElement(e.detail.instruction.index);\n//                     if (instructionElm) {\n//                         instructionElm.classList.remove('playing');\n//                     }\n//                 }\n//                 break;\n//\n//             default:\n//                 console.warn(\"Unknown song event: \", e.type);\n//         }\n        }\n    }\n\n\n}\n","import ASComposerPlayback from \"./ASComposerPlayback\";\n\nexport default class ASComposerInput extends ASComposerPlayback {\n    constructor(props) {\n        super(props);\n        this.onResizeCallback = e => this.onResize(e);\n        this.onUnloadCallback = e => this.saveState(e);\n    }\n\n    componentDidMount() {\n        this.onResize();\n        window.addEventListener('unload', this.onUnloadCallback);\n        window.addEventListener('resize', this.onResizeCallback);\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('unload', this.onUnloadCallback);\n        window.removeEventListener('resize', this.onResizeCallback);\n    }\n\n\n\n    /** Input **/\n\n    onInput(e) {\n        // console.log(e.type);\n        if (e.defaultPrevented)\n            return;\n\n        switch (e.type) {\n            case 'focus':\n                break;\n\n            // case 'click':\n            //     this.closeAllMenus(true);\n            //     break;\n\n            case 'dragover':\n                e.stopPropagation();\n                e.preventDefault();\n                e.dataTransfer.dropEffect = 'copy';\n                break;\n\n            case 'drop':\n                e.stopPropagation();\n                e.preventDefault();\n                let files = e.dataTransfer.files; // Array of all files\n                this.loadSongFromFileInput(files[0]);\n                break;\n\n            case 'midimessage':\n                // console.log(\"MIDI\", e.data, e);\n                switch (e.data[0]) {\n                    case 144:   // Note On\n                        // TODO: refactor\n                        e.preventDefault();\n                        throw new Error(\"TODO: Implement\");\n                        // const midiImport = new MIDIImport();\n                        // let newMIDICommand = midiImport.getCommandFromMIDINote(e.data[1]);\n                        // let newMIDIVelocity = Math.round((e.data[2] / 128) * 100);\n                        // console.log(\"MIDI \", newMIDICommand, newMIDIVelocity);\n\n                        // this.instructionInsertOrUpdate(e, newMIDICommand);\n                        // this.playSelectedInstructions(e);\n                        // this.focus();\n                    case 128:   // Note Off\n                        // TODO: turn off playing note, optionally set duration of note\n                        break;\n\n                    default:\n                        break;\n                }\n                break;\n\n            default:\n                throw new Error(\"Unhandled type: \" + e.type);\n        }\n\n    }\n\n\n}\n","import {Song} from \"../song\";\nimport ASComposerActions from \"./ASComposerActions\";\n\n// import {TrackInfo} from \"./track/\";\n\nexport default class ASComposerPlayback extends ASComposerActions {\n\n    loadMIDIInterface(callback) {\n        // TODO: wait for user input\n        if (navigator.requestMIDIAccess) {\n            navigator.requestMIDIAccess().then(\n                (MIDI) => {\n                    console.info(\"MIDI initialized\", MIDI);\n                    const inputDevices = [];\n                    MIDI.inputs.forEach(\n                        (inputDevice) => {\n                            inputDevices.push(inputDevice);\n                            inputDevice.addEventListener('midimessage', callback);\n                        }\n                    );\n                    console.log(\"MIDI input devices detected: \" + inputDevices.map(d => d.name).join(', '));\n                },\n                (err) => {\n                    throw new Error(\"error initializing MIDI: \" + err);\n                }\n            );\n        }\n    }\n\n\n    /** Song Proxy **/\n    /**\n     * Sets current composer song\n     * @param song\n     */\n    setCurrentSong(song) {\n        if(!song instanceof Song)\n            throw new Error(\"Invalid Song object\");\n        return super.setCurrentSong(song);\n    }\n\n    getVolumeGain(destination) {\n        if(!destination || !destination.context)\n            throw new Error(\"Invalid destination\");\n        // if (this.volume !== null) {\n        const context = destination.context;\n        let gain = context.createGain();\n        gain.gain.value = this.state.volume === null ? 1 : this.state.volume;\n        gain.connect(destination);\n        this.lastVolumeGain = gain;\n        return gain;\n        // }\n        // return destination;\n    }\n\n\n    /** Playback **/\n\n\n    getAudioDestination() {\n        return this.getAudioContext().destination;\n    }\n\n    getAudioContext() {\n        if (this.audioContext)\n            return this.audioContext;\n\n        const audioContext = new (window.AudioContext)();\n        this.audioContext = audioContext;\n        return audioContext;\n    }\n\n\n}\n\n","import React from \"react\";\n\nimport {Instruction, NoteInstruction, ProgramLoader, Song, Storage} from \"../song\";\nimport {ASUIDiv} from \"../components\";\nimport {ASCTrack} from \"./track\";\nimport Values from \"../common/values/Values\";\nimport ActiveTrackState from \"./track/state/ActiveTrackState\";\nimport PromptManager from \"../common/prompt/PromptManager\";\nimport ASComposerMenu from \"./ASComposerMenu\";\nimport FileService from \"../song/file/FileService\";\n\n// import {TrackInfo} from \"./track/\";\n\nclass ASComposerActions extends ASComposerMenu {\n    // constructor(props) {\n    //     super(props);\n    // }\n\n    setStatus(newStatus) {\n        console.info.apply(null, arguments); // (newStatus);\n        this.setState({status: newStatus});\n    }\n\n    setError(newStatus) {\n        this.setStatus(<ASUIDiv className=\"error\">{newStatus}</ASUIDiv>);\n    }\n\n    setVersion(versionString) {\n        this.setState({version: versionString});\n    }\n\n    /** Song rendering **/\n    getSong() { return this.song; }\n\n    /**\n     * Sets current composer song\n     * @param song\n     */\n    setCurrentSong(song) {\n        if(!song instanceof Song)\n            throw new Error(\"Invalid current song\");\n        if(this.song) {\n            this.setStatus(\"Unloading song: \" + this.song.data.title);\n            if(this.song.isPlaying()) {\n                this.song.stopPlayback();\n            }\n            this.song.removeEventListener('*', this.onSongEventCallback);\n            this.song.unloadAll();\n        }\n        this.song = song;\n        // console.log(\"Current Song: \", song);\n\n        const activeTracks = {\n            'root': {\n                // destination: this.getAudioContext()\n            },\n        };\n\n        this.song.addEventListener('*', this.onSongEventCallback);\n        // this.setStatus(\"Initializing song: \" + song.data.title);\n        // this.song.connect(this.getAudioContext());\n        // this.setStatus(\"Loaded song: \" + song.data.title);\n        this.setState({\n            status: \"Loaded song: \" + song.data.title,\n            title: song.data.title,\n            songUUID: song.data.uuid,\n            songLength: song.getSongLengthInSeconds(),\n            selectedTrack: song.getStartTrackName() || 'root',\n            activeTracks\n        });\n        this.trackerToggleTrack('track0', true);\n        this.trackerToggleTrack('track1', true);\n    }\n\n    updateCurrentSong() {\n        this.setState({\n            songLength: this.song.getSongLengthInSeconds(),\n        });\n    }\n\n\n\n    /** Portrait Mode **/\n\n    onResize() {\n        const aspectRatio = window.innerWidth / window.innerHeight;\n        const portrait = aspectRatio < 8/13; // Near golden ratio\n        if(!this.state.portrait === portrait) {\n            console.log(\"Setting portrait mode to \", portrait, \". Aspect ratio: \", aspectRatio);\n            this.setState({portrait});\n        }\n    }\n\n\n    /** State **/\n\n    async loadState() {\n        const storage = new Storage();\n        const state = await storage.loadState('audio-source-composer-state');\n        console.log('Loading State: ', state);\n\n\n        if (state) {\n            if (typeof state.volume !== \"undefined\")\n                this.setVolume(state.volume);\n            delete state.volume;\n            // if(state.songUUID)\n            await this.loadDefaultSong(state.songUUID);\n            delete state.songUUID;\n            this.setState(state);\n            this.updateCurrentSong();\n            // this.setCurrentSong(this.song); // Hack: resetting current song after setting state, bad idea\n\n        } else {\n            await this.loadDefaultSong();\n        }\n    }\n\n\n    async saveAll() {\n        await this.saveSongToMemory();\n        await this.saveState()\n    }\n\n    async saveState() {\n        const storage = new Storage();\n        console.log('Saving State: ', this.state);\n        await storage.saveState(this.state, 'audio-source-composer-state');\n    }\n\n\n\n    /** Volume **/\n\n\n    getVolume () {\n        return this.state.volume;\n    }\n\n    setVolume (volume) {\n        console.info(\"Setting volume: \", volume);\n        this.setState({volume});\n        if(this.lastVolumeGain)\n            this.lastVolumeGain.gain.value = volume;\n    }\n\n    /** Song actions **/\n\n\n    async setSongNamePrompt(newSongTitle) {\n        newSongTitle = await PromptManager.openPromptDialog(\"Enter a new song name\", this.song.data.title);\n        this.setSongName(newSongTitle);\n    }\n    setSongName(newSongTitle=null) {\n        if(typeof newSongTitle !== \"string\")\n            throw new Error(\"Invalid song title: \" + newSongTitle);\n        this.song.data.title = newSongTitle;\n        this.setStatus(`Song title updated: ${newSongTitle}`);\n    }\n\n    async setSongVersionPrompt(newSongVersion) {\n        newSongVersion = await PromptManager.openPromptDialog(\"Enter a new song version\", this.song.data.version);\n        this.setSongVersion(newSongVersion);\n    }\n    setSongVersion(newSongVersion) {\n        if(typeof newSongVersion !== \"string\")\n            throw new Error(\"Invalid song version: \" + newSongVersion);\n        this.song.data.version = newSongVersion;\n        this.setStatus(`Song version updated: ${newSongVersion}`);\n    }\n\n    songChangeStartingBeatsPerMinute(newSongBeatsPerMinute) {\n        this.song.data.beatsPerMinute = newSongBeatsPerMinute; // songChangeStartingBeatsPerMinute(newSongBeatsPerMinute);\n        this.setStatus(`Song beats per minute updated: ${newSongBeatsPerMinute}`);\n    }\n\n\n\n    async openSongFromFileDialog(e, accept=null) {\n        const file = await this.openFileDialog(accept);\n        this.loadSongFromFileInput(e, file);\n    }\n\n\n    /** Song Loading **/\n\n    async loadDefaultSong(recentSongUUID = null) {\n        const src = this.props.src || this.props.url;\n        if (src) {\n            await this.loadSongFromURL(src);\n            return true;\n        }\n\n\n        if (recentSongUUID) {\n            try {\n                await this.loadSongFromMemory(recentSongUUID);\n                return;\n            } catch (e) {\n                console.error(e);\n                this.setError(\"Error: \" + e.message)\n            }\n        }\n\n        this.loadNewSongData();\n\n        return false;\n    }\n\n    loadNewSongData() {\n        // const storage = new Storage();\n        // const defaultProgramURL = this.getDefaultProgramClass() + '';\n        // let songData = storage.generateDefaultSong(defaultProgramURL);\n        // const song = Song.loadSongFromData(songData);\n        const song = new Song(this.audioContext);\n        this.setCurrentSong(song);\n        // this.forceUpdate();\n        this.setStatus(\"Loaded new song\", song.getProxiedData());\n    }\n\n\n    async loadRecentSongData() {\n        const storage = new Storage();\n        let songRecentUUIDs = await storage.getRecentSongList();\n        if (songRecentUUIDs[0] && songRecentUUIDs[0].uuid) {\n            this.setStatus(\"Loading recent song: \" + songRecentUUIDs[0].uuid);\n            this.loadSongFromMemory(songRecentUUIDs[0].uuid);\n            return true;\n        }\n        return false;\n    }\n\n    async loadSongFromURL(url) {\n        const library = Song.getFileSupportModule(url);\n        if (typeof library.loadSongDataFromBuffer !== \"function\")\n            throw new Error(\"Invalid library.loadSongDataFromURL method: \" + url);\n\n        const fileService = new FileService();\n        const buffer = await fileService.loadBufferFromURL(url);\n        // const buffer = await response.arrayBuffer();\n        const songData = library.loadSongDataFromBuffer(buffer, url);\n        const song = new Song();\n        song.loadSongData(songData);\n        this.setStatus(\"Loaded from url: \" + url);\n        return song;\n    }\n\n    async loadSongFromFileInput(e, file=null, accept=null) {\n        if(file === null)\n            file = await this.openFileDialog(accept);\n        if (!file)\n            throw new Error(\"Invalid file input\");\n\n        const library = Song.getFileSupportModule(file.name);\n        if (typeof library.loadSongDataFromFileInput !== \"function\")\n            throw new Error(\"Invalid library.loadSongDataFromFileInput method\");\n\n        const buffer = await this.loadBufferFromFileInput(file);\n        const songData = library.loadSongDataFromBuffer(buffer, file.name);\n        const song = new Song();\n        song.loadSongData(songData);\n        this.setCurrentSong(song);\n        return song;\n    }\n\n    async loadBufferFromFileInput(file) {\n        return await new Promise((resolve, reject) => {\n            let reader = new FileReader();                                      // prepare the file Reader\n            reader.readAsArrayBuffer(file);                 // read the binary data\n            reader.onload =  (e) => {\n                resolve(e.target.result);\n            };\n        });\n    }\n\n\n    async loadSongFromMemory(songUUID) {\n        const storage = new Storage();\n        const songData = await storage.loadSongFromMemory(songUUID);\n        const songHistory = await storage.loadSongHistoryFromMemory(songUUID);\n        const song = new Song(songData);\n        song.loadSongData(songData);\n        song.loadSongHistory(songHistory);\n        this.setCurrentSong(song);\n        this.setStatus(\"Song loaded from memory: \" + songUUID, this.song, this.state);\n    }\n\n\n    async saveSongToMemory() {\n        const song = this.song;\n        const songData = song.getProxiedData();\n        const songHistory = song.history;\n        const storage = new Storage();\n        this.setStatus(\"Saving song to memory...\", songData);\n        await storage.saveSongToMemory(songData, songHistory);\n        this.setStatus(\"Saved song to memory: \" + songData.uuid);\n    }\n\n    saveSongToFile() {\n        const songData = this.song.getProxiedData();\n        // const songHistory = this.song.history;\n        const storage = new Storage();\n        this.setStatus(\"Saving song to file\");\n        storage.saveSongToFile(songData);\n    }\n\n    /** Song Playback **/\n\n    setSongPositionPercentage(playbackPercentage) {\n        const playbackPosition = (playbackPercentage / 100) * this.state.songLength;\n        return this.setSongPosition(playbackPosition);\n    }\n\n    setSongPosition(songPosition) {\n        // TODO: parse % percentage\n        if(typeof songPosition === 'string')\n            songPosition = Values.parsePlaybackPosition(songPosition);\n        if(isNaN(songPosition))\n            throw new Error(\"Invalid song position: \" + songPosition);\n        this.setState({songPosition})\n    }\n\n    async setSongPositionPrompt() {\n        let songPosition = Values.formatPlaybackPosition(this.state.songPosition || 0);\n        songPosition = await PromptManager.openPromptDialog(\"Set playback position:\", songPosition);\n        this.setSongPosition(songPosition);\n    }\n\n    updateSongPositionValue(playbackPositionInSeconds) {\n        this.setState({songPosition:playbackPositionInSeconds})\n    }\n\n    /** Instruction Modification **/\n\n    async instructionInsertPrompt(newCommand = null, trackName = null, promptUser = false) {\n        const trackState = new ActiveTrackState(this, trackName);\n        if (newCommand === null)\n            newCommand = trackState.currentCommand;\n        newCommand = await PromptManager.openPromptDialog(\"Set custom command:\", newCommand || '');\n        return this.instructionInsert(newCommand);\n    }\n\n    instructionInsert(newCommand = null, trackName = null) {\n        // const activeTracks = {...this.state.activeTracks};\n        trackName = trackName || this.state.selectedTrack;\n        const trackState = new ActiveTrackState(this, trackName);\n        // if (programID !== null)\n        //     newInstruction.program = programID;\n\n        //: TODO: check for recursive group\n        const song = this.song;\n        // let selectedIndices = this.getSelectedIndices();\n\n        // if(selectedIndices.length === 0)\n        //     throw new Error(\"No selection\");\n        if (newCommand === null)\n            newCommand = trackState.currentCommand;\n        if (!newCommand)\n            throw new Error(\"Invalid Instruction command\");\n\n        const newInstruction = Instruction.parseInstruction([0, newCommand]);\n        trackState.update(state => state.currentCommand = newInstruction.command).then();\n        if(trackState.currentDuration)\n            newInstruction.durationTicks = song.values.parseDurationAsTicks(trackState.currentDuration);\n        if(trackState.currentVelocity)\n            newInstruction.velocity = trackState.currentVelocity;\n        // this.setState({activeTracks});\n\n        const songPositionTicks = trackState.cursorPositionTicks; // Using cursorPositionTicks is more accurate for insert\n        let insertIndex = song.instructionInsertAtPosition(trackName, songPositionTicks, newInstruction);\n        this.trackerSelectIndices(trackName, [insertIndex]);\n\n        this.trackerPlay(trackName, [insertIndex]);\n    }\n\n    async instructionReplaceCommandSelectedPrompt(newCommand = null, trackName=null) {\n        if (newCommand === null)\n            newCommand = this.state.activeTracks[this.state.selectedTrack].currentCommand;\n        newCommand = await PromptManager.openPromptDialog(\"Set custom command:\", newCommand || '');\n        return this.instructionReplaceCommandSelected(newCommand, trackName);\n    }\n\n    instructionReplaceCommandSelected(newCommand, trackName=null, selectedIndices=null) {\n        const song = this.song;\n        trackName = trackName || this.state.selectedTrack;\n        const trackState = new ActiveTrackState(this, trackName);\n        if(selectedIndices === null)\n            selectedIndices = trackState.selectedIndices; // .getSelectedIndices();\n\n        if (selectedIndices.length === 0)\n            throw new Error(\"No selection\");\n        // if (newCommand === null)\n        //     newCommand = trackInfo.track.currentCommand;\n        if (!newCommand)\n            throw new Error(\"Invalid Instruction command\");\n\n        // this.setState({currentTrackerCommand: newCommand});\n        for (let i = 0; i < selectedIndices.length; i++) {\n            song.instructionReplaceCommand(trackName, selectedIndices[i], newCommand);\n        }\n\n        this.trackerPlay(trackName, selectedIndices);\n        // trackInfo.updateCurrentInstruction();\n    }\n    // }\n\n    async instructionReplaceDurationSelected(duration = null, trackName = null, selectedIndices = null, promptUser = false) {\n        const song = this.song;\n        trackName = trackName || this.state.selectedTrack;\n        const trackState = new ActiveTrackState(this, trackName);\n        if(selectedIndices === null)\n            selectedIndices = trackState.selectedIndices; // .getSelectedIndices();\n\n        if (promptUser)\n            duration = parseInt(await PromptManager.openPromptDialog(\"Set custom duration in ticks:\", duration), 10);\n\n        if (typeof duration === 'string')\n            duration = Values.parseDurationAsTicks(duration, this.song.data.timeDivision);\n        else duration = parseInt(duration)\n\n        if (isNaN(duration))\n            throw new Error(\"Invalid duration: \" + typeof duration);\n        for (let i = 0; i < selectedIndices.length; i++) {\n            song.instructionReplaceDuration(trackName, selectedIndices[i], duration);\n        }\n        this.trackerPlay(trackName, selectedIndices);\n        this.setState(state => {\n            state.activeTracks[trackName].currentDuration = duration;\n        })\n        // trackState.updateCurrentInstruction();\n    }\n\n    async instructionReplaceVelocityPrompt(velocity = null, trackName = null, selectedIndices = null) {\n        trackName = trackName || this.state.selectedTrack;\n        const trackState = new ActiveTrackState(this, trackName);\n        velocity = parseInt(await PromptManager.openPromptDialog(\"Set custom velocity (0-127):\", trackState.currentVelocity));\n        return this.instructionReplaceVelocitySelected(velocity, trackName, selectedIndices);\n    }\n\n    instructionReplaceVelocitySelected(velocity = null, trackName = null, selectedIndices = null) {\n        const song = this.song;\n        trackName = trackName || this.state.selectedTrack;\n        const trackState = new ActiveTrackState(this, trackName);\n        if(selectedIndices === null)\n            selectedIndices = trackState.selectedIndices || []; // .getSelectedIndices();\n\n        velocity = parseFloat(velocity);\n        if (velocity === null || isNaN(velocity))\n            throw new Error(`Invalid velocity (${typeof velocity}): ${velocity}`);\n        for (let i = 0; i < selectedIndices.length; i++) {\n            song.instructionReplaceVelocity(trackName, selectedIndices[i], velocity);\n        }\n        this.trackerPlay(trackName, selectedIndices);\n        this.setState(state => {\n            state.activeTracks[trackName].currentVelocity = velocity;\n            return state;\n        })\n        // trackInfo.updateCurrentInstruction();\n    }\n\n    instructionDeleteSelected(trackName=null, selectedIndices=null) {\n        trackName = trackName || this.state.selectedTrack;\n        const trackState = new ActiveTrackState(this, trackName);\n        if(selectedIndices === null)\n            selectedIndices = trackState.selectedIndices || []; // .getSelectedIndices();\n\n        for (let i = 0; i < selectedIndices.length; i++)\n            this.song.instructionDeleteAtIndex(trackName, selectedIndices[i]);\n\n    }\n\n    /** Keyboard Commands **/\n\n    keyboardChangeOctave(keyboardOctave = null) {\n        if (!Number.isInteger(keyboardOctave))\n            throw new Error(\"Invalid segment ID\");\n        this.setState({keyboardOctave});\n    }\n\n    /** ASComposer State **/\n\n    async updateState(newState) {\n        new Promise(resolve => {\n            this.setState(state => {\n                if(typeof newState === \"function\")\n                    newState = newState(state) || state;\n                return newState;\n            }, resolve)\n        })\n    }\n\n\n    // /** @deprecated **/\n    // trackerGetTrackInfo(trackName) {\n    //     return new TrackInfo(trackName, this);\n    // }\n    // trackerGetSelectedTrackInfo() {\n    //     const trackName = this.state.selectedTrack;\n    //     return new TrackInfo(trackName, this);\n    // }\n\n\n\n    /** Song Playback **/\n\n    getDestination() {\n        const audioContext = this.getAudioContext();\n        return this.getVolumeGain(audioContext.destination);        // TODO: get track destination\n    }\n\n    songPlay(songPosition=null, onended=null) {\n        this.song.play(this.getDestination(),\n            songPosition === null ? this.state.songPosition : songPosition,\n            onended);\n    }\n\n    songPause() {\n        this.song.stopPlayback();\n    }\n\n    songStop() {\n        if (this.song.playback)\n            this.song.stopPlayback();\n        this.song.setPlaybackPositionInTicks(0);\n    }\n\n    /** Track Playback **/\n\n\n    trackerPlaySelected(trackName=null, stopPlayback=true) {\n        const trackState = new ActiveTrackState(this, trackName);\n        return this.trackerPlay(trackName, trackState.selectedIndices, stopPlayback);\n    }\n\n    trackerPlay(trackName, selectedIndices, stopPlayback=true) {\n        // const trackState = new ActiveTrackState(this, trackName);\n\n\n        const song = this.getSong();\n        if(stopPlayback && song.isPlaying())\n            song.stopPlayback();\n\n        let destination = this.getDestination();\n        // let destination = audioContext.destination;\n\n\n        // destination = destination || this.getDestination();\n        if(!Array.isArray(selectedIndices))\n            selectedIndices = [selectedIndices];\n        // console.log('playInstructions', selectedIndices);\n        // const programID = typeof trackState.programID !== \"undefined\" ? trackState.programID : 0;\n\n        // if(stopPlayback)\n        //     song.programLoader.stopAllPlayback();\n\n        song.playSelectedInstructions(destination, trackName, selectedIndices);\n    }\n\n\n    /** ASCTrack Commands **/\n\n    async trackAdd(newTrackName = null, promptUser = true) {\n        const song = this.song;\n\n        newTrackName = newTrackName || song.generateInstructionTrackName();\n        if(promptUser)\n            newTrackName = await PromptManager.openPromptDialog(\"Create new instruction group?\", newTrackName);\n        if (newTrackName) {\n            song.trackAdd(newTrackName, []);\n            await this.trackerToggleTrack(newTrackName, true);\n        } else {\n            this.setStatus(\"<span class='error'>Create instruction group canceled</span>\");\n        }\n    }\n\n    async trackRename(oldTrackName, newTrackName = null, promptUser = true) {\n        const song = this.song;\n\n        if(promptUser)\n            newTrackName = await PromptManager.openPromptDialog(`Rename instruction group (${oldTrackName})?`, oldTrackName);\n        if (newTrackName !== oldTrackName) {\n            song.trackRename(oldTrackName, newTrackName);\n            await this.trackerToggleTrack(newTrackName, true);\n            await this.trackerToggleTrack(oldTrackName, false);\n        } else {\n            this.setStatus(\"<span class='error'>Rename instruction group canceled</span>\");\n        }\n    }\n\n    async trackRemove(trackName, promptUser = true) {\n        const song = this.song;\n\n        const result = promptUser ? await PromptManager.openPromptDialog(`Remove instruction group (${trackName})?`) : true;\n        if (result) {\n            song.trackRemove(trackName);\n            await this.trackerToggleTrack(trackName, true);\n        } else {\n            this.setStatus(\"<span class='error'>Remove instruction group canceled</span>\");\n        }\n\n    }\n\n    async trackerToggleTrack(trackName = null, toggleValue=null, trackData={}) {\n        // const trackState = this.trackGetState(trackName);\n        // const activeTracks = {...this.state.activeTracks};\n        let selectedTrack = trackName;\n        if(toggleValue === true || typeof this.state.activeTracks[trackName] === \"undefined\") {\n            // const currentTrackData = activeTracks[this.state.selectedTrack];\n            // activeTracks[trackName] = trackData; //Object.assign({}, currentTrackData, trackData);\n            await this.updateState(state => {\n                state.selectedTrack = selectedTrack;\n                state.activeTracks[trackName] = trackData\n            })\n            await this.trackerUpdateSegmentInfo(trackName);\n\n        } else {\n            trackData = this.state.activeTracks[trackName];\n            if(trackData.destinationList)\n                selectedTrack = trackData.destinationList.slice(-1)[0]; // Select last track\n            else\n                selectedTrack = this.getSong().getStartTrackName();\n            await this.updateState(state => {\n                state.selectedTrack = selectedTrack;\n                delete state.activeTracks[trackName];\n            })\n        }\n    }\n\n    async trackerChangeQuantization(trackName, trackerQuantizationTicks) {\n        if (!trackerQuantizationTicks || !Number.isInteger(trackerQuantizationTicks))\n            throw new Error(\"Invalid quantization value\");\n        await this.updateState(state => {\n            state.selectedTrack = trackName;\n            state.activeTracks[trackName].quantizationTicks = trackerQuantizationTicks;\n        });\n        await this.trackerUpdateSegmentInfo(trackName);\n    }\n\n    async trackerChangeQuantizationPrompt(trackName) {\n        const trackerQuantizationTicks = await PromptManager.openPromptDialog(`Enter custom tracker quantization in ticks:`, this.track.quantizationTicks);\n        await this.trackerChangeQuantization(trackName, trackerQuantizationTicks)\n    }\n\n\n    trackerChangeSegmentLength(trackName, trackerSegmentLengthInRows = null) {\n        if (!trackerSegmentLengthInRows || !Number.isInteger(trackerSegmentLengthInRows))\n            throw new Error(\"Invalid track row length value\");\n        this.setState(state => {\n            state.activeTracks[trackName].rowLength = trackerSegmentLengthInRows;\n            return state;\n        });\n    }\n\n    async trackerChangeSegmentLengthPrompt(trackName) {\n        const trackerSegmentLengthInRows = parseInt(await PromptManager.openPromptDialog(`Enter custom tracker segment length in rows:`, this.track.rowLength));\n        this.trackerChangeSegmentLength(trackName, trackerSegmentLengthInRows);\n    }\n\n    /**\n     * Used when track has been modified\n     * @param trackName\n     * @returns {Promise<void>}\n     */\n    async trackerUpdateSegmentInfo(trackName) {\n        trackName = trackName || this.state.selectedTrack;\n        const trackState = new ActiveTrackState(this, trackName);\n        const iterator = this.trackerGetIterator(trackName);\n        iterator.seekToEnd();\n        const trackLengthTicks = iterator.positionTicks;\n\n        const qIterator = this.trackerGetQuantizedIterator(trackName);\n        const segmentLengthTicks = trackState.segmentLengthTicks;\n        const segmentPositions = [];\n        let lastSegmentPositionTicks = 0;\n        while ( qIterator.positionTicks < trackLengthTicks\n                || segmentPositions.length < ASCTrack.DEFAULT_MIN_SEGMENTS) {\n            if(lastSegmentPositionTicks <= qIterator.positionTicks) {\n                // Found end of segment\n                segmentPositions.push(qIterator.rowCount);\n                lastSegmentPositionTicks += segmentLengthTicks;\n            }\n            qIterator.nextQuantizedInstructionRow();\n        }\n\n        // qIterator.seekToPosition()\n\n        // if (!trackState.trackLengthTicks || trackLengthTicks > trackState.trackLengthTicks) {\n            await trackState.update(state => {\n                state.trackLengthTicks = trackLengthTicks;\n                state.segmentPositions = segmentPositions;\n                // console.log('trackLengthTicks', {segmentPositions, trackLengthTicks, qIterator});\n            });\n        // }\n    }\n\n    /** Selection **/\n\n    trackerGetIterator(trackName=null) {\n        const trackState = new ActiveTrackState(this, trackName);\n        return this.getSong().instructionGetIterator(\n            trackName,\n            trackState.timeDivision, // || this.getSong().data.timeDivision,\n            trackState.beatsPerMinute //  || this.getSong().data.beatsPerMinute\n        );\n    }\n\n    trackerGetQuantizedIterator(trackName=null) {\n        const trackState = new ActiveTrackState(this, trackName);\n        return this.getSong().instructionGetQuantizedIterator(\n            trackName,\n            trackState.quantizationTicks,\n            trackState.timeDivision, // || this.getSong().data.timeDivision,\n            trackState.beatsPerMinute //  || this.getSong().data.beatsPerMinute\n        );\n    }\n\n    /**\n     * Used when selecting\n     * @param trackName\n     * @param cursorOffset\n     * @returns {{positionTicks: PositionTickInfo[] | number, cursorRow, positionSeconds, previousOffset: number, nextRowOffset, cursorIndex: null, adjustedCursorRow, nextOffset: *, previousRowOffset}}\n     */\n    trackerGetCursorInfo(trackName=null, cursorOffset=null) {\n        trackName = trackName || this.state.selectedTrack;\n        const trackState = new ActiveTrackState(this, trackName);\n        cursorOffset = cursorOffset === null ? trackState.cursorOffset : cursorOffset;\n        const iterator = this.trackerGetQuantizedIterator(trackName);\n        let cursorIndex = null;\n        let currentRowStartPosition=0, lastRowStartPosition=0\n        // let indexFound = null;\n        while(iterator.cursorPosition <= cursorOffset) {\n            lastRowStartPosition = currentRowStartPosition;\n            currentRowStartPosition = iterator.cursorPosition;\n            // eslint-disable-next-line no-loop-func\n            iterator.nextQuantizedInstructionRow(null, function() {\n                if(iterator.cursorPosition === cursorOffset) {\n                    cursorIndex = iterator.currentIndex;\n                }\n            });\n\n        }\n        const column = cursorOffset - currentRowStartPosition;\n\n        const cursorRow = iterator.rowCount;\n        const currentRowOffset = trackState.rowOffset || 0;\n        const rowLength = trackState.rowLength || 16;\n        let adjustedCursorRow = null;\n        if(currentRowOffset + rowLength <= cursorRow)\n            adjustedCursorRow = cursorRow - rowLength; //  - Math.floor(currentRowLength * 0.8);\n        if(currentRowOffset >= cursorRow)\n            adjustedCursorRow = cursorRow - 1; // - Math.ceil(currentRowLength * 0.2);\n\n\n\n        const nextRowOffset = iterator.cursorPosition + column;\n        const previousRowOffset = lastRowStartPosition + column;\n        // console.log({p: iterator.cursorPosition, cursorOffset, column, previousRowOffset, nextRowOffset});\n        const ret = {\n            positionTicks: iterator.positionTicks,\n            positionSeconds: iterator.positionSeconds,\n            cursorIndex,\n            cursorRow,\n            adjustedCursorRow,\n            previousOffset: cursorOffset > 0 ? cursorOffset - 1 : 0,\n            nextOffset: cursorOffset + 1,\n            previousRowOffset,\n            nextRowOffset\n        };\n        // console.log(ret);\n        return ret;\n    }\n\n    // trackerFindRowOffsetFromPosition(trackName, trackPositionTicks) {\n    //     // const trackState = new ActiveTrackState(this, trackName);\n    //     const iterator = this.trackerGetQuantizedIterator(trackName);\n    //     iterator.seekToPositionTicks(trackPositionTicks);\n    //     const rowOffset = iterator.rowCount;\n    //     console.log('trackerFindRowOffsetFromPosition', trackPositionTicks, rowOffset, iterator);\n    //     return rowOffset;\n    // }\n\n    async trackerSelectIndicesPrompt(trackName=null) {\n        if(trackName === null)\n            trackName = this.state.selectedTrack;\n        const trackState = new ActiveTrackState(this, trackName);\n        let selectedIndices = (trackState.selectedIndices || []).join(', ');\n        selectedIndices = await PromptManager.openPromptDialog(`Select indices for track ${trackName}: `, selectedIndices);\n        this.trackerSelectIndices(trackName, selectedIndices);\n    }\n\n    trackerSelectIndices(trackName, selectedIndices, cursorOffset=null) {\n        // console.log('trackerSelectIndices', {trackName, selectedIndices, cursorOffset, rowOffset});\n        // TODO: get song position by this.props.index\n        // let selectedIndices = await PromptManager.openPromptDialog(\"Enter selection: \", oldSelectedIndices.join(','));\n        if (typeof selectedIndices === \"string\") {\n            switch (selectedIndices) {\n                case 'all':\n                    selectedIndices = [];\n                    const maxLength = this.song.instructionFindGroupLength(this.trackName);\n                    for (let i = 0; i < maxLength; i++)\n                        selectedIndices.push(i);\n                    break;\n                case 'segment':\n                    selectedIndices = [].map.call(this.querySelectorAll('asct-instruction'), (elm => elm.index));\n                    break;\n                case 'row':\n                    throw new Error('TODO');\n                case 'none':\n                    selectedIndices = [];\n                    break;\n                default:\n                    selectedIndices = selectedIndices.split(/[^0-9]/).map(index => parseInt(index));\n                    // throw new Error(\"Invalid selection: \" + selectedIndices);\n            }\n        }\n\n        if (typeof selectedIndices === 'number')\n            selectedIndices = [selectedIndices];\n        if (!Array.isArray(selectedIndices))\n            throw new Error(\"Invalid selection: \" + selectedIndices);\n\n        selectedIndices.forEach((index, i) => {\n            if(typeof index !== \"number\")\n                throw new Error(`Invalid selection index (${i}): ${index}`);\n        });\n\n        // Filter unique indices\n        selectedIndices = selectedIndices.filter((v, i, a) => a.indexOf(v) === i && v !== null);\n        // Sort indices\n        selectedIndices.sort((a, b) => a - b);\n        // console.info('ASComposerActions.trackerSelectIndices', trackName, selectedIndices);\n\n\n        this.setState(state => {\n            state.selectedTrack = trackName;\n            const trackState = state.activeTracks[trackName];\n            trackState.selectedIndices = selectedIndices;\n            if(cursorOffset !== null) {\n                const cursorInfo = this.trackerGetCursorInfo(trackName, cursorOffset);\n                trackState.cursorOffset = cursorOffset;\n                // TODO: rowOffset = this.trackerGetCursorInfo(cursorOffset).adjustedCursorRow;\n                // if (rowOffset !== null)\n                if(cursorInfo.adjustedCursorRow !== null)\n                    trackState.rowOffset = cursorInfo.adjustedCursorRow;\n                trackState.cursorPositionTicks = cursorInfo.positionTicks;\n                state.songPosition = cursorInfo.positionSeconds + (trackState.startPosition || 0);\n            }\n            // If selected, update default instruction params\n            if(selectedIndices.length > 0) {\n                const firstSelectedInstruction = this.getSong().instructionGetByIndex(trackName, selectedIndices[0]);\n                trackState.currentCommand = firstSelectedInstruction.command;\n                if(firstSelectedInstruction instanceof NoteInstruction) {\n                    if(typeof firstSelectedInstruction.durationTicks !== \"undefined\")\n                        trackState.currentDuration = firstSelectedInstruction.getDurationString(trackState.timeDivision || this.getSong().data.timeDivision);\n                    if(typeof firstSelectedInstruction.velocity !== \"undefined\")\n                        trackState.currentVelocity = firstSelectedInstruction.velocity;\n                }\n            }\n            return state;\n        });\n        return selectedIndices;\n    }\n\n\n\n    trackerSetCursorOffset(trackName, newCursorOffset, selectedIndices=[]) {\n        if (!Number.isInteger(newCursorOffset))\n            throw new Error(\"Invalid cursor offset\");\n        if(newCursorOffset < 0)\n            throw new Error(\"Cursor offset must be >= 0\");\n        return this.trackerSelectIndices(trackName, selectedIndices, newCursorOffset);\n    }\n\n    trackerSetScrollPosition(trackName, newScrollPositionTicks) {\n        if (!Number.isInteger(newScrollPositionTicks))\n            throw new Error(\"Invalid row offset\");\n        this.setState(state => {\n            state.activeTracks[trackName].scrollPositionTicks = newScrollPositionTicks;\n            return state;\n        });\n    }\n\n    // trackerSetRowOffset\n\n    // trackerSetRowOffsetFromPositionTicks(trackName, trackPositionTicks) {\n    //     const rowOffset = this.trackerFindRowOffsetFromPosition(trackName, trackPositionTicks);\n    //     this.trackerSetRowOffset(trackName, rowOffset);\n    // }\n\n    trackerSetRowOffset(trackName, newRowOffset) {\n        if (!Number.isInteger(newRowOffset))\n            throw new Error(\"Invalid row offset\");\n        // console.log('trackerSetRowOffset', {trackName, newRowOffset});\n        this.setState(state => {\n            state.selectedTrack = trackName;\n            state.activeTracks[trackName].rowOffset = newRowOffset;\n            return state;\n        });\n    }\n\n\n    // trackerUpdateCurrentInstruction(trackName) {\n    //     this.setState(state => {\n    //         const track = state.activeTracks[trackName];\n    //         const selectedIndices = track.selectedIndices;\n    //         if(selectedIndices.length > 0) {\n    //             const firstSelectedInstruction = this.getSong().instructionGetByIndex(this.getTrackName(), selectedIndices[0]);\n    //             track.currentCommand = firstSelectedInstruction.command;\n    //             if(firstSelectedInstruction instanceof NoteInstruction) {\n    //                 if(typeof firstSelectedInstruction.durationTicks !== \"undefined\")\n    //                     track.currentDuration = firstSelectedInstruction.getDurationString(this.getStartingTimeDivision());\n    //                 if(typeof firstSelectedInstruction.velocity !== \"undefined\")\n    //                     track.currentVelocity = firstSelectedInstruction.velocity;\n    //             }\n    //         }\n    //         return state;\n    //     });\n    //\n    // }\n\n    /** @deprecated **/\n    trackerCalculateRowOffset(trackName, cursorOffset=null) {\n        return this.trackerGetTrackInfo(trackName).calculateRowOffset(trackName, cursorOffset);\n    }\n\n    /** @deprecated **/\n    trackerFindCursorRow(trackName, cursorOffset=null) {\n        return this.trackerGetTrackInfo(trackName).findCursorRow(trackName, cursorOffset);\n    }\n\n\n\n\n\n    /** Context menu **/\n    // async openContextMenu(e) {\n    //     const contextMenu = this.menuContext;\n    //     await contextMenu.openContextMenu(e);\n    // }\n\n    /** Programs **/\n\n\n    async programAdd(programClassName, programConfig = {}, promptUser=false) {\n        if (!programClassName)\n            throw new Error(`Invalid program class`);\n        const {title} = ProgramLoader.getProgramClassInfo(programClassName);\n        // programConfig = ProgramLoader.createProgramConfig(programClassName, programConfig);\n        // programConfig.libraryURL = this.defaultLibraryURL;\n        // programConfig.name = programConfig.name || programURL.split('/').pop();\n\n//         e.target.form.elements['programURL'].value = '';\n        if (promptUser === false || await this.openConfirmDialog(`Add '${title}' to Song?`)) {\n            const programID = this.song.programAdd(programConfig);\n            this.setStatus(`New program class '${programClassName}' added to song at position ${programID}`);\n            // this.forceUpdate();\n            // this.fieldInstructionProgram.setValue(programID);\n            // await this.panelPrograms.forceUpdate();\n\n        } else {\n            this.setError(`New program canceled: ${programClassName}`);\n        }\n    }\n\n    async programReplace(programID, programClassName, programConfig = {}) {\n        if (!Number.isInteger(programID))\n            throw new Error(`Invalid Program ID: Not an integer`);\n        if (!programClassName)\n            throw new Error(`Invalid Program class`);\n\n        if (await PromptManager.openPromptDialog(`Change Program (${programID}) to ${programClassName}`)) {\n            await this.song.programReplace(programID, programClassName, programConfig);\n            this.setStatus(`Program (${programID}) changed to: ${programClassName}`);\n\n        } else {\n            this.setError(`Change program canceled: ${programClassName}`);\n        }\n    }\n\n    async programRename(programID, newProgramTitle = null) {\n        console.log(this.song.programGetConfig(programID).title, programID);\n        const oldProgramTitle = this.song.programGetConfig(programID).title;\n        if (!newProgramTitle)\n            newProgramTitle = await PromptManager.openPromptDialog(`Change name for programs ${programID}: `, oldProgramTitle);\n        if (!newProgramTitle)\n            return console.error(\"Program name change canceled\");\n        this.song.programRename(programID, newProgramTitle);\n        this.setStatus(`Program title updated: ${newProgramTitle}`);\n    }\n\n    async programRemove(programRemoveID = null) {\n        if (await this.openConfirmDialog(`Remove Program ID: ${programRemoveID}`)) {\n            this.song.programRemove(programRemoveID);\n            this.setStatus(`Program (${programRemoveID}) removed`);\n\n        } else {\n            this.setError(`Remove program canceled`);\n        }\n    }\n\n\n    /** Toggle Panels **/\n\n    // togglePanelPrograms() {\n    //     this.classList.toggle('hide-panel-programs');\n    // }\n    //\n    // togglePanelTracker() {\n    //     this.classList.toggle('hide-panel-track');\n    // }\n    //\n    // togglePanelSong() {\n    //     this.classList.toggle('hide-panel-song');\n    // }\n    //\n    // toggleFullscreen() {\n    //     const setFullScreen = !this.classList.contains('fullscreen');\n    //     this.classList.toggle('fullscreen', setFullScreen);\n    // }\n\n    /** Tools **/\n\n\n\n    async batchSelect(e, searchCallbackString = null, promptUser = false) {\n        if (promptUser || !searchCallbackString)\n            searchCallbackString = await PromptManager.openPromptDialog(\"Run custom search:\", searchCallbackString ||\n                `/** Example Search **/ i.command === \"C3\"   &&   i.program === 0`);\n        if (!searchCallbackString)\n            throw new Error(\"Batch command canceled: Invalid search\");\n\n        const storage = new Storage();\n        storage.addBatchRecentSearches(searchCallbackString);\n\n        throw new Error(\"TODO Implement\");\n        // const track = this.track;\n        // this.clearselectedIndices();\n        // const trackName = track.getTrackName();\n        // try {\n        //     const stats = {count: 0};\n        //     const iterator = this.song.instructionGetIterator(trackName);\n        //     let instruction;\n        //     while (instruction = iterator.nextConditionalInstruction((instruction) => {\n        //         const i = instruction;\n        //         const window = null, document = null;\n        //         return eval(searchCallbackString);\n        //     })) {\n        //         stats.count++;\n        //         track.selectIndicies(e, iterator.currentIndex);\n        //     }\n        //     this.setStatus(\"Batch Search Completed: \" + JSON.stringify(stats), stats);\n        // } catch (err) {\n        //     this.setStatus(\"Batch Search Failed: \" + err.message, err);\n        // }\n    }\n\n    async batchRunCommand(e, commandCallbackString = null, searchCallbackString = null, promptUser = false) {\n        const storage = new Storage();\n\n        if (promptUser || !searchCallbackString)\n            searchCallbackString = await PromptManager.openPromptDialog(\"Run custom search:\", searchCallbackString ||\n                `/** Example Search **/ i.command === \"C3\"   &&   i.program === 0`);\n        if (!searchCallbackString)\n            throw new Error(\"Batch command canceled: Invalid search\");\n        storage.addBatchRecentSearches(searchCallbackString);\n\n\n        if (promptUser || !commandCallbackString)\n            commandCallbackString = await PromptManager.openPromptDialog(`Run custom command:`, commandCallbackString ||\n                `/** Example Command **/ i.command='C4';`);\n        if (!commandCallbackString)\n            throw new Error(\"Batch command canceled: Invalid command\");\n        storage.addBatchRecentCommands(commandCallbackString);\n\n        throw new Error(\"TODO Implement\");\n        // const instructionList = [];\n        // const track = this.track;\n        // const trackName = track.getTrackName(), g = trackName;\n        // try {\n        //     const stats = {count: 0, modified: 0};\n        //     const iterator = this.song.instructionGetIterator(trackName);\n        //     let instruction;\n        //     const window = null, document = null;\n        //     while (instruction = iterator.nextConditionalInstruction((instruction) => {\n        //         const i = instruction;\n        //         return eval(searchCallbackString);\n        //     })) {\n        //         const instructionString = JSON.stringify(instruction.data);\n        //         const i = instruction;\n        //         eval(commandCallbackString);\n        //         if (instructionString !== JSON.stringify(instruction.data))\n        //             stats.modified++;\n        //\n        //         stats.count++;\n        //         track.selectIndex(e, iterator.currentIndex);\n        //     }\n        //     this.setStatus(\"Batch Command Completed: \" + JSON.stringify(stats), stats);\n        //     return instructionList;\n        // } catch (err) {\n        //     this.setStatus(\"Batch Command Failed: \" + err.message, err);\n        //     return [];\n        // }\n    }\n\n\n    /** Prompt **/\n\n    openPromptDialog(message, defaultValue='') {\n        return window.prompt(message, defaultValue);\n    }\n\n    async openFileDialog(accept=null) {\n        return await new Promise((resolve, reject) => {\n            const input = document.createElement('input');\n            input.setAttribute('type', 'file');\n            if(accept)\n                input.setAttribute('accept', accept);\n            input.addEventListener('change', () => {\n                const file = input.files[0];\n                if(file)\n                    resolve(file);\n                else\n                    reject();\n            });\n            input.click();\n        })\n    }\n\n}\n\n\nexport default ASComposerActions;\n","import React from \"react\";\nimport {View} from \"react-native\";\nimport Song from \"../Song\";\n\nexport default class SongProxyWebViewClient extends React.Component {\n    constructor(props) {\n        super(props);\n        this.song = null;\n        this.webView = React.createRef();\n        this.cb = {\n            onMessage: data => this.onMessage(data),\n            onSongEvent: this.onSongEvent.bind(this)\n        }\n    }\n\n    componentDidMount() {\n\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        return false;\n    }\n\n    onSongEvent(e) {\n        switch(e.type) {\n            case 'song:modified':\n                console.log('TODO', e);\n                // this.postMessage(e.type, e.historyAction)\n                break;\n        }\n    }\n\n    postMessage(args) {\n        if(typeof args !== \"string\")\n            args = JSON.stringify(args);\n\n        if(!window.ReactNativeWebView)\n            return console.warn('SongProxyWebViewClient.postMessage: window.ReactNativeWebView is ' + typeof window.ReactNativeWebView);\n\n        window.ReactNativeWebView.postMessage(args);\n    }\n\n    render() {\n        if(!this.song) {\n            // window._AUDIOSOURCE = {\n            //     SONGCLASSES: require('../')\n            // }\n            this.song = new Song();\n            document._SONG = this.song;\n            document.addEventListener('error', (...args) => this.postMessage(['error'].concat(args)))\n\n            document.addEventListener(\"message\", (event) => {\n                this.onMessage(event.data);\n            }, false);\n\n            this.song.addEventListener('*', this.cb.onSongEvent)\n\n            this.postMessage(['song:load', this.song.data.title]);\n        }\n\n        return <View/>;\n    }\n\n    onMessage(data) {\n        console.log('onMessage', data);\n        if(data[0] === '[') {\n            data = JSON.parse(data);\n            this.handleCommand.apply(this, data);\n        } else {\n            console.warn(\"Unhandled message: \" + data);\n        }\n    }\n\n    handleCommand(command, ...args) {\n        switch(command) {\n            case 'song:modified':\n                console.log('applyHistoryAction', args[0]);\n                this.song.applyHistoryAction(...args[0])\n                // this.postMessage(e.type, e.historyAction)\n                break;\n\n            case 'song:load':\n                let songData = args[0];\n                songData = JSON.parse(songData);\n                this.song.loadSongData(songData);\n                console.log('song', this.song);\n                break;\n\n            case 'song':\n                const songMethod = args.shift();\n                switch(songMethod) {\n                    case 'play':\n                    case 'playSelectedInstructions':\n                        if(args[0] === null)\n                            args[0] = this.getAudioContext().destination;\n                        break;\n                    default:\n                        break;\n                }\n                console.log(`song.${songMethod}(`, ...args, `)`);\n                this.song[songMethod](...args);\n                break;\n\n            default:\n                console.error(\"Unknown command: \" + command);\n        }\n    }\n\n    getAudioContext()               {\n        if (this.audioContext)\n            return this.audioContext;\n\n        const audioContext = new (window.AudioContext || window.webkitAudioContext)();\n        this.audioContext = audioContext;\n        return audioContext;\n    }\n\n    // sendSongCommand(...args) {\n    //     args.unshift('song');\n    //     const argString = JSON.stringify(args);\n    //     const webView = this.webView.current;\n    //     webView.postMessage(argString);\n    //     console.log('postMessage', argString);\n    // }\n    //\n    // onMessage(data) {\n    //     console.log(\"Message: \", data.nativeEvent.data);\n    // }\n}\n","import React from 'react';\nimport {\n    Switch,\n    Route,\n    BrowserRouter\n} from \"react-router-dom\";\nimport './App.css';\n\nimport {ASPlayer} from './audio-source/player';\nimport {ASComposer} from \"./audio-source/composer/\";\nimport SongProxyWebViewClient from \"./audio-source/song/proxy/SongProxyWebViewClient\";\n// import MenuOverlayContainer from \"./audio-source/components/menu/MenuOverlayContainer\";\n\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            // menuOpen: true,\n            // menuOptions: null\n        };\n\n        // setTimeout(e => this.toggleMenu(), 200);\n    }\n\n    toggleMenu = () => {\n        this.setState({ menuOpen: !this.state.menuOpen });\n        if(!this.state.menuOpen)\n            this.playerElm.switchToMenu(null);\n    };\n\n    updateMenu = () => {\n        this.forceUpdate();\n    };\n\n    componentDidMount() {\n    }\n\n    renderDrawerContent() {\n        // let content = <Text>Close</Text>;\n        // if(this.playerElm)\n        //     content = this.playerElm.renderMenu();\n        // return (\n        //     <TouchableOpacity onPress={this.toggleMenu}>\n        //         <View style={styles.menuContainer}>{content}</View>\n        //     </TouchableOpacity>\n        // );\n    }\n\n    // render() {\n    //     return <SongProxyWebViewClient/>;\n    // }\n\n    render() {\n\n\n        return (\n            <BrowserRouter>\n                <Switch>\n                    <Route path={['/blank', '/proxy']}>\n                        <SongProxyWebViewClient/>\n                    </Route>\n                    <Route path={['/player', '/p']}>\n                        {this.renderPlayer()}\n                    </Route>\n                    <Route path={['/composer', '/c']}>\n                        {this.renderComposer()}\n                    </Route>\n                    <Route path={['/both', '/b']}>\n                        {this.renderComposer()}\n                        {this.renderPlayer()}\n                    </Route>\n                    <Route path=\"/\"\n                        render={(props) => {\n                            switch(props.location.search) {\n                                case '?blank':\n                                case '?proxy':\n                                    return <SongProxyWebViewClient/>;\n                                default:\n                                    return this.renderComposer();\n                            }\n                        }}\n                    >\n                    </Route>\n                </Switch>\n            </BrowserRouter>\n        );\n    }\n\n    renderPlayer() {\n        return (\n            <ASPlayer\n                src=\"files/test.pl.json\"\n                ref = {ref => this.playerElm = ref}\n                onToggleMenu={this.toggleMenu}\n                onUpdateMenu={this.updateMenu}\n            />\n        );\n    }\n\n    renderComposer() {\n        return (\n            <ASComposer\n                // src=\"files/demo.json\"\n                ref = {ref => this.composer = ref}\n                onToggleMenu={this.toggleMenu}\n                onRenderMenu={e => this.menu.onRenderMenu}\n            />\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that file SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","\r\nimport {Library} from \"../../song\";\r\n\r\nexport default class extends Library {\r\n  getTitle() { return \"Mohayonao Wave Library Index\"; }\r\n  getPresets() {\r\n    const library = require(\"./mohayonao.library.json\") || [];\r\n    return library.samples.map(preset => {\r\n      if(typeof preset !== \"object\")\r\n        preset = {url: preset, type:'custom'};\r\n      if(!preset.title)\r\n        preset.title = preset.url.split('/').pop();\r\n      if(library.baseURL)\r\n        preset.url = library.baseURL + preset.url;\r\n      return ['OscillatorInstrument', preset];\r\n    });\r\n  }\r\n}\r\n","import MohayonaoWaveLibrary from \"./wave/mohayonao.library.js\";\r\nimport {Library} from \"../song\";\r\n\r\nexport default class extends Library {\r\n  getTitle() { return \"Periodic Wave Library Index\"; }\r\n  getLibraries() {\r\n    return [\r\n      new MohayonaoWaveLibrary()\r\n    ];\r\n  }\r\n}\r\n","\nimport {Library} from \"../../../song\";\n\nexport default class extends Library {\n\tgetTitle() { return \"FreeWaveSamples.com\"; }\n}\n","import FWSLibrary from \"./gm/fws/fws.library.js\";\r\n\r\nimport {Library} from \"../song\";\r\n\r\nexport default class extends Library {\r\n  getTitle() { return \"Sample Library Index\"; }\r\n  getLibraries() {\r\n    return [\r\n        new FWSLibrary()\r\n    ];\r\n  }\r\n\r\n  getPlaylists() {\r\n    return [\r\n      \"assets/files/test.pl.json;Test Playlist\"\r\n    ]\r\n  }\r\n}\r\n","import WaveLibrary from \"./samples/wave.library.js\";\r\nimport SampleLibrary from \"./samples/sample.library\";\r\nimport MohayonaoWaveLibrary from \"./samples/wave/mohayonao.library.js\";\r\n\r\nimport {Library} from \"./song\";\r\n\r\nexport default class extends Library {\r\n  getTitle() { return \"Audio Source Index\"; }\r\n  getLibraries() {\r\n    return [\r\n      new SampleLibrary(),\r\n      new WaveLibrary(),\r\n      new MohayonaoWaveLibrary(),\r\n    ];\r\n  }\r\n\r\n  getPlaylists() {\r\n    return [\r\n      \"assets/files/test.pl.json;Test ASPPlaylist\"\r\n    ]\r\n  }\r\n}\r\n\r\n"],"sourceRoot":""}